
AVRASM ver. 2.1.30  C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm Wed Sep 16 10:40:42 2015

C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1110): warning: Register r5 already defined by the .DEF directive
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1111): warning: Register r4 already defined by the .DEF directive
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1112): warning: Register r7 already defined by the .DEF directive
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1113): warning: Register r8 already defined by the .DEF directive
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1114): warning: Register r10 already defined by the .DEF directive
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1115): warning: Register r12 already defined by the .DEF directive
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1116): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega2560
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Large
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : long, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 2800 byte(s)
                 ;Heap size                : 1142 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega2560
                 	#pragma AVRPART MEMORY PROG_FLASH 262144
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8703
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU RAMPZ=0x3B
                 	.EQU EIND=0x3C
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x74
                 	.EQU XMCRB=0x75
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0200
                 	.EQU __SRAM_END=0x21FF
                 	.EQU __DSTACK_SIZE=0x0AF0
                 	.EQU __HEAP_SIZE=0x0476
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __GETBRPF
                 	OUT  RAMPZ,R22
                 	ELPM R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETBRPF_INC
                 	OUT  RAMPZ,R22
                 	ELPM R@0,Z+
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	CALL __GETD1PF
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FX
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	CALL __GETD1PF
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDD
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _rxPackageIndex3=R5
                 	.DEF _rxPackageIndexCount3=R4
                 	.DEF _ETH_waitQCount=R7
                 	.DEF _last_sess_id=R8
                 	.DEF _last_wr_dataQ=R10
                 	.DEF _last_rd_dataQ=R12
                 	.DEF _muteAlarm=R6
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 332f 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 3e5a 	JMP  _wdt_timeout_isr
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 3e6b 	JMP  _timer2_ovf_isr
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 3e67 	JMP  _timer1_ovf_isr
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 3e63 	JMP  _timer0_ovf_isr
000030 940c 0000 	JMP  0x00
000032 940c 3bfa 	JMP  _usart0_rx_isr
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 3e84 	JMP  _timer3_ovf_isr
000048 940c 3d26 	JMP  _usart1_rx_isr
00004a 940c 0000 	JMP  0x00
00004c 940c 0000 	JMP  0x00
00004e 940c 0000 	JMP  0x00
000050 940c 0000 	JMP  0x00
000052 940c 0000 	JMP  0x00
000054 940c 0000 	JMP  0x00
000056 940c 0000 	JMP  0x00
000058 940c 0000 	JMP  0x00
00005a 940c 3ea0 	JMP  _timer4_ovf_isr
00005c 940c 0000 	JMP  0x00
00005e 940c 0000 	JMP  0x00
000060 940c 0000 	JMP  0x00
000062 940c 0000 	JMP  0x00
000064 940c 0000 	JMP  0x00
000066 940c 3d32 	JMP  _usart2_rx_isr
000068 940c 0000 	JMP  0x00
00006a 940c 0000 	JMP  0x00
00006c 940c 3d50 	JMP  _usart3_rx_isr
00006e 940c 0000 	JMP  0x00
000070 940c 0000 	JMP  0x00
                 
                 _FIRMWARE_VERSION:
000072 4e69
000073 2d54
000074 5445
000075 2d48      	.DB  0x69,0x4E,0x54,0x2D,0x45,0x54,0x48,0x2D
000076 4344
000077 302d
000078 302e
000079 6131      	.DB  0x44,0x43,0x2D,0x30,0x2E,0x30,0x31,0x61
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1189): warning: .cseg .db misalignment - padding zero byte
00007a 0000      	.DB  0x0
                 _error_msg:
00007b 489e
00007c 0000
00007d 489f
00007e 0000      	.DB  LOW(_0x260000*2),HIGH(_0x260000*2),BYTE3(_0x260000*2),BYTE4(_0x260000*2),LOW(_0x260000*2+1),HIGH(_0x260000*2+1),BYTE3(_0x260000*2+1),BYTE4(_0x260000*2+1)
00007f 48ab
000080 0000
000081 48b6
000082 0000      	.DB  LOW(_0x260000*2+13),HIGH(_0x260000*2+13),BYTE3(_0x260000*2+13),BYTE4(_0x260000*2+13),LOW(_0x260000*2+24),HIGH(_0x260000*2+24),BYTE3(_0x260000*2+24),BYTE4(_0x260000*2+24)
000083 48c3
000084 0000
000085 48ce
000086 0000      	.DB  LOW(_0x260000*2+37),HIGH(_0x260000*2+37),BYTE3(_0x260000*2+37),BYTE4(_0x260000*2+37),LOW(_0x260000*2+48),HIGH(_0x260000*2+48),BYTE3(_0x260000*2+48),BYTE4(_0x260000*2+48)
000087 48d9
000088 0000
000089 48e9
00008a 0000      	.DB  LOW(_0x260000*2+59),HIGH(_0x260000*2+59),BYTE3(_0x260000*2+59),BYTE4(_0x260000*2+59),LOW(_0x260000*2+75),HIGH(_0x260000*2+75),BYTE3(_0x260000*2+75),BYTE4(_0x260000*2+75)
00008b 48f3
00008c 0000
00008d 48fc
00008e 0000      	.DB  LOW(_0x260000*2+85),HIGH(_0x260000*2+85),BYTE3(_0x260000*2+85),BYTE4(_0x260000*2+85),LOW(_0x260000*2+94),HIGH(_0x260000*2+94),BYTE3(_0x260000*2+94),BYTE4(_0x260000*2+94)
00008f 490e
000090 0000
000091 4921
000092 0000      	.DB  LOW(_0x260000*2+112),HIGH(_0x260000*2+112),BYTE3(_0x260000*2+112),BYTE4(_0x260000*2+112),LOW(_0x260000*2+131),HIGH(_0x260000*2+131),BYTE3(_0x260000*2+131),BYTE4(_0x260000*2+131)
000093 4932
000094 0000
000095 4941
000096 0000      	.DB  LOW(_0x260000*2+148),HIGH(_0x260000*2+148),BYTE3(_0x260000*2+148),BYTE4(_0x260000*2+148),LOW(_0x260000*2+163),HIGH(_0x260000*2+163),BYTE3(_0x260000*2+163),BYTE4(_0x260000*2+163)
000097 4952
000098 0000
000099 4962
00009a 0000      	.DB  LOW(_0x260000*2+180),HIGH(_0x260000*2+180),BYTE3(_0x260000*2+180),BYTE4(_0x260000*2+180),LOW(_0x260000*2+196),HIGH(_0x260000*2+196),BYTE3(_0x260000*2+196),BYTE4(_0x260000*2+196)
                 _cmdSetRTCDateTime:
00009b 4324
00009c 444d
00009d 4453
00009e 0054      	.DB  0x24,0x43,0x4D,0x44,0x53,0x44,0x54,0x0
                 _cmdResetAlarmStatus:
00009f 4324
0000a0 444d
0000a1 4152
0000a2 0053      	.DB  0x24,0x43,0x4D,0x44,0x52,0x41,0x53,0x0
                 _cmdClearLogFile:
0000a3 4324
0000a4 444d
0000a5 4c43
0000a6 0046      	.DB  0x24,0x43,0x4D,0x44,0x43,0x4C,0x46,0x0
                 _cmdSetVref:
0000a7 4324
0000a8 444d
0000a9 5653
0000aa 0052      	.DB  0x24,0x43,0x4D,0x44,0x53,0x56,0x52,0x0
                 _cmdSensorSelect:
0000ab 4324
0000ac 444d
0000ad 4e53
0000ae 0053      	.DB  0x24,0x43,0x4D,0x44,0x53,0x4E,0x53,0x0
                 _cmdDeviceEnable:
0000af 4324
0000b0 444d
0000b1 4544
0000b2 004e      	.DB  0x24,0x43,0x4D,0x44,0x44,0x45,0x4E,0x0
                 _cmdDeviceDisable:
0000b3 4324
0000b4 444d
0000b5 4444
0000b6 0053      	.DB  0x24,0x43,0x4D,0x44,0x44,0x44,0x53,0x0
                 _cmdSetSerialNumber:
0000b7 4324
0000b8 444d
0000b9 5353
0000ba 004e      	.DB  0x24,0x43,0x4D,0x44,0x53,0x53,0x4E,0x0
                 _cmdReadSerialNumber:
0000bb 4324
0000bc 444d
0000bd 5352
0000be 004e      	.DB  0x24,0x43,0x4D,0x44,0x52,0x53,0x4E,0x0
                 _cmdGetCal:
0000bf 4324
0000c0 444d
0000c1 4347
0000c2 004c      	.DB  0x24,0x43,0x4D,0x44,0x47,0x43,0x4C,0x0
                 _cmdSetCal:
0000c3 4324
0000c4 444d
0000c5 4353
0000c6 004c      	.DB  0x24,0x43,0x4D,0x44,0x53,0x43,0x4C,0x0
                 _cmdConfirmCal:
0000c7 4324
0000c8 444d
0000c9 4343
0000ca 004c      	.DB  0x24,0x43,0x4D,0x44,0x43,0x43,0x4C,0x0
                 _cmdGetCurSensor:
0000cb 4324
0000cc 444d
0000cd 4347
0000ce 0053      	.DB  0x24,0x43,0x4D,0x44,0x47,0x43,0x53,0x0
                 _k1:
0000cf 2220
0000d0 2b2a
0000d1 5b2c
0000d2 5d3d      	.DB  0x20,0x22,0x2A,0x2B,0x2C,0x5B,0x3D,0x5D
0000d3 7f7c
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1227): warning: .cseg .db misalignment - padding zero byte
0000d4 0000      	.DB  0x7C,0x7F,0x0
                 
                 ;HEAP START MARKER INITIALIZATION
                 __HEAP_START_MARKER:
0000d5 0000
0000d6 0000      	.DW  0,0
                 
                 _0x3:
0000d7 0000
0000d8 0000
0000d9 0000
0000da 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000db 0000
0000dc 0000
0000dd 0000
0000de 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000df 0000
0000e0 0000
0000e1 0000
0000e2 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e3 0000
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1237): warning: .cseg .db misalignment - padding zero byte
0000e4 0000      	.DB  0x0,0x0,0x0
                 _0x75:
0000e5 ffff
0000e6 ffff      	.DB  0xFF,0xFF,0xFF,0xFF
                 _0x0:
0000e7 0a0d
0000e8 2d2d
0000e9 2d2d
0000ea 2d2d      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
0000eb 4920
0000ec 696e
0000ed 6974
0000ee 6c61      	.DB  0x20,0x49,0x6E,0x69,0x74,0x69,0x61,0x6C
0000ef 4320
0000f0 6d6f
0000f1 6c70
0000f2 7465      	.DB  0x20,0x43,0x6F,0x6D,0x70,0x6C,0x65,0x74
0000f3 2065
0000f4 2d2d
0000f5 2d2d
0000f6 2d2d      	.DB  0x65,0x20,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
0000f7 0a0d
0000f8 4300
0000f9 6e6f
0000fa 6174      	.DB  0xD,0xA,0x0,0x43,0x6F,0x6E,0x74,0x61
0000fb 7463
0000fc 3a20
0000fd 6320
0000fe 6e6f      	.DB  0x63,0x74,0x20,0x3A,0x20,0x63,0x6F,0x6E
0000ff 6174
000100 7463
000101 742e
000102 7761      	.DB  0x74,0x61,0x63,0x74,0x2E,0x74,0x61,0x77
000103 6e61
000104 6740
000105 616d
000106 6c69      	.DB  0x61,0x6E,0x40,0x67,0x6D,0x61,0x69,0x6C
000107 632e
000108 6d6f
000109 0a0d
00010a 3c00      	.DB  0x2E,0x63,0x6F,0x6D,0xD,0xA,0x0,0x3C
00010b 616d
00010c 6e69
00010d 203e
00010e 6567      	.DB  0x6D,0x61,0x69,0x6E,0x3E,0x20,0x67,0x65
00010f 5374
000110 6e65
000111 6f73
000112 4372      	.DB  0x74,0x53,0x65,0x6E,0x73,0x6F,0x72,0x43
000113 6e6f
000114 6966
000115 2867
000116 6425      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x25,0x64
000117 2029
000118 7265
000119 6f72
00011a 0d72      	.DB  0x29,0x20,0x65,0x72,0x72,0x6F,0x72,0xD
00011b 000a
00011c 6d3c
00011d 6961
00011e 3e6e      	.DB  0xA,0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E
00011f 6120
000120 6464
000121 6553
000122 736e      	.DB  0x20,0x61,0x64,0x64,0x53,0x65,0x6E,0x73
000123 726f
000124 6144
000125 6174
000126 7551      	.DB  0x6F,0x72,0x44,0x61,0x74,0x61,0x51,0x75
000127 7565
000128 2865
000129 6425
00012a 252c      	.DB  0x65,0x75,0x65,0x28,0x25,0x64,0x2C,0x25
00012b 312e
00012c 2966
00012d 6620
00012e 6961      	.DB  0x2E,0x31,0x66,0x29,0x20,0x66,0x61,0x69
00012f 656c
000130 0d64
000131 000a
000132 6d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x6D
000133 6961
000134 3e6e
000135 7520
000136 6470      	.DB  0x61,0x69,0x6E,0x3E,0x20,0x75,0x70,0x64
000137 7461
000138 5365
000139 6174
00013a 7574      	.DB  0x61,0x74,0x65,0x53,0x74,0x61,0x74,0x75
00013b 2873
00013c 2029
00013d 6166
00013e 6c69      	.DB  0x73,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00013f 6465
000140 0a0d
000141 3c00
000142 616d      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x6D,0x61
000143 6e69
000144 203e
000145 706f
000146 7265      	.DB  0x69,0x6E,0x3E,0x20,0x6F,0x70,0x65,0x72
000147 7461
000148 6e69
000149 2067
00014a 6f6d      	.DB  0x61,0x74,0x69,0x6E,0x67,0x20,0x6D,0x6F
00014b 6564
00014c 6520
00014d 7272
00014e 726f      	.DB  0x64,0x65,0x20,0x65,0x72,0x72,0x6F,0x72
00014f 2121
000150 5b20
000151 7830
000152 3025      	.DB  0x21,0x21,0x20,0x5B,0x30,0x78,0x25,0x30
000153 5832
000154 0d5d
000155 000a
000156 6d3c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x6D
000157 6961
000158 3e6e
000159 5320
00015a 5f44      	.DB  0x61,0x69,0x6E,0x3E,0x20,0x53,0x44,0x5F
00015b 6572
00015c 6461
00015d 654d
00015e 6f6d      	.DB  0x72,0x65,0x61,0x64,0x4D,0x65,0x6D,0x6F
00015f 7972
000160 6552
000161 616d
000162 6e69      	.DB  0x72,0x79,0x52,0x65,0x6D,0x61,0x69,0x6E
000163 2928
000164 6620
000165 6961
000166 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000167 0d64
000168 000a
000169 753c
00016a 6470      	.DB  0x64,0xD,0xA,0x0,0x3C,0x75,0x70,0x64
00016b 7461
00016c 5365
00016d 6174
00016e 7574      	.DB  0x61,0x74,0x65,0x53,0x74,0x61,0x74,0x75
00016f 3e73
000170 4520
000171 4854
000172 725f      	.DB  0x73,0x3E,0x20,0x45,0x54,0x48,0x5F,0x72
000173 7473
000174 745f
000175 6d69
000176 7265      	.DB  0x73,0x74,0x5F,0x74,0x69,0x6D,0x65,0x72
000177 7420
000178 6d69
000179 2065
00017a 656c      	.DB  0x20,0x74,0x69,0x6D,0x65,0x20,0x6C,0x65
00017b 7466
00017c 3d20
00017d 2520
00017e 646c      	.DB  0x66,0x74,0x20,0x3D,0x20,0x25,0x6C,0x64
00017f 2528
000180 586c
000181 0d29
000182 000a      	.DB  0x28,0x25,0x6C,0x58,0x29,0xD,0xA,0x0
000183 0a0d
000184 653c
000185 6576
000186 746e      	.DB  0xD,0xA,0x3C,0x65,0x76,0x65,0x6E,0x74
000187 6143
000188 7470
000189 7275
00018a 3e65      	.DB  0x43,0x61,0x70,0x74,0x75,0x72,0x65,0x3E
00018b 2120
00018c 2121
00018d 2121
00018e 2121      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0x21,0x21
00018f 2121
000190 2121
000191 4d20
000192 6e6f      	.DB  0x21,0x21,0x21,0x21,0x20,0x4D,0x6F,0x6E
000193 7469
000194 726f
000195 4d20
000196 646f      	.DB  0x69,0x74,0x6F,0x72,0x20,0x4D,0x6F,0x64
000197 2065
000198 2121
000199 2121
00019a 0d21      	.DB  0x65,0x20,0x21,0x21,0x21,0x21,0x21,0xD
00019b 000a
00019c 0a0d
00019d 653c
00019e 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
00019f 746e
0001a0 6143
0001a1 7470
0001a2 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
0001a3 3e65
0001a4 2120
0001a5 2121
0001a6 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
0001a7 2121
0001a8 2121
0001a9 2121
0001aa 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
0001ab 6961
0001ac 746e
0001ad 6e65
0001ae 6e61      	.DB  0x61,0x69,0x6E,0x74,0x65,0x6E,0x61,0x6E
0001af 6563
0001b0 4920
0001b1 206e
0001b2 7250      	.DB  0x63,0x65,0x20,0x49,0x6E,0x20,0x50,0x72
0001b3 676f
0001b4 6572
0001b5 7373
0001b6 2120      	.DB  0x6F,0x67,0x72,0x65,0x73,0x73,0x20,0x21
0001b7 2121
0001b8 2121
0001b9 0a0d
0001ba 3c00      	.DB  0x21,0x21,0x21,0x21,0xD,0xA,0x0,0x3C
0001bb 7665
0001bc 6e65
0001bd 4374
0001be 7061      	.DB  0x65,0x76,0x65,0x6E,0x74,0x43,0x61,0x70
0001bf 7574
0001c0 6572
0001c1 203e
0001c2 6461      	.DB  0x74,0x75,0x72,0x65,0x3E,0x20,0x61,0x64
0001c3 4564
0001c4 6576
0001c5 746e
0001c6 7551      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x51,0x75
0001c7 7565
0001c8 2865
0001c9 2029
0001ca 6166      	.DB  0x65,0x75,0x65,0x28,0x29,0x20,0x66,0x61
0001cb 6c69
0001cc 6465
0001cd 0a0d
0001ce 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
0001cf 3c0a
0001d0 7665
0001d1 6e65
0001d2 4374      	.DB  0xA,0x3C,0x65,0x76,0x65,0x6E,0x74,0x43
0001d3 7061
0001d4 7574
0001d5 6572
0001d6 203e      	.DB  0x61,0x70,0x74,0x75,0x72,0x65,0x3E,0x20
0001d7 2121
0001d8 2121
0001d9 2121
0001da 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
0001db 2121
0001dc 2021
0001dd 614d
0001de 6e69      	.DB  0x21,0x21,0x21,0x20,0x4D,0x61,0x69,0x6E
0001df 5020
0001e0 776f
0001e1 7265
0001e2 4420      	.DB  0x20,0x50,0x6F,0x77,0x65,0x72,0x20,0x44
0001e3 776f
0001e4 206e
0001e5 2121
0001e6 2121      	.DB  0x6F,0x77,0x6E,0x20,0x21,0x21,0x21,0x21
0001e7 0d21
0001e8 000a
0001e9 0a0d
0001ea 653c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x65
0001eb 6576
0001ec 746e
0001ed 6143
0001ee 7470      	.DB  0x76,0x65,0x6E,0x74,0x43,0x61,0x70,0x74
0001ef 7275
0001f0 3e65
0001f1 2120
0001f2 2121      	.DB  0x75,0x72,0x65,0x3E,0x20,0x21,0x21,0x21
0001f3 2121
0001f4 2121
0001f5 2121
0001f6 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
0001f7 4d20
0001f8 6961
0001f9 206e
0001fa 6f50      	.DB  0x20,0x4D,0x61,0x69,0x6E,0x20,0x50,0x6F
0001fb 6577
0001fc 2072
0001fd 7055
0001fe 2120      	.DB  0x77,0x65,0x72,0x20,0x55,0x70,0x20,0x21
0001ff 2121
000200 2121
000201 0a0d
000202 0d00      	.DB  0x21,0x21,0x21,0x21,0xD,0xA,0x0,0xD
000203 3c0a
000204 7665
000205 6e65
000206 4374      	.DB  0xA,0x3C,0x65,0x76,0x65,0x6E,0x74,0x43
000207 7061
000208 7574
000209 6572
00020a 203e      	.DB  0x61,0x70,0x74,0x75,0x72,0x65,0x3E,0x20
00020b 2121
00020c 2121
00020d 2121
00020e 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
00020f 2121
000210 2021
000211 6142
000212 7474      	.DB  0x21,0x21,0x21,0x20,0x42,0x61,0x74,0x74
000213 7265
000214 2079
000215 6f4c
000216 2077      	.DB  0x65,0x72,0x79,0x20,0x4C,0x6F,0x77,0x20
000217 2121
000218 2121
000219 0d21
00021a 000a      	.DB  0x21,0x21,0x21,0x21,0x21,0xD,0xA,0x0
00021b 0a0d
00021c 653c
00021d 6576
00021e 746e      	.DB  0xD,0xA,0x3C,0x65,0x76,0x65,0x6E,0x74
00021f 6143
000220 7470
000221 7275
000222 3e65      	.DB  0x43,0x61,0x70,0x74,0x75,0x72,0x65,0x3E
000223 2120
000224 2121
000225 2121
000226 2121      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000227 2121
000228 2121
000229 4220
00022a 7461      	.DB  0x21,0x21,0x21,0x21,0x20,0x42,0x61,0x74
00022b 6574
00022c 7972
00022d 4f20
00022e 204b      	.DB  0x74,0x65,0x72,0x79,0x20,0x4F,0x4B,0x20
00022f 2121
000230 2121
000231 0d21
000232 000a      	.DB  0x21,0x21,0x21,0x21,0x21,0xD,0xA,0x0
000233 0a0d
000234 653c
000235 6576
000236 746e      	.DB  0xD,0xA,0x3C,0x65,0x76,0x65,0x6E,0x74
000237 6143
000238 7470
000239 7275
00023a 3e65      	.DB  0x43,0x61,0x70,0x74,0x75,0x72,0x65,0x3E
00023b 2120
00023c 2121
00023d 2121
00023e 2121      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0x21,0x21
00023f 2121
000240 2121
000241 4d20
000242 6d65      	.DB  0x21,0x21,0x21,0x21,0x20,0x4D,0x65,0x6D
000243 726f
000244 2079
000245 6f4c
000246 2077      	.DB  0x6F,0x72,0x79,0x20,0x4C,0x6F,0x77,0x20
000247 2121
000248 2121
000249 0d21
00024a 000a      	.DB  0x21,0x21,0x21,0x21,0x21,0xD,0xA,0x0
00024b 0a0d
00024c 653c
00024d 6576
00024e 746e      	.DB  0xD,0xA,0x3C,0x65,0x76,0x65,0x6E,0x74
00024f 6143
000250 7470
000251 7275
000252 3e65      	.DB  0x43,0x61,0x70,0x74,0x75,0x72,0x65,0x3E
000253 2120
000254 2121
000255 2121
000256 2121      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000257 2121
000258 2121
000259 4d20
00025a 6d65      	.DB  0x21,0x21,0x21,0x21,0x20,0x4D,0x65,0x6D
00025b 726f
00025c 2079
00025d 7245
00025e 6f72      	.DB  0x6F,0x72,0x79,0x20,0x45,0x72,0x72,0x6F
00025f 2072
000260 2121
000261 2121
000262 0d21      	.DB  0x72,0x20,0x21,0x21,0x21,0x21,0x21,0xD
000263 000a
000264 0a0d
000265 653c
000266 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000267 746e
000268 6143
000269 7470
00026a 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
00026b 3e65
00026c 2120
00026d 2121
00026e 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
00026f 2121
000270 2121
000271 2121
000272 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
000273 6d65
000274 726f
000275 2079
000276 4b4f      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x20,0x4F,0x4B
000277 2120
000278 2121
000279 2121
00027a 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
00027b 0d00
00027c 3c0a
00027d 7665
00027e 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
00027f 4374
000280 7061
000281 7574
000282 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
000283 203e
000284 2121
000285 2121
000286 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
000287 2121
000288 2121
000289 2021
00028a 6944      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x44,0x69
00028b 206e
00028c 6425
00028d 5220
00028e 7369      	.DB  0x6E,0x20,0x25,0x64,0x20,0x52,0x69,0x73
00028f 6e69
000290 2067
000291 2121
000292 2121      	.DB  0x69,0x6E,0x67,0x20,0x21,0x21,0x21,0x21
000293 0d21
000294 000a
000295 0a0d
000296 653c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x65
000297 6576
000298 746e
000299 6143
00029a 7470      	.DB  0x76,0x65,0x6E,0x74,0x43,0x61,0x70,0x74
00029b 7275
00029c 3e65
00029d 2120
00029e 2121      	.DB  0x75,0x72,0x65,0x3E,0x20,0x21,0x21,0x21
00029f 2121
0002a0 2121
0002a1 2121
0002a2 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
0002a3 4420
0002a4 6e69
0002a5 2520
0002a6 2064      	.DB  0x20,0x44,0x69,0x6E,0x20,0x25,0x64,0x20
0002a7 6146
0002a8 6c6c
0002a9 6e69
0002aa 2067      	.DB  0x46,0x61,0x6C,0x6C,0x69,0x6E,0x67,0x20
0002ab 2121
0002ac 2121
0002ad 0d21
0002ae 000a      	.DB  0x21,0x21,0x21,0x21,0x21,0xD,0xA,0x0
0002af 0a0d
0002b0 653c
0002b1 6576
0002b2 746e      	.DB  0xD,0xA,0x3C,0x65,0x76,0x65,0x6E,0x74
0002b3 6143
0002b4 7470
0002b5 7275
0002b6 3e65      	.DB  0x43,0x61,0x70,0x74,0x75,0x72,0x65,0x3E
0002b7 2120
0002b8 2121
0002b9 2121
0002ba 2121      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0x21,0x21
0002bb 2121
0002bc 2121
0002bd 5020
0002be 4f52      	.DB  0x21,0x21,0x21,0x21,0x20,0x50,0x52,0x4F
0002bf 4542
0002c0 2520
0002c1 2064
0002c2 4944      	.DB  0x42,0x45,0x20,0x25,0x64,0x20,0x44,0x49
0002c3 4353
0002c4 4e4f
0002c5 454e
0002c6 5443      	.DB  0x53,0x43,0x4F,0x4E,0x4E,0x45,0x43,0x54
0002c7 2120
0002c8 2121
0002c9 2121
0002ca 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
0002cb 0d00
0002cc 3c0a
0002cd 7665
0002ce 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
0002cf 4374
0002d0 7061
0002d1 7574
0002d2 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
0002d3 203e
0002d4 2121
0002d5 2121
0002d6 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
0002d7 2121
0002d8 2121
0002d9 2021
0002da 5250      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x50,0x52
0002db 424f
0002dc 2045
0002dd 6425
0002de 4320      	.DB  0x4F,0x42,0x45,0x20,0x25,0x64,0x20,0x43
0002df 4e4f
0002e0 454e
0002e1 5443
0002e2 2120      	.DB  0x4F,0x4E,0x4E,0x45,0x43,0x54,0x20,0x21
0002e3 2121
0002e4 2121
0002e5 0a0d
0002e6 0d00      	.DB  0x21,0x21,0x21,0x21,0xD,0xA,0x0,0xD
0002e7 3c0a
0002e8 7665
0002e9 6e65
0002ea 4374      	.DB  0xA,0x3C,0x65,0x76,0x65,0x6E,0x74,0x43
0002eb 7061
0002ec 7574
0002ed 6572
0002ee 203e      	.DB  0x61,0x70,0x74,0x75,0x72,0x65,0x3E,0x20
0002ef 2121
0002f0 2121
0002f1 2121
0002f2 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
0002f3 2121
0002f4 2021
0002f5 5250
0002f6 424f      	.DB  0x21,0x21,0x21,0x20,0x50,0x52,0x4F,0x42
0002f7 2045
0002f8 6425
0002f9 5420
0002fa 6d65      	.DB  0x45,0x20,0x25,0x64,0x20,0x54,0x65,0x6D
0002fb 6570
0002fc 6172
0002fd 7574
0002fe 6572      	.DB  0x70,0x65,0x72,0x61,0x74,0x75,0x72,0x65
0002ff 4520
000300 5252
000301 524f
000302 2120      	.DB  0x20,0x45,0x52,0x52,0x4F,0x52,0x20,0x21
000303 2121
000304 2121
000305 0a0d
000306 0d00      	.DB  0x21,0x21,0x21,0x21,0xD,0xA,0x0,0xD
000307 3c0a
000308 7665
000309 6e65
00030a 4374      	.DB  0xA,0x3C,0x65,0x76,0x65,0x6E,0x74,0x43
00030b 7061
00030c 7574
00030d 6572
00030e 203e      	.DB  0x61,0x70,0x74,0x75,0x72,0x65,0x3E,0x20
00030f 2121
000310 2121
000311 2121
000312 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000313 2121
000314 2021
000315 5250
000316 424f      	.DB  0x21,0x21,0x21,0x20,0x50,0x52,0x4F,0x42
000317 2045
000318 6425
000319 5420
00031a 6d65      	.DB  0x45,0x20,0x25,0x64,0x20,0x54,0x65,0x6D
00031b 6570
00031c 6172
00031d 7574
00031e 6572      	.DB  0x70,0x65,0x72,0x61,0x74,0x75,0x72,0x65
00031f 4f20
000320 204b
000321 2121
000322 2121      	.DB  0x20,0x4F,0x4B,0x20,0x21,0x21,0x21,0x21
000323 0d21
000324 000a
000325 733c
000326 6174      	.DB  0x21,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
000327 7574
000328 5273
000329 7065
00032a 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
00032b 3e74
00032c 5220
00032d 5045
00032e 524f      	.DB  0x74,0x3E,0x20,0x52,0x45,0x50,0x4F,0x52
00032f 5f54
000330 4953
000331 474e
000332 454c      	.DB  0x54,0x5F,0x53,0x49,0x4E,0x47,0x4C,0x45
000333 6d20
000334 646f
000335 2065
000336 6f6e      	.DB  0x20,0x6D,0x6F,0x64,0x65,0x20,0x6E,0x6F
000337 2074
000338 7573
000339 7070
00033a 726f      	.DB  0x74,0x20,0x73,0x75,0x70,0x70,0x6F,0x72
00033b 6574
00033c 2064
00033d 6579
00033e 0d74      	.DB  0x74,0x65,0x64,0x20,0x79,0x65,0x74,0xD
00033f 000a
000340 733c
000341 6174
000342 7574      	.DB  0xA,0x0,0x3C,0x73,0x74,0x61,0x74,0x75
000343 5273
000344 7065
000345 726f
000346 3e74      	.DB  0x73,0x52,0x65,0x70,0x6F,0x72,0x74,0x3E
000347 5220
000348 5045
000349 524f
00034a 5f54      	.DB  0x20,0x52,0x45,0x50,0x4F,0x52,0x54,0x5F
00034b 554d
00034c 544c
00034d 5049
00034e 454c      	.DB  0x4D,0x55,0x4C,0x54,0x49,0x50,0x4C,0x45
00034f 6d20
000350 646f
000351 2065
000352 6f6e      	.DB  0x20,0x6D,0x6F,0x64,0x65,0x20,0x6E,0x6F
000353 2074
000354 7573
000355 7070
000356 726f      	.DB  0x74,0x20,0x73,0x75,0x70,0x70,0x6F,0x72
000357 6574
000358 2064
000359 6579
00035a 0d74      	.DB  0x74,0x65,0x64,0x20,0x79,0x65,0x74,0xD
00035b 000a
00035c 733c
00035d 6174
00035e 7574      	.DB  0xA,0x0,0x3C,0x73,0x74,0x61,0x74,0x75
00035f 5273
000360 7065
000361 726f
000362 3e74      	.DB  0x73,0x52,0x65,0x70,0x6F,0x72,0x74,0x3E
000363 6d20
000364 6c61
000365 6f6c
000366 2063      	.DB  0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x20
000367 6166
000368 6c69
000369 6465
00036a 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
00036b 6425
00036c 6220
00036d 7479
00036e 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
00036f 0d29
000370 000a
000371 733c
000372 6174      	.DB  0x29,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
000373 7574
000374 5273
000375 7065
000376 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
000377 3e74
000378 6720
000379 7465
00037a 6544      	.DB  0x74,0x3E,0x20,0x67,0x65,0x74,0x44,0x65
00037b 6976
00037c 6563
00037d 7453
00037e 7461      	.DB  0x76,0x69,0x63,0x65,0x53,0x74,0x61,0x74
00037f 2865
000380 2029
000381 6166
000382 6c69      	.DB  0x65,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
000383 6465
000384 0a0d
000385 3c00
000386 7473      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x73,0x74
000387 7461
000388 7375
000389 6552
00038a 6f70      	.DB  0x61,0x74,0x75,0x73,0x52,0x65,0x70,0x6F
00038b 7472
00038c 203e
00038d 7473
00038e 7461      	.DB  0x72,0x74,0x3E,0x20,0x73,0x74,0x61,0x74
00038f 7375
000390 7220
000391 7065
000392 726f      	.DB  0x75,0x73,0x20,0x72,0x65,0x70,0x6F,0x72
000393 2074
000394 6361
000395 6d63
000396 7520      	.DB  0x74,0x20,0x61,0x63,0x63,0x6D,0x20,0x75
000397 6b6e
000398 6f6e
000399 6e77
00039a 5b20      	.DB  0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x5B
00039b 7830
00039c 3025
00039d 5832
00039e 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
00039f 000a
0003a0 733c
0003a1 6174
0003a2 7574      	.DB  0xA,0x0,0x3C,0x73,0x74,0x61,0x74,0x75
0003a3 5273
0003a4 7065
0003a5 726f
0003a6 3e74      	.DB  0x73,0x52,0x65,0x70,0x6F,0x72,0x74,0x3E
0003a7 4520
0003a8 4854
0003a9 735f
0003aa 6e65      	.DB  0x20,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
0003ab 5364
0003ac 6174
0003ad 7574
0003ae 5273      	.DB  0x64,0x53,0x74,0x61,0x74,0x75,0x73,0x52
0003af 7065
0003b0 726f
0003b1 4374
0003b2 646d      	.DB  0x65,0x70,0x6F,0x72,0x74,0x43,0x6D,0x64
0003b3 2928
0003b4 6620
0003b5 6961
0003b6 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0003b7 0d64
0003b8 000a
0003b9 733c
0003ba 6e65      	.DB  0x64,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
0003bb 6f73
0003bc 4472
0003bd 7461
0003be 5261      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x52
0003bf 7065
0003c0 726f
0003c1 3e74
0003c2 5b20      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x5B
0003c3 6c25
0003c4 5d64
0003c5 255b
0003c6 5d64      	.DB  0x25,0x6C,0x64,0x5D,0x5B,0x25,0x64,0x5D
0003c7 255b
0003c8 322e
0003c9 5d66
0003ca 0a0d      	.DB  0x5B,0x25,0x2E,0x32,0x66,0x5D,0xD,0xA
0003cb 0d00
0003cc 3c0a
0003cd 6573
0003ce 736e      	.DB  0x0,0xD,0xA,0x3C,0x73,0x65,0x6E,0x73
0003cf 726f
0003d0 6144
0003d1 6174
0003d2 6552      	.DB  0x6F,0x72,0x44,0x61,0x74,0x61,0x52,0x65
0003d3 6f70
0003d4 7472
0003d5 203e
0003d6 3d3d      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x3D,0x3D
0003d7 203d
0003d8 5245
0003d9 4f52
0003da 2052      	.DB  0x3D,0x20,0x45,0x52,0x52,0x4F,0x52,0x20
0003db 4e49
0003dc 4f46
0003dd 414d
0003de 4954      	.DB  0x49,0x4E,0x46,0x4F,0x4D,0x41,0x54,0x49
0003df 4e4f
0003e0 4920
0003e1 204e
0003e2 4554      	.DB  0x4F,0x4E,0x20,0x49,0x4E,0x20,0x54,0x45
0003e3 504d
0003e4 5120
0003e5 4555
0003e6 4555      	.DB  0x4D,0x50,0x20,0x51,0x55,0x45,0x55,0x45
0003e7 3d20
0003e8 3d3d
0003e9 0a0d
0003ea 3c00      	.DB  0x20,0x3D,0x3D,0x3D,0xD,0xA,0x0,0x3C
0003eb 6573
0003ec 736e
0003ed 726f
0003ee 6144      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x44,0x61
0003ef 6174
0003f0 6552
0003f1 6f70
0003f2 7472      	.DB  0x74,0x61,0x52,0x65,0x70,0x6F,0x72,0x74
0003f3 203e
0003f4 5445
0003f5 5f48
0003f6 6573      	.DB  0x3E,0x20,0x45,0x54,0x48,0x5F,0x73,0x65
0003f7 646e
0003f8 6144
0003f9 6174
0003fa 6552      	.DB  0x6E,0x64,0x44,0x61,0x74,0x61,0x52,0x65
0003fb 6f70
0003fc 7472
0003fd 6d43
0003fe 2864      	.DB  0x70,0x6F,0x72,0x74,0x43,0x6D,0x64,0x28
0003ff 2029
000400 6166
000401 6c69
000402 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
000403 0a0d
000404 3c00
000405 7665
000406 6e65      	.DB  0xD,0xA,0x0,0x3C,0x65,0x76,0x65,0x6E
000407 5274
000408 7065
000409 726f
00040a 3e74      	.DB  0x74,0x52,0x65,0x70,0x6F,0x72,0x74,0x3E
00040b 5b20
00040c 6c25
00040d 5d64
00040e 305b      	.DB  0x20,0x5B,0x25,0x6C,0x64,0x5D,0x5B,0x30
00040f 2578
000410 3230
000411 5d58
000412 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
000413 2578
000414 3230
000415 5d58
000416 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0xD,0xA
000417 0d00
000418 3c0a
000419 7665
00041a 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
00041b 5274
00041c 7065
00041d 726f
00041e 3e74      	.DB  0x74,0x52,0x65,0x70,0x6F,0x72,0x74,0x3E
00041f 3d20
000420 3d3d
000421 4520
000422 5252      	.DB  0x20,0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52
000423 524f
000424 4920
000425 464e
000426 4d4f      	.DB  0x4F,0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D
000427 5441
000428 4f49
000429 204e
00042a 4e49      	.DB  0x41,0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E
00042b 5420
00042c 4d45
00042d 2050
00042e 5551      	.DB  0x20,0x54,0x45,0x4D,0x50,0x20,0x51,0x55
00042f 5545
000430 2045
000431 3d3d
000432 0d3d      	.DB  0x45,0x55,0x45,0x20,0x3D,0x3D,0x3D,0xD
000433 000a
000434 653c
000435 6576
000436 746e      	.DB  0xA,0x0,0x3C,0x65,0x76,0x65,0x6E,0x74
000437 6552
000438 6f70
000439 7472
00043a 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
00043b 5445
00043c 5f48
00043d 6573
00043e 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
00043f 7645
000440 6e65
000441 5274
000442 7065      	.DB  0x45,0x76,0x65,0x6E,0x74,0x52,0x65,0x70
000443 726f
000444 4374
000445 646d
000446 2928      	.DB  0x6F,0x72,0x74,0x43,0x6D,0x64,0x28,0x29
000447 6620
000448 6961
000449 656c
00044a 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
00044b 000a
00044c 733c
00044d 6e65
00044e 6f73      	.DB  0xA,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
00044f 4472
000450 7461
000451 5361
000452 7661      	.DB  0x72,0x44,0x61,0x74,0x61,0x53,0x61,0x76
000453 3e65
000454 7420
000455 6d69
000456 5b65      	.DB  0x65,0x3E,0x20,0x74,0x69,0x6D,0x65,0x5B
000457 6c25
000458 5d64
000459 632c
00045a 5b68      	.DB  0x25,0x6C,0x64,0x5D,0x2C,0x63,0x68,0x5B
00045b 6425
00045c 2c5d
00045d 6176
00045e 5b6c      	.DB  0x25,0x64,0x5D,0x2C,0x76,0x61,0x6C,0x5B
00045f 2e25
000460 6632
000461 0d5d
000462 000a      	.DB  0x25,0x2E,0x32,0x66,0x5D,0xD,0xA,0x0
000463 0a0d
000464 733c
000465 6e65
000466 6f73      	.DB  0xD,0xA,0x3C,0x73,0x65,0x6E,0x73,0x6F
000467 4472
000468 7461
000469 5361
00046a 7661      	.DB  0x72,0x44,0x61,0x74,0x61,0x53,0x61,0x76
00046b 3e65
00046c 3d20
00046d 3d3d
00046e 4520      	.DB  0x65,0x3E,0x20,0x3D,0x3D,0x3D,0x20,0x45
00046f 5252
000470 524f
000471 4920
000472 464e      	.DB  0x52,0x52,0x4F,0x52,0x20,0x49,0x4E,0x46
000473 4d4f
000474 5441
000475 4f49
000476 204e      	.DB  0x4F,0x4D,0x41,0x54,0x49,0x4F,0x4E,0x20
000477 4e49
000478 5420
000479 4d45
00047a 2050      	.DB  0x49,0x4E,0x20,0x54,0x45,0x4D,0x50,0x20
00047b 5551
00047c 5545
00047d 2045
00047e 3d3d      	.DB  0x51,0x55,0x45,0x55,0x45,0x20,0x3D,0x3D
00047f 0d3d
000480 000a
000481 733c
000482 6e65      	.DB  0x3D,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
000483 6f73
000484 4472
000485 7461
000486 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
000487 7661
000488 3e65
000489 4c20
00048a 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
00048b 6f5f
00048c 6570
00048d 466e
00048e 6c69      	.DB  0x5F,0x6F,0x70,0x65,0x6E,0x46,0x69,0x6C
00048f 2865
000490 7325
000491 2029
000492 6166      	.DB  0x65,0x28,0x25,0x73,0x29,0x20,0x66,0x61
000493 6c69
000494 6465
000495 202c
000496 6f63      	.DB  0x69,0x6C,0x65,0x64,0x2C,0x20,0x63,0x6F
000497 6c75
000498 6e64
000499 7427
00049a 7320      	.DB  0x75,0x6C,0x64,0x6E,0x27,0x74,0x20,0x73
00049b 7661
00049c 2065
00049d 6f6c
00049e 0d67      	.DB  0x61,0x76,0x65,0x20,0x6C,0x6F,0x67,0xD
00049f 000a
0004a0 733c
0004a1 6e65
0004a2 6f73      	.DB  0xA,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
0004a3 4472
0004a4 7461
0004a5 5361
0004a6 7661      	.DB  0x72,0x44,0x61,0x74,0x61,0x53,0x61,0x76
0004a7 3e65
0004a8 4c20
0004a9 474f
0004aa 695f      	.DB  0x65,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x69
0004ab 736e
0004ac 7265
0004ad 4474
0004ae 7461      	.DB  0x6E,0x73,0x65,0x72,0x74,0x44,0x61,0x74
0004af 2861
0004b0 2029
0004b1 6166
0004b2 6c69      	.DB  0x61,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
0004b3 6465
0004b4 0a0d
0004b5 3c00
0004b6 6573      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x73,0x65
0004b7 736e
0004b8 726f
0004b9 6144
0004ba 6174      	.DB  0x6E,0x73,0x6F,0x72,0x44,0x61,0x74,0x61
0004bb 6153
0004bc 6576
0004bd 203e
0004be 4f4c      	.DB  0x53,0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F
0004bf 5f47
0004c0 6c63
0004c1 736f
0004c2 4665      	.DB  0x47,0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46
0004c3 6c69
0004c4 2865
0004c5 2029
0004c6 6166      	.DB  0x69,0x6C,0x65,0x28,0x29,0x20,0x66,0x61
0004c7 6c69
0004c8 6465
0004c9 0a0d
0004ca 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0004cb 6573
0004cc 736e
0004cd 726f
0004ce 6144      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x44,0x61
0004cf 6174
0004d0 6153
0004d1 6576
0004d2 203e      	.DB  0x74,0x61,0x53,0x61,0x76,0x65,0x3E,0x20
0004d3 6144
0004d4 6174
0004d5 4c20
0004d6 676f      	.DB  0x44,0x61,0x74,0x61,0x20,0x4C,0x6F,0x67
0004d7 6920
0004d8 2073
0004d9 6f6e
0004da 2074      	.DB  0x20,0x69,0x73,0x20,0x6E,0x6F,0x74,0x20
0004db 6d65
0004dc 7470
0004dd 0d79
0004de 000a      	.DB  0x65,0x6D,0x70,0x74,0x79,0xD,0xA,0x0
0004df 653c
0004e0 6576
0004e1 746e
0004e2 6153      	.DB  0x3C,0x65,0x76,0x65,0x6E,0x74,0x53,0x61
0004e3 6576
0004e4 203e
0004e5 6974
0004e6 656d      	.DB  0x76,0x65,0x3E,0x20,0x74,0x69,0x6D,0x65
0004e7 255b
0004e8 646c
0004e9 2c5d
0004ea 6469      	.DB  0x5B,0x25,0x6C,0x64,0x5D,0x2C,0x69,0x64
0004eb 305b
0004ec 2578
0004ed 3230
0004ee 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0004ef 732c
0004f0 6174
0004f1 5b74
0004f2 7830      	.DB  0x2C,0x73,0x74,0x61,0x74,0x5B,0x30,0x78
0004f3 3025
0004f4 5832
0004f5 0d5d
0004f6 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
0004f7 0a0d
0004f8 653c
0004f9 6576
0004fa 746e      	.DB  0xD,0xA,0x3C,0x65,0x76,0x65,0x6E,0x74
0004fb 6153
0004fc 6576
0004fd 203e
0004fe 3d3d      	.DB  0x53,0x61,0x76,0x65,0x3E,0x20,0x3D,0x3D
0004ff 203d
000500 5245
000501 4f52
000502 2052      	.DB  0x3D,0x20,0x45,0x52,0x52,0x4F,0x52,0x20
000503 4e49
000504 4f46
000505 414d
000506 4954      	.DB  0x49,0x4E,0x46,0x4F,0x4D,0x41,0x54,0x49
000507 4e4f
000508 4920
000509 204e
00050a 4554      	.DB  0x4F,0x4E,0x20,0x49,0x4E,0x20,0x54,0x45
00050b 504d
00050c 5120
00050d 4555
00050e 4555      	.DB  0x4D,0x50,0x20,0x51,0x55,0x45,0x55,0x45
00050f 3d20
000510 3d3d
000511 0a0d
000512 3c00      	.DB  0x20,0x3D,0x3D,0x3D,0xD,0xA,0x0,0x3C
000513 7665
000514 6e65
000515 5374
000516 7661      	.DB  0x65,0x76,0x65,0x6E,0x74,0x53,0x61,0x76
000517 3e65
000518 4c20
000519 474f
00051a 6f5f      	.DB  0x65,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x6F
00051b 6570
00051c 466e
00051d 6c69
00051e 2865      	.DB  0x70,0x65,0x6E,0x46,0x69,0x6C,0x65,0x28
00051f 7325
000520 2029
000521 6166
000522 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
000523 6465
000524 202c
000525 6f63
000526 6c75      	.DB  0x65,0x64,0x2C,0x20,0x63,0x6F,0x75,0x6C
000527 6e64
000528 7427
000529 7320
00052a 7661      	.DB  0x64,0x6E,0x27,0x74,0x20,0x73,0x61,0x76
00052b 2065
00052c 6f6c
00052d 0d67
00052e 000a      	.DB  0x65,0x20,0x6C,0x6F,0x67,0xD,0xA,0x0
00052f 653c
000530 6576
000531 746e
000532 6153      	.DB  0x3C,0x65,0x76,0x65,0x6E,0x74,0x53,0x61
000533 6576
000534 203e
000535 4f4c
000536 5f47      	.DB  0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47,0x5F
000537 6e69
000538 6573
000539 7472
00053a 7645      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x45,0x76
00053b 6e65
00053c 2874
00053d 2029
00053e 6166      	.DB  0x65,0x6E,0x74,0x28,0x29,0x20,0x66,0x61
00053f 6c69
000540 6465
000541 0a0d
000542 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
000543 7665
000544 6e65
000545 5374
000546 7661      	.DB  0x65,0x76,0x65,0x6E,0x74,0x53,0x61,0x76
000547 3e65
000548 4c20
000549 474f
00054a 635f      	.DB  0x65,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x63
00054b 6f6c
00054c 6573
00054d 6946
00054e 656c      	.DB  0x6C,0x6F,0x73,0x65,0x46,0x69,0x6C,0x65
00054f 2928
000550 6620
000551 6961
000552 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000553 0d64
000554 000a
000555 653c
000556 6576      	.DB  0x64,0xD,0xA,0x0,0x3C,0x65,0x76,0x65
000557 746e
000558 6153
000559 6576
00055a 203e      	.DB  0x6E,0x74,0x53,0x61,0x76,0x65,0x3E,0x20
00055b 7645
00055c 6e65
00055d 2074
00055e 6f4c      	.DB  0x45,0x76,0x65,0x6E,0x74,0x20,0x4C,0x6F
00055f 2067
000560 7369
000561 6e20
000562 746f      	.DB  0x67,0x20,0x69,0x73,0x20,0x6E,0x6F,0x74
000563 6520
000564 706d
000565 7974
000566 0a0d      	.DB  0x20,0x65,0x6D,0x70,0x74,0x79,0xD,0xA
000567 3c00
000568 6f6c
000569 5267
00056a 7065      	.DB  0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70
00056b 726f
00056c 3e74
00056d 4320
00056e 6568      	.DB  0x6F,0x72,0x74,0x3E,0x20,0x43,0x68,0x65
00056f 6b63
000570 4420
000571 7461
000572 2061      	.DB  0x63,0x6B,0x20,0x44,0x61,0x74,0x61,0x20
000573 6f4c
000574 2067
000575 7845
000576 7369      	.DB  0x4C,0x6F,0x67,0x20,0x45,0x78,0x69,0x73
000577 0d74
000578 000a
000579 6c3c
00057a 676f      	.DB  0x74,0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67
00057b 6552
00057c 6f70
00057d 7472
00057e 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
00057f 4f4c
000580 5f47
000581 706f
000582 6e65      	.DB  0x4C,0x4F,0x47,0x5F,0x6F,0x70,0x65,0x6E
000583 6946
000584 656c
000585 2528
000586 2973      	.DB  0x46,0x69,0x6C,0x65,0x28,0x25,0x73,0x29
000587 6620
000588 6961
000589 656c
00058a 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
00058b 000a
00058c 6c3c
00058d 676f
00058e 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
00058f 6f70
000590 7472
000591 203e
000592 4f4c      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C,0x4F
000593 5f47
000594 6572
000595 6461
000596 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
000597 6174
000598 2528
000599 2973
00059a 6620      	.DB  0x74,0x61,0x28,0x25,0x73,0x29,0x20,0x66
00059b 6961
00059c 656c
00059d 0d64
00059e 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00059f 6c3c
0005a0 676f
0005a1 6552
0005a2 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
0005a3 7472
0005a4 203e
0005a5 4f4c
0005a6 5f47      	.DB  0x72,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
0005a7 6572
0005a8 6461
0005a9 6144
0005aa 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
0005ab 2928
0005ac 4c20
0005ad 676f
0005ae 6520      	.DB  0x28,0x29,0x20,0x4C,0x6F,0x67,0x20,0x65
0005af 706d
0005b0 7974
0005b1 0a0d
0005b2 0d00      	.DB  0x6D,0x70,0x74,0x79,0xD,0xA,0x0,0xD
0005b3 3c0a
0005b4 6f6c
0005b5 5267
0005b6 7065      	.DB  0xA,0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70
0005b7 726f
0005b8 3e74
0005b9 3d20
0005ba 3d3d      	.DB  0x6F,0x72,0x74,0x3E,0x20,0x3D,0x3D,0x3D
0005bb 4520
0005bc 5252
0005bd 524f
0005be 4920      	.DB  0x20,0x45,0x52,0x52,0x4F,0x52,0x20,0x49
0005bf 464e
0005c0 4d4f
0005c1 5441
0005c2 4f49      	.DB  0x4E,0x46,0x4F,0x4D,0x41,0x54,0x49,0x4F
0005c3 204e
0005c4 4e49
0005c5 2520
0005c6 2073      	.DB  0x4E,0x20,0x49,0x4E,0x20,0x25,0x73,0x20
0005c7 3d3d
0005c8 0d3d
0005c9 000a
0005ca 6c3c      	.DB  0x3D,0x3D,0x3D,0xD,0xA,0x0,0x3C,0x6C
0005cb 676f
0005cc 6552
0005cd 6f70
0005ce 7472      	.DB  0x6F,0x67,0x52,0x65,0x70,0x6F,0x72,0x74
0005cf 203e
0005d0 6144
0005d1 6174
0005d2 6f4c      	.DB  0x3E,0x20,0x44,0x61,0x74,0x61,0x4C,0x6F
0005d3 2067
0005d4 6f66
0005d5 6e75
0005d6 2064      	.DB  0x67,0x20,0x66,0x6F,0x75,0x6E,0x64,0x20
0005d7 6974
0005d8 656d
0005d9 255b
0005da 646c      	.DB  0x74,0x69,0x6D,0x65,0x5B,0x25,0x6C,0x64
0005db 2c5d
0005dc 6863
0005dd 255b
0005de 5d64      	.DB  0x5D,0x2C,0x63,0x68,0x5B,0x25,0x64,0x5D
0005df 762c
0005e0 6c61
0005e1 255b
0005e2 322e      	.DB  0x2C,0x76,0x61,0x6C,0x5B,0x25,0x2E,0x32
0005e3 5d66
0005e4 0a0d
0005e5 3c00
0005e6 6f6c      	.DB  0x66,0x5D,0xD,0xA,0x0,0x3C,0x6C,0x6F
0005e7 5267
0005e8 7065
0005e9 726f
0005ea 3e74      	.DB  0x67,0x52,0x65,0x70,0x6F,0x72,0x74,0x3E
0005eb 4520
0005ec 4854
0005ed 735f
0005ee 6e65      	.DB  0x20,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
0005ef 4464
0005f0 7461
0005f1 5261
0005f2 7065      	.DB  0x64,0x44,0x61,0x74,0x61,0x52,0x65,0x70
0005f3 726f
0005f4 4374
0005f5 646d
0005f6 2928      	.DB  0x6F,0x72,0x74,0x43,0x6D,0x64,0x28,0x29
0005f7 6620
0005f8 6961
0005f9 656c
0005fa 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0005fb 000a
0005fc 6c3c
0005fd 676f
0005fe 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
0005ff 6f70
000600 7472
000601 203e
000602 6144      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x44,0x61
000603 6174
000604 6f4c
000605 2067
000606 6573      	.DB  0x74,0x61,0x4C,0x6F,0x67,0x20,0x73,0x65
000607 746e
000608 6620
000609 6172
00060a 656d      	.DB  0x6E,0x74,0x20,0x66,0x72,0x61,0x6D,0x65
00060b 4449
00060c 305b
00060d 2578
00060e 3230      	.DB  0x49,0x44,0x5B,0x30,0x78,0x25,0x30,0x32
00060f 5d58
000610 6c20
000611 676f
000612 4449      	.DB  0x58,0x5D,0x20,0x6C,0x6F,0x67,0x49,0x44
000613 305b
000614 2578
000615 3230
000616 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000617 0a0d
000618 3c00
000619 6f6c
00061a 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
00061b 7065
00061c 726f
00061d 3e74
00061e 4c20      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C
00061f 474f
000620 635f
000621 6f6c
000622 6573      	.DB  0x4F,0x47,0x5F,0x63,0x6C,0x6F,0x73,0x65
000623 6946
000624 656c
000625 2928
000626 6620      	.DB  0x46,0x69,0x6C,0x65,0x28,0x29,0x20,0x66
000627 6961
000628 656c
000629 0d64
00062a 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00062b 6c3c
00062c 676f
00062d 6552
00062e 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
00062f 7472
000630 203e
000631 6843
000632 6365      	.DB  0x72,0x74,0x3E,0x20,0x43,0x68,0x65,0x63
000633 206b
000634 7645
000635 6e65
000636 2074      	.DB  0x6B,0x20,0x45,0x76,0x65,0x6E,0x74,0x20
000637 6f4c
000638 2067
000639 7845
00063a 7369      	.DB  0x4C,0x6F,0x67,0x20,0x45,0x78,0x69,0x73
00063b 0d74
00063c 000a
00063d 6c3c
00063e 676f      	.DB  0x74,0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67
00063f 6552
000640 6f70
000641 7472
000642 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
000643 4f4c
000644 5f47
000645 6572
000646 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
000647 7645
000648 6e65
000649 2874
00064a 2029      	.DB  0x45,0x76,0x65,0x6E,0x74,0x28,0x29,0x20
00064b 6166
00064c 6c69
00064d 6465
00064e 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00064f 3c00
000650 6f6c
000651 5267
000652 7065      	.DB  0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70
000653 726f
000654 3e74
000655 4c20
000656 474f      	.DB  0x6F,0x72,0x74,0x3E,0x20,0x4C,0x4F,0x47
000657 725f
000658 6165
000659 4564
00065a 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
00065b 746e
00065c 2928
00065d 4c20
00065e 676f      	.DB  0x6E,0x74,0x28,0x29,0x20,0x4C,0x6F,0x67
00065f 6520
000660 706d
000661 7974
000662 0a0d      	.DB  0x20,0x65,0x6D,0x70,0x74,0x79,0xD,0xA
000663 3c00
000664 6f6c
000665 5267
000666 7065      	.DB  0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70
000667 726f
000668 3e74
000669 4520
00066a 6576      	.DB  0x6F,0x72,0x74,0x3E,0x20,0x45,0x76,0x65
00066b 746e
00066c 6f4c
00066d 2067
00066e 6f66      	.DB  0x6E,0x74,0x4C,0x6F,0x67,0x20,0x66,0x6F
00066f 6e75
000670 2064
000671 6974
000672 656d      	.DB  0x75,0x6E,0x64,0x20,0x74,0x69,0x6D,0x65
000673 255b
000674 646c
000675 2c5d
000676 6469      	.DB  0x5B,0x25,0x6C,0x64,0x5D,0x2C,0x69,0x64
000677 305b
000678 2578
000679 3230
00067a 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
00067b 732c
00067c 6174
00067d 5b74
00067e 7830      	.DB  0x2C,0x73,0x74,0x61,0x74,0x5B,0x30,0x78
00067f 3025
000680 5832
000681 0d5d
000682 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
000683 6c3c
000684 676f
000685 6552
000686 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
000687 7472
000688 203e
000689 5445
00068a 5f48      	.DB  0x72,0x74,0x3E,0x20,0x45,0x54,0x48,0x5F
00068b 6573
00068c 646e
00068d 7645
00068e 6e65      	.DB  0x73,0x65,0x6E,0x64,0x45,0x76,0x65,0x6E
00068f 5274
000690 7065
000691 726f
000692 4374      	.DB  0x74,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
000693 646d
000694 2928
000695 6620
000696 6961      	.DB  0x6D,0x64,0x28,0x29,0x20,0x66,0x61,0x69
000697 656c
000698 0d64
000699 000a
00069a 6c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x6C
00069b 676f
00069c 6552
00069d 6f70
00069e 7472      	.DB  0x6F,0x67,0x52,0x65,0x70,0x6F,0x72,0x74
00069f 203e
0006a0 7645
0006a1 6e65
0006a2 4c74      	.DB  0x3E,0x20,0x45,0x76,0x65,0x6E,0x74,0x4C
0006a3 676f
0006a4 7320
0006a5 6e65
0006a6 2074      	.DB  0x6F,0x67,0x20,0x73,0x65,0x6E,0x74,0x20
0006a7 7266
0006a8 6d61
0006a9 4965
0006aa 5b44      	.DB  0x66,0x72,0x61,0x6D,0x65,0x49,0x44,0x5B
0006ab 7830
0006ac 3025
0006ad 5832
0006ae 205d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0x20
0006af 6f6c
0006b0 4967
0006b1 5b44
0006b2 7830      	.DB  0x6C,0x6F,0x67,0x49,0x44,0x5B,0x30,0x78
0006b3 3025
0006b4 5832
0006b5 0d5d
0006b6 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
0006b7 6c3c
0006b8 676f
0006b9 6552
0006ba 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
0006bb 7472
0006bc 203e
0006bd 4f4c
0006be 5f47      	.DB  0x72,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
0006bf 6c63
0006c0 736f
0006c1 4665
0006c2 6c69      	.DB  0x63,0x6C,0x6F,0x73,0x65,0x46,0x69,0x6C
0006c3 2865
0006c4 7325
0006c5 2029
0006c6 6166      	.DB  0x65,0x28,0x25,0x73,0x29,0x20,0x66,0x61
0006c7 6c69
0006c8 6465
0006c9 0a0d
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1617): warning: .cseg .db misalignment - padding zero byte
0006ca 0000      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0
                 _0x20000:
0006cb 0a0d
0006cc 6f50
0006cd 6577
0006ce 2d72      	.DB  0xD,0xA,0x50,0x6F,0x77,0x65,0x72,0x2D
0006cf 6e6f
0006d0 5220
0006d1 7365
0006d2 7465      	.DB  0x6F,0x6E,0x20,0x52,0x65,0x73,0x65,0x74
0006d3 0a0d
0006d4 0d00
0006d5 450a
0006d6 7478      	.DB  0xD,0xA,0x0,0xD,0xA,0x45,0x78,0x74
0006d7 7265
0006d8 616e
0006d9 206c
0006da 6552      	.DB  0x65,0x72,0x6E,0x61,0x6C,0x20,0x52,0x65
0006db 6573
0006dc 0d74
0006dd 000a
0006de 0a0d      	.DB  0x73,0x65,0x74,0xD,0xA,0x0,0xD,0xA
0006df 7242
0006e0 776f
0006e1 2d6e
0006e2 756f      	.DB  0x42,0x72,0x6F,0x77,0x6E,0x2D,0x6F,0x75
0006e3 2074
0006e4 6552
0006e5 6573
0006e6 0d74      	.DB  0x74,0x20,0x52,0x65,0x73,0x65,0x74,0xD
0006e7 000a
0006e8 0a0d
0006e9 6157
0006ea 6374      	.DB  0xA,0x0,0xD,0xA,0x57,0x61,0x74,0x63
0006eb 6468
0006ec 676f
0006ed 5220
0006ee 7365      	.DB  0x68,0x64,0x6F,0x67,0x20,0x52,0x65,0x73
0006ef 7465
0006f0 0a0d
0006f1 0d00
0006f2 4a0a      	.DB  0x65,0x74,0xD,0xA,0x0,0xD,0xA,0x4A
0006f3 4154
0006f4 2047
0006f5 6552
0006f6 6573      	.DB  0x54,0x41,0x47,0x20,0x52,0x65,0x73,0x65
0006f7 0d74
0006f8 000a
0006f9 693c
0006fa 696e      	.DB  0x74,0xD,0xA,0x0,0x3C,0x69,0x6E,0x69
0006fb 6974
0006fc 6c61
0006fd 735f
0006fe 7379      	.DB  0x74,0x69,0x61,0x6C,0x5F,0x73,0x79,0x73
0006ff 6574
000700 3e6d
000701 4c20
000702 474f      	.DB  0x74,0x65,0x6D,0x3E,0x20,0x4C,0x4F,0x47
000703 695f
000704 696e
000705 2874
000706 2029      	.DB  0x5F,0x69,0x6E,0x69,0x74,0x28,0x29,0x20
000707 6166
000708 6c69
000709 6465
00070a 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00070b 3c00
00070c 6e69
00070d 7469
00070e 6169      	.DB  0x0,0x3C,0x69,0x6E,0x69,0x74,0x69,0x61
00070f 5f6c
000710 7973
000711 7473
000712 6d65      	.DB  0x6C,0x5F,0x73,0x79,0x73,0x74,0x65,0x6D
000713 203e
000714 4453
000715 695f
000716 696e      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x69,0x6E,0x69
000717 2874
000718 2029
000719 6166
00071a 6c69      	.DB  0x74,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00071b 6465
00071c 0a0d
00071d 4900
00071e 696e      	.DB  0x65,0x64,0xD,0xA,0x0,0x49,0x6E,0x69
00071f 6974
000720 6c61
000721 4420
000722 7665      	.DB  0x74,0x69,0x61,0x6C,0x20,0x44,0x65,0x76
000723 6369
000724 2065
000725 6f43
000726 706d      	.DB  0x69,0x63,0x65,0x20,0x43,0x6F,0x6D,0x70
000727 656c
000728 6574
000729 2064
00072a 7461      	.DB  0x6C,0x65,0x74,0x65,0x64,0x20,0x61,0x74
00072b 2d20
00072c 0020
00072d 3025
00072e 6434      	.DB  0x20,0x2D,0x20,0x0,0x25,0x30,0x34,0x64
00072f 252d
000730 3230
000731 2d64
000732 3025      	.DB  0x2D,0x25,0x30,0x32,0x64,0x2D,0x25,0x30
000733 6432
000734 2520
000735 3230
000736 3a64      	.DB  0x32,0x64,0x20,0x25,0x30,0x32,0x64,0x3A
000737 3025
000738 6432
000739 253a
00073a 3230      	.DB  0x25,0x30,0x32,0x64,0x3A,0x25,0x30,0x32
00073b 0d64
00073c 000a      	.DB  0x64,0xD,0xA,0x0
                 _0x40000:
00073d 0a0d
00073e 2121
00073f 2121
000740 2121      	.DB  0xD,0xA,0x21,0x21,0x21,0x21,0x21,0x21
000741 2121
000742 2121
000743 2121
000744 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000745 2121
000746 2121
000747 2121
000748 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000749 2121
00074a 2121
00074b 2121
00074c 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
00074d 2121
00074e 2121
00074f 2121
000750 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000751 0a0d
000752 2100
000753 2121
000754 2121      	.DB  0xD,0xA,0x0,0x21,0x21,0x21,0x21,0x21
000755 2121
000756 4520
000757 6874
000758 4220      	.DB  0x21,0x21,0x20,0x45,0x74,0x68,0x20,0x42
000759 6675
00075a 6566
00075b 2072
00075c 764f      	.DB  0x75,0x66,0x66,0x65,0x72,0x20,0x4F,0x76
00075d 7265
00075e 6c66
00075f 776f
000760 2120      	.DB  0x65,0x72,0x66,0x6C,0x6F,0x77,0x20,0x21
000761 2121
000762 2121
000763 2121
000764 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1659): warning: .cseg .db misalignment - padding zero byte
000765 0000      	.DB  0x0
                 _0x60000:
000766 543c
000767 4d49
000768 5245
000769 735f      	.DB  0x3C,0x54,0x49,0x4D,0x45,0x52,0x5F,0x73
00076a 7465
00076b 6954
00076c 656d
00076d 3e72      	.DB  0x65,0x74,0x54,0x69,0x6D,0x65,0x72,0x3E
00076e 4520
00076f 5252
000770 203a
000771 6570      	.DB  0x20,0x45,0x52,0x52,0x3A,0x20,0x70,0x65
000772 6972
000773 646f
000774 3d20
000775 3020      	.DB  0x72,0x69,0x6F,0x64,0x20,0x3D,0x20,0x30
000776 0a0d
000777 3c00
000778 4954
000779 454d      	.DB  0xD,0xA,0x0,0x3C,0x54,0x49,0x4D,0x45
00077a 5f52
00077b 6573
00077c 5474
00077d 6d69      	.DB  0x52,0x5F,0x73,0x65,0x74,0x54,0x69,0x6D
00077e 7265
00077f 203e
000780 6162
000781 6573      	.DB  0x65,0x72,0x3E,0x20,0x62,0x61,0x73,0x65
000782 6f43
000783 6e75
000784 6574
000785 5b72      	.DB  0x43,0x6F,0x75,0x6E,0x74,0x65,0x72,0x5B
000786 6c25
000787 5d64
000788 2b20
000789 7020      	.DB  0x25,0x6C,0x64,0x5D,0x20,0x2B,0x20,0x70
00078a 7265
00078b 6f69
00078c 5b64
00078d 6c25      	.DB  0x65,0x72,0x69,0x6F,0x64,0x5B,0x25,0x6C
00078e 5d64
00078f 3d20
000790 2520
000791 646c      	.DB  0x64,0x5D,0x20,0x3D,0x20,0x25,0x6C,0x64
000792 4f20
000793 4556
000794 4652
000795 4f4c      	.DB  0x20,0x4F,0x56,0x45,0x52,0x46,0x4C,0x4F
000796 2157
000797 0d21
000798 000a
000799 573c      	.DB  0x57,0x21,0x21,0xD,0xA,0x0,0x3C,0x57
00079a 5444
00079b 203e
00079c 6157
00079d 6374      	.DB  0x44,0x54,0x3E,0x20,0x57,0x61,0x74,0x63
00079e 4468
00079f 676f
0007a0 5420
0007a1 6d69      	.DB  0x68,0x44,0x6F,0x67,0x20,0x54,0x69,0x6D
0007a2 7265
0007a3 5220
0007a4 7365
0007a5 7465      	.DB  0x65,0x72,0x20,0x52,0x65,0x73,0x65,0x74
0007a6 2121
0007a7 0a0d
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1677): warning: .cseg .db misalignment - padding zero byte
0007a8 0000      	.DB  0x21,0x21,0xD,0xA,0x0
                 _0x80003:
0007a9 ffff      	.DB  0xFF,0xFF
                 _0x80000:
0007aa 493c
0007ab 5f4f
0007ac 656b
0007ad 4379      	.DB  0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79,0x43
0007ae 6568
0007af 6b63
0007b0 203e
0007b1 656b      	.DB  0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B,0x65
0007b2 2079
0007b3 4f4d
0007b4 4544
0007b5 0a0d      	.DB  0x79,0x20,0x4D,0x4F,0x44,0x45,0xD,0xA
0007b6 3c00
0007b7 4f49
0007b8 6b5f
0007b9 7965      	.DB  0x0,0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79
0007ba 6843
0007bb 6365
0007bc 3e6b
0007bd 6b20      	.DB  0x43,0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B
0007be 7965
0007bf 5520
0007c0 0d50
0007c1 000a      	.DB  0x65,0x79,0x20,0x55,0x50,0xD,0xA,0x0
0007c2 493c
0007c3 5f4f
0007c4 656b
0007c5 4379      	.DB  0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79,0x43
0007c6 6568
0007c7 6b63
0007c8 203e
0007c9 656b      	.DB  0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B,0x65
0007ca 2079
0007cb 4f44
0007cc 4e57
0007cd 0a0d      	.DB  0x79,0x20,0x44,0x4F,0x57,0x4E,0xD,0xA
0007ce 3c00
0007cf 4f49
0007d0 6b5f
0007d1 7965      	.DB  0x0,0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79
0007d2 6843
0007d3 6365
0007d4 3e6b
0007d5 6b20      	.DB  0x43,0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B
0007d6 7965
0007d7 4f20
0007d8 0d4b
0007d9 000a      	.DB  0x65,0x79,0x20,0x4F,0x4B,0xD,0xA,0x0
                 _0xA0000:
0007da 6e49
0007db 7469
0007dc 6169
0007dd 696c      	.DB  0x49,0x6E,0x69,0x74,0x69,0x61,0x6C,0x69
0007de 697a
0007df 676e
0007e0 4120
0007e1 4344      	.DB  0x7A,0x69,0x6E,0x67,0x20,0x41,0x44,0x43
0007e2 2e2e
0007e3 0020
0007e4 4b4f
0007e5 0a0d      	.DB  0x2E,0x2E,0x20,0x0,0x4F,0x4B,0xD,0xA
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1697): warning: .cseg .db misalignment - padding zero byte
0007e6 0000      	.DB  0x0
                 _0xC0003:
0007e7 0063
0007e8 0000
0007e9 0063
0007ea 0000      	.DB  0x63,0x0,0x0,0x0,0x63,0x0,0x0,0x0
0007eb 0063
0007ec 0000      	.DB  0x63,0x0,0x0,0x0
                 _0xC0000:
0007ed 5f63
0007ee 6974
0007ef 656d
0007f0 255b      	.DB  0x63,0x5F,0x74,0x69,0x6D,0x65,0x5B,0x25
0007f1 646c
0007f2 205d
0007f3 2026
0007f4 5f73      	.DB  0x6C,0x64,0x5D,0x20,0x26,0x20,0x73,0x5F
0007f5 6974
0007f6 656d
0007f7 255b
0007f8 646c      	.DB  0x74,0x69,0x6D,0x65,0x5B,0x25,0x6C,0x64
0007f9 205d
0007fa 3e3d
0007fb 6420
0007fc 6669      	.DB  0x5D,0x20,0x3D,0x3E,0x20,0x64,0x69,0x66
0007fd 5b66
0007fe 6c25
0007ff 5d64
000800 0a0d      	.DB  0x66,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
000801 3e00
000802 203e
000803 5452
000804 5f43      	.DB  0x0,0x3E,0x3E,0x20,0x52,0x54,0x43,0x5F
000805 6573
000806 4274
000807 6e69
000808 7261      	.DB  0x73,0x65,0x74,0x42,0x69,0x6E,0x61,0x72
000809 2079
00080a 5452
00080b 2043
00080c 7953      	.DB  0x79,0x20,0x52,0x54,0x43,0x20,0x53,0x79
00080d 636e
00080e 0d2e
00080f 000a
000810 523c      	.DB  0x6E,0x63,0x2E,0xD,0xA,0x0,0x3C,0x52
000811 4354
000812 735f
000813 7465
000814 6144      	.DB  0x54,0x43,0x5F,0x73,0x65,0x74,0x44,0x61
000815 6574
000816 6954
000817 656d
000818 203e      	.DB  0x74,0x65,0x54,0x69,0x6D,0x65,0x3E,0x20
000819 6954
00081a 656d
00081b 6f7a
00081c 656e      	.DB  0x54,0x69,0x6D,0x65,0x7A,0x6F,0x6E,0x65
00081d 6f20
00081e 7475
00081f 6f20
000820 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
000821 6172
000822 676e
000823 2065
000824 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
000825 642b
000826 0d29
000827 000a
000828 6f4d      	.DB  0x2B,0x64,0x29,0xD,0xA,0x0,0x4D,0x6F
000829 2e6e
00082a 0020
00082b 7554
00082c 2e65      	.DB  0x6E,0x2E,0x20,0x0,0x54,0x75,0x65,0x2E
00082d 0020
00082e 6557
00082f 2e64
000830 0020      	.DB  0x20,0x0,0x57,0x65,0x64,0x2E,0x20,0x0
000831 6854
000832 2e75
000833 0020
000834 7246      	.DB  0x54,0x68,0x75,0x2E,0x20,0x0,0x46,0x72
000835 2e69
000836 0020
000837 6153
000838 2e74      	.DB  0x69,0x2E,0x20,0x0,0x53,0x61,0x74,0x2E
000839 0020
00083a 7553
00083b 2e6e
00083c 0020      	.DB  0x20,0x0,0x53,0x75,0x6E,0x2E,0x20,0x0
00083d 255b
00083e 5d64
00083f 3025
000840 6434      	.DB  0x5B,0x25,0x64,0x5D,0x25,0x30,0x34,0x64
000841 252d
000842 3230
000843 2d64
000844 3025      	.DB  0x2D,0x25,0x30,0x32,0x64,0x2D,0x25,0x30
000845 6432
000846 2520
000847 3230
000848 3a64      	.DB  0x32,0x64,0x20,0x25,0x30,0x32,0x64,0x3A
000849 3025
00084a 6432
00084b 253a
00084c 3230      	.DB  0x25,0x30,0x32,0x64,0x3A,0x25,0x30,0x32
00084d 0d64
00084e 000a
00084f 7552
000850 6e6e      	.DB  0x64,0xD,0xA,0x0,0x52,0x75,0x6E,0x6E
000851 6e69
000852 2067
000853 6977
000854 6874      	.DB  0x69,0x6E,0x67,0x20,0x77,0x69,0x74,0x68
000855 5320
000856 7379
000857 6574
000858 206d      	.DB  0x20,0x53,0x79,0x73,0x74,0x65,0x6D,0x20
000859 6c43
00085a 636f
00085b 206b
00085c 2040      	.DB  0x43,0x6C,0x6F,0x63,0x6B,0x20,0x40,0x20
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1730): warning: .cseg .db misalignment - padding zero byte
00085d 0000      	.DB  0x0
                 _0xE0003:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1732): warning: .cseg .db misalignment - padding zero byte
00085e 0001      	.DB  0x1
                 _0xE0004:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1734): warning: .cseg .db misalignment - padding zero byte
00085f 0001      	.DB  0x1
                 _0xE0005:
000860 0101
000861 0101
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1736): warning: .cseg .db misalignment - padding zero byte
000862 0001      	.DB  0x1,0x1,0x1,0x1,0x1
                 _0xE0006:
000863 0101
000864 0101
000865 0101
000866 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
000867 0101
000868 0101
000869 0101
00086a 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
                 _0xE0007:
00086b 0101
00086c 0101
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1741): warning: .cseg .db misalignment - padding zero byte
00086d 0001      	.DB  0x1,0x1,0x1,0x1,0x1
                 _0xE0008:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1743): warning: .cseg .db misalignment - padding zero byte
00086e 0001      	.DB  0x1
                 _0xE0009:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1745): warning: .cseg .db misalignment - padding zero byte
00086f 0001      	.DB  0x1
                 _0xE000A:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1747): warning: .cseg .db misalignment - padding zero byte
000870 0001      	.DB  0x1
                 _0xE0000:
000871 673c
000872 7465
000873 7250
000874 706f      	.DB  0x3C,0x67,0x65,0x74,0x50,0x72,0x6F,0x70
000875 7265
000876 6974
000877 7365
000878 6f43      	.DB  0x65,0x72,0x74,0x69,0x65,0x73,0x43,0x6F
000879 666e
00087a 6769
00087b 203e
00087c 6f6e      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F
00087d 6320
00087e 6e6f
00087f 6966
000880 7567      	.DB  0x20,0x63,0x6F,0x6E,0x66,0x69,0x67,0x75
000881 6172
000882 6974
000883 6e6f
000884 202c      	.DB  0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20
000885 7375
000886 2065
000887 6564
000888 6166      	.DB  0x75,0x73,0x65,0x20,0x64,0x65,0x66,0x61
000889 6c75
00088a 0d74
00088b 000a
00088c 673c      	.DB  0x75,0x6C,0x74,0xD,0xA,0x0,0x3C,0x67
00088d 7465
00088e 704f
00088f 7265
000890 7461      	.DB  0x65,0x74,0x4F,0x70,0x65,0x72,0x61,0x74
000891 6e69
000892 4367
000893 6e6f
000894 6966      	.DB  0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69
000895 3e67
000896 6e20
000897 206f
000898 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
000899 666e
00089a 6769
00089b 7275
00089c 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
00089d 6f69
00089e 2c6e
00089f 7520
0008a0 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
0008a1 6420
0008a2 6665
0008a3 7561
0008a4 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
0008a5 0a0d
0008a6 3c00
0008a7 6567
0008a8 4f74      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x4F
0008a9 6570
0008aa 6172
0008ab 6974
0008ac 676e      	.DB  0x70,0x65,0x72,0x61,0x74,0x69,0x6E,0x67
0008ad 6f43
0008ae 666e
0008af 6769
0008b0 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
0008b1 6f6d
0008b2 6564
0008b3 2020
0008b4 2020      	.DB  0x6D,0x6F,0x64,0x65,0x20,0x20,0x20,0x20
0008b5 2020
0008b6 2020
0008b7 2020
0008b8 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0008b9 3e3e
0008ba 3020
0008bb 2578
0008bc 3230      	.DB  0x3E,0x3E,0x20,0x30,0x78,0x25,0x30,0x32
0008bd 0d58
0008be 000a
0008bf 673c
0008c0 7465      	.DB  0x58,0xD,0xA,0x0,0x3C,0x67,0x65,0x74
0008c1 704f
0008c2 7265
0008c3 7461
0008c4 6e69      	.DB  0x4F,0x70,0x65,0x72,0x61,0x74,0x69,0x6E
0008c5 4367
0008c6 6e6f
0008c7 6966
0008c8 3e67      	.DB  0x67,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
0008c9 6420
0008ca 7665
0008cb 6369
0008cc 4565      	.DB  0x20,0x64,0x65,0x76,0x69,0x63,0x65,0x45
0008cd 616e
0008ce 6c62
0008cf 2065
0008d0 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
0008d1 3e20
0008d2 203e
0008d3 7830
0008d4 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
0008d5 5832
0008d6 0a0d
0008d7 3c00
0008d8 6567      	.DB  0x32,0x58,0xD,0xA,0x0,0x3C,0x67,0x65
0008d9 4f74
0008da 6570
0008db 6172
0008dc 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
0008dd 676e
0008de 6f43
0008df 666e
0008e0 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
0008e1 203e
0008e2 6c61
0008e3 7261
0008e4 456d      	.DB  0x3E,0x20,0x61,0x6C,0x61,0x72,0x6D,0x45
0008e5 616e
0008e6 6c62
0008e7 2065
0008e8 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
0008e9 2020
0008ea 3e3e
0008eb 3020
0008ec 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
0008ed 3230
0008ee 0d58
0008ef 000a
0008f0 673c      	.DB  0x30,0x32,0x58,0xD,0xA,0x0,0x3C,0x67
0008f1 7465
0008f2 704f
0008f3 7265
0008f4 7461      	.DB  0x65,0x74,0x4F,0x70,0x65,0x72,0x61,0x74
0008f5 6e69
0008f6 4367
0008f7 6e6f
0008f8 6966      	.DB  0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69
0008f9 3e67
0008fa 7320
0008fb 6e65
0008fc 6f73      	.DB  0x67,0x3E,0x20,0x73,0x65,0x6E,0x73,0x6F
0008fd 4572
0008fe 616e
0008ff 6c62
000900 2065      	.DB  0x72,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000901 2020
000902 3e20
000903 203e
000904 5b00      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x0,0x5B
000905 7830
000906 3025
000907 5832
000908 005d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0x0
000909 673c
00090a 7465
00090b 6553
00090c 736e      	.DB  0x3C,0x67,0x65,0x74,0x53,0x65,0x6E,0x73
00090d 726f
00090e 6f43
00090f 666e
000910 6769      	.DB  0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000911 203e
000912 6573
000913 736e
000914 726f      	.DB  0x3E,0x20,0x73,0x65,0x6E,0x73,0x6F,0x72
000915 6320
000916 6168
000917 6e6e
000918 6c65      	.DB  0x20,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
000919 6f20
00091a 7475
00091b 6f20
00091c 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
00091d 6172
00091e 676e
00091f 2065
000920 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
000921 2964
000922 0a0d
000923 3c00
000924 6567      	.DB  0x64,0x29,0xD,0xA,0x0,0x3C,0x67,0x65
000925 5374
000926 6e65
000927 6f73
000928 4372      	.DB  0x74,0x53,0x65,0x6E,0x73,0x6F,0x72,0x43
000929 6e6f
00092a 6966
00092b 3e67
00092c 6e20      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E
00092d 206f
00092e 6f63
00092f 666e
000930 6769      	.DB  0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
000931 7275
000932 7461
000933 6f69
000934 2c6e      	.DB  0x75,0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C
000935 7520
000936 6573
000937 6420
000938 6665      	.DB  0x20,0x75,0x73,0x65,0x20,0x64,0x65,0x66
000939 7561
00093a 746c
00093b 0a0d
00093c 3c00      	.DB  0x61,0x75,0x6C,0x74,0xD,0xA,0x0,0x3C
00093d 6567
00093e 4174
00093f 7875
000940 6944      	.DB  0x67,0x65,0x74,0x41,0x75,0x78,0x44,0x69
000941 436e
000942 6e6f
000943 6966
000944 3e67      	.DB  0x6E,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000945 6420
000946 6769
000947 7469
000948 6c61      	.DB  0x20,0x64,0x69,0x67,0x69,0x74,0x61,0x6C
000949 6920
00094a 706e
00094b 7475
00094c 6320      	.DB  0x20,0x69,0x6E,0x70,0x75,0x74,0x20,0x63
00094d 6168
00094e 6e6e
00094f 6c65
000950 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
000951 7475
000952 6f20
000953 2066
000954 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
000955 676e
000956 2065
000957 2528
000958 2964      	.DB  0x6E,0x67,0x65,0x20,0x28,0x25,0x64,0x29
000959 0a0d
00095a 3c00
00095b 6567
00095c 4174      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x41
00095d 7875
00095e 6944
00095f 436e
000960 6e6f      	.DB  0x75,0x78,0x44,0x69,0x6E,0x43,0x6F,0x6E
000961 6966
000962 3e67
000963 6e20
000964 206f      	.DB  0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F,0x20
000965 6f63
000966 666e
000967 6769
000968 7275      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x75,0x72
000969 7461
00096a 6f69
00096b 2c6e
00096c 7520      	.DB  0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20,0x75
00096d 6573
00096e 6420
00096f 6665
000970 7561      	.DB  0x73,0x65,0x20,0x64,0x65,0x66,0x61,0x75
000971 746c
000972 0a0d
000973 3c00
000974 6567      	.DB  0x6C,0x74,0xD,0xA,0x0,0x3C,0x67,0x65
000975 4174
000976 7875
000977 6f44
000978 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
000979 6f43
00097a 666e
00097b 6769
00097c 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
00097d 6964
00097e 6967
00097f 6174
000980 206c      	.DB  0x64,0x69,0x67,0x69,0x74,0x61,0x6C,0x20
000981 756f
000982 7074
000983 7475
000984 6320      	.DB  0x6F,0x75,0x74,0x70,0x75,0x74,0x20,0x63
000985 6168
000986 6e6e
000987 6c65
000988 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
000989 7475
00098a 6f20
00098b 2066
00098c 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
00098d 676e
00098e 2065
00098f 2528
000990 2964      	.DB  0x6E,0x67,0x65,0x20,0x28,0x25,0x64,0x29
000991 0a0d
000992 3c00
000993 6567
000994 4174      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x41
000995 7875
000996 6f44
000997 7475
000998 6f43      	.DB  0x75,0x78,0x44,0x6F,0x75,0x74,0x43,0x6F
000999 666e
00099a 6769
00099b 203e
00099c 6f6e      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F
00099d 6320
00099e 6e6f
00099f 6966
0009a0 7567      	.DB  0x20,0x63,0x6F,0x6E,0x66,0x69,0x67,0x75
0009a1 6172
0009a2 6974
0009a3 6e6f
0009a4 202c      	.DB  0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20
0009a5 7375
0009a6 2065
0009a7 6564
0009a8 6166      	.DB  0x75,0x73,0x65,0x20,0x64,0x65,0x66,0x61
0009a9 6c75
0009aa 0d74
0009ab 000a
0009ac 673c      	.DB  0x75,0x6C,0x74,0xD,0xA,0x0,0x3C,0x67
0009ad 7465
0009ae 7541
0009af 4478
0009b0 756f      	.DB  0x65,0x74,0x41,0x75,0x78,0x44,0x6F,0x75
0009b1 4374
0009b2 6e6f
0009b3 6966
0009b4 3e67      	.DB  0x74,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
0009b5 2d20
0009b6 202d
0009b7 4843
0009b8 2520      	.DB  0x20,0x2D,0x2D,0x20,0x43,0x48,0x20,0x25
0009b9 2064
0009ba 2d2d
0009bb 0d20
0009bc 000a      	.DB  0x64,0x20,0x2D,0x2D,0x20,0xD,0xA,0x0
0009bd 673c
0009be 7465
0009bf 7541
0009c0 4478      	.DB  0x3C,0x67,0x65,0x74,0x41,0x75,0x78,0x44
0009c1 756f
0009c2 4374
0009c3 6e6f
0009c4 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
0009c5 3e67
0009c6 6520
0009c7 616e
0009c8 6c62      	.DB  0x67,0x3E,0x20,0x65,0x6E,0x61,0x62,0x6C
0009c9 2065
0009ca 2020
0009cb 2020
0009cc 2020      	.DB  0x65,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0009cd 2020
0009ce 305b
0009cf 2578
0009d0 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
0009d1 5d58
0009d2 0a0d
0009d3 3c00
0009d4 6567      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x67,0x65
0009d5 4174
0009d6 7875
0009d7 6f44
0009d8 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
0009d9 6f43
0009da 666e
0009db 6769
0009dc 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
0009dd 7473
0009de 7461
0009df 4f65
0009e0 456e      	.DB  0x73,0x74,0x61,0x74,0x65,0x4F,0x6E,0x45
0009e1 6576
0009e2 746e
0009e3 2020
0009e4 5b20      	.DB  0x76,0x65,0x6E,0x74,0x20,0x20,0x20,0x5B
0009e5 7830
0009e6 3025
0009e7 5832
0009e8 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0009e9 000a
0009ea 673c
0009eb 7465
0009ec 7541      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x41,0x75
0009ed 4478
0009ee 756f
0009ef 4374
0009f0 6e6f      	.DB  0x78,0x44,0x6F,0x75,0x74,0x43,0x6F,0x6E
0009f1 6966
0009f2 3e67
0009f3 6e20
0009f4 6d75      	.DB  0x66,0x69,0x67,0x3E,0x20,0x6E,0x75,0x6D
0009f5 6562
0009f6 4572
0009f7 5376
0009f8 6372      	.DB  0x62,0x65,0x72,0x45,0x76,0x53,0x72,0x63
0009f9 2020
0009fa 2020
0009fb 255b
0009fc 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
0009fd 3e2d
0009fe 3c00
0009ff 6567
000a00 4174      	.DB  0x2D,0x3E,0x0,0x3C,0x67,0x65,0x74,0x41
000a01 7875
000a02 6941
000a03 436e
000a04 6e6f      	.DB  0x75,0x78,0x41,0x69,0x6E,0x43,0x6F,0x6E
000a05 6966
000a06 3e67
000a07 6120
000a08 616e      	.DB  0x66,0x69,0x67,0x3E,0x20,0x61,0x6E,0x61
000a09 6f6c
000a0a 2067
000a0b 6e69
000a0c 7570      	.DB  0x6C,0x6F,0x67,0x20,0x69,0x6E,0x70,0x75
000a0d 2074
000a0e 6863
000a0f 6e61
000a10 656e      	.DB  0x74,0x20,0x63,0x68,0x61,0x6E,0x6E,0x65
000a11 206c
000a12 756f
000a13 2074
000a14 666f      	.DB  0x6C,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66
000a15 7220
000a16 6e61
000a17 6567
000a18 2820      	.DB  0x20,0x72,0x61,0x6E,0x67,0x65,0x20,0x28
000a19 6425
000a1a 0d29
000a1b 000a
000a1c 673c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x67
000a1d 7465
000a1e 7541
000a1f 4178
000a20 6e69      	.DB  0x65,0x74,0x41,0x75,0x78,0x41,0x69,0x6E
000a21 6f43
000a22 666e
000a23 6769
000a24 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000a25 6f6e
000a26 6320
000a27 6e6f
000a28 6966      	.DB  0x6E,0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69
000a29 7567
000a2a 6172
000a2b 6974
000a2c 6e6f      	.DB  0x67,0x75,0x72,0x61,0x74,0x69,0x6F,0x6E
000a2d 202c
000a2e 7375
000a2f 2065
000a30 6564      	.DB  0x2C,0x20,0x75,0x73,0x65,0x20,0x64,0x65
000a31 6166
000a32 6c75
000a33 0d74
000a34 000a      	.DB  0x66,0x61,0x75,0x6C,0x74,0xD,0xA,0x0
000a35 673c
000a36 7465
000a37 7541
000a38 4178      	.DB  0x3C,0x67,0x65,0x74,0x41,0x75,0x78,0x41
000a39 756f
000a3a 4374
000a3b 6e6f
000a3c 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
000a3d 3e67
000a3e 6120
000a3f 616e
000a40 6f6c      	.DB  0x67,0x3E,0x20,0x61,0x6E,0x61,0x6C,0x6F
000a41 2067
000a42 756f
000a43 7074
000a44 7475      	.DB  0x67,0x20,0x6F,0x75,0x74,0x70,0x75,0x74
000a45 6320
000a46 6168
000a47 6e6e
000a48 6c65      	.DB  0x20,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
000a49 6f20
000a4a 7475
000a4b 6f20
000a4c 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
000a4d 6172
000a4e 676e
000a4f 2065
000a50 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
000a51 2964
000a52 0a0d
000a53 3c00
000a54 6567      	.DB  0x64,0x29,0xD,0xA,0x0,0x3C,0x67,0x65
000a55 4174
000a56 7875
000a57 6f41
000a58 7475      	.DB  0x74,0x41,0x75,0x78,0x41,0x6F,0x75,0x74
000a59 6f43
000a5a 666e
000a5b 6769
000a5c 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000a5d 6f6e
000a5e 6320
000a5f 6e6f
000a60 6966      	.DB  0x6E,0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69
000a61 7567
000a62 6172
000a63 6974
000a64 6e6f      	.DB  0x67,0x75,0x72,0x61,0x74,0x69,0x6F,0x6E
000a65 202c
000a66 7375
000a67 2065
000a68 6564      	.DB  0x2C,0x20,0x75,0x73,0x65,0x20,0x64,0x65
000a69 6166
000a6a 6c75
000a6b 0d74
000a6c 000a      	.DB  0x66,0x61,0x75,0x6C,0x74,0xD,0xA,0x0
000a6d 673c
000a6e 7465
000a6f 7542
000a70 7a7a      	.DB  0x3C,0x67,0x65,0x74,0x42,0x75,0x7A,0x7A
000a71 7265
000a72 6f43
000a73 666e
000a74 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000a75 203e
000a76 6f6e
000a77 6320
000a78 6e6f      	.DB  0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F,0x6E
000a79 6966
000a7a 7567
000a7b 6172
000a7c 6974      	.DB  0x66,0x69,0x67,0x75,0x72,0x61,0x74,0x69
000a7d 6e6f
000a7e 202c
000a7f 7375
000a80 2065      	.DB  0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65,0x20
000a81 6564
000a82 6166
000a83 6c75
000a84 0d74      	.DB  0x64,0x65,0x66,0x61,0x75,0x6C,0x74,0xD
000a85 000a
000a86 673c
000a87 7465
000a88 7542      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x42,0x75
000a89 7a7a
000a8a 7265
000a8b 6f43
000a8c 666e      	.DB  0x7A,0x7A,0x65,0x72,0x43,0x6F,0x6E,0x66
000a8d 6769
000a8e 203e
000a8f 6e65
000a90 6261      	.DB  0x69,0x67,0x3E,0x20,0x65,0x6E,0x61,0x62
000a91 656c
000a92 2020
000a93 2020
000a94 2020      	.DB  0x6C,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000a95 2020
000a96 2020
000a97 2020
000a98 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000a99 305b
000a9a 2578
000a9b 3230
000a9c 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000a9d 0a0d
000a9e 3c00
000a9f 6567
000aa0 4274      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x42
000aa1 7a75
000aa2 657a
000aa3 4372
000aa4 6e6f      	.DB  0x75,0x7A,0x7A,0x65,0x72,0x43,0x6F,0x6E
000aa5 6966
000aa6 3e67
000aa7 6520
000aa8 6576      	.DB  0x66,0x69,0x67,0x3E,0x20,0x65,0x76,0x65
000aa9 746e
000aaa 6f53
000aab 7275
000aac 6563      	.DB  0x6E,0x74,0x53,0x6F,0x75,0x72,0x63,0x65
000aad 754e
000aae 626d
000aaf 7265
000ab0 3e20      	.DB  0x4E,0x75,0x6D,0x62,0x65,0x72,0x20,0x3E
000ab1 5b3e
000ab2 6425
000ab3 0d5d
000ab4 000a      	.DB  0x3E,0x5B,0x25,0x64,0x5D,0xD,0xA,0x0
000ab5 673c
000ab6 7465
000ab7 7542
000ab8 7a7a      	.DB  0x3C,0x67,0x65,0x74,0x42,0x75,0x7A,0x7A
000ab9 7265
000aba 6f43
000abb 666e
000abc 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000abd 203e
000abe 7665
000abf 6e65
000ac0 5374      	.DB  0x3E,0x20,0x65,0x76,0x65,0x6E,0x74,0x53
000ac1 756f
000ac2 6372
000ac3 2065
000ac4 2020      	.DB  0x6F,0x75,0x72,0x63,0x65,0x20,0x20,0x20
000ac5 2020
000ac6 2020
000ac7 3e3e
000ac8 3c00      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x0,0x3C
000ac9 6567
000aca 4574
000acb 766e
000acc 6c41      	.DB  0x67,0x65,0x74,0x45,0x6E,0x76,0x41,0x6C
000acd 7261
000ace 436d
000acf 6e6f
000ad0 6966      	.DB  0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66,0x69
000ad1 3e67
000ad2 6e20
000ad3 206f
000ad4 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
000ad5 666e
000ad6 6769
000ad7 7275
000ad8 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
000ad9 6f69
000ada 2c6e
000adb 7520
000adc 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
000add 6420
000ade 6665
000adf 7561
000ae0 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
000ae1 0a0d
000ae2 3c00
000ae3 6567
000ae4 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000ae5 766e
000ae6 6c41
000ae7 7261
000ae8 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000ae9 6e6f
000aea 6966
000aeb 3e67
000aec 6720      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x67
000aed 6d73
000aee 5352
000aef 4953
000af0 654c      	.DB  0x73,0x6D,0x52,0x53,0x53,0x49,0x4C,0x65
000af1 6576
000af2 206c
000af3 2020
000af4 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000af5 2020
000af6 2020
000af7 255b
000af8 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000af9 0a0d
000afa 3c00
000afb 6567
000afc 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000afd 766e
000afe 6c41
000aff 7261
000b00 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000b01 6e6f
000b02 6966
000b03 3e67
000b04 6720      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x67
000b05 6d73
000b06 7243
000b07 6465
000b08 7469      	.DB  0x73,0x6D,0x43,0x72,0x65,0x64,0x69,0x74
000b09 6142
000b0a 616c
000b0b 636e
000b0c 2065      	.DB  0x42,0x61,0x6C,0x61,0x6E,0x63,0x65,0x20
000b0d 2020
000b0e 2020
000b0f 255b
000b10 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000b11 0a0d
000b12 3c00
000b13 6567
000b14 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000b15 766e
000b16 6c41
000b17 7261
000b18 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000b19 6e6f
000b1a 6966
000b1b 3e67
000b1c 6220      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x62
000b1d 7461
000b1e 6574
000b1f 7972
000b20 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
000b21 6576
000b22 206c
000b23 2020
000b24 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000b25 2020
000b26 2020
000b27 255b
000b28 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000b29 0a0d
000b2a 3c00
000b2b 6567
000b2c 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000b2d 766e
000b2e 6c41
000b2f 7261
000b30 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000b31 6e6f
000b32 6966
000b33 3e67
000b34 6320      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x63
000b35 6d6f
000b36 536d
000b37 6769
000b38 616e      	.DB  0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E,0x61
000b39 4c6c
000b3a 7665
000b3b 6c65
000b3c 2020      	.DB  0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20,0x20
000b3d 2020
000b3e 2020
000b3f 255b
000b40 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000b41 0a0d
000b42 3c00
000b43 6567
000b44 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000b45 766e
000b46 6c41
000b47 7261
000b48 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000b49 6e6f
000b4a 6966
000b4b 3e67
000b4c 6320      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x63
000b4d 6d6f
000b4e 4c6d
000b4f 736f
000b50 4474      	.DB  0x6F,0x6D,0x6D,0x4C,0x6F,0x73,0x74,0x44
000b51 6c65
000b52 7961
000b53 2020
000b54 2020      	.DB  0x65,0x6C,0x61,0x79,0x20,0x20,0x20,0x20
000b55 2020
000b56 2020
000b57 255b
000b58 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000b59 0a0d
000b5a 3c00
000b5b 6567
000b5c 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000b5d 766e
000b5e 6c41
000b5f 7261
000b60 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000b61 6e6f
000b62 6966
000b63 3e67
000b64 6d20      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x6D
000b65 6d65
000b66 726f
000b67 4d79
000b68 6e69      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x4D,0x69,0x6E
000b69 2020
000b6a 2020
000b6b 2020
000b6c 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000b6d 2020
000b6e 2020
000b6f 255b
000b70 5d75      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x75,0x5D
000b71 0a0d
000b72 3c00
000b73 6567
000b74 5374      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x53
000b75 6174
000b76 7574
000b77 5273
000b78 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000b79 726f
000b7a 4374
000b7b 6e6f
000b7c 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
000b7d 3e67
000b7e 6e20
000b7f 206f
000b80 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
000b81 666e
000b82 6769
000b83 7275
000b84 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
000b85 6f69
000b86 2c6e
000b87 7520
000b88 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
000b89 6420
000b8a 6665
000b8b 7561
000b8c 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
000b8d 0a0d
000b8e 3c00
000b8f 6567
000b90 5374      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x53
000b91 6174
000b92 7574
000b93 5273
000b94 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000b95 726f
000b96 4374
000b97 6e6f
000b98 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
000b99 3e67
000b9a 6120
000b9b 6363
000b9c 206d      	.DB  0x67,0x3E,0x20,0x61,0x63,0x63,0x6D,0x20
000b9d 2020
000b9e 2020
000b9f 2020
000ba0 5b20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
000ba1 7830
000ba2 3025
000ba3 5832
000ba4 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000ba5 000a
000ba6 673c
000ba7 7465
000ba8 7453      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x53,0x74
000ba9 7461
000baa 7375
000bab 6552
000bac 6f70      	.DB  0x61,0x74,0x75,0x73,0x52,0x65,0x70,0x6F
000bad 7472
000bae 6f43
000baf 666e
000bb0 6769      	.DB  0x72,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
000bb1 203e
000bb2 6e69
000bb3 7674
000bb4 2020      	.DB  0x3E,0x20,0x69,0x6E,0x74,0x76,0x20,0x20
000bb5 2020
000bb6 2020
000bb7 2020
000bb8 255b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x25
000bb9 5d64
000bba 0a0d
000bbb 3c00
000bbc 6573      	.DB  0x64,0x5D,0xD,0xA,0x0,0x3C,0x73,0x65
000bbd 4f74
000bbe 6570
000bbf 6172
000bc0 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
000bc1 676e
000bc2 6f43
000bc3 666e
000bc4 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
000bc5 203e
000bc6 7245
000bc7 6f72
000bc8 3a72      	.DB  0x3E,0x20,0x45,0x72,0x72,0x6F,0x72,0x3A
000bc9 6f20
000bca 6570
000bcb 6172
000bcc 6974      	.DB  0x20,0x6F,0x70,0x65,0x72,0x61,0x74,0x69
000bcd 676e
000bce 6d20
000bcf 646f
000bd0 2065      	.DB  0x6E,0x67,0x20,0x6D,0x6F,0x64,0x65,0x20
000bd1 6e69
000bd2 6176
000bd3 696c
000bd4 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
000bd5 305b
000bd6 2578
000bd7 3230
000bd8 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000bd9 0a0d
000bda 0d00
000bdb 200a
000bdc 6f6d      	.DB  0xD,0xA,0x0,0xD,0xA,0x20,0x6D,0x6F
000bdd 6564
000bde 2020
000bdf 2020
000be0 2020      	.DB  0x64,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000be1 2020
000be2 2020
000be3 2020
000be4 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000be5 3020
000be6 2578
000be7 3230
000be8 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000be9 0a0d
000bea 6420
000beb 7665
000bec 6369      	.DB  0xD,0xA,0x20,0x64,0x65,0x76,0x69,0x63
000bed 4565
000bee 616e
000bef 6c62
000bf0 2065      	.DB  0x65,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000bf1 2020
000bf2 3e20
000bf3 203e
000bf4 7830      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x30,0x78
000bf5 3025
000bf6 5832
000bf7 0d00
000bf8 200a      	.DB  0x25,0x30,0x32,0x58,0x0,0xD,0xA,0x20
000bf9 6c61
000bfa 7261
000bfb 456d
000bfc 616e      	.DB  0x61,0x6C,0x61,0x72,0x6D,0x45,0x6E,0x61
000bfd 6c62
000bfe 2065
000bff 2020
000c00 2020      	.DB  0x62,0x6C,0x65,0x20,0x20,0x20,0x20,0x20
000c01 3e3e
000c02 3020
000c03 2578
000c04 3230      	.DB  0x3E,0x3E,0x20,0x30,0x78,0x25,0x30,0x32
000c05 0058
000c06 0a0d
000c07 7320
000c08 6e65      	.DB  0x58,0x0,0xD,0xA,0x20,0x73,0x65,0x6E
000c09 6f73
000c0a 4572
000c0b 616e
000c0c 6c62      	.DB  0x73,0x6F,0x72,0x45,0x6E,0x61,0x62,0x6C
000c0d 2065
000c0e 2020
000c0f 3e20
000c10 203e      	.DB  0x65,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000c11 3c00
000c12 6573
000c13 5374
000c14 6e65      	.DB  0x0,0x3C,0x73,0x65,0x74,0x53,0x65,0x6E
000c15 6f73
000c16 4372
000c17 6e6f
000c18 6966      	.DB  0x73,0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69
000c19 3e67
000c1a 4520
000c1b 5252
000c1c 203a      	.DB  0x67,0x3E,0x20,0x45,0x52,0x52,0x3A,0x20
000c1d 6863
000c1e 6e61
000c1f 656e
000c20 206c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20
000c21 756f
000c22 2074
000c23 666f
000c24 7220      	.DB  0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x72
000c25 6e61
000c26 6567
000c27 0a0d
000c28 3c00      	.DB  0x61,0x6E,0x67,0x65,0xD,0xA,0x0,0x3C
000c29 6573
000c2a 5374
000c2b 6e65
000c2c 6f73      	.DB  0x73,0x65,0x74,0x53,0x65,0x6E,0x73,0x6F
000c2d 4372
000c2e 6e6f
000c2f 6966
000c30 3e67      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000c31 4520
000c32 5252
000c33 203a
000c34 6173      	.DB  0x20,0x45,0x52,0x52,0x3A,0x20,0x73,0x61
000c35 706d
000c36 696c
000c37 676e
000c38 6152      	.DB  0x6D,0x70,0x6C,0x69,0x6E,0x67,0x52,0x61
000c39 6574
000c3a 6320
000c3b 756f
000c3c 646c      	.DB  0x74,0x65,0x20,0x63,0x6F,0x75,0x6C,0x64
000c3d 276e
000c3e 2074
000c3f 6562
000c40 7320      	.DB  0x6E,0x27,0x74,0x20,0x62,0x65,0x20,0x73
000c41 7465
000c42 7420
000c43 206f
000c44 0d30      	.DB  0x65,0x74,0x20,0x74,0x6F,0x20,0x30,0xD
000c45 000a
000c46 0a0d
000c47 7320
000c48 6d61      	.DB  0xA,0x0,0xD,0xA,0x20,0x73,0x61,0x6D
000c49 6c70
000c4a 6e69
000c4b 5267
000c4c 7461      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x52,0x61,0x74
000c4d 2065
000c4e 2020
000c4f 3e20
000c50 203e      	.DB  0x65,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000c51 7830
000c52 3025
000c53 5834
000c54 0d00      	.DB  0x30,0x78,0x25,0x30,0x34,0x58,0x0,0xD
000c55 200a
000c56 6572
000c57 634f
000c58 7563      	.DB  0xA,0x20,0x72,0x65,0x4F,0x63,0x63,0x75
000c59 7272
000c5a 6e65
000c5b 6563
000c5c 2020      	.DB  0x72,0x72,0x65,0x6E,0x63,0x65,0x20,0x20
000c5d 2020
000c5e 3e3e
000c5f 3020
000c60 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000c61 3430
000c62 0058
000c63 0a0d
000c64 7420      	.DB  0x30,0x34,0x58,0x0,0xD,0xA,0x20,0x74
000c65 6d69
000c66 5365
000c67 6174
000c68 7472      	.DB  0x69,0x6D,0x65,0x53,0x74,0x61,0x72,0x74
000c69 6f48
000c6a 7275
000c6b 2020
000c6c 3e20      	.DB  0x48,0x6F,0x75,0x72,0x20,0x20,0x20,0x3E
000c6d 203e
000c6e 7830
000c6f 3025
000c70 5832      	.DB  0x3E,0x20,0x30,0x78,0x25,0x30,0x32,0x58
000c71 0d00
000c72 200a
000c73 6974
000c74 656d      	.DB  0x0,0xD,0xA,0x20,0x74,0x69,0x6D,0x65
000c75 7453
000c76 7261
000c77 4d74
000c78 6e69      	.DB  0x53,0x74,0x61,0x72,0x74,0x4D,0x69,0x6E
000c79 2020
000c7a 2020
000c7b 3e3e
000c7c 3020      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x30
000c7d 2578
000c7e 3230
000c7f 0058
000c80 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x0,0xD,0xA
000c81 7420
000c82 6d69
000c83 5365
000c84 6f74      	.DB  0x20,0x74,0x69,0x6D,0x65,0x53,0x74,0x6F
000c85 4870
000c86 756f
000c87 2072
000c88 2020      	.DB  0x70,0x48,0x6F,0x75,0x72,0x20,0x20,0x20
000c89 3e20
000c8a 203e
000c8b 7830
000c8c 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
000c8d 5832
000c8e 0d00
000c8f 200a
000c90 6974      	.DB  0x32,0x58,0x0,0xD,0xA,0x20,0x74,0x69
000c91 656d
000c92 7453
000c93 706f
000c94 694d      	.DB  0x6D,0x65,0x53,0x74,0x6F,0x70,0x4D,0x69
000c95 206e
000c96 2020
000c97 2020
000c98 3e3e      	.DB  0x6E,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000c99 3020
000c9a 2578
000c9b 3230
000c9c 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000c9d 0a0d
000c9e 6c20
000c9f 776f
000ca0 7265      	.DB  0xD,0xA,0x20,0x6C,0x6F,0x77,0x65,0x72
000ca1 694c
000ca2 696d
000ca3 2074
000ca4 2020      	.DB  0x4C,0x69,0x6D,0x69,0x74,0x20,0x20,0x20
000ca5 2020
000ca6 3e20
000ca7 203e
000ca8 6625      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x25,0x66
000ca9 5b20
000caa 3025
000cab 6c34
000cac 5d58      	.DB  0x20,0x5B,0x25,0x30,0x34,0x6C,0x58,0x5D
000cad 0d00
000cae 200a
000caf 6f6c
000cb0 6577      	.DB  0x0,0xD,0xA,0x20,0x6C,0x6F,0x77,0x65
000cb1 4472
000cb2 6c65
000cb3 7961
000cb4 2020      	.DB  0x72,0x44,0x65,0x6C,0x61,0x79,0x20,0x20
000cb5 2020
000cb6 2020
000cb7 3e3e
000cb8 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000cb9 2064
000cba 255b
000cbb 3230
000cbc 5d58      	.DB  0x64,0x20,0x5B,0x25,0x30,0x32,0x58,0x5D
000cbd 0d00
000cbe 200a
000cbf 6f6c
000cc0 6577      	.DB  0x0,0xD,0xA,0x20,0x6C,0x6F,0x77,0x65
000cc1 4572
000cc2 7478
000cc3 6572
000cc4 656d      	.DB  0x72,0x45,0x78,0x74,0x72,0x65,0x6D,0x65
000cc5 2020
000cc6 2020
000cc7 3e3e
000cc8 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000cc9 2066
000cca 255b
000ccb 3430
000ccc 586c      	.DB  0x66,0x20,0x5B,0x25,0x30,0x34,0x6C,0x58
000ccd 005d
000cce 0a0d
000ccf 7520
000cd0 7070      	.DB  0x5D,0x0,0xD,0xA,0x20,0x75,0x70,0x70
000cd1 7265
000cd2 694c
000cd3 696d
000cd4 2074      	.DB  0x65,0x72,0x4C,0x69,0x6D,0x69,0x74,0x20
000cd5 2020
000cd6 2020
000cd7 3e20
000cd8 203e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000cd9 6625
000cda 5b20
000cdb 3025
000cdc 6c34      	.DB  0x25,0x66,0x20,0x5B,0x25,0x30,0x34,0x6C
000cdd 5d58
000cde 0d00
000cdf 200a
000ce0 7075      	.DB  0x58,0x5D,0x0,0xD,0xA,0x20,0x75,0x70
000ce1 6570
000ce2 4472
000ce3 6c65
000ce4 7961      	.DB  0x70,0x65,0x72,0x44,0x65,0x6C,0x61,0x79
000ce5 2020
000ce6 2020
000ce7 2020
000ce8 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000ce9 2520
000cea 2064
000ceb 255b
000cec 3230      	.DB  0x20,0x25,0x64,0x20,0x5B,0x25,0x30,0x32
000ced 5d58
000cee 0d00
000cef 200a
000cf0 7075      	.DB  0x58,0x5D,0x0,0xD,0xA,0x20,0x75,0x70
000cf1 6570
000cf2 4572
000cf3 7478
000cf4 6572      	.DB  0x70,0x65,0x72,0x45,0x78,0x74,0x72,0x65
000cf5 656d
000cf6 2020
000cf7 2020
000cf8 3e3e      	.DB  0x6D,0x65,0x20,0x20,0x20,0x20,0x3E,0x3E
000cf9 2520
000cfa 2066
000cfb 255b
000cfc 3430      	.DB  0x20,0x25,0x66,0x20,0x5B,0x25,0x30,0x34
000cfd 586c
000cfe 005d
000cff 0a0d
000d00 6320      	.DB  0x6C,0x58,0x5D,0x0,0xD,0xA,0x20,0x63
000d01 6168
000d02 6e6e
000d03 6c65
000d04 2020      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x20
000d05 2020
000d06 2020
000d07 2020
000d08 3e20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3E
000d09 203e
000d0a 255b
000d0b 5d64
000d0c 0d00      	.DB  0x3E,0x20,0x5B,0x25,0x64,0x5D,0x0,0xD
000d0d 200a
000d0e 6863
000d0f 6e61
000d10 656e      	.DB  0xA,0x20,0x63,0x68,0x61,0x6E,0x6E,0x65
000d11 456c
000d12 616e
000d13 6c62
000d14 2065      	.DB  0x6C,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000d15 2020
000d16 3e3e
000d17 3020
000d18 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000d19 3230
000d1a 0058
000d1b 0a0d
000d1c 6120      	.DB  0x30,0x32,0x58,0x0,0xD,0xA,0x20,0x61
000d1d 616c
000d1e 6d72
000d1f 6544
000d20 616c      	.DB  0x6C,0x61,0x72,0x6D,0x44,0x65,0x6C,0x61
000d21 2079
000d22 2020
000d23 2020
000d24 3e20      	.DB  0x79,0x20,0x20,0x20,0x20,0x20,0x20,0x3E
000d25 203e
000d26 6425
000d27 0d00
000d28 3c0a      	.DB  0x3E,0x20,0x25,0x64,0x0,0xD,0xA,0x3C
000d29 6573
000d2a 4174
000d2b 7875
000d2c 6f44      	.DB  0x73,0x65,0x74,0x41,0x75,0x78,0x44,0x6F
000d2d 7475
000d2e 6f43
000d2f 666e
000d30 6769      	.DB  0x75,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
000d31 203e
000d32 6843
000d33 6e61
000d34 656e      	.DB  0x3E,0x20,0x43,0x68,0x61,0x6E,0x6E,0x65
000d35 206c
000d36 7245
000d37 6f72
000d38 2172      	.DB  0x6C,0x20,0x45,0x72,0x72,0x6F,0x72,0x21
000d39 0d21
000d3a 000a
000d3b 0a0d
000d3c 733c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x73
000d3d 7465
000d3e 7541
000d3f 4478
000d40 756f      	.DB  0x65,0x74,0x41,0x75,0x78,0x44,0x6F,0x75
000d41 4374
000d42 6e6f
000d43 6966
000d44 3e67      	.DB  0x74,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000d45 6520
000d46 6576
000d47 746e
000d48 6f53      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
000d49 7275
000d4a 6563
000d4b 754e
000d4c 626d      	.DB  0x75,0x72,0x63,0x65,0x4E,0x75,0x6D,0x62
000d4d 7265
000d4e 6920
000d4f 2073
000d50 6f74      	.DB  0x65,0x72,0x20,0x69,0x73,0x20,0x74,0x6F
000d51 206f
000d52 6f6c
000d53 676e
000d54 2820      	.DB  0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28
000d55 6425
000d56 2129
000d57 0d21
000d58 000a      	.DB  0x25,0x64,0x29,0x21,0x21,0xD,0xA,0x0
000d59 0a0d
000d5a 6320
000d5b 6168
000d5c 6e6e      	.DB  0xD,0xA,0x20,0x63,0x68,0x61,0x6E,0x6E
000d5d 6c65
000d5e 2020
000d5f 2020
000d60 2020      	.DB  0x65,0x6C,0x20,0x20,0x20,0x20,0x20,0x20
000d61 2020
000d62 2020
000d63 3e20
000d64 203e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000d65 255b
000d66 5d64
000d67 0d00
000d68 200a      	.DB  0x5B,0x25,0x64,0x5D,0x0,0xD,0xA,0x20
000d69 6863
000d6a 6e61
000d6b 656e
000d6c 456c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x45
000d6d 616e
000d6e 6c62
000d6f 2065
000d70 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
000d71 2020
000d72 3e3e
000d73 3020
000d74 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000d75 3230
000d76 0058
000d77 0a0d
000d78 7320      	.DB  0x30,0x32,0x58,0x0,0xD,0xA,0x20,0x73
000d79 6174
000d7a 6574
000d7b 6e4f
000d7c 7645      	.DB  0x74,0x61,0x74,0x65,0x4F,0x6E,0x45,0x76
000d7d 6e65
000d7e 2074
000d7f 2020
000d80 2020      	.DB  0x65,0x6E,0x74,0x20,0x20,0x20,0x20,0x20
000d81 3e20
000d82 203e
000d83 7830
000d84 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
000d85 5832
000d86 0d00
000d87 200a
000d88 7665      	.DB  0x32,0x58,0x0,0xD,0xA,0x20,0x65,0x76
000d89 6e65
000d8a 5374
000d8b 756f
000d8c 6372      	.DB  0x65,0x6E,0x74,0x53,0x6F,0x75,0x72,0x63
000d8d 4e65
000d8e 6d75
000d8f 6562
000d90 2072      	.DB  0x65,0x4E,0x75,0x6D,0x62,0x65,0x72,0x20
000d91 3e3e
000d92 2520
000d93 0064
000d94 0a0d      	.DB  0x3E,0x3E,0x20,0x25,0x64,0x0,0xD,0xA
000d95 6520
000d96 6576
000d97 746e
000d98 6f53      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
000d99 7275
000d9a 6563
000d9b 2020
000d9c 2020      	.DB  0x75,0x72,0x63,0x65,0x20,0x20,0x20,0x20
000d9d 2020
000d9e 3e20
000d9f 203e
000da0 0d00      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x0,0xD
000da1 200a
000da2 6c61
000da3 7261
000da4 4c6d      	.DB  0xA,0x20,0x61,0x6C,0x61,0x72,0x6D,0x4C
000da5 7665
000da6 6c65
000da7 2020
000da8 2020      	.DB  0x65,0x76,0x65,0x6C,0x20,0x20,0x20,0x20
000da9 2020
000daa 3e3e
000dab 2520
000dac 0064      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x25,0x64,0x0
000dad 0a0d
000dae 733c
000daf 7465
000db0 7541      	.DB  0xD,0xA,0x3C,0x73,0x65,0x74,0x41,0x75
000db1 4178
000db2 756f
000db3 4374
000db4 6e6f      	.DB  0x78,0x41,0x6F,0x75,0x74,0x43,0x6F,0x6E
000db5 6966
000db6 3e67
000db7 4320
000db8 6168      	.DB  0x66,0x69,0x67,0x3E,0x20,0x43,0x68,0x61
000db9 6e6e
000dba 6c65
000dbb 4520
000dbc 7272      	.DB  0x6E,0x6E,0x65,0x6C,0x20,0x45,0x72,0x72
000dbd 726f
000dbe 2121
000dbf 0a0d
000dc0 0d00      	.DB  0x6F,0x72,0x21,0x21,0xD,0xA,0x0,0xD
000dc1 3c0a
000dc2 6573
000dc3 4174
000dc4 7875      	.DB  0xA,0x3C,0x73,0x65,0x74,0x41,0x75,0x78
000dc5 6f41
000dc6 7475
000dc7 6f43
000dc8 666e      	.DB  0x41,0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66
000dc9 6769
000dca 203e
000dcb 7665
000dcc 6e65      	.DB  0x69,0x67,0x3E,0x20,0x65,0x76,0x65,0x6E
000dcd 5374
000dce 756f
000dcf 6372
000dd0 4e65      	.DB  0x74,0x53,0x6F,0x75,0x72,0x63,0x65,0x4E
000dd1 6d75
000dd2 6562
000dd3 2072
000dd4 7369      	.DB  0x75,0x6D,0x62,0x65,0x72,0x20,0x69,0x73
000dd5 7420
000dd6 6f6f
000dd7 6c20
000dd8 6e6f      	.DB  0x20,0x74,0x6F,0x6F,0x20,0x6C,0x6F,0x6E
000dd9 2067
000dda 2528
000ddb 2964
000ddc 2121      	.DB  0x67,0x20,0x28,0x25,0x64,0x29,0x21,0x21
000ddd 0a0d
000dde 0d00
000ddf 200a
000de0 656c      	.DB  0xD,0xA,0x0,0xD,0xA,0x20,0x6C,0x65
000de1 6576
000de2 4f6c
000de3 456e
000de4 6576      	.DB  0x76,0x65,0x6C,0x4F,0x6E,0x45,0x76,0x65
000de5 746e
000de6 2020
000de7 2020
000de8 2020      	.DB  0x6E,0x74,0x20,0x20,0x20,0x20,0x20,0x20
000de9 3e3e
000dea 2520
000deb 0066
000dec 0a0d      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x0,0xD,0xA
000ded 733c
000dee 7465
000def 7542
000df0 7a7a      	.DB  0x3C,0x73,0x65,0x74,0x42,0x75,0x7A,0x7A
000df1 7265
000df2 6f43
000df3 666e
000df4 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000df5 203e
000df6 7665
000df7 6e65
000df8 5374      	.DB  0x3E,0x20,0x65,0x76,0x65,0x6E,0x74,0x53
000df9 756f
000dfa 6372
000dfb 4e65
000dfc 6d75      	.DB  0x6F,0x75,0x72,0x63,0x65,0x4E,0x75,0x6D
000dfd 6562
000dfe 2072
000dff 7369
000e00 7420      	.DB  0x62,0x65,0x72,0x20,0x69,0x73,0x20,0x74
000e01 6f6f
000e02 6c20
000e03 6e6f
000e04 2067      	.DB  0x6F,0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20
000e05 2528
000e06 2964
000e07 2121
000e08 0a0d      	.DB  0x28,0x25,0x64,0x29,0x21,0x21,0xD,0xA
000e09 0d00
000e0a 200a
000e0b 6e65
000e0c 6261      	.DB  0x0,0xD,0xA,0x20,0x65,0x6E,0x61,0x62
000e0d 656c
000e0e 2020
000e0f 2020
000e10 2020      	.DB  0x6C,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000e11 2020
000e12 2020
000e13 2020
000e14 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000e15 3020
000e16 2578
000e17 3230
000e18 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000e19 0a0d
000e1a 6520
000e1b 6576
000e1c 746e      	.DB  0xD,0xA,0x20,0x65,0x76,0x65,0x6E,0x74
000e1d 6f53
000e1e 7275
000e1f 6563
000e20 2020      	.DB  0x53,0x6F,0x75,0x72,0x63,0x65,0x20,0x20
000e21 2020
000e22 2020
000e23 3e20
000e24 003e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x0
000e25 0a0d
000e26 6720
000e27 6d73
000e28 5352      	.DB  0xD,0xA,0x20,0x67,0x73,0x6D,0x52,0x53
000e29 4953
000e2a 654c
000e2b 6576
000e2c 206c      	.DB  0x53,0x49,0x4C,0x65,0x76,0x65,0x6C,0x20
000e2d 2020
000e2e 2020
000e2f 3e3e
000e30 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000e31 2066
000e32 4264
000e33 0d00
000e34 200a      	.DB  0x66,0x20,0x64,0x42,0x0,0xD,0xA,0x20
000e35 7367
000e36 436d
000e37 6572
000e38 6964      	.DB  0x67,0x73,0x6D,0x43,0x72,0x65,0x64,0x69
000e39 4274
000e3a 6c61
000e3b 6e61
000e3c 6563      	.DB  0x74,0x42,0x61,0x6C,0x61,0x6E,0x63,0x65
000e3d 3e20
000e3e 203e
000e3f 6425
000e40 4220      	.DB  0x20,0x3E,0x3E,0x20,0x25,0x64,0x20,0x42
000e41 6861
000e42 0074
000e43 0a0d
000e44 6220      	.DB  0x61,0x68,0x74,0x0,0xD,0xA,0x20,0x62
000e45 7461
000e46 6574
000e47 7972
000e48 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
000e49 6576
000e4a 206c
000e4b 2020
000e4c 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000e4d 3e3e
000e4e 2520
000e4f 2066
000e50 6f56      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x20,0x56,0x6F
000e51 746c
000e52 0073
000e53 0a0d
000e54 6320      	.DB  0x6C,0x74,0x73,0x0,0xD,0xA,0x20,0x63
000e55 6d6f
000e56 536d
000e57 6769
000e58 616e      	.DB  0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E,0x61
000e59 4c6c
000e5a 7665
000e5b 6c65
000e5c 2020      	.DB  0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20,0x20
000e5d 3e3e
000e5e 2520
000e5f 2066
000e60 4264      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x20,0x64,0x42
000e61 0d00
000e62 200a
000e63 6f63
000e64 6d6d      	.DB  0x0,0xD,0xA,0x20,0x63,0x6F,0x6D,0x6D
000e65 6f4c
000e66 7473
000e67 6544
000e68 616c      	.DB  0x4C,0x6F,0x73,0x74,0x44,0x65,0x6C,0x61
000e69 2079
000e6a 2020
000e6b 3e20
000e6c 203e      	.DB  0x79,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000e6d 6425
000e6e 7320
000e6f 6365
000e70 0d00      	.DB  0x25,0x64,0x20,0x73,0x65,0x63,0x0,0xD
000e71 200a
000e72 656d
000e73 6f6d
000e74 7972      	.DB  0xA,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79
000e75 694d
000e76 206e
000e77 2020
000e78 2020      	.DB  0x4D,0x69,0x6E,0x20,0x20,0x20,0x20,0x20
000e79 2020
000e7a 3e20
000e7b 203e
000e7c 6425      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x25,0x64
000e7d 4d20
000e7e 2e42
000e7f 0d00
000e80 200a      	.DB  0x20,0x4D,0x42,0x2E,0x0,0xD,0xA,0x20
000e81 6361
000e82 6d63
000e83 2020
000e84 2020      	.DB  0x61,0x63,0x63,0x6D,0x20,0x20,0x20,0x20
000e85 3e20
000e86 203e
000e87 6625
000e88 6420      	.DB  0x20,0x3E,0x3E,0x20,0x25,0x66,0x20,0x64
000e89 0042
000e8a 0a0d
000e8b 6920
000e8c 746e      	.DB  0x42,0x0,0xD,0xA,0x20,0x69,0x6E,0x74
000e8d 2076
000e8e 2020
000e8f 2020
000e90 3e3e      	.DB  0x76,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000e91 2520
000e92 2064
000e93 6142
000e94 7468      	.DB  0x20,0x25,0x64,0x20,0x42,0x61,0x68,0x74
000e95 3c00
000e96 616d
000e97 6e69
000e98 203e      	.DB  0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20
000e99 6567
000e9a 5374
000e9b 6e65
000e9c 6f73      	.DB  0x67,0x65,0x74,0x53,0x65,0x6E,0x73,0x6F
000e9d 4372
000e9e 6e6f
000e9f 6966
000ea0 2867      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
000ea1 6425
000ea2 2029
000ea3 7265
000ea4 6f72      	.DB  0x25,0x64,0x29,0x20,0x65,0x72,0x72,0x6F
000ea5 0d72
000ea6 000a      	.DB  0x72,0xD,0xA,0x0
                 _0x120000:
000ea7 453c
000ea8 4854
000ea9 735f
000eaa 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
000eab 4e64
000eac 6361
000ead 3e6b
000eae 7320      	.DB  0x64,0x4E,0x61,0x63,0x6B,0x3E,0x20,0x73
000eaf 6e65
000eb0 6964
000eb1 676e
000eb2 2e2e      	.DB  0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E
000eb3 0a0d
000eb4 3c00
000eb5 5445
000eb6 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
000eb7 6573
000eb8 646e
000eb9 7453
000eba 7461      	.DB  0x73,0x65,0x6E,0x64,0x53,0x74,0x61,0x74
000ebb 7375
000ebc 6552
000ebd 7571
000ebe 7365      	.DB  0x75,0x73,0x52,0x65,0x71,0x75,0x65,0x73
000ebf 4174
000ec0 6b63
000ec1 203e
000ec2 6573      	.DB  0x74,0x41,0x63,0x6B,0x3E,0x20,0x73,0x65
000ec3 646e
000ec4 6e69
000ec5 2e67
000ec6 0d2e      	.DB  0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD
000ec7 000a
000ec8 453c
000ec9 4854
000eca 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
000ecb 6e65
000ecc 5364
000ecd 6174
000ece 7574      	.DB  0x65,0x6E,0x64,0x53,0x74,0x61,0x74,0x75
000ecf 5273
000ed0 7065
000ed1 726f
000ed2 4374      	.DB  0x73,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
000ed3 646d
000ed4 203e
000ed5 7266
000ed6 6d61      	.DB  0x6D,0x64,0x3E,0x20,0x66,0x72,0x61,0x6D
000ed7 4c65
000ed8 6e65
000ed9 7420
000eda 6f6f      	.DB  0x65,0x4C,0x65,0x6E,0x20,0x74,0x6F,0x6F
000edb 6c20
000edc 6e6f
000edd 2067
000ede 2528      	.DB  0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28,0x25
000edf 2064
000ee0 7962
000ee1 6574
000ee2 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
000ee3 0a0d
000ee4 3c00
000ee5 5445
000ee6 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
000ee7 6573
000ee8 646e
000ee9 7453
000eea 7461      	.DB  0x73,0x65,0x6E,0x64,0x53,0x74,0x61,0x74
000eeb 7375
000eec 6552
000eed 6f70
000eee 7472      	.DB  0x75,0x73,0x52,0x65,0x70,0x6F,0x72,0x74
000eef 6d43
000ef0 3e64
000ef1 6d20
000ef2 6c61      	.DB  0x43,0x6D,0x64,0x3E,0x20,0x6D,0x61,0x6C
000ef3 6f6c
000ef4 2063
000ef5 6166
000ef6 6c69      	.DB  0x6C,0x6F,0x63,0x20,0x66,0x61,0x69,0x6C
000ef7 6465
000ef8 2820
000ef9 6425
000efa 6220      	.DB  0x65,0x64,0x20,0x28,0x25,0x64,0x20,0x62
000efb 7479
000efc 7365
000efd 0d29
000efe 000a      	.DB  0x79,0x74,0x65,0x73,0x29,0xD,0xA,0x0
000eff 453c
000f00 4854
000f01 735f
000f02 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
000f03 4564
000f04 6576
000f05 746e
000f06 6552      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x52,0x65
000f07 6f70
000f08 7472
000f09 6d43
000f0a 3e64      	.DB  0x70,0x6F,0x72,0x74,0x43,0x6D,0x64,0x3E
000f0b 5720
000f0c 6f72
000f0d 676e
000f0e 6520      	.DB  0x20,0x57,0x72,0x6F,0x6E,0x67,0x20,0x65
000f0f 6576
000f10 746e
000f11 7954
000f12 6570      	.DB  0x76,0x65,0x6E,0x74,0x54,0x79,0x70,0x65
000f13 3020
000f14 2578
000f15 3230
000f16 0d58      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0xD
000f17 000a
000f18 453c
000f19 4854
000f1a 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
000f1b 6e65
000f1c 4564
000f1d 6576
000f1e 746e      	.DB  0x65,0x6E,0x64,0x45,0x76,0x65,0x6E,0x74
000f1f 6552
000f20 6f70
000f21 7472
000f22 6d43      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x43,0x6D
000f23 3e64
000f24 6120
000f25 6464
000f26 7645      	.DB  0x64,0x3E,0x20,0x61,0x64,0x64,0x45,0x76
000f27 6e65
000f28 4c74
000f29 676f
000f2a 7551      	.DB  0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75
000f2b 7565
000f2c 2865
000f2d 7830
000f2e 3025      	.DB  0x65,0x75,0x65,0x28,0x30,0x78,0x25,0x30
000f2f 5832
000f30 252c
000f31 646c
000f32 302c      	.DB  0x32,0x58,0x2C,0x25,0x6C,0x64,0x2C,0x30
000f33 2578
000f34 3230
000f35 2c58
000f36 7830      	.DB  0x78,0x25,0x30,0x32,0x58,0x2C,0x30,0x78
000f37 3025
000f38 5832
000f39 2029
000f3a 6166      	.DB  0x25,0x30,0x32,0x58,0x29,0x20,0x66,0x61
000f3b 6c69
000f3c 6465
000f3d 0a0d
000f3e 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
000f3f 5445
000f40 5f48
000f41 6573
000f42 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
000f43 7645
000f44 6e65
000f45 5274
000f46 7065      	.DB  0x45,0x76,0x65,0x6E,0x74,0x52,0x65,0x70
000f47 726f
000f48 4374
000f49 646d
000f4a 203e      	.DB  0x6F,0x72,0x74,0x43,0x6D,0x64,0x3E,0x20
000f4b 6573
000f4c 646e
000f4d 6e69
000f4e 2e67      	.DB  0x73,0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E
000f4f 0d2e
000f50 000a
000f51 453c
000f52 4854      	.DB  0x2E,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
000f53 735f
000f54 6e65
000f55 4364
000f56 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
000f57 6966
000f58 4d67
000f59 6e61
000f5a 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
000f5b 4e65
000f5c 6361
000f5d 3e6b
000f5e 7320      	.DB  0x65,0x4E,0x61,0x63,0x6B,0x3E,0x20,0x73
000f5f 6e65
000f60 6964
000f61 676e
000f62 2e2e      	.DB  0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E
000f63 0a0d
000f64 3c00
000f65 5445
000f66 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
000f67 6573
000f68 646e
000f69 6f43
000f6a 666e      	.DB  0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E,0x66
000f6b 6769
000f6c 614d
000f6d 616e
000f6e 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
000f6f 6341
000f70 3e6b
000f71 6620
000f72 6172      	.DB  0x41,0x63,0x6B,0x3E,0x20,0x66,0x72,0x61
000f73 656d
000f74 654c
000f75 206e
000f76 6f74      	.DB  0x6D,0x65,0x4C,0x65,0x6E,0x20,0x74,0x6F
000f77 206f
000f78 6f6c
000f79 676e
000f7a 2820      	.DB  0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28
000f7b 6425
000f7c 6220
000f7d 7479
000f7e 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
000f7f 0d29
000f80 000a
000f81 453c
000f82 4854      	.DB  0x29,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
000f83 735f
000f84 6e65
000f85 4364
000f86 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
000f87 6966
000f88 4d67
000f89 6e61
000f8a 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
000f8b 4165
000f8c 6b63
000f8d 203e
000f8e 616d      	.DB  0x65,0x41,0x63,0x6B,0x3E,0x20,0x6D,0x61
000f8f 6c6c
000f90 636f
000f91 6620
000f92 6961      	.DB  0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61,0x69
000f93 656c
000f94 2064
000f95 2528
000f96 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
000f97 7962
000f98 6574
000f99 2973
000f9a 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
000f9b 3c00
000f9c 5445
000f9d 5f48
000f9e 6573      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x73,0x65
000f9f 646e
000fa0 6f43
000fa1 666e
000fa2 6769      	.DB  0x6E,0x64,0x43,0x6F,0x6E,0x66,0x69,0x67
000fa3 614d
000fa4 616e
000fa5 6567
000fa6 6341      	.DB  0x4D,0x61,0x6E,0x61,0x67,0x65,0x41,0x63
000fa7 3e6b
000fa8 7320
000fa9 6e65
000faa 6964      	.DB  0x6B,0x3E,0x20,0x73,0x65,0x6E,0x64,0x69
000fab 676e
000fac 2e2e
000fad 0a0d
000fae 3c00      	.DB  0x6E,0x67,0x2E,0x2E,0xD,0xA,0x0,0x3C
000faf 5445
000fb0 5f48
000fb1 6573
000fb2 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
000fb3 6144
000fb4 6174
000fb5 6552
000fb6 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
000fb7 7472
000fb8 6d43
000fb9 3e64
000fba 5720      	.DB  0x72,0x74,0x43,0x6D,0x64,0x3E,0x20,0x57
000fbb 6f72
000fbc 676e
000fbd 6420
000fbe 7461      	.DB  0x72,0x6F,0x6E,0x67,0x20,0x64,0x61,0x74
000fbf 5461
000fc0 7079
000fc1 2065
000fc2 7830      	.DB  0x61,0x54,0x79,0x70,0x65,0x20,0x30,0x78
000fc3 3025
000fc4 5832
000fc5 0a0d
000fc6 3c00      	.DB  0x25,0x30,0x32,0x58,0xD,0xA,0x0,0x3C
000fc7 5445
000fc8 5f48
000fc9 6573
000fca 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
000fcb 6144
000fcc 6174
000fcd 6552
000fce 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
000fcf 7472
000fd0 6d43
000fd1 3e64
000fd2 6120      	.DB  0x72,0x74,0x43,0x6D,0x64,0x3E,0x20,0x61
000fd3 6464
000fd4 6144
000fd5 6174
000fd6 6f4c      	.DB  0x64,0x64,0x44,0x61,0x74,0x61,0x4C,0x6F
000fd7 5167
000fd8 6575
000fd9 6575
000fda 3028      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0x28,0x30
000fdb 2578
000fdc 3230
000fdd 2c58
000fde 6c25      	.DB  0x78,0x25,0x30,0x32,0x58,0x2C,0x25,0x6C
000fdf 2c64
000fe0 7525
000fe1 252c
000fe2 322e      	.DB  0x64,0x2C,0x25,0x75,0x2C,0x25,0x2E,0x32
000fe3 2966
000fe4 6620
000fe5 6961
000fe6 656c      	.DB  0x66,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000fe7 0d64
000fe8 000a
000fe9 453c
000fea 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
000feb 735f
000fec 6e65
000fed 4464
000fee 7461      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x44,0x61,0x74
000fef 5261
000ff0 7065
000ff1 726f
000ff2 4374      	.DB  0x61,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
000ff3 646d
000ff4 203e
000ff5 6573
000ff6 646e      	.DB  0x6D,0x64,0x3E,0x20,0x73,0x65,0x6E,0x64
000ff7 6e69
000ff8 2e67
000ff9 0d2e
000ffa 000a      	.DB  0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA,0x0
000ffb 453c
000ffc 4854
000ffd 735f
000ffe 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
000fff 4c64
001000 676f
001001 614d
001002 696e      	.DB  0x64,0x4C,0x6F,0x67,0x4D,0x61,0x6E,0x69
001003 7570
001004 616c
001005 6974
001006 6e6f      	.DB  0x70,0x75,0x6C,0x61,0x74,0x69,0x6F,0x6E
001007 6341
001008 3e6b
001009 7320
00100a 6e65      	.DB  0x41,0x63,0x6B,0x3E,0x20,0x73,0x65,0x6E
00100b 6964
00100c 676e
00100d 2e2e
00100e 0a0d      	.DB  0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA
00100f 3c00
001010 5445
001011 5f48
001012 6573      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x73,0x65
001013 646e
001014 654e
001015 7774
001016 726f      	.DB  0x6E,0x64,0x4E,0x65,0x74,0x77,0x6F,0x72
001017 4d6b
001018 6961
001019 746e
00101a 6e65      	.DB  0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
00101b 6e61
00101c 6563
00101d 6341
00101e 3e6b      	.DB  0x61,0x6E,0x63,0x65,0x41,0x63,0x6B,0x3E
00101f 7320
001020 6e65
001021 6964
001022 676e      	.DB  0x20,0x73,0x65,0x6E,0x64,0x69,0x6E,0x67
001023 2e2e
001024 0a0d
001025 3c00
001026 5445      	.DB  0x2E,0x2E,0xD,0xA,0x0,0x3C,0x45,0x54
001027 5f48
001028 6572
001029 6f6d
00102a 6574      	.DB  0x48,0x5F,0x72,0x65,0x6D,0x6F,0x74,0x65
00102b 6544
00102c 6976
00102d 6563
00102e 6f43      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x43,0x6F
00102f 746e
001030 6f72
001031 416c
001032 6b63      	.DB  0x6E,0x74,0x72,0x6F,0x6C,0x41,0x63,0x6B
001033 203e
001034 6573
001035 646e
001036 6e69      	.DB  0x3E,0x20,0x73,0x65,0x6E,0x64,0x69,0x6E
001037 2e67
001038 0d2e
001039 000a
00103a 453c      	.DB  0x67,0x2E,0x2E,0xD,0xA,0x0,0x3C,0x45
00103b 4854
00103c 635f
00103d 656c
00103e 7261      	.DB  0x54,0x48,0x5F,0x63,0x6C,0x65,0x61,0x72
00103f 7544
001040 6c70
001041 6369
001042 7461      	.DB  0x44,0x75,0x70,0x6C,0x69,0x63,0x61,0x74
001043 5265
001044 7165
001045 6575
001046 7473      	.DB  0x65,0x52,0x65,0x71,0x75,0x65,0x73,0x74
001047 6d43
001048 3e64
001049 7320
00104a 6e65      	.DB  0x43,0x6D,0x64,0x3E,0x20,0x73,0x65,0x6E
00104b 6964
00104c 676e
00104d 2e2e
00104e 0a0d      	.DB  0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA
00104f 0d00
001050 3c0a
001051 5445
001052 5f48      	.DB  0x0,0xD,0xA,0x3C,0x45,0x54,0x48,0x5F
001053 6863
001054 6365
001055 506b
001056 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
001057 4c68
001058 676f
001059 203e
00105a 3d3d      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x3D,0x3D
00105b 203d
00105c 5245
00105d 4f52
00105e 2052      	.DB  0x3D,0x20,0x45,0x52,0x52,0x4F,0x52,0x20
00105f 4e49
001060 4f46
001061 414d
001062 4954      	.DB  0x49,0x4E,0x46,0x4F,0x4D,0x41,0x54,0x49
001063 4e4f
001064 4920
001065 204e
001066 4144      	.DB  0x4F,0x4E,0x20,0x49,0x4E,0x20,0x44,0x41
001067 4154
001068 4c20
001069 474f
00106a 5120      	.DB  0x54,0x41,0x20,0x4C,0x4F,0x47,0x20,0x51
00106b 4555
00106c 4555
00106d 3d20
00106e 3d3d      	.DB  0x55,0x45,0x55,0x45,0x20,0x3D,0x3D,0x3D
00106f 0a0d
001070 3c00
001071 5445
001072 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001073 6863
001074 6365
001075 506b
001076 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
001077 4c68
001078 676f
001079 203e
00107a 6144      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x44,0x61
00107b 6174
00107c 6f4c
00107d 2067
00107e 6974      	.DB  0x74,0x61,0x4C,0x6F,0x67,0x20,0x74,0x69
00107f 656d
001080 255b
001081 646c
001082 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
001083 6863
001084 255b
001085 5d64
001086 762c      	.DB  0x63,0x68,0x5B,0x25,0x64,0x5D,0x2C,0x76
001087 6c61
001088 255b
001089 322e
00108a 5d66      	.DB  0x61,0x6C,0x5B,0x25,0x2E,0x32,0x66,0x5D
00108b 0a0d
00108c 3c00
00108d 5445
00108e 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00108f 6863
001090 6365
001091 506b
001092 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
001093 4c68
001094 676f
001095 203e
001096 4f4c      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x4C,0x4F
001097 5f47
001098 706f
001099 6e65
00109a 6946      	.DB  0x47,0x5F,0x6F,0x70,0x65,0x6E,0x46,0x69
00109b 656c
00109c 2528
00109d 2973
00109e 6620      	.DB  0x6C,0x65,0x28,0x25,0x73,0x29,0x20,0x66
00109f 6961
0010a0 656c
0010a1 2c64
0010a2 6320      	.DB  0x61,0x69,0x6C,0x65,0x64,0x2C,0x20,0x63
0010a3 756f
0010a4 646c
0010a5 276e
0010a6 2074      	.DB  0x6F,0x75,0x6C,0x64,0x6E,0x27,0x74,0x20
0010a7 6173
0010a8 6576
0010a9 6c20
0010aa 676f      	.DB  0x73,0x61,0x76,0x65,0x20,0x6C,0x6F,0x67
0010ab 0a0d
0010ac 3c00
0010ad 5445
0010ae 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0010af 6863
0010b0 6365
0010b1 506b
0010b2 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
0010b3 4c68
0010b4 676f
0010b5 203e
0010b6 4f4c      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x4C,0x4F
0010b7 5f47
0010b8 6e69
0010b9 6573
0010ba 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
0010bb 6144
0010bc 6174
0010bd 2928
0010be 6620      	.DB  0x44,0x61,0x74,0x61,0x28,0x29,0x20,0x66
0010bf 6961
0010c0 656c
0010c1 0d64
0010c2 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0010c3 453c
0010c4 4854
0010c5 635f
0010c6 6568      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x63,0x68,0x65
0010c7 6b63
0010c8 7550
0010c9 6873
0010ca 6f4c      	.DB  0x63,0x6B,0x50,0x75,0x73,0x68,0x4C,0x6F
0010cb 3e67
0010cc 4c20
0010cd 474f
0010ce 635f      	.DB  0x67,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x63
0010cf 6f6c
0010d0 6573
0010d1 6946
0010d2 656c      	.DB  0x6C,0x6F,0x73,0x65,0x46,0x69,0x6C,0x65
0010d3 2928
0010d4 6620
0010d5 6961
0010d6 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0010d7 0d64
0010d8 000a
0010d9 453c
0010da 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
0010db 635f
0010dc 6568
0010dd 6b63
0010de 7550      	.DB  0x5F,0x63,0x68,0x65,0x63,0x6B,0x50,0x75
0010df 6873
0010e0 6f4c
0010e1 3e67
0010e2 4920      	.DB  0x73,0x68,0x4C,0x6F,0x67,0x3E,0x20,0x49
0010e3 736e
0010e4 7265
0010e5 6574
0010e6 2064      	.DB  0x6E,0x73,0x65,0x72,0x74,0x65,0x64,0x20
0010e7 6144
0010e8 6174
0010e9 4c20
0010ea 676f      	.DB  0x44,0x61,0x74,0x61,0x20,0x4C,0x6F,0x67
0010eb 0a0d
0010ec 0d00
0010ed 3c0a
0010ee 5445      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x45,0x54
0010ef 5f48
0010f0 6863
0010f1 6365
0010f2 506b      	.DB  0x48,0x5F,0x63,0x68,0x65,0x63,0x6B,0x50
0010f3 7375
0010f4 4c68
0010f5 676f
0010f6 203e      	.DB  0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E,0x20
0010f7 3d3d
0010f8 203d
0010f9 5245
0010fa 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
0010fb 2052
0010fc 4e49
0010fd 4f46
0010fe 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
0010ff 4954
001100 4e4f
001101 4920
001102 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
001103 5645
001104 4e45
001105 2054
001106 4f4c      	.DB  0x45,0x56,0x45,0x4E,0x54,0x20,0x4C,0x4F
001107 2047
001108 5551
001109 5545
00110a 2045      	.DB  0x47,0x20,0x51,0x55,0x45,0x55,0x45,0x20
00110b 3d3d
00110c 0d3d
00110d 000a
00110e 453c      	.DB  0x3D,0x3D,0x3D,0xD,0xA,0x0,0x3C,0x45
00110f 4854
001110 635f
001111 6568
001112 6b63      	.DB  0x54,0x48,0x5F,0x63,0x68,0x65,0x63,0x6B
001113 7550
001114 6873
001115 6f4c
001116 3e67      	.DB  0x50,0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E
001117 4520
001118 6576
001119 746e
00111a 6f4c      	.DB  0x20,0x45,0x76,0x65,0x6E,0x74,0x4C,0x6F
00111b 2067
00111c 6974
00111d 656d
00111e 255b      	.DB  0x67,0x20,0x74,0x69,0x6D,0x65,0x5B,0x25
00111f 646c
001120 2c5d
001121 6469
001122 305b      	.DB  0x6C,0x64,0x5D,0x2C,0x69,0x64,0x5B,0x30
001123 2578
001124 3230
001125 5d58
001126 732c      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x2C,0x73
001127 6174
001128 5b74
001129 7830
00112a 3025      	.DB  0x74,0x61,0x74,0x5B,0x30,0x78,0x25,0x30
00112b 5832
00112c 0d5d
00112d 000a
00112e 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
00112f 4854
001130 635f
001131 6568
001132 6b63      	.DB  0x54,0x48,0x5F,0x63,0x68,0x65,0x63,0x6B
001133 7550
001134 6873
001135 6f4c
001136 3e67      	.DB  0x50,0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E
001137 4920
001138 736e
001139 7265
00113a 6574      	.DB  0x20,0x49,0x6E,0x73,0x65,0x72,0x74,0x65
00113b 2064
00113c 7645
00113d 6e65
00113e 2074      	.DB  0x64,0x20,0x45,0x76,0x65,0x6E,0x74,0x20
00113f 6f4c
001140 0d67
001141 000a
001142 453c      	.DB  0x4C,0x6F,0x67,0xD,0xA,0x0,0x3C,0x45
001143 4854
001144 725f
001145 7465
001146 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
001147 736e
001148 696d
001149 3e74
00114a 7020      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x70
00114b 6361
00114c 656b
00114d 2074
00114e 305b      	.DB  0x61,0x63,0x6B,0x65,0x74,0x20,0x5B,0x30
00114f 2578
001150 3230
001151 5d58
001152 4520      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x45
001153 7078
001154 7269
001155 6465
001156 0a0d      	.DB  0x78,0x70,0x69,0x72,0x65,0x64,0xD,0xA
001157 3c00
001158 5445
001159 5f48
00115a 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
00115b 7274
00115c 6e61
00115d 6d73
00115e 7469      	.DB  0x74,0x72,0x61,0x6E,0x73,0x6D,0x69,0x74
00115f 203e
001160 7075
001161 6164
001162 6574      	.DB  0x3E,0x20,0x75,0x70,0x64,0x61,0x74,0x65
001163 6c20
001164 676f
001165 6144
001166 6174      	.DB  0x20,0x6C,0x6F,0x67,0x44,0x61,0x74,0x61
001167 7420
001168 6d69
001169 6f65
00116a 7475      	.DB  0x20,0x74,0x69,0x6D,0x65,0x6F,0x75,0x74
00116b 0a0d
00116c 3c00
00116d 5445
00116e 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00116f 6572
001170 7274
001171 6e61
001172 6d73      	.DB  0x72,0x65,0x74,0x72,0x61,0x6E,0x73,0x6D
001173 7469
001174 203e
001175 7075
001176 6164      	.DB  0x69,0x74,0x3E,0x20,0x75,0x70,0x64,0x61
001177 6574
001178 6c20
001179 676f
00117a 7645      	.DB  0x74,0x65,0x20,0x6C,0x6F,0x67,0x45,0x76
00117b 6e65
00117c 2074
00117d 6974
00117e 656d      	.DB  0x65,0x6E,0x74,0x20,0x74,0x69,0x6D,0x65
00117f 756f
001180 0d74
001181 000a
001182 453c      	.DB  0x6F,0x75,0x74,0xD,0xA,0x0,0x3C,0x45
001183 4854
001184 725f
001185 7465
001186 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
001187 736e
001188 696d
001189 3e74
00118a 6320      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x63
00118b 6d6f
00118c 4c6d
00118d 736f
00118e 5474      	.DB  0x6F,0x6D,0x6D,0x4C,0x6F,0x73,0x74,0x54
00118f 6d69
001190 7265
001191 3d20
001192 2520      	.DB  0x69,0x6D,0x65,0x72,0x20,0x3D,0x20,0x25
001193 646c
001194 2528
001195 586c
001196 0d29      	.DB  0x6C,0x64,0x28,0x25,0x6C,0x58,0x29,0xD
001197 000a
001198 453c
001199 4854
00119a 725f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x72
00119b 7465
00119c 6172
00119d 736e
00119e 696d      	.DB  0x65,0x74,0x72,0x61,0x6E,0x73,0x6D,0x69
00119f 3e74
0011a0 4c20
0011a1 736f
0011a2 5474      	.DB  0x74,0x3E,0x20,0x4C,0x6F,0x73,0x74,0x54
0011a3 6d69
0011a4 7265
0011a5 7420
0011a6 6d69      	.DB  0x69,0x6D,0x65,0x72,0x20,0x74,0x69,0x6D
0011a7 2065
0011a8 656c
0011a9 7466
0011aa 3d20      	.DB  0x65,0x20,0x6C,0x65,0x66,0x74,0x20,0x3D
0011ab 2520
0011ac 646c
0011ad 2528
0011ae 586c      	.DB  0x20,0x25,0x6C,0x64,0x28,0x25,0x6C,0x58
0011af 0d29
0011b0 000a
0011b1 0a0d
0011b2 453c      	.DB  0x29,0xD,0xA,0x0,0xD,0xA,0x3C,0x45
0011b3 4854
0011b4 725f
0011b5 7465
0011b6 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
0011b7 736e
0011b8 696d
0011b9 3e74
0011ba 2d20      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x2D
0011bb 522d
0011bc 7465
0011bd 6172
0011be 736e      	.DB  0x2D,0x52,0x65,0x74,0x72,0x61,0x6E,0x73
0011bf 696d
0011c0 7474
0011c1 6e69
0011c2 2d67      	.DB  0x6D,0x69,0x74,0x74,0x69,0x6E,0x67,0x2D
0011c3 202d
0011c4 305b
0011c5 2578
0011c6 3230      	.DB  0x2D,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
0011c7 5d58
0011c8 0a0d
0011c9 3c00
0011ca 5445      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x45,0x54
0011cb 5f48
0011cc 7270
0011cd 636f
0011ce 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
0011cf 5073
0011d0 6361
0011d1 656b
0011d2 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
0011d3 7320
0011d4 6174
0011d5 7574
0011d6 2073      	.DB  0x20,0x73,0x74,0x61,0x74,0x75,0x73,0x20
0011d7 6572
0011d8 7571
0011d9 7365
0011da 2074      	.DB  0x72,0x65,0x71,0x75,0x65,0x73,0x74,0x20
0011db 6e69
0011dc 6176
0011dd 696c
0011de 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
0011df 656c
0011e0 676e
0011e1 6874
0011e2 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
0011e3 6425
0011e4 0d29
0011e5 000a
0011e6 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
0011e7 4854
0011e8 705f
0011e9 6f72
0011ea 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0011eb 7373
0011ec 6150
0011ed 6b63
0011ee 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0011ef 203e
0011f0 6170
0011f1 6c79
0011f2 616f      	.DB  0x3E,0x20,0x70,0x61,0x79,0x6C,0x6F,0x61
0011f3 2064
0011f4 616d
0011f5 6c6c
0011f6 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
0011f7 2928
0011f8 6620
0011f9 6961
0011fa 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0011fb 0d64
0011fc 000a
0011fd 453c
0011fe 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
0011ff 705f
001200 6f72
001201 6563
001202 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
001203 6150
001204 6b63
001205 7465
001206 203e      	.DB  0x50,0x61,0x63,0x6B,0x65,0x74,0x3E,0x20
001207 7473
001208 7461
001209 7375
00120a 6552      	.DB  0x73,0x74,0x61,0x74,0x75,0x73,0x52,0x65
00120b 7571
00120c 7365
00120d 5074
00120e 7261      	.DB  0x71,0x75,0x65,0x73,0x74,0x50,0x61,0x72
00120f 6573
001210 2872
001211 2029
001212 6166      	.DB  0x73,0x65,0x72,0x28,0x29,0x20,0x66,0x61
001213 6c69
001214 6465
001215 0a0d
001216 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
001217 2d0a
001218 732d
001219 6174
00121a 7574      	.DB  0xA,0x2D,0x2D,0x73,0x74,0x61,0x74,0x75
00121b 5273
00121c 7165
00121d 6575
00121e 7473      	.DB  0x73,0x52,0x65,0x71,0x75,0x65,0x73,0x74
00121f 6150
001220 7372
001221 7265
001222 2d2d      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x2D,0x2D
001223 4320
001224 444d
001225 5b20
001226 7830      	.DB  0x20,0x43,0x4D,0x44,0x20,0x5B,0x30,0x78
001227 3025
001228 5832
001229 0d5d
00122a 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
00122b 6361
00122c 6563
00122d 7373
00122e 654d      	.DB  0x61,0x63,0x63,0x65,0x73,0x73,0x4D,0x65
00122f 6874
001230 646f
001231 2020
001232 2020      	.DB  0x74,0x68,0x6F,0x64,0x20,0x20,0x20,0x20
001233 305b
001234 2578
001235 3230
001236 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
001237 0a0d
001238 6900
001239 746e
00123a 7265      	.DB  0xD,0xA,0x0,0x69,0x6E,0x74,0x65,0x72
00123b 6176
00123c 206c
00123d 2020
00123e 2020      	.DB  0x76,0x61,0x6C,0x20,0x20,0x20,0x20,0x20
00123f 2020
001240 5b20
001241 7830
001242 3025      	.DB  0x20,0x20,0x20,0x5B,0x30,0x78,0x25,0x30
001243 5834
001244 205d
001245 203d
001246 6425      	.DB  0x34,0x58,0x5D,0x20,0x3D,0x20,0x25,0x64
001247 0a0d
001248 7300
001249 6174
00124a 7574      	.DB  0xD,0xA,0x0,0x73,0x74,0x61,0x74,0x75
00124b 4c73
00124c 7369
00124d 2074
00124e 2020      	.DB  0x73,0x4C,0x69,0x73,0x74,0x20,0x20,0x20
00124f 2020
001250 7c20
001251 2500
001252 3230      	.DB  0x20,0x20,0x20,0x7C,0x0,0x25,0x30,0x32
001253 7c58
001254 0d00
001255 2d0a
001256 202d      	.DB  0x58,0x7C,0x0,0xD,0xA,0x2D,0x2D,0x20
001257 2e2e
001258 6f44
001259 656e
00125a 2e2e      	.DB  0x2E,0x2E,0x44,0x6F,0x6E,0x65,0x2E,0x2E
00125b 2d20
00125c 0d2d
00125d 000a
00125e 453c      	.DB  0x20,0x2D,0x2D,0xD,0xA,0x0,0x3C,0x45
00125f 4854
001260 705f
001261 6f72
001262 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001263 7373
001264 6150
001265 6b63
001266 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001267 203e
001268 7473
001269 7461
00126a 7375      	.DB  0x3E,0x20,0x73,0x74,0x61,0x74,0x75,0x73
00126b 7220
00126c 7065
00126d 726f
00126e 2074      	.DB  0x20,0x72,0x65,0x70,0x6F,0x72,0x74,0x20
00126f 6e69
001270 6176
001271 696c
001272 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
001273 656c
001274 676e
001275 6874
001276 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001277 6425
001278 0d29
001279 000a
00127a 0a0d      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0xD,0xA
00127b 2d2d
00127c 7473
00127d 7461
00127e 7375      	.DB  0x2D,0x2D,0x73,0x74,0x61,0x74,0x75,0x73
00127f 6552
001280 6f70
001281 7472
001282 6150      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x50,0x61
001283 7372
001284 7265
001285 2d2d
001286 4120      	.DB  0x72,0x73,0x65,0x72,0x2D,0x2D,0x20,0x41
001287 4b43
001288 5b20
001289 7830
00128a 3025      	.DB  0x43,0x4B,0x20,0x5B,0x30,0x78,0x25,0x30
00128b 5832
00128c 0d5d
00128d 000a
00128e 6e75      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x75,0x6E
00128f 7869
001290 6954
001291 656d
001292 2020      	.DB  0x69,0x78,0x54,0x69,0x6D,0x65,0x20,0x20
001293 2020
001294 2020
001295 2020
001296 305b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x30
001297 2578
001298 3230
001299 5d58
00129a 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
00129b 2578
00129c 3230
00129d 5d58
00129e 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
00129f 2578
0012a0 3230
0012a1 5d58
0012a2 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
0012a3 2578
0012a4 3230
0012a5 5d58
0012a6 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0xD,0xA
0012a7 3c00
0012a8 5445
0012a9 5f48
0012aa 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
0012ab 636f
0012ac 7365
0012ad 5073
0012ae 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
0012af 656b
0012b0 3e74
0012b1 6520
0012b2 6576      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x65,0x76,0x65
0012b3 746e
0012b4 7220
0012b5 7065
0012b6 726f      	.DB  0x6E,0x74,0x20,0x72,0x65,0x70,0x6F,0x72
0012b7 2074
0012b8 6e69
0012b9 6176
0012ba 696c      	.DB  0x74,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
0012bb 2064
0012bc 656c
0012bd 676e
0012be 6874      	.DB  0x64,0x20,0x6C,0x65,0x6E,0x67,0x74,0x68
0012bf 2820
0012c0 6425
0012c1 0d29
0012c2 000a      	.DB  0x20,0x28,0x25,0x64,0x29,0xD,0xA,0x0
0012c3 0a0d
0012c4 2d2d
0012c5 7665
0012c6 6e65      	.DB  0xD,0xA,0x2D,0x2D,0x65,0x76,0x65,0x6E
0012c7 5274
0012c8 7065
0012c9 726f
0012ca 5074      	.DB  0x74,0x52,0x65,0x70,0x6F,0x72,0x74,0x50
0012cb 7261
0012cc 6573
0012cd 2d72
0012ce 202d      	.DB  0x61,0x72,0x73,0x65,0x72,0x2D,0x2D,0x20
0012cf 4341
0012d0 204b
0012d1 305b
0012d2 2578      	.DB  0x41,0x43,0x4B,0x20,0x5B,0x30,0x78,0x25
0012d3 3230
0012d4 5d58
0012d5 0a0d
0012d6 3c00      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x3C
0012d7 5445
0012d8 5f48
0012d9 7270
0012da 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
0012db 7365
0012dc 5073
0012dd 6361
0012de 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
0012df 3e74
0012e0 6720
0012e1 746f
0012e2 6520      	.DB  0x74,0x3E,0x20,0x67,0x6F,0x74,0x20,0x65
0012e3 6576
0012e4 746e
0012e5 6c20
0012e6 676f      	.DB  0x76,0x65,0x6E,0x74,0x20,0x6C,0x6F,0x67
0012e7 6120
0012e8 6b63
0012e9 0a0d
0012ea 3c00      	.DB  0x20,0x61,0x63,0x6B,0xD,0xA,0x0,0x3C
0012eb 6f6c
0012ec 5267
0012ed 7065
0012ee 726f      	.DB  0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F,0x72
0012ef 3e74
0012f0 4c20
0012f1 474f
0012f2 6f5f      	.DB  0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x6F
0012f3 6570
0012f4 466e
0012f5 6c69
0012f6 2865      	.DB  0x70,0x65,0x6E,0x46,0x69,0x6C,0x65,0x28
0012f7 7325
0012f8 2029
0012f9 6166
0012fa 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
0012fb 6465
0012fc 0a0d
0012fd 3c00
0012fe 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
0012ff 5f47
001300 6572
001301 6461
001302 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
001303 6174
001304 203e
001305 4f4c
001306 5f47      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F
001307 6573
001308 4c74
001309 7361
00130a 5374      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x53
00130b 6e65
00130c 2864
00130d 2029
00130e 6166      	.DB  0x65,0x6E,0x64,0x28,0x29,0x20,0x66,0x61
00130f 6c69
001310 6465
001311 0a0d
001312 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
001313 4f4c
001314 5f47
001315 6572
001316 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
001317 6144
001318 6174
001319 203e
00131a 4f4c      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x4C,0x4F
00131b 5f47
00131c 6573
00131d 4c74
00131e 7361      	.DB  0x47,0x5F,0x73,0x65,0x74,0x4C,0x61,0x73
00131f 5374
001320 6e65
001321 2864
001322 7325      	.DB  0x74,0x53,0x65,0x6E,0x64,0x28,0x25,0x73
001323 252c
001324 646c
001325 0d29
001326 000a      	.DB  0x2C,0x25,0x6C,0x64,0x29,0xD,0xA,0x0
001327 6c3c
001328 676f
001329 6552
00132a 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
00132b 7472
00132c 203e
00132d 4f4c
00132e 5f47      	.DB  0x72,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
00132f 6c63
001330 736f
001331 4665
001332 6c69      	.DB  0x63,0x6C,0x6F,0x73,0x65,0x46,0x69,0x6C
001333 2865
001334 7325
001335 2029
001336 6166      	.DB  0x65,0x28,0x25,0x73,0x29,0x20,0x66,0x61
001337 6c69
001338 6465
001339 0a0d
00133a 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
00133b 5445
00133c 5f48
00133d 7270
00133e 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
00133f 7365
001340 5073
001341 6361
001342 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
001343 3e74
001344 4320
001345 6e6f
001346 6966      	.DB  0x74,0x3E,0x20,0x43,0x6F,0x6E,0x66,0x69
001347 2067
001348 614d
001349 616e
00134a 6567      	.DB  0x67,0x20,0x4D,0x61,0x6E,0x61,0x67,0x65
00134b 0a0d
00134c 3c00
00134d 5445
00134e 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00134f 7270
001350 636f
001351 7365
001352 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
001353 6361
001354 656b
001355 3e74
001356 6320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x63
001357 6e6f
001358 6966
001359 7567
00135a 6172      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x75,0x72,0x61
00135b 6974
00135c 6e6f
00135d 6d20
00135e 6e61      	.DB  0x74,0x69,0x6F,0x6E,0x20,0x6D,0x61,0x6E
00135f 6761
001360 6d65
001361 6e65
001362 2074      	.DB  0x61,0x67,0x65,0x6D,0x65,0x6E,0x74,0x20
001363 6e69
001364 6176
001365 696c
001366 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
001367 656c
001368 676e
001369 6874
00136a 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
00136b 6425
00136c 0d29
00136d 000a
00136e 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
00136f 4854
001370 705f
001371 6f72
001372 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001373 7373
001374 6150
001375 6b63
001376 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001377 203e
001378 6170
001379 6c79
00137a 616f      	.DB  0x3E,0x20,0x70,0x61,0x79,0x6C,0x6F,0x61
00137b 2064
00137c 616d
00137d 6c6c
00137e 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
00137f 2528
001380 2964
001381 6620
001382 6961      	.DB  0x28,0x25,0x64,0x29,0x20,0x66,0x61,0x69
001383 656c
001384 0d64
001385 000a
001386 453c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x45
001387 4854
001388 705f
001389 6f72
00138a 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
00138b 7373
00138c 6150
00138d 6b63
00138e 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00138f 203e
001390 6f63
001391 666e
001392 6769      	.DB  0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
001393 614d
001394 616e
001395 6567
001396 6150      	.DB  0x4D,0x61,0x6E,0x61,0x67,0x65,0x50,0x61
001397 7372
001398 7265
001399 2928
00139a 6620      	.DB  0x72,0x73,0x65,0x72,0x28,0x29,0x20,0x66
00139b 6961
00139c 656c
00139d 0d64
00139e 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00139f 0a0d
0013a0 2d2d
0013a1 6f63
0013a2 666e      	.DB  0xD,0xA,0x2D,0x2D,0x63,0x6F,0x6E,0x66
0013a3 6769
0013a4 614d
0013a5 616e
0013a6 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
0013a7 6150
0013a8 7372
0013a9 7265
0013aa 2d2d      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x2D,0x2D
0013ab 4320
0013ac 444d
0013ad 5b20
0013ae 7830      	.DB  0x20,0x43,0x4D,0x44,0x20,0x5B,0x30,0x78
0013af 3025
0013b0 5832
0013b1 0d5d
0013b2 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
0013b3 6361
0013b4 6463
0013b5 2020
0013b6 2020      	.DB  0x61,0x63,0x63,0x64,0x20,0x20,0x20,0x20
0013b7 2020
0013b8 2020
0013b9 2020
0013ba 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0013bb 305b
0013bc 2578
0013bd 3230
0013be 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0013bf 0a0d
0013c0 6300
0013c1 666e
0013c2 2067      	.DB  0xD,0xA,0x0,0x63,0x6E,0x66,0x67,0x20
0013c3 2020
0013c4 2020
0013c5 2020
0013c6 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0013c7 2020
0013c8 5b20
0013c9 7830
0013ca 3025      	.DB  0x20,0x20,0x20,0x5B,0x30,0x78,0x25,0x30
0013cb 5832
0013cc 0d5d
0013cd 000a
0013ce 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
0013cf 4854
0013d0 705f
0013d1 6f72
0013d2 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0013d3 7373
0013d4 6150
0013d5 6b63
0013d6 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0013d7 203e
0013d8 6567
0013d9 4374
0013da 6e6f      	.DB  0x3E,0x20,0x67,0x65,0x74,0x43,0x6F,0x6E
0013db 6966
0013dc 4c67
0013dd 6e65
0013de 2928      	.DB  0x66,0x69,0x67,0x4C,0x65,0x6E,0x28,0x29
0013df 6620
0013e0 6961
0013e1 656c
0013e2 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0013e3 000a
0013e4 453c
0013e5 4854
0013e6 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
0013e7 6f72
0013e8 6563
0013e9 7373
0013ea 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
0013eb 6b63
0013ec 7465
0013ed 203e
0013ee 6e63      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x63,0x6E
0013ef 6766
0013f0 6452
0013f1 6d20
0013f2 6c61      	.DB  0x66,0x67,0x52,0x64,0x20,0x6D,0x61,0x6C
0013f3 6f6c
0013f4 2863
0013f5 2029
0013f6 6166      	.DB  0x6C,0x6F,0x63,0x28,0x29,0x20,0x66,0x61
0013f7 6c69
0013f8 6465
0013f9 0a0d
0013fa 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0013fb 5445
0013fc 5f48
0013fd 7270
0013fe 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
0013ff 7365
001400 5073
001401 6361
001402 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
001403 3e74
001404 6320
001405 6e6f
001406 6966      	.DB  0x74,0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69
001407 5267
001408 6165
001409 2864
00140a 2029      	.DB  0x67,0x52,0x65,0x61,0x64,0x28,0x29,0x20
00140b 6166
00140c 6c69
00140d 6465
00140e 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00140f 3c00
001410 5445
001411 5f48
001412 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
001413 636f
001414 7365
001415 5073
001416 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
001417 656b
001418 3e74
001419 5220
00141a 5f44      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x52,0x44,0x5F
00141b 4d43
00141c 2044
00141d 203a
00141e 5445      	.DB  0x43,0x4D,0x44,0x20,0x3A,0x20,0x45,0x54
00141f 5f48
001420 6573
001421 646e
001422 6f43      	.DB  0x48,0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F
001423 666e
001424 6769
001425 614d
001426 616e      	.DB  0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E,0x61
001427 6567
001428 6341
001429 286b
00142a 2029      	.DB  0x67,0x65,0x41,0x63,0x6B,0x28,0x29,0x20
00142b 6166
00142c 6c69
00142d 6465
00142e 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00142f 3c00
001430 5445
001431 5f48
001432 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
001433 636f
001434 7365
001435 5073
001436 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
001437 656b
001438 3e74
001439 6320
00143a 666e      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x63,0x6E,0x66
00143b 5767
00143c 2072
00143d 616d
00143e 6c6c      	.DB  0x67,0x57,0x72,0x20,0x6D,0x61,0x6C,0x6C
00143f 636f
001440 2928
001441 6620
001442 6961      	.DB  0x6F,0x63,0x28,0x29,0x20,0x66,0x61,0x69
001443 656c
001444 0d64
001445 000a
001446 453c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x45
001447 4854
001448 705f
001449 6f72
00144a 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
00144b 7373
00144c 6150
00144d 6b63
00144e 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00144f 203e
001450 6f63
001451 666e
001452 6769      	.DB  0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
001453 7257
001454 7469
001455 2865
001456 2029      	.DB  0x57,0x72,0x69,0x74,0x65,0x28,0x29,0x20
001457 6166
001458 6c69
001459 6465
00145a 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00145b 5700
00145c 5241
00145d 204e
00145e 203a      	.DB  0x0,0x57,0x41,0x52,0x4E,0x20,0x3A,0x20
00145f 453c
001460 4854
001461 705f
001462 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
001463 6563
001464 7373
001465 6150
001466 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
001467 7465
001468 203e
001469 5257
00146a 435f      	.DB  0x65,0x74,0x3E,0x20,0x57,0x52,0x5F,0x43
00146b 444d
00146c 3a20
00146d 4520
00146e 4854      	.DB  0x4D,0x44,0x20,0x3A,0x20,0x45,0x54,0x48
00146f 735f
001470 6e65
001471 4364
001472 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
001473 6966
001474 4d67
001475 6e61
001476 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001477 4165
001478 6b63
001479 2928
00147a 6620      	.DB  0x65,0x41,0x63,0x6B,0x28,0x29,0x20,0x66
00147b 6961
00147c 656c
00147d 0d64
00147e 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00147f 453c
001480 4854
001481 705f
001482 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
001483 6563
001484 7373
001485 6150
001486 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
001487 7465
001488 203e
001489 6f63
00148a 666e      	.DB  0x65,0x74,0x3E,0x20,0x63,0x6F,0x6E,0x66
00148b 6769
00148c 6f43
00148d 666e
00148e 7269      	.DB  0x69,0x67,0x43,0x6F,0x6E,0x66,0x69,0x72
00148f 286d
001490 2029
001491 6166
001492 6c69      	.DB  0x6D,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001493 6465
001494 0a0d
001495 3c00
001496 5445      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x45,0x54
001497 5f48
001498 7270
001499 636f
00149a 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
00149b 5073
00149c 6361
00149d 656b
00149e 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00149f 7520
0014a0 6b6e
0014a1 6f6e
0014a2 6e77      	.DB  0x20,0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
0014a3 7420
0014a4 7079
0014a5 2065
0014a6 6f66      	.DB  0x20,0x74,0x79,0x70,0x65,0x20,0x66,0x6F
0014a7 2072
0014a8 6f63
0014a9 666e
0014aa 6769      	.DB  0x72,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
0014ab 3e2d
0014ac 6361
0014ad 6463
0014ae 5b20      	.DB  0x2D,0x3E,0x61,0x63,0x63,0x64,0x20,0x5B
0014af 7830
0014b0 3025
0014b1 5832
0014b2 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0014b3 000a
0014b4 453c
0014b5 4854
0014b6 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
0014b7 6f72
0014b8 6563
0014b9 7373
0014ba 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
0014bb 6b63
0014bc 7465
0014bd 203e
0014be 6144      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x44,0x61
0014bf 6174
0014c0 7220
0014c1 7065
0014c2 726f      	.DB  0x74,0x61,0x20,0x72,0x65,0x70,0x6F,0x72
0014c3 2074
0014c4 6e69
0014c5 6176
0014c6 696c      	.DB  0x74,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
0014c7 2064
0014c8 656c
0014c9 676e
0014ca 6874      	.DB  0x64,0x20,0x6C,0x65,0x6E,0x67,0x74,0x68
0014cb 2820
0014cc 6425
0014cd 0d29
0014ce 000a      	.DB  0x20,0x28,0x25,0x64,0x29,0xD,0xA,0x0
0014cf 0a0d
0014d0 2d2d
0014d1 6164
0014d2 6174      	.DB  0xD,0xA,0x2D,0x2D,0x64,0x61,0x74,0x61
0014d3 6552
0014d4 6f70
0014d5 7472
0014d6 6150      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x50,0x61
0014d7 7372
0014d8 7265
0014d9 2d2d
0014da 4120      	.DB  0x72,0x73,0x65,0x72,0x2D,0x2D,0x20,0x41
0014db 4b43
0014dc 5b20
0014dd 7830
0014de 3025      	.DB  0x43,0x4B,0x20,0x5B,0x30,0x78,0x25,0x30
0014df 5832
0014e0 0d5d
0014e1 000a
0014e2 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
0014e3 4854
0014e4 705f
0014e5 6f72
0014e6 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0014e7 7373
0014e8 6150
0014e9 6b63
0014ea 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0014eb 203e
0014ec 6f67
0014ed 2074
0014ee 6164      	.DB  0x3E,0x20,0x67,0x6F,0x74,0x20,0x64,0x61
0014ef 6174
0014f0 6c20
0014f1 676f
0014f2 6120      	.DB  0x74,0x61,0x20,0x6C,0x6F,0x67,0x20,0x61
0014f3 6b63
0014f4 0a0d
0014f5 3c00
0014f6 5445      	.DB  0x63,0x6B,0xD,0xA,0x0,0x3C,0x45,0x54
0014f7 5f48
0014f8 7270
0014f9 636f
0014fa 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
0014fb 5073
0014fc 6361
0014fd 656b
0014fe 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
0014ff 6c20
001500 676f
001501 6d20
001502 6e61      	.DB  0x20,0x6C,0x6F,0x67,0x20,0x6D,0x61,0x6E
001503 7069
001504 6c75
001505 7461
001506 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
001507 206e
001508 4328
001509 444d
00150a 2029      	.DB  0x6E,0x20,0x28,0x43,0x4D,0x44,0x29,0x20
00150b 6e69
00150c 6176
00150d 696c
00150e 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
00150f 656c
001510 676e
001511 6874
001512 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001513 6425
001514 0d29
001515 000a
001516 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
001517 4854
001518 705f
001519 6f72
00151a 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
00151b 7373
00151c 6150
00151d 6b63
00151e 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00151f 203e
001520 6f6c
001521 4d67
001522 6e61      	.DB  0x3E,0x20,0x6C,0x6F,0x67,0x4D,0x61,0x6E
001523 7069
001524 6c75
001525 7461
001526 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
001527 436e
001528 646d
001529 6150
00152a 7372      	.DB  0x6E,0x43,0x6D,0x64,0x50,0x61,0x72,0x73
00152b 7265
00152c 2928
00152d 6620
00152e 6961      	.DB  0x65,0x72,0x28,0x29,0x20,0x66,0x61,0x69
00152f 656c
001530 0d64
001531 000a
001532 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001533 2d2d
001534 6f6c
001535 4d67
001536 6e61      	.DB  0x2D,0x2D,0x6C,0x6F,0x67,0x4D,0x61,0x6E
001537 7069
001538 6c75
001539 7461
00153a 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
00153b 436e
00153c 646d
00153d 6150
00153e 7372      	.DB  0x6E,0x43,0x6D,0x64,0x50,0x61,0x72,0x73
00153f 7265
001540 2d2d
001541 4320
001542 444d      	.DB  0x65,0x72,0x2D,0x2D,0x20,0x43,0x4D,0x44
001543 5b20
001544 7830
001545 3025
001546 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
001547 0d5d
001548 000a
001549 5374
00154a 6174      	.DB  0x5D,0xD,0xA,0x0,0x74,0x53,0x74,0x61
00154b 7472
00154c 2020
00154d 2020
00154e 2020      	.DB  0x72,0x74,0x20,0x20,0x20,0x20,0x20,0x20
00154f 2020
001550 2020
001551 255b
001552 646c      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x6C,0x64
001553 0d5d
001554 000a
001555 5374
001556 6f74      	.DB  0x5D,0xD,0xA,0x0,0x74,0x53,0x74,0x6F
001557 2070
001558 2020
001559 2020
00155a 2020      	.DB  0x70,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00155b 2020
00155c 2020
00155d 255b
00155e 646c      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x6C,0x64
00155f 0d5d
001560 000a
001561 453c
001562 4854      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001563 705f
001564 6f72
001565 6563
001566 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
001567 6150
001568 6b63
001569 7465
00156a 203e      	.DB  0x50,0x61,0x63,0x6B,0x65,0x74,0x3E,0x20
00156b 6573
00156c 4c74
00156d 676f
00156e 614d      	.DB  0x73,0x65,0x74,0x4C,0x6F,0x67,0x4D,0x61
00156f 696e
001570 7570
001571 616c
001572 6574      	.DB  0x6E,0x69,0x70,0x75,0x6C,0x61,0x74,0x65
001573 6353
001574 6568
001575 616d
001576 2928      	.DB  0x53,0x63,0x68,0x65,0x6D,0x61,0x28,0x29
001577 6620
001578 6961
001579 656c
00157a 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
00157b 000a
00157c 453c
00157d 4854
00157e 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
00157f 6f72
001580 6563
001581 7373
001582 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
001583 6b63
001584 7465
001585 203e
001586 6f6c      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x6C,0x6F
001587 2067
001588 616d
001589 696e
00158a 7570      	.DB  0x67,0x20,0x6D,0x61,0x6E,0x69,0x70,0x75
00158b 616c
00158c 6974
00158d 6e6f
00158e 2820      	.DB  0x6C,0x61,0x74,0x69,0x6F,0x6E,0x20,0x28
00158f 4341
001590 294b
001591 6920
001592 766e      	.DB  0x41,0x43,0x4B,0x29,0x20,0x69,0x6E,0x76
001593 6c61
001594 6469
001595 6c20
001596 6e65      	.DB  0x61,0x6C,0x69,0x64,0x20,0x6C,0x65,0x6E
001597 7467
001598 2068
001599 2528
00159a 2964      	.DB  0x67,0x74,0x68,0x20,0x28,0x25,0x64,0x29
00159b 0a0d
00159c 0d00
00159d 2d0a
00159e 6c2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x6C
00159f 676f
0015a0 614d
0015a1 696e
0015a2 7570      	.DB  0x6F,0x67,0x4D,0x61,0x6E,0x69,0x70,0x75
0015a3 616c
0015a4 6974
0015a5 6e6f
0015a6 6341      	.DB  0x6C,0x61,0x74,0x69,0x6F,0x6E,0x41,0x63
0015a7 506b
0015a8 7261
0015a9 6573
0015aa 2d72      	.DB  0x6B,0x50,0x61,0x72,0x73,0x65,0x72,0x2D
0015ab 202d
0015ac 4341
0015ad 204b
0015ae 305b      	.DB  0x2D,0x20,0x41,0x43,0x4B,0x20,0x5B,0x30
0015af 2578
0015b0 3230
0015b1 5d58
0015b2 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0xD,0xA
0015b3 7300
0015b4 6174
0015b5 7574
0015b6 2073      	.DB  0x0,0x73,0x74,0x61,0x74,0x75,0x73,0x20
0015b7 2020
0015b8 2020
0015b9 2020
0015ba 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0015bb 5b20
0015bc 6c25
0015bd 5d64
0015be 0a0d      	.DB  0x20,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
0015bf 3c00
0015c0 5445
0015c1 5f48
0015c2 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
0015c3 636f
0015c4 7365
0015c5 5073
0015c6 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
0015c7 656b
0015c8 3e74
0015c9 6e20
0015ca 7465      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x6E,0x65,0x74
0015cb 6f77
0015cc 6b72
0015cd 6d20
0015ce 6961      	.DB  0x77,0x6F,0x72,0x6B,0x20,0x6D,0x61,0x69
0015cf 746e
0015d0 6e65
0015d1 6e61
0015d2 6563      	.DB  0x6E,0x74,0x65,0x6E,0x61,0x6E,0x63,0x65
0015d3 6920
0015d4 766e
0015d5 6c61
0015d6 6469      	.DB  0x20,0x69,0x6E,0x76,0x61,0x6C,0x69,0x64
0015d7 6c20
0015d8 6e65
0015d9 7467
0015da 2068      	.DB  0x20,0x6C,0x65,0x6E,0x67,0x74,0x68,0x20
0015db 2528
0015dc 2964
0015dd 0a0d
0015de 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
0015df 5445
0015e0 5f48
0015e1 7270
0015e2 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
0015e3 7365
0015e4 5073
0015e5 6361
0015e6 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
0015e7 3e74
0015e8 6e20
0015e9 7465
0015ea 6f77      	.DB  0x74,0x3E,0x20,0x6E,0x65,0x74,0x77,0x6F
0015eb 6b72
0015ec 614d
0015ed 6e69
0015ee 6574      	.DB  0x72,0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65
0015ef 616e
0015f0 636e
0015f1 5065
0015f2 7261      	.DB  0x6E,0x61,0x6E,0x63,0x65,0x50,0x61,0x72
0015f3 6573
0015f4 2872
0015f5 2029
0015f6 6166      	.DB  0x73,0x65,0x72,0x28,0x29,0x20,0x66,0x61
0015f7 6c69
0015f8 6465
0015f9 0a0d
0015fa 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
0015fb 2d0a
0015fc 6e2d
0015fd 7465
0015fe 6f77      	.DB  0xA,0x2D,0x2D,0x6E,0x65,0x74,0x77,0x6F
0015ff 6b72
001600 614d
001601 6e69
001602 6574      	.DB  0x72,0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65
001603 616e
001604 636e
001605 5065
001606 7261      	.DB  0x6E,0x61,0x6E,0x63,0x65,0x50,0x61,0x72
001607 6573
001608 2d72
001609 202d
00160a 4d43      	.DB  0x73,0x65,0x72,0x2D,0x2D,0x20,0x43,0x4D
00160b 2044
00160c 305b
00160d 2578
00160e 3230      	.DB  0x44,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
00160f 5d58
001610 0a0d
001611 6300
001612 646d      	.DB  0x58,0x5D,0xD,0xA,0x0,0x63,0x6D,0x64
001613 2020
001614 2020
001615 2020
001616 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001617 2020
001618 2020
001619 5b20
00161a 7830      	.DB  0x20,0x20,0x20,0x20,0x20,0x5B,0x30,0x78
00161b 3025
00161c 5832
00161d 0d5d
00161e 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
00161f 6164
001620 6174
001621 654c
001622 206e      	.DB  0x64,0x61,0x74,0x61,0x4C,0x65,0x6E,0x20
001623 2020
001624 2020
001625 2020
001626 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001627 255b
001628 5d64
001629 0a0d
00162a 6400      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x64
00162b 7461
00162c 2061
00162d 2d2d
00162e 202d      	.DB  0x61,0x74,0x61,0x20,0x2D,0x2D,0x2D,0x20
00162f 2020
001630 2020
001631 2020
001632 0d20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xD
001633 000a
001634 2d2d
001635 2d2d
001636 2d2d      	.DB  0xA,0x0,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
001637 2d2d
001638 0a0d
001639 3c00
00163a 5445      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x3C,0x45,0x54
00163b 5f48
00163c 7270
00163d 636f
00163e 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
00163f 5073
001640 6361
001641 656b
001642 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
001643 7320
001644 7465
001645 6954
001646 656d      	.DB  0x20,0x73,0x65,0x74,0x54,0x69,0x6D,0x65
001647 7953
001648 636e
001649 6353
00164a 6568      	.DB  0x53,0x79,0x6E,0x63,0x53,0x63,0x68,0x65
00164b 616d
00164c 2928
00164d 6620
00164e 6961      	.DB  0x6D,0x61,0x28,0x29,0x20,0x66,0x61,0x69
00164f 656c
001650 0d64
001651 000a
001652 4157      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x57,0x41
001653 4e52
001654 3a20
001655 3c20
001656 5445      	.DB  0x52,0x4E,0x20,0x3A,0x20,0x3C,0x45,0x54
001657 5f48
001658 7270
001659 636f
00165a 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
00165b 5073
00165c 6361
00165d 656b
00165e 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00165f 4e20
001660 5445
001661 5f57
001662 4954      	.DB  0x20,0x4E,0x45,0x54,0x57,0x5F,0x54,0x49
001663 454d
001664 535f
001665 4e59
001666 2043      	.DB  0x4D,0x45,0x5F,0x53,0x59,0x4E,0x43,0x20
001667 203a
001668 5445
001669 5f48
00166a 6573      	.DB  0x3A,0x20,0x45,0x54,0x48,0x5F,0x73,0x65
00166b 646e
00166c 654e
00166d 7774
00166e 726f      	.DB  0x6E,0x64,0x4E,0x65,0x74,0x77,0x6F,0x72
00166f 4d6b
001670 6961
001671 746e
001672 6e65      	.DB  0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
001673 6e61
001674 6563
001675 6341
001676 286b      	.DB  0x61,0x6E,0x63,0x65,0x41,0x63,0x6B,0x28
001677 2029
001678 6166
001679 6c69
00167a 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
00167b 0a0d
00167c 3c00
00167d 5445
00167e 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00167f 7270
001680 636f
001681 7365
001682 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
001683 6361
001684 656b
001685 3e74
001686 7220      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x72
001687 6d65
001688 746f
001689 2065
00168a 6564      	.DB  0x65,0x6D,0x6F,0x74,0x65,0x20,0x64,0x65
00168b 6976
00168c 6563
00168d 6320
00168e 6e6f      	.DB  0x76,0x69,0x63,0x65,0x20,0x63,0x6F,0x6E
00168f 7274
001690 6c6f
001691 6920
001692 766e      	.DB  0x74,0x72,0x6F,0x6C,0x20,0x69,0x6E,0x76
001693 6c61
001694 6469
001695 6c20
001696 6e65      	.DB  0x61,0x6C,0x69,0x64,0x20,0x6C,0x65,0x6E
001697 7467
001698 2068
001699 2528
00169a 2964      	.DB  0x67,0x74,0x68,0x20,0x28,0x25,0x64,0x29
00169b 0a0d
00169c 3c00
00169d 5445
00169e 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00169f 7270
0016a0 636f
0016a1 7365
0016a2 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0016a3 6361
0016a4 656b
0016a5 3e74
0016a6 7220      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x72
0016a7 6d65
0016a8 746f
0016a9 4465
0016aa 7665      	.DB  0x65,0x6D,0x6F,0x74,0x65,0x44,0x65,0x76
0016ab 6369
0016ac 4365
0016ad 6e6f
0016ae 7274      	.DB  0x69,0x63,0x65,0x43,0x6F,0x6E,0x74,0x72
0016af 6c6f
0016b0 6150
0016b1 7372
0016b2 7265      	.DB  0x6F,0x6C,0x50,0x61,0x72,0x73,0x65,0x72
0016b3 2928
0016b4 6620
0016b5 6961
0016b6 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0016b7 0d64
0016b8 000a
0016b9 0a0d
0016ba 2d2d      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
0016bb 6572
0016bc 6f6d
0016bd 6574
0016be 6544      	.DB  0x72,0x65,0x6D,0x6F,0x74,0x65,0x44,0x65
0016bf 6976
0016c0 6563
0016c1 6f43
0016c2 746e      	.DB  0x76,0x69,0x63,0x65,0x43,0x6F,0x6E,0x74
0016c3 6f72
0016c4 506c
0016c5 7261
0016c6 6573      	.DB  0x72,0x6F,0x6C,0x50,0x61,0x72,0x73,0x65
0016c7 2d72
0016c8 202d
0016c9 4d43
0016ca 2044      	.DB  0x72,0x2D,0x2D,0x20,0x43,0x4D,0x44,0x20
0016cb 305b
0016cc 2578
0016cd 3230
0016ce 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0016cf 0a0d
0016d0 7600
0016d1 6c61
0016d2 6575      	.DB  0xD,0xA,0x0,0x76,0x61,0x6C,0x75,0x65
0016d3 2020
0016d4 2020
0016d5 2020
0016d6 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0016d7 2020
0016d8 5b20
0016d9 6c25
0016da 5d64      	.DB  0x20,0x20,0x20,0x5B,0x25,0x6C,0x64,0x5D
0016db 0a0d
0016dc 3c00
0016dd 5445
0016de 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0016df 7270
0016e0 636f
0016e1 7365
0016e2 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0016e3 6361
0016e4 656b
0016e5 3e74
0016e6 7320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x73
0016e7 7465
0016e8 6954
0016e9 656d
0016ea 7953      	.DB  0x65,0x74,0x54,0x69,0x6D,0x65,0x53,0x79
0016eb 636e
0016ec 6353
0016ed 6568
0016ee 616d      	.DB  0x6E,0x63,0x53,0x63,0x68,0x65,0x6D,0x61
0016ef 2528
0016f0 646c
0016f1 2029
0016f2 6166      	.DB  0x28,0x25,0x6C,0x64,0x29,0x20,0x66,0x61
0016f3 6c69
0016f4 6465
0016f5 0a0d
0016f6 5700      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x57
0016f7 5241
0016f8 204e
0016f9 203a
0016fa 453c      	.DB  0x41,0x52,0x4E,0x20,0x3A,0x20,0x3C,0x45
0016fb 4854
0016fc 705f
0016fd 6f72
0016fe 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0016ff 7373
001700 6150
001701 6b63
001702 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001703 203e
001704 4544
001705 4356
001706 5254      	.DB  0x3E,0x20,0x44,0x45,0x56,0x43,0x54,0x52
001707 5f4c
001708 554d
001709 4554
00170a 415f      	.DB  0x4C,0x5F,0x4D,0x55,0x54,0x45,0x5F,0x41
00170b 414c
00170c 4d52
00170d 3a20
00170e 4520      	.DB  0x4C,0x41,0x52,0x4D,0x20,0x3A,0x20,0x45
00170f 4854
001710 725f
001711 6d65
001712 746f      	.DB  0x54,0x48,0x5F,0x72,0x65,0x6D,0x6F,0x74
001713 4465
001714 7665
001715 6369
001716 4365      	.DB  0x65,0x44,0x65,0x76,0x69,0x63,0x65,0x43
001717 6e6f
001718 7274
001719 6c6f
00171a 6341      	.DB  0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x41,0x63
00171b 286b
00171c 2029
00171d 6166
00171e 6c69      	.DB  0x6B,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00171f 6465
001720 0a0d
001721 3c00
001722 5445      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x45,0x54
001723 5f48
001724 7270
001725 636f
001726 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001727 5073
001728 6361
001729 656b
00172a 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00172b 6320
00172c 656c
00172d 7261
00172e 6c20      	.DB  0x20,0x63,0x6C,0x65,0x61,0x72,0x20,0x6C
00172f 7369
001730 2074
001731 4341
001732 204b      	.DB  0x69,0x73,0x74,0x20,0x41,0x43,0x4B,0x20
001733 6e69
001734 6176
001735 696c
001736 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
001737 656c
001738 676e
001739 6874
00173a 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
00173b 6425
00173c 0d29
00173d 000a
00173e 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
00173f 4854
001740 705f
001741 6f72
001742 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001743 7373
001744 6150
001745 6b63
001746 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001747 203e
001748 6c63
001749 6165
00174a 4c72      	.DB  0x3E,0x20,0x63,0x6C,0x65,0x61,0x72,0x4C
00174b 7369
00174c 5074
00174d 7261
00174e 6573      	.DB  0x69,0x73,0x74,0x50,0x61,0x72,0x73,0x65
00174f 2872
001750 2029
001751 6166
001752 6c69      	.DB  0x72,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001753 6465
001754 0a0d
001755 0d00
001756 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
001757 632d
001758 656c
001759 7261
00175a 694c      	.DB  0x2D,0x63,0x6C,0x65,0x61,0x72,0x4C,0x69
00175b 7473
00175c 6150
00175d 7372
00175e 7265      	.DB  0x73,0x74,0x50,0x61,0x72,0x73,0x65,0x72
00175f 2d2d
001760 4120
001761 4b43
001762 5b20      	.DB  0x2D,0x2D,0x20,0x41,0x43,0x4B,0x20,0x5B
001763 7830
001764 3025
001765 5832
001766 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
001767 000a
001768 7473
001769 7461
00176a 7375      	.DB  0xA,0x0,0x73,0x74,0x61,0x74,0x75,0x73
00176b 2020
00176c 2020
00176d 2020
00176e 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00176f 2020
001770 305b
001771 2578
001772 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001773 5d58
001774 0a0d
001775 3c00
001776 5445      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x45,0x54
001777 5f48
001778 7270
001779 636f
00177a 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
00177b 5073
00177c 6361
00177d 656b
00177e 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00177f 6320
001780 656c
001781 7261
001782 6420      	.DB  0x20,0x63,0x6C,0x65,0x61,0x72,0x20,0x64
001783 7075
001784 696c
001785 6163
001786 6574      	.DB  0x75,0x70,0x6C,0x69,0x63,0x61,0x74,0x65
001787 7220
001788 7165
001789 6575
00178a 7473      	.DB  0x20,0x72,0x65,0x71,0x75,0x65,0x73,0x74
00178b 2820
00178c 4341
00178d 294b
00178e 5320      	.DB  0x20,0x28,0x41,0x43,0x4B,0x29,0x20,0x53
00178f 4355
001790 4543
001791 5353
001792 2121      	.DB  0x55,0x43,0x43,0x45,0x53,0x53,0x21,0x21
001793 0a0d
001794 3c00
001795 5445
001796 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001797 7270
001798 636f
001799 7365
00179a 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
00179b 6361
00179c 656b
00179d 3e74
00179e 6320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x63
00179f 656c
0017a0 7261
0017a1 6420
0017a2 7075      	.DB  0x6C,0x65,0x61,0x72,0x20,0x64,0x75,0x70
0017a3 696c
0017a4 6163
0017a5 6574
0017a6 7220      	.DB  0x6C,0x69,0x63,0x61,0x74,0x65,0x20,0x72
0017a7 7165
0017a8 6575
0017a9 7473
0017aa 2820      	.DB  0x65,0x71,0x75,0x65,0x73,0x74,0x20,0x28
0017ab 4341
0017ac 294b
0017ad 4620
0017ae 4941      	.DB  0x41,0x43,0x4B,0x29,0x20,0x46,0x41,0x49
0017af 454c
0017b0 5b44
0017b1 7830
0017b2 3025      	.DB  0x4C,0x45,0x44,0x5B,0x30,0x78,0x25,0x30
0017b3 5832
0017b4 215d
0017b5 0d21
0017b6 000a      	.DB  0x32,0x58,0x5D,0x21,0x21,0xD,0xA,0x0
0017b7 453c
0017b8 4854
0017b9 705f
0017ba 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
0017bb 6563
0017bc 7373
0017bd 6150
0017be 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
0017bf 7465
0017c0 203e
0017c1 6e75
0017c2 6e6b      	.DB  0x65,0x74,0x3E,0x20,0x75,0x6E,0x6B,0x6E
0017c3 776f
0017c4 206e
0017c5 7974
0017c6 6570      	.DB  0x6F,0x77,0x6E,0x20,0x74,0x79,0x70,0x65
0017c7 6620
0017c8 726f
0017c9 6320
0017ca 726c      	.DB  0x20,0x66,0x6F,0x72,0x20,0x63,0x6C,0x72
0017cb 6c5f
0017cc 7473
0017cd 735f
0017ce 2d74      	.DB  0x5F,0x6C,0x73,0x74,0x5F,0x73,0x74,0x2D
0017cf 633e
0017d0 646d
0017d1 5b20
0017d2 7830      	.DB  0x3E,0x63,0x6D,0x64,0x20,0x5B,0x30,0x78
0017d3 3025
0017d4 5832
0017d5 0d5d
0017d6 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
0017d7 453c
0017d8 4854
0017d9 705f
0017da 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
0017db 6563
0017dc 7373
0017dd 6150
0017de 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
0017df 7465
0017e0 203e
0017e1 6966
0017e2 6d72      	.DB  0x65,0x74,0x3E,0x20,0x66,0x69,0x72,0x6D
0017e3 6177
0017e4 6572
0017e5 7520
0017e6 6c70      	.DB  0x77,0x61,0x72,0x65,0x20,0x75,0x70,0x6C
0017e7 616f
0017e8 2064
0017e9 6168
0017ea 6e73      	.DB  0x6F,0x61,0x64,0x20,0x68,0x61,0x73,0x6E
0017eb 7427
0017ec 7320
0017ed 7075
0017ee 6f70      	.DB  0x27,0x74,0x20,0x73,0x75,0x70,0x70,0x6F
0017ef 7472
0017f0 6465
0017f1 7920
0017f2 7465      	.DB  0x72,0x74,0x65,0x64,0x20,0x79,0x65,0x74
0017f3 0a0d
0017f4 0d00
0017f5 3c0a
0017f6 5445      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x45,0x54
0017f7 5f48
0017f8 7270
0017f9 636f
0017fa 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
0017fb 5073
0017fc 6361
0017fd 656b
0017fe 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
0017ff 6920
001800 766e
001801 6c61
001802 6469      	.DB  0x20,0x69,0x6E,0x76,0x61,0x6C,0x69,0x64
001803 6620
001804 6172
001805 656d
001806 7420      	.DB  0x20,0x66,0x72,0x61,0x6D,0x65,0x20,0x74
001807 7079
001808 2065
001809 2028
00180a 3025      	.DB  0x79,0x70,0x65,0x20,0x28,0x20,0x25,0x30
00180b 5832
00180c 2920
00180d 2121
00180e 0a0d      	.DB  0x32,0x58,0x20,0x29,0x21,0x21,0xD,0xA
00180f 3c00
001810 5445
001811 5f48
001812 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
001813 6563
001814 7669
001815 3e65
001816 6d20      	.DB  0x63,0x65,0x69,0x76,0x65,0x3E,0x20,0x6D
001817 6c61
001818 6f6c
001819 2e63
00181a 462e      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x2E,0x2E,0x46
00181b 4941
00181c 454c
00181d 2e44
00181e 0d2e      	.DB  0x41,0x49,0x4C,0x45,0x44,0x2E,0x2E,0xD
00181f 000a
001820 0a0d
001821 0a0d
001822 2b2b      	.DB  0xA,0x0,0xD,0xA,0xD,0xA,0x2B,0x2B
001823 2b2b
001824 2b2b
001825 202b
001826 6152      	.DB  0x2B,0x2B,0x2B,0x2B,0x2B,0x20,0x52,0x61
001827 2077
001828 7562
001829 6666
00182a 7265      	.DB  0x77,0x20,0x62,0x75,0x66,0x66,0x65,0x72
00182b 2b20
00182c 2b2b
00182d 2b2b
00182e 2b2b      	.DB  0x20,0x2B,0x2B,0x2B,0x2B,0x2B,0x2B,0x2B
00182f 0a0d
001830 7e00
001831 0d00
001832 690a      	.DB  0xD,0xA,0x0,0x7E,0x0,0xD,0xA,0x69
001833 766e
001834 6c61
001835 6469
001836 6c20      	.DB  0x6E,0x76,0x61,0x6C,0x69,0x64,0x20,0x6C
001837 6e65
001838 7467
001839 2168
00183a 0d21      	.DB  0x65,0x6E,0x67,0x74,0x68,0x21,0x21,0xD
00183b 000a
00183c 453c
00183d 4854
00183e 725f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x72
00183f 6365
001840 6965
001841 6576
001842 203e      	.DB  0x65,0x63,0x65,0x69,0x76,0x65,0x3E,0x20
001843 6863
001844 6365
001845 736b
001846 6d75      	.DB  0x63,0x68,0x65,0x63,0x6B,0x73,0x75,0x6D
001847 6520
001848 7272
001849 726f
00184a 0a0d      	.DB  0x20,0x65,0x72,0x72,0x6F,0x72,0xD,0xA
00184b 3c00
00184c 5445
00184d 5f48
00184e 6573      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x73,0x65
00184f 646e
001850 203e
001851 4157
001852 4e52      	.DB  0x6E,0x64,0x3E,0x20,0x57,0x41,0x52,0x4E
001853 4e49
001854 2047
001855 203a
001856 6150      	.DB  0x49,0x4E,0x47,0x20,0x3A,0x20,0x50,0x61
001857 6b63
001858 7465
001859 6920
00185a 2073      	.DB  0x63,0x6B,0x65,0x74,0x20,0x69,0x73,0x20
00185b 6f74
00185c 206f
00185d 6f6c
00185e 676e      	.DB  0x74,0x6F,0x6F,0x20,0x6C,0x6F,0x6E,0x67
00185f 2528
001860 2064
001861 7962
001862 6574      	.DB  0x28,0x25,0x64,0x20,0x62,0x79,0x74,0x65
001863 2973
001864 0a0d
001865 3c00
001866 5445      	.DB  0x73,0x29,0xD,0xA,0x0,0x3C,0x45,0x54
001867 5f48
001868 6573
001869 646e
00186a 203e      	.DB  0x48,0x5F,0x73,0x65,0x6E,0x64,0x3E,0x20
00186b 4157
00186c 4e52
00186d 4e49
00186e 2047      	.DB  0x57,0x41,0x52,0x4E,0x49,0x4E,0x47,0x20
00186f 203a
001870 5445
001871 5f48
001872 6573      	.DB  0x3A,0x20,0x45,0x54,0x48,0x5F,0x73,0x65
001873 646e
001874 6d20
001875 6c61
001876 6f6c      	.DB  0x6E,0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F
001877 2063
001878 6166
001879 6c69
00187a 6465      	.DB  0x63,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
00187b 2820
00187c 6425
00187d 0d29
00187e 000a      	.DB  0x20,0x28,0x25,0x64,0x29,0xD,0xA,0x0
00187f 453c
001880 4854
001881 735f
001882 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
001883 3e64
001884 4520
001885 4854
001886 615f      	.DB  0x64,0x3E,0x20,0x45,0x54,0x48,0x5F,0x61
001887 6464
001888 6157
001889 7469
00188a 7551      	.DB  0x64,0x64,0x57,0x61,0x69,0x74,0x51,0x75
00188b 7565
00188c 2865
00188d 2029
00188e 6166      	.DB  0x65,0x75,0x65,0x28,0x29,0x20,0x66,0x61
00188f 6c69
001890 6465
001891 5b20
001892 6469      	.DB  0x69,0x6C,0x65,0x64,0x20,0x5B,0x69,0x64
001893 303a
001894 2578
001895 3230
001896 5d58      	.DB  0x3A,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
001897 0a0d
001898 0d00
001899 2d0a
00189a 542d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x54
00189b 6172
00189c 736e
00189d 696d
00189e 7474      	.DB  0x72,0x61,0x6E,0x73,0x6D,0x69,0x74,0x74
00189f 6e69
0018a0 2067
0018a1 305b
0018a2 2578      	.DB  0x69,0x6E,0x67,0x20,0x5B,0x30,0x78,0x25
0018a3 3230
0018a4 5d58
0018a5 0a0d
0018a6 3c00      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x3C
0018a7 5445
0018a8 5f48
0018a9 7773
0018aa 7469      	.DB  0x45,0x54,0x48,0x5F,0x73,0x77,0x69,0x74
0018ab 6863
0018ac 6f4d
0018ad 6564
0018ae 203e      	.DB  0x63,0x68,0x4D,0x6F,0x64,0x65,0x3E,0x20
0018af 7773
0018b0 7469
0018b1 6863
0018b2 7420      	.DB  0x73,0x77,0x69,0x74,0x63,0x68,0x20,0x74
0018b3 206f
0018b4 6f43
0018b5 666e
0018b6 6769      	.DB  0x6F,0x20,0x43,0x6F,0x6E,0x66,0x69,0x67
0018b7 6d20
0018b8 646f
0018b9 0d65
0018ba 000a      	.DB  0x20,0x6D,0x6F,0x64,0x65,0xD,0xA,0x0
0018bb 453c
0018bc 4854
0018bd 735f
0018be 6977      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x77,0x69
0018bf 6374
0018c0 4d68
0018c1 646f
0018c2 3e65      	.DB  0x74,0x63,0x68,0x4D,0x6F,0x64,0x65,0x3E
0018c3 7320
0018c4 6977
0018c5 6374
0018c6 2068      	.DB  0x20,0x73,0x77,0x69,0x74,0x63,0x68,0x20
0018c7 6f74
0018c8 4e20
0018c9 726f
0018ca 616d      	.DB  0x74,0x6F,0x20,0x4E,0x6F,0x72,0x6D,0x61
0018cb 206c
0018cc 6f6d
0018cd 6564
0018ce 0a0d      	.DB  0x6C,0x20,0x6D,0x6F,0x64,0x65,0xD,0xA
0018cf 3c00
0018d0 5445
0018d1 5f48
0018d2 6567      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x67,0x65
0018d3 4374
0018d4 6e6f
0018d5 6966
0018d6 3e67      	.DB  0x74,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
0018d7 5720
0018d8 6972
0018d9 6574
0018da 7420      	.DB  0x20,0x57,0x72,0x69,0x74,0x65,0x20,0x74
0018db 206f
0018dc 6175
0018dd 7472
0018de 3020      	.DB  0x6F,0x20,0x75,0x61,0x72,0x74,0x20,0x30
0018df 3a20
0018e0 3c00
0018e1 5445
0018e2 5f48      	.DB  0x20,0x3A,0x0,0x3C,0x45,0x54,0x48,0x5F
0018e3 6573
0018e4 4374
0018e5 6e6f
0018e6 6966      	.DB  0x73,0x65,0x74,0x43,0x6F,0x6E,0x66,0x69
0018e7 3e67
0018e8 6d20
0018e9 6c61
0018ea 6f6c      	.DB  0x67,0x3E,0x20,0x6D,0x61,0x6C,0x6C,0x6F
0018eb 2863
0018ec 4f43
0018ed 464e
0018ee 525f      	.DB  0x63,0x28,0x43,0x4F,0x4E,0x46,0x5F,0x52
0018ef 4145
0018f0 5f44
0018f1 5542
0018f2 4646      	.DB  0x45,0x41,0x44,0x5F,0x42,0x55,0x46,0x46
0018f3 5245
0018f4 2029
0018f5 6166
0018f6 6c69      	.DB  0x45,0x52,0x29,0x20,0x66,0x61,0x69,0x6C
0018f7 6465
0018f8 0a0d
0018f9 3c00
0018fa 5445      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x45,0x54
0018fb 5f48
0018fc 6573
0018fd 4374
0018fe 6e6f      	.DB  0x48,0x5F,0x73,0x65,0x74,0x43,0x6F,0x6E
0018ff 6966
001900 3e67
001901 5720
001902 6972      	.DB  0x66,0x69,0x67,0x3E,0x20,0x57,0x72,0x69
001903 6574
001904 7420
001905 206f
001906 6175      	.DB  0x74,0x65,0x20,0x74,0x6F,0x20,0x75,0x61
001907 7472
001908 3020
001909 3a20
00190a 3c00      	.DB  0x72,0x74,0x20,0x30,0x20,0x3A,0x0,0x3C
00190b 5445
00190c 5f48
00190d 6573
00190e 4374      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x74,0x43
00190f 6e6f
001910 6966
001911 3e67
001912 7220      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x72
001913 6165
001914 2064
001915 6f63
001916 666e      	.DB  0x65,0x61,0x64,0x20,0x63,0x6F,0x6E,0x66
001917 6769
001918 6620
001919 6f72
00191a 206d      	.DB  0x69,0x67,0x20,0x66,0x72,0x6F,0x6D,0x20
00191b 5445
00191c 2048
00191d 6f6d
00191e 7564      	.DB  0x45,0x54,0x48,0x20,0x6D,0x6F,0x64,0x75
00191f 656c
001920 6620
001921 6961
001922 656c      	.DB  0x6C,0x65,0x20,0x66,0x61,0x69,0x6C,0x65
001923 0d64
001924 000a
001925 3025
001926 5832      	.DB  0x64,0xD,0xA,0x0,0x25,0x30,0x32,0x58
001927 3025
001928 5832
001929 3025
00192a 5832      	.DB  0x25,0x30,0x32,0x58,0x25,0x30,0x32,0x58
00192b 3025
00192c 5832
00192d 3025
00192e 5832      	.DB  0x25,0x30,0x32,0x58,0x25,0x30,0x32,0x58
00192f 3025
001930 5832
001931 3025
001932 5832      	.DB  0x25,0x30,0x32,0x58,0x25,0x30,0x32,0x58
001933 3025
001934 5832
001935 3025
001936 5832      	.DB  0x25,0x30,0x32,0x58,0x25,0x30,0x32,0x58
001937 3025
001938 5832
001939 3025
00193a 5832      	.DB  0x25,0x30,0x32,0x58,0x25,0x30,0x32,0x58
00193b 3025
00193c 5832
00193d 3c00
00193e 5445      	.DB  0x25,0x30,0x32,0x58,0x0,0x3C,0x45,0x54
00193f 5f48
001940 6573
001941 4374
001942 6e6f      	.DB  0x48,0x5F,0x73,0x65,0x74,0x43,0x6F,0x6E
001943 6966
001944 3e67
001945 5320
001946 7465      	.DB  0x66,0x69,0x67,0x3E,0x20,0x53,0x65,0x74
001947 5320
001948 7274
001949 6e69
00194a 2067      	.DB  0x20,0x53,0x74,0x72,0x69,0x6E,0x67,0x20
00194b 255b
00194c 5d73
00194d 0a0d
00194e 3c00      	.DB  0x5B,0x25,0x73,0x5D,0xD,0xA,0x0,0x3C
00194f 5445
001950 5f48
001951 6573
001952 4374      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x74,0x43
001953 6e6f
001954 6966
001955 3e67
001956 5320      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x53
001957 7465
001958 6974
001959 676e
00195a 6d20      	.DB  0x65,0x74,0x74,0x69,0x6E,0x67,0x20,0x6D
00195b 6773
00195c 2d20
00195d 2d2d
00195e 0a0d      	.DB  0x73,0x67,0x20,0x2D,0x2D,0x2D,0xD,0xA
00195f 0d00
001960 2d0a
001961 2d2d
001962 0a0d      	.DB  0x0,0xD,0xA,0x2D,0x2D,0x2D,0xD,0xA
001963 3c00
001964 5445
001965 5f48
001966 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
001967 6573
001968 3e74
001969 5220
00196a 7365      	.DB  0x73,0x65,0x74,0x3E,0x20,0x52,0x65,0x73
00196b 7465
00196c 6974
00196d 676e
00196e 4520      	.DB  0x65,0x74,0x74,0x69,0x6E,0x67,0x20,0x45
00196f 6874
001970 7265
001971 656e
001972 2074      	.DB  0x74,0x68,0x65,0x72,0x6E,0x65,0x74,0x20
001973 6f4d
001974 7564
001975 656c
001976 202c      	.DB  0x4D,0x6F,0x64,0x75,0x6C,0x65,0x2C,0x20
001977 6c70
001978 6165
001979 6573
00197a 7720      	.DB  0x70,0x6C,0x65,0x61,0x73,0x65,0x20,0x77
00197b 6961
00197c 2e74
00197d 2e00
00197e 2e2e      	.DB  0x61,0x69,0x74,0x2E,0x0,0x2E,0x2E,0x2E
00197f 6f44
001980 656e
001981 0a0d
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(2842): warning: .cseg .db misalignment - padding zero byte
001982 0000      	.DB  0x44,0x6F,0x6E,0x65,0xD,0xA,0x0
                 _0x140000:
001983 733c
001984 6174
001985 7574
001986 5273      	.DB  0x3C,0x73,0x74,0x61,0x74,0x75,0x73,0x52
001987 7165
001988 6575
001989 7473
00198a 6150      	.DB  0x65,0x71,0x75,0x65,0x73,0x74,0x50,0x61
00198b 7372
00198c 7265
00198d 203e
00198e 616d      	.DB  0x72,0x73,0x65,0x72,0x3E,0x20,0x6D,0x61
00198f 6c6c
001990 636f
001991 6620
001992 6961      	.DB  0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61,0x69
001993 656c
001994 0d64
001995 000a
001996 633c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x63
001997 6e6f
001998 6966
001999 4d67
00199a 6e61      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E
00199b 6761
00199c 5065
00199d 7261
00199e 6573      	.DB  0x61,0x67,0x65,0x50,0x61,0x72,0x73,0x65
00199f 3e72
0019a0 0a0d
0019a1 3c00
0019a2 6f63      	.DB  0x72,0x3E,0xD,0xA,0x0,0x3C,0x63,0x6F
0019a3 666e
0019a4 6769
0019a5 614d
0019a6 616e      	.DB  0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E,0x61
0019a7 6567
0019a8 6150
0019a9 7372
0019aa 7265      	.DB  0x67,0x65,0x50,0x61,0x72,0x73,0x65,0x72
0019ab 203e
0019ac 4552
0019ad 4441
0019ae 4e49      	.DB  0x3E,0x20,0x52,0x45,0x41,0x44,0x49,0x4E
0019af 0d47
0019b0 000a
0019b1 633c
0019b2 6e6f      	.DB  0x47,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
0019b3 6966
0019b4 4d67
0019b5 6e61
0019b6 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
0019b7 5065
0019b8 7261
0019b9 6573
0019ba 3e72      	.DB  0x65,0x50,0x61,0x72,0x73,0x65,0x72,0x3E
0019bb 5720
0019bc 4952
0019bd 4954
0019be 474e      	.DB  0x20,0x57,0x52,0x49,0x54,0x49,0x4E,0x47
0019bf 0a0d
0019c0 3c00
0019c1 6f63
0019c2 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
0019c3 6769
0019c4 614d
0019c5 616e
0019c6 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
0019c7 6150
0019c8 7372
0019c9 7265
0019ca 203e      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x3E,0x20
0019cb 6f63
0019cc 666e
0019cd 654c
0019ce 206e      	.DB  0x63,0x6F,0x6E,0x66,0x4C,0x65,0x6E,0x20
0019cf 203d
0019d0 6425
0019d1 0a0d
0019d2 3c00      	.DB  0x3D,0x20,0x25,0x64,0xD,0xA,0x0,0x3C
0019d3 6f63
0019d4 666e
0019d5 6769
0019d6 614d      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x4D,0x61
0019d7 616e
0019d8 6567
0019d9 6150
0019da 7372      	.DB  0x6E,0x61,0x67,0x65,0x50,0x61,0x72,0x73
0019db 7265
0019dc 203e
0019dd 616d
0019de 6c6c      	.DB  0x65,0x72,0x3E,0x20,0x6D,0x61,0x6C,0x6C
0019df 636f
0019e0 6620
0019e1 6961
0019e2 656c      	.DB  0x6F,0x63,0x20,0x66,0x61,0x69,0x6C,0x65
0019e3 0d64
0019e4 000a
0019e5 6e3c
0019e6 7465      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6E,0x65,0x74
0019e7 6f77
0019e8 6b72
0019e9 614d
0019ea 6e69      	.DB  0x77,0x6F,0x72,0x6B,0x4D,0x61,0x69,0x6E
0019eb 6574
0019ec 616e
0019ed 636e
0019ee 5065      	.DB  0x74,0x65,0x6E,0x61,0x6E,0x63,0x65,0x50
0019ef 7261
0019f0 6573
0019f1 3e72
0019f2 6d20      	.DB  0x61,0x72,0x73,0x65,0x72,0x3E,0x20,0x6D
0019f3 6c61
0019f4 6f6c
0019f5 2063
0019f6 6166      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61
0019f7 6c69
0019f8 6465
0019f9 2820
0019fa 6425      	.DB  0x69,0x6C,0x65,0x64,0x20,0x28,0x25,0x64
0019fb 0d29
0019fc 000a      	.DB  0x29,0xD,0xA,0x0
                 _0x160000:
0019fd 673c
0019fe 7465
0019ff 6f43
001a00 666e      	.DB  0x3C,0x67,0x65,0x74,0x43,0x6F,0x6E,0x66
001a01 6769
001a02 654c
001a03 3e6e
001a04 7520      	.DB  0x69,0x67,0x4C,0x65,0x6E,0x3E,0x20,0x75
001a05 6b6e
001a06 6f6e
001a07 6e77
001a08 6320      	.DB  0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x63
001a09 6e6f
001a0a 6966
001a0b 7567
001a0c 6172      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x75,0x72,0x61
001a0d 6974
001a0e 6e6f
001a0f 7420
001a10 7079      	.DB  0x74,0x69,0x6F,0x6E,0x20,0x74,0x79,0x70
001a11 2065
001a12 305b
001a13 2578
001a14 3230      	.DB  0x65,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001a15 5d58
001a16 0a0d
001a17 3c00
001a18 6f63      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001a19 666e
001a1a 6769
001a1b 6552
001a1c 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001a1d 203e
001a1e 4f43
001a1f 464e
001a20 505f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x50
001a21 4f52
001a22 4550
001a23 5452
001a24 4549      	.DB  0x52,0x4F,0x50,0x45,0x52,0x54,0x49,0x45
001a25 2053
001a26 616d
001a27 6c6c
001a28 636f      	.DB  0x53,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
001a29 2031
001a2a 6166
001a2b 6c69
001a2c 6465      	.DB  0x31,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001a2d 2820
001a2e 6425
001a2f 6220
001a30 7479      	.DB  0x20,0x28,0x25,0x64,0x20,0x62,0x79,0x74
001a31 7365
001a32 0d29
001a33 000a
001a34 633c      	.DB  0x65,0x73,0x29,0xD,0xA,0x0,0x3C,0x63
001a35 6e6f
001a36 6966
001a37 5267
001a38 6165      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x52,0x65,0x61
001a39 3e64
001a3a 6720
001a3b 7465
001a3c 7250      	.DB  0x64,0x3E,0x20,0x67,0x65,0x74,0x50,0x72
001a3d 706f
001a3e 7265
001a3f 6974
001a40 7365      	.DB  0x6F,0x70,0x65,0x72,0x74,0x69,0x65,0x73
001a41 6f43
001a42 666e
001a43 6769
001a44 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001a45 6620
001a46 6961
001a47 656c
001a48 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001a49 000a
001a4a 0a0d
001a4b 2d2d
001a4c 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001a4d 4552
001a4e 4441
001a4f 4320
001a50 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001a51 5f46
001a52 5250
001a53 504f
001a54 5245      	.DB  0x46,0x5F,0x50,0x52,0x4F,0x50,0x45,0x52
001a55 4954
001a56 5345
001a57 2d20
001a58 2d2d      	.DB  0x54,0x49,0x45,0x53,0x20,0x2D,0x2D,0x2D
001a59 0a0d
001a5a 2500
001a5b 0d73
001a5c 000a      	.DB  0xD,0xA,0x0,0x25,0x73,0xD,0xA,0x0
001a5d 6425
001a5e 0a0d
001a5f 3c00
001a60 6f63      	.DB  0x25,0x64,0xD,0xA,0x0,0x3C,0x63,0x6F
001a61 666e
001a62 6769
001a63 6552
001a64 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001a65 203e
001a66 4f43
001a67 464e
001a68 4f5f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x4F
001a69 4550
001a6a 4152
001a6b 4554
001a6c 6d20      	.DB  0x50,0x45,0x52,0x41,0x54,0x45,0x20,0x6D
001a6d 6c61
001a6e 6f6c
001a6f 3163
001a70 6620      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20,0x66
001a71 6961
001a72 656c
001a73 2064
001a74 2528      	.DB  0x61,0x69,0x6C,0x65,0x64,0x20,0x28,0x25
001a75 2064
001a76 7962
001a77 6574
001a78 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
001a79 0a0d
001a7a 3c00
001a7b 6f63
001a7c 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001a7d 6769
001a7e 6552
001a7f 6461
001a80 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001a81 6567
001a82 4f74
001a83 6570
001a84 6172      	.DB  0x67,0x65,0x74,0x4F,0x70,0x65,0x72,0x61
001a85 6974
001a86 676e
001a87 6f43
001a88 666e      	.DB  0x74,0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66
001a89 6769
001a8a 2928
001a8b 6620
001a8c 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
001a8d 656c
001a8e 0d64
001a8f 000a
001a90 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001a91 2d2d
001a92 202d
001a93 4552
001a94 4441      	.DB  0x2D,0x2D,0x2D,0x20,0x52,0x45,0x41,0x44
001a95 4320
001a96 4e4f
001a97 5f46
001a98 504f      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x4F,0x50
001a99 5245
001a9a 5441
001a9b 2045
001a9c 2d2d      	.DB  0x45,0x52,0x41,0x54,0x45,0x20,0x2D,0x2D
001a9d 0d2d
001a9e 000a
001a9f 6f6d
001aa0 6564      	.DB  0x2D,0xD,0xA,0x0,0x6D,0x6F,0x64,0x65
001aa1 2020
001aa2 2020
001aa3 2020
001aa4 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001aa5 2020
001aa6 2020
001aa7 305b
001aa8 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001aa9 3230
001aaa 5d58
001aab 0a0d
001aac 6400      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x64
001aad 7665
001aae 6369
001aaf 4565
001ab0 616e      	.DB  0x65,0x76,0x69,0x63,0x65,0x45,0x6E,0x61
001ab1 6c62
001ab2 2065
001ab3 2020
001ab4 5b20      	.DB  0x62,0x6C,0x65,0x20,0x20,0x20,0x20,0x5B
001ab5 7830
001ab6 3025
001ab7 5832
001ab8 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
001ab9 000a
001aba 6c61
001abb 7261
001abc 456d      	.DB  0xA,0x0,0x61,0x6C,0x61,0x72,0x6D,0x45
001abd 616e
001abe 6c62
001abf 2065
001ac0 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
001ac1 2020
001ac2 305b
001ac3 2578
001ac4 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001ac5 5d58
001ac6 0a0d
001ac7 7300
001ac8 6e65      	.DB  0x58,0x5D,0xD,0xA,0x0,0x73,0x65,0x6E
001ac9 6f73
001aca 4572
001acb 616e
001acc 6c62      	.DB  0x73,0x6F,0x72,0x45,0x6E,0x61,0x62,0x6C
001acd 2065
001ace 2020
001acf 0020
001ad0 305b      	.DB  0x65,0x20,0x20,0x20,0x20,0x0,0x5B,0x30
001ad1 2578
001ad2 3230
001ad3 5d58
001ad4 3c00      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x0,0x3C
001ad5 6f63
001ad6 666e
001ad7 6769
001ad8 6552      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x52,0x65
001ad9 6461
001ada 203e
001adb 4f43
001adc 464e      	.DB  0x61,0x64,0x3E,0x20,0x43,0x4F,0x4E,0x46
001add 535f
001ade 4e45
001adf 4f53
001ae0 2052      	.DB  0x5F,0x53,0x45,0x4E,0x53,0x4F,0x52,0x20
001ae1 616d
001ae2 6c6c
001ae3 636f
001ae4 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001ae5 6166
001ae6 6c69
001ae7 6465
001ae8 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001ae9 6425
001aea 6220
001aeb 7479
001aec 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001aed 0d29
001aee 000a
001aef 633c
001af0 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001af1 6966
001af2 5267
001af3 6165
001af4 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001af5 6720
001af6 7465
001af7 6553
001af8 736e      	.DB  0x20,0x67,0x65,0x74,0x53,0x65,0x6E,0x73
001af9 726f
001afa 6f43
001afb 666e
001afc 6769      	.DB  0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
001afd 2928
001afe 6620
001aff 6961
001b00 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
001b01 0d64
001b02 000a
001b03 0a0d
001b04 2d2d      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
001b05 202d
001b06 4552
001b07 4441
001b08 4320      	.DB  0x2D,0x20,0x52,0x45,0x41,0x44,0x20,0x43
001b09 4e4f
001b0a 5f46
001b0b 4553
001b0c 534e      	.DB  0x4F,0x4E,0x46,0x5F,0x53,0x45,0x4E,0x53
001b0d 524f
001b0e 5b20
001b0f 6425
001b10 2d5d      	.DB  0x4F,0x52,0x20,0x5B,0x25,0x64,0x5D,0x2D
001b11 2d2d
001b12 0a0d
001b13 7300
001b14 6d61      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x73,0x61,0x6D
001b15 6c70
001b16 6e69
001b17 5267
001b18 7461      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x52,0x61,0x74
001b19 2065
001b1a 2020
001b1b 5b20
001b1c 6425      	.DB  0x65,0x20,0x20,0x20,0x20,0x5B,0x25,0x64
001b1d 0d5d
001b1e 000a
001b1f 6572
001b20 634f      	.DB  0x5D,0xD,0xA,0x0,0x72,0x65,0x4F,0x63
001b21 7563
001b22 7272
001b23 6e65
001b24 6563      	.DB  0x63,0x75,0x72,0x72,0x65,0x6E,0x63,0x65
001b25 2020
001b26 2020
001b27 305b
001b28 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001b29 3430
001b2a 5d58
001b2b 0a0d
001b2c 7400      	.DB  0x30,0x34,0x58,0x5D,0xD,0xA,0x0,0x74
001b2d 6d69
001b2e 5365
001b2f 6174
001b30 7472      	.DB  0x69,0x6D,0x65,0x53,0x74,0x61,0x72,0x74
001b31 6f48
001b32 7275
001b33 2020
001b34 5b20      	.DB  0x48,0x6F,0x75,0x72,0x20,0x20,0x20,0x5B
001b35 6425
001b36 0d5d
001b37 000a
001b38 6974      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x74,0x69
001b39 656d
001b3a 7453
001b3b 7261
001b3c 4d74      	.DB  0x6D,0x65,0x53,0x74,0x61,0x72,0x74,0x4D
001b3d 6e69
001b3e 2020
001b3f 2020
001b40 255b      	.DB  0x69,0x6E,0x20,0x20,0x20,0x20,0x5B,0x25
001b41 5d64
001b42 0a0d
001b43 7400
001b44 6d69      	.DB  0x64,0x5D,0xD,0xA,0x0,0x74,0x69,0x6D
001b45 5365
001b46 6f74
001b47 4870
001b48 756f      	.DB  0x65,0x53,0x74,0x6F,0x70,0x48,0x6F,0x75
001b49 2072
001b4a 2020
001b4b 5b20
001b4c 6425      	.DB  0x72,0x20,0x20,0x20,0x20,0x5B,0x25,0x64
001b4d 0d5d
001b4e 000a
001b4f 6974
001b50 656d      	.DB  0x5D,0xD,0xA,0x0,0x74,0x69,0x6D,0x65
001b51 7453
001b52 706f
001b53 694d
001b54 206e      	.DB  0x53,0x74,0x6F,0x70,0x4D,0x69,0x6E,0x20
001b55 2020
001b56 2020
001b57 255b
001b58 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
001b59 0a0d
001b5a 6c00
001b5b 776f
001b5c 7265      	.DB  0xD,0xA,0x0,0x6C,0x6F,0x77,0x65,0x72
001b5d 694c
001b5e 696d
001b5f 2074
001b60 2020      	.DB  0x4C,0x69,0x6D,0x69,0x74,0x20,0x20,0x20
001b61 2020
001b62 5b20
001b63 6625
001b64 0d5d      	.DB  0x20,0x20,0x20,0x5B,0x25,0x66,0x5D,0xD
001b65 000a
001b66 6f6c
001b67 6577
001b68 4472      	.DB  0xA,0x0,0x6C,0x6F,0x77,0x65,0x72,0x44
001b69 6c65
001b6a 7961
001b6b 2020
001b6c 2020      	.DB  0x65,0x6C,0x61,0x79,0x20,0x20,0x20,0x20
001b6d 2020
001b6e 255b
001b6f 5d64
001b70 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001b71 6c00
001b72 776f
001b73 7265
001b74 7845      	.DB  0x0,0x6C,0x6F,0x77,0x65,0x72,0x45,0x78
001b75 7274
001b76 6d65
001b77 2065
001b78 2020      	.DB  0x74,0x72,0x65,0x6D,0x65,0x20,0x20,0x20
001b79 5b20
001b7a 6625
001b7b 0d5d
001b7c 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001b7d 7075
001b7e 6570
001b7f 4c72
001b80 6d69      	.DB  0x75,0x70,0x70,0x65,0x72,0x4C,0x69,0x6D
001b81 7469
001b82 2020
001b83 2020
001b84 2020      	.DB  0x69,0x74,0x20,0x20,0x20,0x20,0x20,0x20
001b85 255b
001b86 5d66
001b87 0a0d
001b88 7500      	.DB  0x5B,0x25,0x66,0x5D,0xD,0xA,0x0,0x75
001b89 7070
001b8a 7265
001b8b 6544
001b8c 616c      	.DB  0x70,0x70,0x65,0x72,0x44,0x65,0x6C,0x61
001b8d 2079
001b8e 2020
001b8f 2020
001b90 5b20      	.DB  0x79,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001b91 6425
001b92 0d5d
001b93 000a
001b94 7075      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x75,0x70
001b95 6570
001b96 4572
001b97 7478
001b98 6572      	.DB  0x70,0x65,0x72,0x45,0x78,0x74,0x72,0x65
001b99 656d
001b9a 2020
001b9b 2020
001b9c 255b      	.DB  0x6D,0x65,0x20,0x20,0x20,0x20,0x5B,0x25
001b9d 5d66
001b9e 0a0d
001b9f 3c00
001ba0 6f63      	.DB  0x66,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001ba1 666e
001ba2 6769
001ba3 6552
001ba4 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001ba5 203e
001ba6 4f43
001ba7 464e
001ba8 415f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
001ba9 5855
001baa 4944
001bab 6d20
001bac 6c61      	.DB  0x55,0x58,0x44,0x49,0x20,0x6D,0x61,0x6C
001bad 6f6c
001bae 3163
001baf 6620
001bb0 6961      	.DB  0x6C,0x6F,0x63,0x31,0x20,0x66,0x61,0x69
001bb1 656c
001bb2 2064
001bb3 2528
001bb4 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
001bb5 7962
001bb6 6574
001bb7 2973
001bb8 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
001bb9 3c00
001bba 6f63
001bbb 666e
001bbc 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001bbd 6552
001bbe 6461
001bbf 203e
001bc0 6567      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x67,0x65
001bc1 4174
001bc2 7875
001bc3 6944
001bc4 436e      	.DB  0x74,0x41,0x75,0x78,0x44,0x69,0x6E,0x43
001bc5 6e6f
001bc6 6966
001bc7 2867
001bc8 2029      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x29,0x20
001bc9 6166
001bca 6c69
001bcb 6465
001bcc 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
001bcd 0d00
001bce 2d0a
001bcf 2d2d
001bd0 5220      	.DB  0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20,0x52
001bd1 4145
001bd2 2044
001bd3 4f43
001bd4 464e      	.DB  0x45,0x41,0x44,0x20,0x43,0x4F,0x4E,0x46
001bd5 415f
001bd6 5855
001bd7 4944
001bd8 5b20      	.DB  0x5F,0x41,0x55,0x58,0x44,0x49,0x20,0x5B
001bd9 6425
001bda 2d5d
001bdb 2d2d
001bdc 0a0d      	.DB  0x25,0x64,0x5D,0x2D,0x2D,0x2D,0xD,0xA
001bdd 6300
001bde 6168
001bdf 6e6e
001be0 6c65      	.DB  0x0,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
001be1 6e45
001be2 6261
001be3 656c
001be4 2020      	.DB  0x45,0x6E,0x61,0x62,0x6C,0x65,0x20,0x20
001be5 2020
001be6 305b
001be7 2578
001be8 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001be9 5d58
001bea 0a0d
001beb 6100
001bec 616c      	.DB  0x58,0x5D,0xD,0xA,0x0,0x61,0x6C,0x61
001bed 6d72
001bee 6544
001bef 616c
001bf0 2079      	.DB  0x72,0x6D,0x44,0x65,0x6C,0x61,0x79,0x20
001bf1 2020
001bf2 2020
001bf3 2020
001bf4 255b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x25
001bf5 5d64
001bf6 0a0d
001bf7 3c00
001bf8 6f63      	.DB  0x64,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001bf9 666e
001bfa 6769
001bfb 6552
001bfc 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001bfd 203e
001bfe 4f43
001bff 464e
001c00 415f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
001c01 5855
001c02 4f44
001c03 6d20
001c04 6c61      	.DB  0x55,0x58,0x44,0x4F,0x20,0x6D,0x61,0x6C
001c05 6f6c
001c06 3163
001c07 6620
001c08 6961      	.DB  0x6C,0x6F,0x63,0x31,0x20,0x66,0x61,0x69
001c09 656c
001c0a 2064
001c0b 2528
001c0c 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
001c0d 7962
001c0e 6574
001c0f 2973
001c10 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
001c11 3c00
001c12 6f63
001c13 666e
001c14 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001c15 6552
001c16 6461
001c17 203e
001c18 6567      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x67,0x65
001c19 4174
001c1a 7875
001c1b 6f44
001c1c 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
001c1d 6f43
001c1e 666e
001c1f 6769
001c20 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001c21 6620
001c22 6961
001c23 656c
001c24 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001c25 000a
001c26 0a0d
001c27 2d2d
001c28 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001c29 4552
001c2a 4441
001c2b 4320
001c2c 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001c2d 5f46
001c2e 5541
001c2f 4458
001c30 204f      	.DB  0x46,0x5F,0x41,0x55,0x58,0x44,0x4F,0x20
001c31 255b
001c32 5d64
001c33 2d2d
001c34 0d2d      	.DB  0x5B,0x25,0x64,0x5D,0x2D,0x2D,0x2D,0xD
001c35 000a
001c36 6863
001c37 6e61
001c38 656e      	.DB  0xA,0x0,0x63,0x68,0x61,0x6E,0x6E,0x65
001c39 456c
001c3a 616e
001c3b 6c62
001c3c 2065      	.DB  0x6C,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
001c3d 2020
001c3e 2020
001c3f 305b
001c40 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001c41 3230
001c42 5d58
001c43 0a0d
001c44 7300      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x73
001c45 6174
001c46 6574
001c47 6e4f
001c48 7645      	.DB  0x74,0x61,0x74,0x65,0x4F,0x6E,0x45,0x76
001c49 6e65
001c4a 2074
001c4b 2020
001c4c 2020      	.DB  0x65,0x6E,0x74,0x20,0x20,0x20,0x20,0x20
001c4d 5b20
001c4e 6425
001c4f 0d5d
001c50 000a      	.DB  0x20,0x5B,0x25,0x64,0x5D,0xD,0xA,0x0
001c51 7665
001c52 6e65
001c53 5374
001c54 756f      	.DB  0x65,0x76,0x65,0x6E,0x74,0x53,0x6F,0x75
001c55 6372
001c56 4e65
001c57 6d75
001c58 6562      	.DB  0x72,0x63,0x65,0x4E,0x75,0x6D,0x62,0x65
001c59 2072
001c5a 255b
001c5b 5d64
001c5c 0a0d      	.DB  0x72,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001c5d 6500
001c5e 6576
001c5f 746e
001c60 6f53      	.DB  0x0,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
001c61 7275
001c62 6563
001c63 2020
001c64 2020      	.DB  0x75,0x72,0x63,0x65,0x20,0x20,0x20,0x20
001c65 2020
001c66 0020
001c67 633c
001c68 6e6f      	.DB  0x20,0x20,0x20,0x0,0x3C,0x63,0x6F,0x6E
001c69 6966
001c6a 5267
001c6b 6165
001c6c 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001c6d 4320
001c6e 4e4f
001c6f 5f46
001c70 5541      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55
001c71 4158
001c72 2049
001c73 616d
001c74 6c6c      	.DB  0x58,0x41,0x49,0x20,0x6D,0x61,0x6C,0x6C
001c75 636f
001c76 2031
001c77 6166
001c78 6c69      	.DB  0x6F,0x63,0x31,0x20,0x66,0x61,0x69,0x6C
001c79 6465
001c7a 2820
001c7b 6425
001c7c 6220      	.DB  0x65,0x64,0x20,0x28,0x25,0x64,0x20,0x62
001c7d 7479
001c7e 7365
001c7f 0d29
001c80 000a      	.DB  0x79,0x74,0x65,0x73,0x29,0xD,0xA,0x0
001c81 633c
001c82 6e6f
001c83 6966
001c84 5267      	.DB  0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67,0x52
001c85 6165
001c86 3e64
001c87 6720
001c88 7465      	.DB  0x65,0x61,0x64,0x3E,0x20,0x67,0x65,0x74
001c89 7541
001c8a 4178
001c8b 6e69
001c8c 6f43      	.DB  0x41,0x75,0x78,0x41,0x69,0x6E,0x43,0x6F
001c8d 666e
001c8e 6769
001c8f 2928
001c90 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
001c91 6961
001c92 656c
001c93 0d64
001c94 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
001c95 0a0d
001c96 2d2d
001c97 202d
001c98 4552      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x52,0x45
001c99 4441
001c9a 4320
001c9b 4e4f
001c9c 5f46      	.DB  0x41,0x44,0x20,0x43,0x4F,0x4E,0x46,0x5F
001c9d 5541
001c9e 4158
001c9f 2049
001ca0 255b      	.DB  0x41,0x55,0x58,0x41,0x49,0x20,0x5B,0x25
001ca1 5d64
001ca2 2d2d
001ca3 0d2d
001ca4 000a      	.DB  0x64,0x5D,0x2D,0x2D,0x2D,0xD,0xA,0x0
001ca5 6c61
001ca6 7261
001ca7 446d
001ca8 6c65      	.DB  0x61,0x6C,0x61,0x72,0x6D,0x44,0x65,0x6C
001ca9 7961
001caa 2020
001cab 2020
001cac 2020      	.DB  0x61,0x79,0x20,0x20,0x20,0x20,0x20,0x20
001cad 5b20
001cae 6625
001caf 0d5d
001cb0 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001cb1 633c
001cb2 6e6f
001cb3 6966
001cb4 5267      	.DB  0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67,0x52
001cb5 6165
001cb6 3e64
001cb7 4320
001cb8 4e4f      	.DB  0x65,0x61,0x64,0x3E,0x20,0x43,0x4F,0x4E
001cb9 5f46
001cba 5541
001cbb 4158
001cbc 204f      	.DB  0x46,0x5F,0x41,0x55,0x58,0x41,0x4F,0x20
001cbd 616d
001cbe 6c6c
001cbf 636f
001cc0 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001cc1 6166
001cc2 6c69
001cc3 6465
001cc4 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001cc5 6425
001cc6 6220
001cc7 7479
001cc8 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001cc9 0d29
001cca 000a
001ccb 633c
001ccc 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001ccd 6966
001cce 5267
001ccf 6165
001cd0 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001cd1 6720
001cd2 7465
001cd3 7541
001cd4 4178      	.DB  0x20,0x67,0x65,0x74,0x41,0x75,0x78,0x41
001cd5 756f
001cd6 4374
001cd7 6e6f
001cd8 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
001cd9 2867
001cda 2029
001cdb 6166
001cdc 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001cdd 6465
001cde 0a0d
001cdf 0d00
001ce0 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
001ce1 2d2d
001ce2 5220
001ce3 4145
001ce4 2044      	.DB  0x2D,0x2D,0x20,0x52,0x45,0x41,0x44,0x20
001ce5 4f43
001ce6 464e
001ce7 415f
001ce8 5855      	.DB  0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55,0x58
001ce9 4f41
001cea 5b20
001ceb 6425
001cec 2d5d      	.DB  0x41,0x4F,0x20,0x5B,0x25,0x64,0x5D,0x2D
001ced 2d2d
001cee 0a0d
001cef 6c00
001cf0 7665      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x6C,0x65,0x76
001cf1 6c65
001cf2 6e4f
001cf3 7645
001cf4 6e65      	.DB  0x65,0x6C,0x4F,0x6E,0x45,0x76,0x65,0x6E
001cf5 2074
001cf6 2020
001cf7 2020
001cf8 5b20      	.DB  0x74,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001cf9 6625
001cfa 0d5d
001cfb 000a
001cfc 633c      	.DB  0x25,0x66,0x5D,0xD,0xA,0x0,0x3C,0x63
001cfd 6e6f
001cfe 6966
001cff 5267
001d00 6165      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x52,0x65,0x61
001d01 3e64
001d02 4320
001d03 4e4f
001d04 5f46      	.DB  0x64,0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F
001d05 5542
001d06 5a5a
001d07 5245
001d08 6d20      	.DB  0x42,0x55,0x5A,0x5A,0x45,0x52,0x20,0x6D
001d09 6c61
001d0a 6f6c
001d0b 3163
001d0c 6620      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20,0x66
001d0d 6961
001d0e 656c
001d0f 2064
001d10 2528      	.DB  0x61,0x69,0x6C,0x65,0x64,0x20,0x28,0x25
001d11 2064
001d12 7962
001d13 6574
001d14 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
001d15 0a0d
001d16 3c00
001d17 6f63
001d18 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001d19 6769
001d1a 6552
001d1b 6461
001d1c 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001d1d 6567
001d1e 4274
001d1f 7a75
001d20 657a      	.DB  0x67,0x65,0x74,0x42,0x75,0x7A,0x7A,0x65
001d21 4372
001d22 6e6f
001d23 6966
001d24 2867      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
001d25 2029
001d26 6166
001d27 6c69
001d28 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001d29 0a0d
001d2a 0d00
001d2b 2d0a
001d2c 2d2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D
001d2d 5220
001d2e 4145
001d2f 2044
001d30 4f43      	.DB  0x20,0x52,0x45,0x41,0x44,0x20,0x43,0x4F
001d31 464e
001d32 425f
001d33 5a55
001d34 455a      	.DB  0x4E,0x46,0x5F,0x42,0x55,0x5A,0x5A,0x45
001d35 2052
001d36 2d2d
001d37 0d2d
001d38 000a      	.DB  0x52,0x20,0x2D,0x2D,0x2D,0xD,0xA,0x0
001d39 6e65
001d3a 6261
001d3b 656c
001d3c 2020      	.DB  0x65,0x6E,0x61,0x62,0x6C,0x65,0x20,0x20
001d3d 2020
001d3e 2020
001d3f 2020
001d40 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001d41 2020
001d42 305b
001d43 2578
001d44 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001d45 5d58
001d46 0a0d
001d47 3c00
001d48 6f63      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001d49 666e
001d4a 6769
001d4b 6552
001d4c 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001d4d 203e
001d4e 4f43
001d4f 464e
001d50 455f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45
001d51 564e
001d52 4c41
001d53 5241
001d54 204d      	.DB  0x4E,0x56,0x41,0x4C,0x41,0x52,0x4D,0x20
001d55 616d
001d56 6c6c
001d57 636f
001d58 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001d59 6166
001d5a 6c69
001d5b 6465
001d5c 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001d5d 6425
001d5e 6220
001d5f 7479
001d60 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001d61 0d29
001d62 000a
001d63 633c
001d64 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001d65 6966
001d66 5267
001d67 6165
001d68 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001d69 6720
001d6a 7465
001d6b 6e45
001d6c 4176      	.DB  0x20,0x67,0x65,0x74,0x45,0x6E,0x76,0x41
001d6d 616c
001d6e 6d72
001d6f 6f43
001d70 666e      	.DB  0x6C,0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66
001d71 6769
001d72 2928
001d73 6620
001d74 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
001d75 656c
001d76 0d64
001d77 000a
001d78 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001d79 2d2d
001d7a 202d
001d7b 4552
001d7c 4441      	.DB  0x2D,0x2D,0x2D,0x20,0x52,0x45,0x41,0x44
001d7d 4320
001d7e 4e4f
001d7f 5f46
001d80 4e45      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45,0x4E
001d81 4156
001d82 414c
001d83 4d52
001d84 2d20      	.DB  0x56,0x41,0x4C,0x41,0x52,0x4D,0x20,0x2D
001d85 2d2d
001d86 0a0d
001d87 6700
001d88 6d73      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x67,0x73,0x6D
001d89 5352
001d8a 4953
001d8b 654c
001d8c 6576      	.DB  0x52,0x53,0x53,0x49,0x4C,0x65,0x76,0x65
001d8d 206c
001d8e 2020
001d8f 2020
001d90 5b20      	.DB  0x6C,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001d91 6625
001d92 0d5d
001d93 000a
001d94 7367      	.DB  0x25,0x66,0x5D,0xD,0xA,0x0,0x67,0x73
001d95 436d
001d96 6572
001d97 6964
001d98 4274      	.DB  0x6D,0x43,0x72,0x65,0x64,0x69,0x74,0x42
001d99 6c61
001d9a 6e61
001d9b 6563
001d9c 2020      	.DB  0x61,0x6C,0x61,0x6E,0x63,0x65,0x20,0x20
001d9d 255b
001d9e 5d64
001d9f 0a0d
001da0 6200      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x62
001da1 7461
001da2 6574
001da3 7972
001da4 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
001da5 6576
001da6 206c
001da7 2020
001da8 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
001da9 5b20
001daa 6625
001dab 0d5d
001dac 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001dad 6f63
001dae 6d6d
001daf 6953
001db0 6e67      	.DB  0x63,0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E
001db1 6c61
001db2 654c
001db3 6576
001db4 206c      	.DB  0x61,0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20
001db5 2020
001db6 255b
001db7 5d66
001db8 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x66,0x5D,0xD,0xA
001db9 6300
001dba 6d6f
001dbb 4c6d
001dbc 736f      	.DB  0x0,0x63,0x6F,0x6D,0x6D,0x4C,0x6F,0x73
001dbd 4474
001dbe 6c65
001dbf 7961
001dc0 2020      	.DB  0x74,0x44,0x65,0x6C,0x61,0x79,0x20,0x20
001dc1 2020
001dc2 5b20
001dc3 6425
001dc4 0d5d      	.DB  0x20,0x20,0x20,0x5B,0x25,0x64,0x5D,0xD
001dc5 000a
001dc6 656d
001dc7 6f6d
001dc8 7972      	.DB  0xA,0x0,0x6D,0x65,0x6D,0x6F,0x72,0x79
001dc9 694d
001dca 206e
001dcb 2020
001dcc 2020      	.DB  0x4D,0x69,0x6E,0x20,0x20,0x20,0x20,0x20
001dcd 2020
001dce 2020
001dcf 255b
001dd0 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
001dd1 0a0d
001dd2 3c00
001dd3 6f63
001dd4 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001dd5 6769
001dd6 6552
001dd7 6461
001dd8 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001dd9 4f43
001dda 464e
001ddb 535f
001ddc 4154      	.DB  0x43,0x4F,0x4E,0x46,0x5F,0x53,0x54,0x41
001ddd 5254
001dde 5045
001ddf 524f
001de0 2054      	.DB  0x54,0x52,0x45,0x50,0x4F,0x52,0x54,0x20
001de1 616d
001de2 6c6c
001de3 636f
001de4 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001de5 6166
001de6 6c69
001de7 6465
001de8 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001de9 6425
001dea 6220
001deb 7479
001dec 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001ded 0d29
001dee 000a
001def 633c
001df0 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001df1 6966
001df2 5267
001df3 6165
001df4 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001df5 6720
001df6 7465
001df7 7453
001df8 7461      	.DB  0x20,0x67,0x65,0x74,0x53,0x74,0x61,0x74
001df9 7375
001dfa 6552
001dfb 6f70
001dfc 7472      	.DB  0x75,0x73,0x52,0x65,0x70,0x6F,0x72,0x74
001dfd 6f43
001dfe 666e
001dff 6769
001e00 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001e01 6620
001e02 6961
001e03 656c
001e04 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001e05 000a
001e06 0a0d
001e07 2d2d
001e08 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001e09 4552
001e0a 4441
001e0b 4320
001e0c 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001e0d 5f46
001e0e 5453
001e0f 5441
001e10 4552      	.DB  0x46,0x5F,0x53,0x54,0x41,0x54,0x52,0x45
001e11 4f50
001e12 5452
001e13 2d20
001e14 2d2d      	.DB  0x50,0x4F,0x52,0x54,0x20,0x2D,0x2D,0x2D
001e15 0a0d
001e16 6100
001e17 6363
001e18 206d      	.DB  0xD,0xA,0x0,0x61,0x63,0x63,0x6D,0x20
001e19 2020
001e1a 2020
001e1b 5b20
001e1c 7830      	.DB  0x20,0x20,0x20,0x20,0x20,0x5B,0x30,0x78
001e1d 3025
001e1e 5832
001e1f 0d5d
001e20 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
001e21 6e69
001e22 7674
001e23 2020
001e24 2020      	.DB  0x69,0x6E,0x74,0x76,0x20,0x20,0x20,0x20
001e25 2020
001e26 255b
001e27 5d64
001e28 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001e29 3c00
001e2a 6f63
001e2b 666e
001e2c 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001e2d 6552
001e2e 6461
001e2f 203e
001e30 6e75      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x75,0x6E
001e31 6e6b
001e32 776f
001e33 206e
001e34 6f63      	.DB  0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x63,0x6F
001e35 666e
001e36 6769
001e37 7275
001e38 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
001e39 6f69
001e3a 206e
001e3b 7974
001e3c 6570      	.DB  0x69,0x6F,0x6E,0x20,0x74,0x79,0x70,0x65
001e3d 5b20
001e3e 7830
001e3f 3025
001e40 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
001e41 0d5d
001e42 000a
001e43 0a0d
001e44 2d20      	.DB  0x5D,0xD,0xA,0x0,0xD,0xA,0x20,0x2D
001e45 2d2d
001e46 5720
001e47 4952
001e48 4554      	.DB  0x2D,0x2D,0x20,0x57,0x52,0x49,0x54,0x45
001e49 4320
001e4a 4e4f
001e4b 4946
001e4c 2047      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x49,0x47,0x20
001e4d 6170
001e4e 6b63
001e4f 7465
001e50 2820      	.DB  0x70,0x61,0x63,0x6B,0x65,0x74,0x20,0x28
001e51 6425
001e52 2d29
001e53 2d2d
001e54 0d20      	.DB  0x25,0x64,0x29,0x2D,0x2D,0x2D,0x20,0xD
001e55 000a
001e56 0a0d
001e57 2d2d
001e58 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001e59 7257
001e5a 7469
001e5b 2065
001e5c 4f43      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x43,0x4F
001e5d 464e
001e5e 505f
001e5f 4f52
001e60 4550      	.DB  0x4E,0x46,0x5F,0x50,0x52,0x4F,0x50,0x45
001e61 5452
001e62 4549
001e63 2053
001e64 2d2d      	.DB  0x52,0x54,0x49,0x45,0x53,0x20,0x2D,0x2D
001e65 002d
001e66 633c
001e67 6e6f
001e68 6966      	.DB  0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69
001e69 5767
001e6a 6972
001e6b 6574
001e6c 203e      	.DB  0x67,0x57,0x72,0x69,0x74,0x65,0x3E,0x20
001e6d 6573
001e6e 5074
001e6f 6f72
001e70 6570      	.DB  0x73,0x65,0x74,0x50,0x72,0x6F,0x70,0x65
001e71 7472
001e72 6569
001e73 4373
001e74 6e6f      	.DB  0x72,0x74,0x69,0x65,0x73,0x43,0x6F,0x6E
001e75 6966
001e76 2867
001e77 2029
001e78 6166      	.DB  0x66,0x69,0x67,0x28,0x29,0x20,0x66,0x61
001e79 6c69
001e7a 6465
001e7b 0a0d
001e7c 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
001e7d 2d0a
001e7e 2d2d
001e7f 5720
001e80 6972      	.DB  0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69
001e81 6574
001e82 4320
001e83 4e4f
001e84 5f46      	.DB  0x74,0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F
001e85 504f
001e86 5245
001e87 5441
001e88 2045      	.DB  0x4F,0x50,0x45,0x52,0x41,0x54,0x45,0x20
001e89 2d2d
001e8a 002d
001e8b 633c
001e8c 6e6f      	.DB  0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E
001e8d 6966
001e8e 5767
001e8f 6972
001e90 6574      	.DB  0x66,0x69,0x67,0x57,0x72,0x69,0x74,0x65
001e91 203e
001e92 6573
001e93 4f74
001e94 6570      	.DB  0x3E,0x20,0x73,0x65,0x74,0x4F,0x70,0x65
001e95 6172
001e96 6974
001e97 676e
001e98 6f43      	.DB  0x72,0x61,0x74,0x69,0x6E,0x67,0x43,0x6F
001e99 666e
001e9a 6769
001e9b 2928
001e9c 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
001e9d 6961
001e9e 656c
001e9f 0d64
001ea0 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
001ea1 0a0d
001ea2 2d2d
001ea3 202d
001ea4 7257      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72
001ea5 7469
001ea6 2065
001ea7 4f43
001ea8 464e      	.DB  0x69,0x74,0x65,0x20,0x43,0x4F,0x4E,0x46
001ea9 535f
001eaa 4e45
001eab 4f53
001eac 2052      	.DB  0x5F,0x53,0x45,0x4E,0x53,0x4F,0x52,0x20
001ead 2528
001eae 2964
001eaf 2d20
001eb0 2d2d      	.DB  0x28,0x25,0x64,0x29,0x20,0x2D,0x2D,0x2D
001eb1 3c00
001eb2 6f63
001eb3 666e
001eb4 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001eb5 7257
001eb6 7469
001eb7 3e65
001eb8 7320      	.DB  0x57,0x72,0x69,0x74,0x65,0x3E,0x20,0x73
001eb9 7465
001eba 6553
001ebb 736e
001ebc 726f      	.DB  0x65,0x74,0x53,0x65,0x6E,0x73,0x6F,0x72
001ebd 6f43
001ebe 666e
001ebf 6769
001ec0 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001ec1 6620
001ec2 6961
001ec3 656c
001ec4 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001ec5 000a
001ec6 0a0d
001ec7 2d2d
001ec8 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001ec9 7257
001eca 7469
001ecb 2065
001ecc 4f43      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x43,0x4F
001ecd 464e
001ece 415f
001ecf 5855
001ed0 4944      	.DB  0x4E,0x46,0x5F,0x41,0x55,0x58,0x44,0x49
001ed1 2820
001ed2 6425
001ed3 2029
001ed4 2d2d      	.DB  0x20,0x28,0x25,0x64,0x29,0x20,0x2D,0x2D
001ed5 002d
001ed6 633c
001ed7 6e6f
001ed8 6966      	.DB  0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69
001ed9 5767
001eda 6972
001edb 6574
001edc 203e      	.DB  0x67,0x57,0x72,0x69,0x74,0x65,0x3E,0x20
001edd 6573
001ede 4174
001edf 7875
001ee0 6944      	.DB  0x73,0x65,0x74,0x41,0x75,0x78,0x44,0x69
001ee1 436e
001ee2 6e6f
001ee3 6966
001ee4 2867      	.DB  0x6E,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
001ee5 2029
001ee6 6166
001ee7 6c69
001ee8 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001ee9 0a0d
001eea 0d00
001eeb 2d0a
001eec 2d2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D
001eed 5720
001eee 6972
001eef 6574
001ef0 4320      	.DB  0x20,0x57,0x72,0x69,0x74,0x65,0x20,0x43
001ef1 4e4f
001ef2 5f46
001ef3 5541
001ef4 4458      	.DB  0x4F,0x4E,0x46,0x5F,0x41,0x55,0x58,0x44
001ef5 204f
001ef6 2528
001ef7 2964
001ef8 2d20      	.DB  0x4F,0x20,0x28,0x25,0x64,0x29,0x20,0x2D
001ef9 2d2d
001efa 3c00
001efb 6f63
001efc 666e      	.DB  0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66
001efd 6769
001efe 7257
001eff 7469
001f00 3e65      	.DB  0x69,0x67,0x57,0x72,0x69,0x74,0x65,0x3E
001f01 7320
001f02 7465
001f03 7541
001f04 4478      	.DB  0x20,0x73,0x65,0x74,0x41,0x75,0x78,0x44
001f05 756f
001f06 4374
001f07 6e6f
001f08 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
001f09 2867
001f0a 2029
001f0b 6166
001f0c 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001f0d 6465
001f0e 0a0d
001f0f 0d00
001f10 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
001f11 2d2d
001f12 5720
001f13 6972
001f14 6574      	.DB  0x2D,0x2D,0x20,0x57,0x72,0x69,0x74,0x65
001f15 4320
001f16 4e4f
001f17 5f46
001f18 5541      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55
001f19 4158
001f1a 2049
001f1b 2528
001f1c 2964      	.DB  0x58,0x41,0x49,0x20,0x28,0x25,0x64,0x29
001f1d 2d20
001f1e 2d2d
001f1f 3c00
001f20 6f63      	.DB  0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F
001f21 666e
001f22 6769
001f23 7257
001f24 7469      	.DB  0x6E,0x66,0x69,0x67,0x57,0x72,0x69,0x74
001f25 3e65
001f26 7320
001f27 7465
001f28 7541      	.DB  0x65,0x3E,0x20,0x73,0x65,0x74,0x41,0x75
001f29 4178
001f2a 6e69
001f2b 6f43
001f2c 666e      	.DB  0x78,0x41,0x69,0x6E,0x43,0x6F,0x6E,0x66
001f2d 6769
001f2e 2928
001f2f 6620
001f30 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
001f31 656c
001f32 0d64
001f33 000a
001f34 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001f35 2d2d
001f36 202d
001f37 7257
001f38 7469      	.DB  0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69,0x74
001f39 2065
001f3a 4f43
001f3b 464e
001f3c 415f      	.DB  0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
001f3d 5855
001f3e 4f41
001f3f 2820
001f40 6425      	.DB  0x55,0x58,0x41,0x4F,0x20,0x28,0x25,0x64
001f41 2029
001f42 2d2d
001f43 002d
001f44 633c      	.DB  0x29,0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63
001f45 6e6f
001f46 6966
001f47 5767
001f48 6972      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x57,0x72,0x69
001f49 6574
001f4a 203e
001f4b 6573
001f4c 4174      	.DB  0x74,0x65,0x3E,0x20,0x73,0x65,0x74,0x41
001f4d 7875
001f4e 6f41
001f4f 7475
001f50 6f43      	.DB  0x75,0x78,0x41,0x6F,0x75,0x74,0x43,0x6F
001f51 666e
001f52 6769
001f53 2928
001f54 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
001f55 6961
001f56 656c
001f57 0d64
001f58 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
001f59 0a0d
001f5a 2d2d
001f5b 202d
001f5c 7257      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72
001f5d 7469
001f5e 2065
001f5f 4f43
001f60 464e      	.DB  0x69,0x74,0x65,0x20,0x43,0x4F,0x4E,0x46
001f61 425f
001f62 5a55
001f63 455a
001f64 2052      	.DB  0x5F,0x42,0x55,0x5A,0x5A,0x45,0x52,0x20
001f65 2d2d
001f66 002d
001f67 633c
001f68 6e6f      	.DB  0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E
001f69 6966
001f6a 5767
001f6b 6972
001f6c 6574      	.DB  0x66,0x69,0x67,0x57,0x72,0x69,0x74,0x65
001f6d 203e
001f6e 6573
001f6f 4274
001f70 7a75      	.DB  0x3E,0x20,0x73,0x65,0x74,0x42,0x75,0x7A
001f71 657a
001f72 4372
001f73 6e6f
001f74 6966      	.DB  0x7A,0x65,0x72,0x43,0x6F,0x6E,0x66,0x69
001f75 2867
001f76 2029
001f77 6166
001f78 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001f79 6465
001f7a 0a0d
001f7b 0d00
001f7c 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
001f7d 2d2d
001f7e 5720
001f7f 6972
001f80 6574      	.DB  0x2D,0x2D,0x20,0x57,0x72,0x69,0x74,0x65
001f81 4320
001f82 4e4f
001f83 5f46
001f84 4e45      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45,0x4E
001f85 4156
001f86 414c
001f87 4d52
001f88 2d20      	.DB  0x56,0x41,0x4C,0x41,0x52,0x4D,0x20,0x2D
001f89 2d2d
001f8a 3c00
001f8b 6f63
001f8c 666e      	.DB  0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66
001f8d 6769
001f8e 7257
001f8f 7469
001f90 3e65      	.DB  0x69,0x67,0x57,0x72,0x69,0x74,0x65,0x3E
001f91 7320
001f92 7465
001f93 6e45
001f94 4176      	.DB  0x20,0x73,0x65,0x74,0x45,0x6E,0x76,0x41
001f95 616c
001f96 6d72
001f97 6f43
001f98 666e      	.DB  0x6C,0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66
001f99 6769
001f9a 2928
001f9b 6620
001f9c 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
001f9d 656c
001f9e 0d64
001f9f 000a
001fa0 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001fa1 2d2d
001fa2 202d
001fa3 7257
001fa4 7469      	.DB  0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69,0x74
001fa5 2065
001fa6 4f43
001fa7 464e
001fa8 535f      	.DB  0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x53
001fa9 4154
001faa 5254
001fab 5045
001fac 524f      	.DB  0x54,0x41,0x54,0x52,0x45,0x50,0x4F,0x52
001fad 2054
001fae 2d2d
001faf 002d
001fb0 633c      	.DB  0x54,0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63
001fb1 6e6f
001fb2 6966
001fb3 5767
001fb4 6972      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x57,0x72,0x69
001fb5 6574
001fb6 203e
001fb7 6573
001fb8 5374      	.DB  0x74,0x65,0x3E,0x20,0x73,0x65,0x74,0x53
001fb9 6174
001fba 7574
001fbb 5273
001fbc 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
001fbd 726f
001fbe 4374
001fbf 6e6f
001fc0 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
001fc1 2867
001fc2 2029
001fc3 6166
001fc4 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001fc5 6465
001fc6 0a0d
001fc7 3c00
001fc8 6573      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x73,0x65
001fc9 4c74
001fca 676f
001fcb 614d
001fcc 696e      	.DB  0x74,0x4C,0x6F,0x67,0x4D,0x61,0x6E,0x69
001fcd 7570
001fce 616c
001fcf 6574
001fd0 6353      	.DB  0x70,0x75,0x6C,0x61,0x74,0x65,0x53,0x63
001fd1 6568
001fd2 616d
001fd3 203e
001fd4 6974      	.DB  0x68,0x65,0x6D,0x61,0x3E,0x20,0x74,0x69
001fd5 656d
001fd6 7020
001fd7 7265
001fd8 6f69      	.DB  0x6D,0x65,0x20,0x70,0x65,0x72,0x69,0x6F
001fd9 2064
001fda 7265
001fdb 6f72
001fdc 2072      	.DB  0x64,0x20,0x65,0x72,0x72,0x6F,0x72,0x20
001fdd 7473
001fde 7261
001fdf 5b74
001fe0 6c25      	.DB  0x73,0x74,0x61,0x72,0x74,0x5B,0x25,0x6C
001fe1 5d64
001fe2 2d20
001fe3 7320
001fe4 6f74      	.DB  0x64,0x5D,0x20,0x2D,0x20,0x73,0x74,0x6F
001fe5 5b70
001fe6 6c25
001fe7 5d64
001fe8 0a0d      	.DB  0x70,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
001fe9 3c00
001fea 6573
001feb 5474
001fec 6d69      	.DB  0x0,0x3C,0x73,0x65,0x74,0x54,0x69,0x6D
001fed 5365
001fee 6e79
001fef 5363
001ff0 6863      	.DB  0x65,0x53,0x79,0x6E,0x63,0x53,0x63,0x68
001ff1 6d65
001ff2 3e61
001ff3 4720
001ff4 746f      	.DB  0x65,0x6D,0x61,0x3E,0x20,0x47,0x6F,0x74
001ff5 3020
001ff6 5520
001ff7 696e
001ff8 2078      	.DB  0x20,0x30,0x20,0x55,0x6E,0x69,0x78,0x20
001ff9 6974
001ffa 656d
001ffb 7320
001ffc 6174      	.DB  0x74,0x69,0x6D,0x65,0x20,0x73,0x74,0x61
001ffd 706d
001ffe 0a0d
001fff 3c00
002000 6573      	.DB  0x6D,0x70,0xD,0xA,0x0,0x3C,0x73,0x65
002001 5474
002002 6d69
002003 5365
002004 6e79      	.DB  0x74,0x54,0x69,0x6D,0x65,0x53,0x79,0x6E
002005 5363
002006 6863
002007 6d65
002008 3e61      	.DB  0x63,0x53,0x63,0x68,0x65,0x6D,0x61,0x3E
002009 5220
00200a 6365
00200b 6965
00200c 6576      	.DB  0x20,0x52,0x65,0x63,0x65,0x69,0x76,0x65
00200d 2064
00200e 6974
00200f 656d
002010 7320      	.DB  0x64,0x20,0x74,0x69,0x6D,0x65,0x20,0x73
002011 6e79
002012 2e63
002013 7020
002014 6361      	.DB  0x79,0x6E,0x63,0x2E,0x20,0x70,0x61,0x63
002015 656b
002016 2074
002017 6c25
002018 0d64      	.DB  0x6B,0x65,0x74,0x20,0x25,0x6C,0x64,0xD
002019 000a
00201a 733c
00201b 7465
00201c 6954      	.DB  0xA,0x0,0x3C,0x73,0x65,0x74,0x54,0x69
00201d 656d
00201e 7953
00201f 636e
002020 6353      	.DB  0x6D,0x65,0x53,0x79,0x6E,0x63,0x53,0x63
002021 6568
002022 616d
002023 203e
002024 5452      	.DB  0x68,0x65,0x6D,0x61,0x3E,0x20,0x52,0x54
002025 5f43
002026 6573
002027 4274
002028 6e69      	.DB  0x43,0x5F,0x73,0x65,0x74,0x42,0x69,0x6E
002029 7261
00202a 2879
00202b 6c25
00202c 2964      	.DB  0x61,0x72,0x79,0x28,0x25,0x6C,0x64,0x29
00202d 6620
00202e 6961
00202f 656c
002030 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002031 000a
002032 733c
002033 7465
002034 754d      	.DB  0xA,0x0,0x3C,0x73,0x65,0x74,0x4D,0x75
002035 6574
002036 6c41
002037 7261
002038 3e6d      	.DB  0x74,0x65,0x41,0x6C,0x61,0x72,0x6D,0x3E
002039 7020
00203a 7265
00203b 616d
00203c 656e      	.DB  0x20,0x70,0x65,0x72,0x6D,0x61,0x6E,0x65
00203d 746e
00203e 6d20
00203f 7475
002040 2065      	.DB  0x6E,0x74,0x20,0x6D,0x75,0x74,0x65,0x20
002041 6c61
002042 7261
002043 0d6d
002044 000a      	.DB  0x61,0x6C,0x61,0x72,0x6D,0xD,0xA,0x0
002045 733c
002046 7465
002047 754d
002048 6574      	.DB  0x3C,0x73,0x65,0x74,0x4D,0x75,0x74,0x65
002049 6c41
00204a 7261
00204b 3e6d
00204c 6920      	.DB  0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20,0x69
00204d 766e
00204e 6c61
00204f 6469
002050 7020      	.DB  0x6E,0x76,0x61,0x6C,0x69,0x64,0x20,0x70
002051 7265
002052 6f69
002053 2064
002054 2528      	.DB  0x65,0x72,0x69,0x6F,0x64,0x20,0x28,0x25
002055 646c
002056 0d29
002057 000a
002058 733c      	.DB  0x6C,0x64,0x29,0xD,0xA,0x0,0x3C,0x73
002059 7465
00205a 754d
00205b 6574
00205c 6c41      	.DB  0x65,0x74,0x4D,0x75,0x74,0x65,0x41,0x6C
00205d 7261
00205e 3e6d
00205f 6d20
002060 7475      	.DB  0x61,0x72,0x6D,0x3E,0x20,0x6D,0x75,0x74
002061 2065
002062 6c61
002063 7261
002064 206d      	.DB  0x65,0x20,0x61,0x6C,0x61,0x72,0x6D,0x20
002065 6f66
002066 2072
002067 6c25
002068 2064      	.DB  0x66,0x6F,0x72,0x20,0x25,0x6C,0x64,0x20
002069 6573
00206a 6f63
00206b 646e
00206c 0a0d      	.DB  0x73,0x65,0x63,0x6F,0x6E,0x64,0xD,0xA
00206d 3c00
00206e 6573
00206f 4d74
002070 7475      	.DB  0x0,0x3C,0x73,0x65,0x74,0x4D,0x75,0x74
002071 4165
002072 616c
002073 6d72
002074 203e      	.DB  0x65,0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20
002075 4c41
002076 5241
002077 5f4d
002078 756d      	.DB  0x41,0x4C,0x41,0x52,0x4D,0x5F,0x6D,0x75
002079 6574
00207a 2528
00207b 646c
00207c 2029      	.DB  0x74,0x65,0x28,0x25,0x6C,0x64,0x29,0x20
00207d 6166
00207e 6c69
00207f 6465
002080 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3293): warning: .cseg .db misalignment - padding zero byte
002081 0000      	.DB  0x0
                 _0x18001D:
002082 0000
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3295): warning: .cseg .db misalignment - padding zero byte
002083 0000      	.DB  0x0,0x0,0x0
                 _0x180000:
002084 0a0d
002085 0a0d
002086 453c
002087 4854      	.DB  0xD,0xA,0xD,0xA,0x3C,0x45,0x54,0x48
002088 615f
002089 6464
00208a 6157
00208b 7469      	.DB  0x5F,0x61,0x64,0x64,0x57,0x61,0x69,0x74
00208c 7551
00208d 7565
00208e 3e65
00208f 5720      	.DB  0x51,0x75,0x65,0x75,0x65,0x3E,0x20,0x57
002090 5241
002091 494e
002092 474e
002093 3a20      	.DB  0x41,0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A
002094 5720
002095 6961
002096 2074
002097 7571      	.DB  0x20,0x57,0x61,0x69,0x74,0x20,0x71,0x75
002098 7565
002099 2065
00209a 5546
00209b 4c4c      	.DB  0x65,0x75,0x65,0x20,0x46,0x55,0x4C,0x4C
00209c 0a0d
00209d 0a0d
00209e 3c00
00209f 5445      	.DB  0xD,0xA,0xD,0xA,0x0,0x3C,0x45,0x54
0020a0 5f48
0020a1 6461
0020a2 5764
0020a3 6961      	.DB  0x48,0x5F,0x61,0x64,0x64,0x57,0x61,0x69
0020a4 5174
0020a5 6575
0020a6 6575
0020a7 203e      	.DB  0x74,0x51,0x75,0x65,0x75,0x65,0x3E,0x20
0020a8 616d
0020a9 6c6c
0020aa 636f
0020ab 2528      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x28,0x25
0020ac 2964
0020ad 6620
0020ae 6961
0020af 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0020b0 0d64
0020b1 000a
0020b2 0a0d
0020b3 2020      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x20,0x20
0020b4 2020
0020b5 2020
0020b6 2020
0020b7 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0020b8 2020
0020b9 2020
0020ba 2020
0020bb 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0020bc 2020
0020bd 2020
0020be 2020
0020bf 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0020c0 2020
0020c1 2020
0020c2 2020
0020c3 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0020c4 2020
0020c5 4120
0020c6 6464
0020c7 6465      	.DB  0x20,0x20,0x20,0x41,0x64,0x64,0x65,0x64
0020c8 2820
0020c9 3025
0020ca 5832
0020cb 2029      	.DB  0x20,0x28,0x25,0x30,0x32,0x58,0x29,0x20
0020cc 6f74
0020cd 6520
0020ce 6874
0020cf 775f      	.DB  0x74,0x6F,0x20,0x65,0x74,0x68,0x5F,0x77
0020d0 6961
0020d1 5174
0020d2 6575
0020d3 6575      	.DB  0x61,0x69,0x74,0x51,0x75,0x65,0x75,0x65
0020d4 255b
0020d5 5d64
0020d6 0a0d
0020d7 0d00      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0xD
0020d8 200a
0020d9 2020
0020da 2020
0020db 2020      	.DB  0xA,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0020dc 2020
0020dd 2020
0020de 2020
0020df 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0020e0 2020
0020e1 2020
0020e2 2020
0020e3 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0020e4 2020
0020e5 2020
0020e6 2020
0020e7 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0020e8 2020
0020e9 2020
0020ea 2020
0020eb 6552      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x52,0x65
0020ec 6f6d
0020ed 6576
0020ee 2064
0020ef 2528      	.DB  0x6D,0x6F,0x76,0x65,0x64,0x20,0x28,0x25
0020f0 3230
0020f1 2958
0020f2 7420
0020f3 206f      	.DB  0x30,0x32,0x58,0x29,0x20,0x74,0x6F,0x20
0020f4 7465
0020f5 5f68
0020f6 6177
0020f7 7469      	.DB  0x65,0x74,0x68,0x5F,0x77,0x61,0x69,0x74
0020f8 7551
0020f9 7565
0020fa 5b65
0020fb 6425      	.DB  0x51,0x75,0x65,0x75,0x65,0x5B,0x25,0x64
0020fc 0d5d
0020fd 000a
0020fe 0a0d
0020ff 0a0d      	.DB  0x5D,0xD,0xA,0x0,0xD,0xA,0xD,0xA
002100 4157
002101 4e52
002102 4e49
002103 2047      	.DB  0x57,0x41,0x52,0x4E,0x49,0x4E,0x47,0x20
002104 203a
002105 5445
002106 5f48
002107 6572      	.DB  0x3A,0x20,0x45,0x54,0x48,0x5F,0x72,0x65
002108 6f6d
002109 6576
00210a 6157
00210b 7469      	.DB  0x6D,0x6F,0x76,0x65,0x57,0x61,0x69,0x74
00210c 7551
00210d 7565
00210e 2865
00210f 3025      	.DB  0x51,0x75,0x65,0x75,0x65,0x28,0x25,0x30
002110 5832
002111 2029
002112 6f6e
002113 2074      	.DB  0x32,0x58,0x29,0x20,0x6E,0x6F,0x74,0x20
002114 6f66
002115 6e75
002116 2164
002117 0d21      	.DB  0x66,0x6F,0x75,0x6E,0x64,0x21,0x21,0xD
002118 0d0a
002119 000a      	.DB  0xA,0xD,0xA,0x0
                 _0x1A0011:
00211a 0000
00211b 0000
00211c 0000
00211d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00211e 0000
00211f 0000
002120 0000
002121 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002122 0000
002123 0000
002124 0000
002125 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002126 0000
002127 0000
002128 0000
002129 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00212a 0000
00212b 0000
00212c 0000
00212d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00212e 0000
00212f 0000
002130 0000
002131 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002132 0000
002133 0000
002134 0000
002135 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002136 0000
002137 0000
002138 0000
002139 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00213a 0000
00213b 0000
00213c 0000
00213d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00213e 0000
00213f 0000
002140 0000
002141 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002142 0000
002143 0000
002144 0000
002145 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002146 0000
002147 0000
002148 0000
002149 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00214a 0000
00214b 0000
00214c 0000
00214d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00214e 0000
00214f 0000
002150 0000
002151 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002152 0000
002153 0000
002154 0000
002155 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002156 0000
002157 0000
002158 0000
002159 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00215a 0000
00215b 0000
00215c 0000
00215d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00215e 0000
00215f 0000
002160 0000
002161 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002162 0000
002163 0000
002164 0000
002165 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002166 0000
002167 0000
002168 0000
002169 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00216a 0000
00216b 0000
00216c 0000
00216d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00216e 0000
00216f 0000
002170 0000
002171 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002172 0000
002173 0000
002174 0000
002175 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002176 0000
002177 0000
002178 0000
002179 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00217a 0000
00217b 0000
00217c 0000
00217d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00217e 0000
00217f 0000
002180 0000
002181 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002182 0000
002183 0000
002184 0000
002185 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002186 0000
002187 0000
002188 0000
002189 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00218a 0000
00218b 0000
00218c 0000
00218d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00218e 0000
00218f 0000
002190 0000
002191 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002192 0000
002193 0000
002194 0000
002195 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002196 0000
002197 0000
002198 0000
002199 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00219a 0000
00219b 0000
00219c 0000
00219d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00219e 0000
00219f 0000
0021a0 0000
0021a1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021a2 0000
0021a3 0000
0021a4 0000
0021a5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021a6 0000
0021a7 0000
0021a8 0000
0021a9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021aa 0000
0021ab 0000
0021ac 0000
0021ad 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021ae 0000
0021af 0000
0021b0 0000
0021b1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021b2 0000
0021b3 0000
0021b4 0000
0021b5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021b6 0000
0021b7 0000
0021b8 0000
0021b9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021ba 0000
0021bb 0000
0021bc 0000
0021bd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021be 0000
0021bf 0000
0021c0 0000
0021c1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021c2 0000
0021c3 0000
0021c4 0000
0021c5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021c6 0000
0021c7 0000
0021c8 0000
0021c9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021ca 0000
0021cb 0000
0021cc 0000
0021cd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021ce 0000
0021cf 0000
0021d0 0000
0021d1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021d2 0000
0021d3 0000
0021d4 0000
0021d5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021d6 0000
0021d7 0000
0021d8 0000
0021d9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021da 0000
0021db 0000
0021dc 0000
0021dd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021de 0000
0021df 0000
0021e0 0000
0021e1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021e2 0000
0021e3 0000
0021e4 0000
0021e5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021e6 0000
0021e7 0000
0021e8 0000
0021e9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021ea 0000
0021eb 0000
0021ec 0000
0021ed 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021ee 0000
0021ef 0000
0021f0 0000
0021f1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021f2 0000
0021f3 0000
0021f4 0000
0021f5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021f6 0000
0021f7 0000
0021f8 0000
0021f9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021fa 0000
0021fb 0000
0021fc 0000
0021fd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021fe 0000
0021ff 0000
002200 0000
002201 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002202 0000
002203 0000
002204 0000
002205 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002206 0000
002207 0000
002208 0000
002209 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00220a 0000
00220b 0000
00220c 0000
00220d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00220e 0000
00220f 0000
002210 0000
002211 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002212 0000
002213 0000
002214 0000
002215 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002216 0000
002217 0000
002218 0000
002219 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00221a 0000
00221b 4194
00221c 0000
00221d 0000      	.DB  0x0,0x0,0x94,0x41,0x0,0x0,0x0,0x0
                 _0x1A0000:
00221e 6553
00221f 736e
002220 726f
002221 6320      	.DB  0x53,0x65,0x6E,0x73,0x6F,0x72,0x20,0x63
002222 5b68
002223 6425
002224 205d
002225 7369      	.DB  0x68,0x5B,0x25,0x64,0x5D,0x20,0x69,0x73
002226 6120
002227 7220
002228 7761
002229 6420      	.DB  0x20,0x61,0x20,0x72,0x61,0x77,0x20,0x64
00222a 7461
00222b 5b61
00222c 3025
00222d 322e      	.DB  0x61,0x74,0x61,0x5B,0x25,0x30,0x2E,0x32
00222e 5d66
00222f 2c20
002230 6320
002231 6c61      	.DB  0x66,0x5D,0x20,0x2C,0x20,0x63,0x61,0x6C
002232 7250
002233 636f
002234 7365
002235 5b73      	.DB  0x50,0x72,0x6F,0x63,0x65,0x73,0x73,0x5B
002236 3025
002237 322e
002238 5d66
002239 0a0d      	.DB  0x25,0x30,0x2E,0x32,0x66,0x5D,0xD,0xA
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3409): warning: .cseg .db misalignment - padding zero byte
00223a 0000      	.DB  0x0
                 _0x1C0005:
00223b 0000
00223c 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x1E0003:
00223d ffff      	.DB  0xFF,0xFF
                 _0x1E0004:
00223e ffff      	.DB  0xFF,0xFF
                 _0x1E0005:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3417): warning: .cseg .db misalignment - padding zero byte
00223f 00ff      	.DB  0xFF
                 _0x1E003A:
002240 ffff      	.DB  0xFF,0xFF
                 _0x1E0000:
002241 753c
002242 6470
002243 7461
002244 4365      	.DB  0x3C,0x75,0x70,0x64,0x61,0x74,0x65,0x43
002245 6d6f
002246 536d
002247 6174
002248 7574      	.DB  0x6F,0x6D,0x6D,0x53,0x74,0x61,0x74,0x75
002249 3e73
00224a 4c20
00224b 736f
00224c 5474      	.DB  0x73,0x3E,0x20,0x4C,0x6F,0x73,0x74,0x54
00224d 6d69
00224e 7265
00224f 7420
002250 6d69      	.DB  0x69,0x6D,0x65,0x72,0x20,0x74,0x69,0x6D
002251 2065
002252 656c
002253 7466
002254 3d20      	.DB  0x65,0x20,0x6C,0x65,0x66,0x74,0x20,0x3D
002255 2520
002256 646c
002257 2528
002258 586c      	.DB  0x20,0x25,0x6C,0x64,0x28,0x25,0x6C,0x58
002259 0d29
00225a 000a
00225b 753c
00225c 6470      	.DB  0x29,0xD,0xA,0x0,0x3C,0x75,0x70,0x64
00225d 7461
00225e 4365
00225f 6d6f
002260 536d      	.DB  0x61,0x74,0x65,0x43,0x6F,0x6D,0x6D,0x53
002261 6174
002262 7574
002263 3e73
002264 5320      	.DB  0x74,0x61,0x74,0x75,0x73,0x3E,0x20,0x53
002265 7265
002266 6576
002267 2072
002268 6f44      	.DB  0x65,0x72,0x76,0x65,0x72,0x20,0x44,0x6F
002269 6e77
00226a 2121
00226b 0d21
00226c 000a      	.DB  0x77,0x6E,0x21,0x21,0x21,0xD,0xA,0x0
00226d 753c
00226e 6470
00226f 7461
002270 4365      	.DB  0x3C,0x75,0x70,0x64,0x61,0x74,0x65,0x43
002271 6d6f
002272 536d
002273 6174
002274 7574      	.DB  0x6F,0x6D,0x6D,0x53,0x74,0x61,0x74,0x75
002275 3e73
002276 5320
002277 7265
002278 6576      	.DB  0x73,0x3E,0x20,0x53,0x65,0x72,0x76,0x65
002279 2072
00227a 7055
00227b 2121
00227c 0d21      	.DB  0x72,0x20,0x55,0x70,0x21,0x21,0x21,0xD
00227d 000a
00227e 633c
00227f 6568
002280 6b63      	.DB  0xA,0x0,0x3C,0x63,0x68,0x65,0x63,0x6B
002281 7250
002282 626f
002283 4165
002284 616c      	.DB  0x50,0x72,0x6F,0x62,0x65,0x41,0x6C,0x61
002285 6d72
002286 203e
002287 6573
002288 736e      	.DB  0x72,0x6D,0x3E,0x20,0x73,0x65,0x6E,0x73
002289 726f
00228a 6320
00228b 6168
00228c 6e6e      	.DB  0x6F,0x72,0x20,0x63,0x68,0x61,0x6E,0x6E
00228d 6c65
00228e 6f20
00228f 7475
002290 6f20      	.DB  0x65,0x6C,0x20,0x6F,0x75,0x74,0x20,0x6F
002291 2066
002292 6172
002293 676e
002294 2065      	.DB  0x66,0x20,0x72,0x61,0x6E,0x67,0x65,0x20
002295 2528
002296 2964
002297 0a0d
002298 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
002299 7075
00229a 6164
00229b 6574
00229c 6144      	.DB  0x75,0x70,0x64,0x61,0x74,0x65,0x44,0x61
00229d 6174
00229e 7453
00229f 7461
0022a0 7375      	.DB  0x74,0x61,0x53,0x74,0x61,0x74,0x75,0x73
0022a1 203e
0022a2 4241
0022a3 524f
0022a4 3a54      	.DB  0x3E,0x20,0x41,0x42,0x4F,0x52,0x54,0x3A
0022a5 7320
0022a6 6e65
0022a7 6f73
0022a8 2072      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x20
0022a9 6863
0022aa 6e61
0022ab 656e
0022ac 206c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20
0022ad 756f
0022ae 2074
0022af 666f
0022b0 7220      	.DB  0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x72
0022b1 6e61
0022b2 6567
0022b3 2820
0022b4 6425      	.DB  0x61,0x6E,0x67,0x65,0x20,0x28,0x25,0x64
0022b5 0d29
0022b6 000a
0022b7 753c
0022b8 6470      	.DB  0x29,0xD,0xA,0x0,0x3C,0x75,0x70,0x64
0022b9 7461
0022ba 4465
0022bb 6e69
0022bc 7453      	.DB  0x61,0x74,0x65,0x44,0x69,0x6E,0x53,0x74
0022bd 7461
0022be 7375
0022bf 203e
0022c0 6863      	.DB  0x61,0x74,0x75,0x73,0x3E,0x20,0x63,0x68
0022c1 6e61
0022c2 656e
0022c3 5b6c
0022c4 6425      	.DB  0x61,0x6E,0x6E,0x65,0x6C,0x5B,0x25,0x64
0022c5 205d
0022c6 756f
0022c7 2074
0022c8 666f      	.DB  0x5D,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66
0022c9 7220
0022ca 6e61
0022cb 6567
0022cc 0a0d      	.DB  0x20,0x72,0x61,0x6E,0x67,0x65,0xD,0xA
0022cd 3c00
0022ce 6567
0022cf 4474
0022d0 7665      	.DB  0x0,0x3C,0x67,0x65,0x74,0x44,0x65,0x76
0022d1 6369
0022d2 5365
0022d3 6174
0022d4 6574      	.DB  0x69,0x63,0x65,0x53,0x74,0x61,0x74,0x65
0022d5 203e
0022d6 7473
0022d7 7461
0022d8 2065      	.DB  0x3E,0x20,0x73,0x74,0x61,0x74,0x65,0x20
0022d9 203d
0022da 305b
0022db 2578
0022dc 3430      	.DB  0x3D,0x20,0x5B,0x30,0x78,0x25,0x30,0x34
0022dd 5d58
0022de 0a0d
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3460): warning: .cseg .db misalignment - padding zero byte
0022df 0000      	.DB  0x58,0x5D,0xD,0xA,0x0
                 _0x220003:
0022e0 ffff
0022e1 ffff
0022e2 ffff
0022e3 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
0022e4 ffff
0022e5 ffff
0022e6 ffff
0022e7 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x220004:
0022e8 ffff
0022e9 ffff
0022ea ffff
0022eb ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
0022ec ffff
0022ed ffff
0022ee ffff
0022ef ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x2200A8:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3468): warning: .cseg .db misalignment - padding zero byte
0022f0 0069      	.DB  0x69
                 _0x2200B1:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3470): warning: .cseg .db misalignment - padding zero byte
0022f1 0069      	.DB  0x69
                 _0x2200C5:
0022f2 6969      	.DB  0x69,0x69
                 _0x2200CF:
0022f3 6969
0022f4 6969
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3474): warning: .cseg .db misalignment - padding zero byte
0022f5 0069      	.DB  0x69,0x69,0x69,0x69,0x69
                 _0x2200DD:
0022f6 ffff
0022f7 ffff      	.DB  0xFF,0xFF,0xFF,0xFF
                 _0x2200F6:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3478): warning: .cseg .db misalignment - padding zero byte
0022f8 00ff      	.DB  0xFF
                 _0x220000:
0022f9 633c
0022fa 6568
0022fb 6b63
0022fc 6c41      	.DB  0x3C,0x63,0x68,0x65,0x63,0x6B,0x41,0x6C
0022fd 7261
0022fe 466d
0022ff 6f72
002300 536d      	.DB  0x61,0x72,0x6D,0x46,0x72,0x6F,0x6D,0x53
002301 6372
002302 203e
002303 5347
002304 204d      	.DB  0x72,0x63,0x3E,0x20,0x47,0x53,0x4D,0x20
002305 6f4e
002306 2074
002307 7573
002308 7070      	.DB  0x4E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
002309 726f
00230a 2074
00230b 6579
00230c 2074      	.DB  0x6F,0x72,0x74,0x20,0x79,0x65,0x74,0x20
00230d 305b
00230e 2578
00230f 3230
002310 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
002311 0a0d
002312 3c00
002313 6863
002314 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
002315 416b
002316 616c
002317 6d72
002318 7246      	.DB  0x6B,0x41,0x6C,0x61,0x72,0x6D,0x46,0x72
002319 6d6f
00231a 7253
00231b 3e63
00231c 6120      	.DB  0x6F,0x6D,0x53,0x72,0x63,0x3E,0x20,0x61
00231d 616c
00231e 6d72
00231f 7253
002320 2063      	.DB  0x6C,0x61,0x72,0x6D,0x53,0x72,0x63,0x20
002321 6e75
002322 6e6b
002323 776f
002324 206e      	.DB  0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20
002325 305b
002326 2578
002327 3230
002328 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
002329 0a0d
00232a 3c00
00232b 6863
00232c 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
00232d 536b
00232e 6e65
00232f 4464
002330 6e69      	.DB  0x6B,0x53,0x65,0x6E,0x64,0x44,0x69,0x6E
002331 6c41
002332 7261
002333 3e6d
002334 6320      	.DB  0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20,0x63
002335 6168
002336 6e6e
002337 6c65
002338 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
002339 7475
00233a 6f20
00233b 2066
00233c 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
00233d 676e
00233e 2065
00233f 255b
002340 5d64      	.DB  0x6E,0x67,0x65,0x20,0x5B,0x25,0x64,0x5D
002341 0a0d
002342 3c00
002343 6863
002344 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
002345 536b
002346 6e65
002347 4464
002348 7461      	.DB  0x6B,0x53,0x65,0x6E,0x64,0x44,0x61,0x74
002349 4161
00234a 616c
00234b 6d72
00234c 203e      	.DB  0x61,0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20
00234d 7250
00234e 626f
00234f 2065
002350 6425      	.DB  0x50,0x72,0x6F,0x62,0x65,0x20,0x25,0x64
002351 6420
002352 7461
002353 4161
002354 616c      	.DB  0x20,0x64,0x61,0x74,0x61,0x41,0x6C,0x61
002355 6d72
002356 305b
002357 2578
002358 3230      	.DB  0x72,0x6D,0x5B,0x30,0x78,0x25,0x30,0x32
002359 5d58
00235a 0a0d
00235b 3c00
00235c 4c41      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x41,0x4C
00235d 5241
00235e 5f4d
00235f 6863
002360 6365      	.DB  0x41,0x52,0x4D,0x5F,0x63,0x68,0x65,0x63
002361 4d6b
002362 7475
002363 4565
002364 7078      	.DB  0x6B,0x4D,0x75,0x74,0x65,0x45,0x78,0x70
002365 7269
002366 6465
002367 203e
002368 6e69      	.DB  0x69,0x72,0x65,0x64,0x3E,0x20,0x69,0x6E
002369 6176
00236a 696c
00236b 2064
00236c 756d      	.DB  0x76,0x61,0x6C,0x69,0x64,0x20,0x6D,0x75
00236d 6574
00236e 6f4d
00236f 6564
002370 2820      	.DB  0x74,0x65,0x4D,0x6F,0x64,0x65,0x20,0x28
002371 6425
002372 0d29
002373 000a      	.DB  0x25,0x64,0x29,0xD,0xA,0x0
                 _0x240000:
002374 5444
002375 3025
002376 6432
002377 252d      	.DB  0x44,0x54,0x25,0x30,0x32,0x64,0x2D,0x25
002378 3230
002379 2d64
00237a 3025
00237b 6434      	.DB  0x30,0x32,0x64,0x2D,0x25,0x30,0x34,0x64
00237c 5400
00237d 254d
00237e 3230
00237f 3a64      	.DB  0x0,0x54,0x4D,0x25,0x30,0x32,0x64,0x3A
002380 3025
002381 6432
002382 4400
002383 2556      	.DB  0x25,0x30,0x32,0x64,0x0,0x44,0x56,0x25
002384 6431
002385 2e25
002386 6631
002387 4400      	.DB  0x31,0x64,0x25,0x2E,0x31,0x66,0x0,0x44
002388 2556
002389 6431
00238a 5245
00238b 4c52      	.DB  0x56,0x25,0x31,0x64,0x45,0x52,0x52,0x4C
00238c 0042
00238d 5644
00238e 3125
00238f 4564      	.DB  0x42,0x0,0x44,0x56,0x25,0x31,0x64,0x45
002390 5252
002391 4255
002392 4400
002393 2556      	.DB  0x52,0x52,0x55,0x42,0x0,0x44,0x56,0x25
002394 6431
002395 5245
002396 4e52
002397 0043      	.DB  0x31,0x64,0x45,0x52,0x52,0x4E,0x43,0x0
002398 5644
002399 3125
00239a 4564
00239b 5252      	.DB  0x44,0x56,0x25,0x31,0x64,0x45,0x52,0x52
00239c 4853
00239d 4400
00239e 2556
00239f 6431      	.DB  0x53,0x48,0x0,0x44,0x56,0x25,0x31,0x64
0023a0 4544
0023a1 4554
0023a2 5443
0023a3 4e49      	.DB  0x44,0x45,0x54,0x45,0x43,0x54,0x49,0x4E
0023a4 0047
0023a5 4f3c
0023a6 454c
0023a7 5f44      	.DB  0x47,0x0,0x3C,0x4F,0x4C,0x45,0x44,0x5F
0023a8 6873
0023a9 776f
0023aa 6553
0023ab 736e      	.DB  0x73,0x68,0x6F,0x77,0x53,0x65,0x6E,0x73
0023ac 726f
0023ad 6156
0023ae 756c
0023af 3e65      	.DB  0x6F,0x72,0x56,0x61,0x6C,0x75,0x65,0x3E
0023b0 7320
0023b1 6e65
0023b2 6f73
0023b3 5b72      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x5B
0023b4 6425
0023b5 2e5d
0023b6 7473
0023b7 7461      	.DB  0x25,0x64,0x5D,0x2E,0x73,0x74,0x61,0x74
0023b8 7375
0023b9 7520
0023ba 6b6e
0023bb 6f6e      	.DB  0x75,0x73,0x20,0x75,0x6E,0x6B,0x6E,0x6F
0023bc 6e77
0023bd 5b20
0023be 7830
0023bf 3025      	.DB  0x77,0x6E,0x20,0x5B,0x30,0x78,0x25,0x30
0023c0 5832
0023c1 0d5d
0023c2 000a
0023c3 5644      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x44,0x56
0023c4 3125
0023c5 4e64
0023c6 412f
0023c7 4300      	.DB  0x25,0x31,0x64,0x4E,0x2F,0x41,0x0,0x43
0023c8 3147
0023c9 4200
0023ca 304c
0023cb 4200      	.DB  0x47,0x31,0x0,0x42,0x4C,0x30,0x0,0x42
0023cc 314c
0023cd 4200
0023ce 324c
0023cf 4200      	.DB  0x4C,0x31,0x0,0x42,0x4C,0x32,0x0,0x42
0023d0 334c
0023d1 4200
0023d2 344c
0023d3 3c00      	.DB  0x4C,0x33,0x0,0x42,0x4C,0x34,0x0,0x3C
0023d4 4c4f
0023d5 4445
0023d6 735f
0023d7 6f68      	.DB  0x4F,0x4C,0x45,0x44,0x5F,0x73,0x68,0x6F
0023d8 4977
0023d9 706e
0023da 7475
0023db 7453      	.DB  0x77,0x49,0x6E,0x70,0x75,0x74,0x53,0x74
0023dc 7461
0023dd 7375
0023de 203e
0023df 5245      	.DB  0x61,0x74,0x75,0x73,0x3E,0x20,0x45,0x52
0023e0 3a52
0023e1 6320
0023e2 2068
0023e3 6176      	.DB  0x52,0x3A,0x20,0x63,0x68,0x20,0x76,0x61
0023e4 756c
0023e5 2065
0023e6 756f
0023e7 2074      	.DB  0x6C,0x75,0x65,0x20,0x6F,0x75,0x74,0x20
0023e8 666f
0023e9 7220
0023ea 6e61
0023eb 6567      	.DB  0x6F,0x66,0x20,0x72,0x61,0x6E,0x67,0x65
0023ec 212e
0023ed 0d21
0023ee 000a
0023ef 5049      	.DB  0x2E,0x21,0x21,0xD,0xA,0x0,0x49,0x50
0023f0 3125
0023f1 2564
0023f2 6431
0023f3 3c00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x3C
0023f4 4c4f
0023f5 4445
0023f6 735f
0023f7 6f68      	.DB  0x4F,0x4C,0x45,0x44,0x5F,0x73,0x68,0x6F
0023f8 4f77
0023f9 7475
0023fa 7570
0023fb 5374      	.DB  0x77,0x4F,0x75,0x74,0x70,0x75,0x74,0x53
0023fc 6174
0023fd 7574
0023fe 3e73
0023ff 4520      	.DB  0x74,0x61,0x74,0x75,0x73,0x3E,0x20,0x45
002400 5252
002401 203a
002402 6863
002403 7620      	.DB  0x52,0x52,0x3A,0x20,0x63,0x68,0x20,0x76
002404 6c61
002405 6575
002406 6f20
002407 7475      	.DB  0x61,0x6C,0x75,0x65,0x20,0x6F,0x75,0x74
002408 6f20
002409 2066
00240a 6172
00240b 676e      	.DB  0x20,0x6F,0x66,0x20,0x72,0x61,0x6E,0x67
00240c 2e65
00240d 2121
00240e 0a0d
00240f 4f00      	.DB  0x65,0x2E,0x21,0x21,0xD,0xA,0x0,0x4F
002410 2550
002411 6431
002412 3125
002413 0064      	.DB  0x50,0x25,0x31,0x64,0x25,0x31,0x64,0x0
002414 4353
002415 3125
002416 0064
002417 434c      	.DB  0x53,0x43,0x25,0x31,0x64,0x0,0x4C,0x43
002418 3125
002419 0064
00241a 5a42
00241b 3125      	.DB  0x25,0x31,0x64,0x0,0x42,0x5A,0x25,0x31
00241c 0064
00241d 534d
00241e 3125
00241f 0064      	.DB  0x64,0x0,0x4D,0x53,0x25,0x31,0x64,0x0
002420 4c41
002421 3125
002422 2564
002423 6431      	.DB  0x41,0x4C,0x25,0x31,0x64,0x25,0x31,0x64
002424 3125
002425 2564
002426 6431
002427 3125      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x25,0x31
002428 2564
002429 6431
00242a 3125
00242b 2564      	.DB  0x64,0x25,0x31,0x64,0x25,0x31,0x64,0x25
00242c 6431
00242d 3125
00242e 2564
00242f 6431      	.DB  0x31,0x64,0x25,0x31,0x64,0x25,0x31,0x64
002430 3125
002431 2564
002432 6431
002433 0d00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0xD
002434 210a
002435 2121
002436 2021
002437 4c4f      	.DB  0xA,0x21,0x21,0x21,0x21,0x20,0x4F,0x4C
002438 4445
002439 4520
00243a 7272
00243b 726f      	.DB  0x45,0x44,0x20,0x45,0x72,0x72,0x6F,0x72
00243c 2120
00243d 2121
00243e 0d21
00243f 000a      	.DB  0x20,0x21,0x21,0x21,0x21,0xD,0xA,0x0
002440 6e49
002441 7469
002442 6169
002443 696c      	.DB  0x49,0x6E,0x69,0x74,0x69,0x61,0x6C,0x69
002444 697a
002445 676e
002446 4f20
002447 454c      	.DB  0x7A,0x69,0x6E,0x67,0x20,0x4F,0x4C,0x45
002448 2e44
002449 202e
00244a 4f00
00244b 0d4b      	.DB  0x44,0x2E,0x2E,0x20,0x0,0x4F,0x4B,0xD
00244c 000a      	.DB  0xA,0x0
                 _0x260003:
00244d 3a30
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3568): warning: .cseg .db misalignment - padding zero byte
00244e 002f      	.DB  0x30,0x3A,0x2F
                 _0x260000:
00244f 4600
002450 5f52
002451 4944
002452 4b53      	.DB  0x0,0x46,0x52,0x5F,0x44,0x49,0x53,0x4B
002453 455f
002454 5252
002455 4600
002456 5f52      	.DB  0x5F,0x45,0x52,0x52,0x0,0x46,0x52,0x5F
002457 4e49
002458 5f54
002459 5245
00245a 0052      	.DB  0x49,0x4E,0x54,0x5F,0x45,0x52,0x52,0x0
00245b 5246
00245c 4e5f
00245d 544f
00245e 525f      	.DB  0x46,0x52,0x5F,0x4E,0x4F,0x54,0x5F,0x52
00245f 4145
002460 5944
002461 4600
002462 5f52      	.DB  0x45,0x41,0x44,0x59,0x0,0x46,0x52,0x5F
002463 4f4e
002464 465f
002465 4c49
002466 0045      	.DB  0x4E,0x4F,0x5F,0x46,0x49,0x4C,0x45,0x0
002467 5246
002468 4e5f
002469 5f4f
00246a 4150      	.DB  0x46,0x52,0x5F,0x4E,0x4F,0x5F,0x50,0x41
00246b 4854
00246c 4600
00246d 5f52
00246e 4e49      	.DB  0x54,0x48,0x0,0x46,0x52,0x5F,0x49,0x4E
00246f 4156
002470 494c
002471 5f44
002472 414e      	.DB  0x56,0x41,0x4C,0x49,0x44,0x5F,0x4E,0x41
002473 454d
002474 4600
002475 5f52
002476 4544      	.DB  0x4D,0x45,0x0,0x46,0x52,0x5F,0x44,0x45
002477 494e
002478 4445
002479 4600
00247a 5f52      	.DB  0x4E,0x49,0x45,0x44,0x0,0x46,0x52,0x5F
00247b 5845
00247c 5349
00247d 0054
00247e 5246      	.DB  0x45,0x58,0x49,0x53,0x54,0x0,0x46,0x52
00247f 495f
002480 564e
002481 4c41
002482 4449      	.DB  0x5F,0x49,0x4E,0x56,0x41,0x4C,0x49,0x44
002483 4f5f
002484 4a42
002485 4345
002486 0054      	.DB  0x5F,0x4F,0x42,0x4A,0x45,0x43,0x54,0x0
002487 5246
002488 575f
002489 4952
00248a 4554      	.DB  0x46,0x52,0x5F,0x57,0x52,0x49,0x54,0x45
00248b 505f
00248c 4f52
00248d 4554
00248e 5443      	.DB  0x5F,0x50,0x52,0x4F,0x54,0x45,0x43,0x54
00248f 4445
002490 4600
002491 5f52
002492 4e49      	.DB  0x45,0x44,0x0,0x46,0x52,0x5F,0x49,0x4E
002493 4156
002494 494c
002495 5f44
002496 5244      	.DB  0x56,0x41,0x4C,0x49,0x44,0x5F,0x44,0x52
002497 5649
002498 0045
002499 5246
00249a 4e5f      	.DB  0x49,0x56,0x45,0x0,0x46,0x52,0x5F,0x4E
00249b 544f
00249c 455f
00249d 414e
00249e 4c42      	.DB  0x4F,0x54,0x5F,0x45,0x4E,0x41,0x42,0x4C
00249f 4445
0024a0 4600
0024a1 5f52
0024a2 4f4e      	.DB  0x45,0x44,0x0,0x46,0x52,0x5F,0x4E,0x4F
0024a3 465f
0024a4 4c49
0024a5 5345
0024a6 5359      	.DB  0x5F,0x46,0x49,0x4C,0x45,0x53,0x59,0x53
0024a7 4554
0024a8 004d
0024a9 5246
0024aa 4d5f      	.DB  0x54,0x45,0x4D,0x0,0x46,0x52,0x5F,0x4D
0024ab 464b
0024ac 5f53
0024ad 4241
0024ae 524f      	.DB  0x4B,0x46,0x53,0x5F,0x41,0x42,0x4F,0x52
0024af 4554
0024b0 0044
0024b1 5246
0024b2 545f      	.DB  0x54,0x45,0x44,0x0,0x46,0x52,0x5F,0x54
0024b3 4d49
0024b4 4f45
0024b5 5455
0024b6 3c00      	.DB  0x49,0x4D,0x45,0x4F,0x55,0x54,0x0,0x3C
0024b7 5245
0024b8 3e52
0024b9 2520
0024ba 2e70      	.DB  0x45,0x52,0x52,0x3E,0x20,0x25,0x70,0x2E
0024bb 0a0d
0024bc 3c00
0024bd 4453
0024be 775f      	.DB  0xD,0xA,0x0,0x3C,0x53,0x44,0x5F,0x77
0024bf 6972
0024c0 6574
0024c1 6144
0024c2 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
0024c3 203e
0024c4 4453
0024c5 4320
0024c6 7261      	.DB  0x3E,0x20,0x53,0x44,0x20,0x43,0x61,0x72
0024c7 2064
0024c8 6f6e
0024c9 2074
0024ca 6572      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x72,0x65
0024cb 6461
0024cc 0d79
0024cd 000a
0024ce 533c      	.DB  0x61,0x64,0x79,0xD,0xA,0x0,0x3C,0x53
0024cf 5f44
0024d0 7277
0024d1 7469
0024d2 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
0024d3 7461
0024d4 3e61
0024d5 6620
0024d6 6c5f      	.DB  0x61,0x74,0x61,0x3E,0x20,0x66,0x5F,0x6C
0024d7 6573
0024d8 6b65
0024d9 2528
0024da 2975      	.DB  0x73,0x65,0x65,0x6B,0x28,0x25,0x75,0x29
0024db 6620
0024dc 6961
0024dd 656c
0024de 2164      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x21
0024df 0d21
0024e0 000a
0024e1 533c
0024e2 5f44      	.DB  0x21,0xD,0xA,0x0,0x3C,0x53,0x44,0x5F
0024e3 7277
0024e4 7469
0024e5 4465
0024e6 7461      	.DB  0x77,0x72,0x69,0x74,0x65,0x44,0x61,0x74
0024e7 3e61
0024e8 6620
0024e9 775f
0024ea 6972      	.DB  0x61,0x3E,0x20,0x66,0x5F,0x77,0x72,0x69
0024eb 6574
0024ec 2928
0024ed 6620
0024ee 6961      	.DB  0x74,0x65,0x28,0x29,0x20,0x66,0x61,0x69
0024ef 656c
0024f0 0d64
0024f1 000a
0024f2 533c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x53
0024f3 5f44
0024f4 7277
0024f5 7469
0024f6 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
0024f7 7461
0024f8 3e61
0024f9 6120
0024fa 7463      	.DB  0x61,0x74,0x61,0x3E,0x20,0x61,0x63,0x74
0024fb 6175
0024fc 5f6c
0024fd 7277
0024fe 7469      	.DB  0x75,0x61,0x6C,0x5F,0x77,0x72,0x69,0x74
0024ff 5b65
002500 7525
002501 205d
002502 3d21      	.DB  0x65,0x5B,0x25,0x75,0x5D,0x20,0x21,0x3D
002503 6c20
002504 6e65
002505 255b
002506 5d75      	.DB  0x20,0x6C,0x65,0x6E,0x5B,0x25,0x75,0x5D
002507 0a0d
002508 3c00
002509 4453
00250a 725f      	.DB  0xD,0xA,0x0,0x3C,0x53,0x44,0x5F,0x72
00250b 6165
00250c 4464
00250d 7461
00250e 3e61      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x3E
00250f 5320
002510 2044
002511 6143
002512 6472      	.DB  0x20,0x53,0x44,0x20,0x43,0x61,0x72,0x64
002513 6e20
002514 746f
002515 7220
002516 6165      	.DB  0x20,0x6E,0x6F,0x74,0x20,0x72,0x65,0x61
002517 7964
002518 0a0d
002519 3c00
00251a 4453      	.DB  0x64,0x79,0xD,0xA,0x0,0x3C,0x53,0x44
00251b 725f
00251c 6165
00251d 4464
00251e 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
00251f 3e61
002520 6620
002521 6c5f
002522 6573      	.DB  0x61,0x3E,0x20,0x66,0x5F,0x6C,0x73,0x65
002523 6b65
002524 2528
002525 2975
002526 6620      	.DB  0x65,0x6B,0x28,0x25,0x75,0x29,0x20,0x66
002527 6961
002528 656c
002529 2164
00252a 0d21      	.DB  0x61,0x69,0x6C,0x65,0x64,0x21,0x21,0xD
00252b 000a
00252c 533c
00252d 5f44
00252e 6572      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x72,0x65
00252f 6461
002530 6144
002531 6174
002532 203e      	.DB  0x61,0x64,0x44,0x61,0x74,0x61,0x3E,0x20
002533 5f66
002534 6572
002535 6461
002536 2928      	.DB  0x66,0x5F,0x72,0x65,0x61,0x64,0x28,0x29
002537 6620
002538 6961
002539 656c
00253a 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
00253b 000a
00253c 533c
00253d 5f44
00253e 7277      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x77,0x72
00253f 7469
002540 4465
002541 7461
002542 3e61      	.DB  0x69,0x74,0x65,0x44,0x61,0x74,0x61,0x3E
002543 6120
002544 7463
002545 6175
002546 5f6c      	.DB  0x20,0x61,0x63,0x74,0x75,0x61,0x6C,0x5F
002547 6572
002548 6461
002549 255b
00254a 5d75      	.DB  0x72,0x65,0x61,0x64,0x5B,0x25,0x75,0x5D
00254b 2120
00254c 203d
00254d 656c
00254e 5b6e      	.DB  0x20,0x21,0x3D,0x20,0x6C,0x65,0x6E,0x5B
00254f 7525
002550 0d5d
002551 000a
002552 533c      	.DB  0x25,0x75,0x5D,0xD,0xA,0x0,0x3C,0x53
002553 5f44
002554 6572
002555 6461
002556 654d      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x4D,0x65
002557 6f6d
002558 7972
002559 6552
00255a 616d      	.DB  0x6D,0x6F,0x72,0x79,0x52,0x65,0x6D,0x61
00255b 6e69
00255c 203e
00255d 5f66
00255e 6567      	.DB  0x69,0x6E,0x3E,0x20,0x66,0x5F,0x67,0x65
00255f 6674
002560 6572
002561 2865
002562 7325      	.DB  0x74,0x66,0x72,0x65,0x65,0x28,0x25,0x73
002563 2029
002564 7265
002565 6f72
002566 2172      	.DB  0x29,0x20,0x65,0x72,0x72,0x6F,0x72,0x21
002567 0d21
002568 000a
002569 6f4c
00256a 6967      	.DB  0x21,0xD,0xA,0x0,0x4C,0x6F,0x67,0x69
00256b 6163
00256c 206c
00256d 7264
00256e 7669      	.DB  0x63,0x61,0x6C,0x20,0x64,0x72,0x69,0x76
00256f 2065
002570 3a30
002571 6d20
002572 756f      	.DB  0x65,0x20,0x30,0x3A,0x20,0x6D,0x6F,0x75
002573 746e
002574 6465
002575 4520
002576 5252      	.DB  0x6E,0x74,0x65,0x64,0x20,0x45,0x52,0x52
002577 524f
002578 0a0d
002579 4c00
00257a 676f      	.DB  0x4F,0x52,0xD,0xA,0x0,0x4C,0x6F,0x67
00257b 6369
00257c 6c61
00257d 6420
00257e 6972      	.DB  0x69,0x63,0x61,0x6C,0x20,0x64,0x72,0x69
00257f 6576
002580 3020
002581 203a
002582 6f6d      	.DB  0x76,0x65,0x20,0x30,0x3A,0x20,0x6D,0x6F
002583 6e75
002584 6574
002585 2064
002586 4b4f      	.DB  0x75,0x6E,0x74,0x65,0x64,0x20,0x4F,0x4B
002587 0a0d
002588 4c00
002589 676f
00258a 6369      	.DB  0xD,0xA,0x0,0x4C,0x6F,0x67,0x69,0x63
00258b 6c61
00258c 6420
00258d 6972
00258e 6576      	.DB  0x61,0x6C,0x20,0x64,0x72,0x69,0x76,0x65
00258f 3020
002590 203a
002591 6e75
002592 6f6d      	.DB  0x20,0x30,0x3A,0x20,0x75,0x6E,0x6D,0x6F
002593 6e75
002594 6574
002595 2064
002596 5245      	.DB  0x75,0x6E,0x74,0x65,0x64,0x20,0x45,0x52
002597 4f52
002598 0d52
002599 000a
00259a 6f4c      	.DB  0x52,0x4F,0x52,0xD,0xA,0x0,0x4C,0x6F
00259b 6967
00259c 6163
00259d 206c
00259e 7264      	.DB  0x67,0x69,0x63,0x61,0x6C,0x20,0x64,0x72
00259f 7669
0025a0 2065
0025a1 3a30
0025a2 7520      	.DB  0x69,0x76,0x65,0x20,0x30,0x3A,0x20,0x75
0025a3 6d6e
0025a4 756f
0025a5 746e
0025a6 6465      	.DB  0x6E,0x6D,0x6F,0x75,0x6E,0x74,0x65,0x64
0025a7 4f20
0025a8 0d4b
0025a9 000a
0025aa 533c      	.DB  0x20,0x4F,0x4B,0xD,0xA,0x0,0x3C,0x53
0025ab 5f44
0025ac 6572
0025ad 6f6d
0025ae 6e75      	.DB  0x44,0x5F,0x72,0x65,0x6D,0x6F,0x75,0x6E
0025af 3e74
0025b0 5320
0025b1 5f44
0025b2 6e75      	.DB  0x74,0x3E,0x20,0x53,0x44,0x5F,0x75,0x6E
0025b3 6f6d
0025b4 6e75
0025b5 2874
0025b6 2029      	.DB  0x6D,0x6F,0x75,0x6E,0x74,0x28,0x29,0x20
0025b7 6166
0025b8 6c69
0025b9 6465
0025ba 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0025bb 3c00
0025bc 4453
0025bd 725f
0025be 6d65      	.DB  0x0,0x3C,0x53,0x44,0x5F,0x72,0x65,0x6D
0025bf 756f
0025c0 746e
0025c1 203e
0025c2 4453      	.DB  0x6F,0x75,0x6E,0x74,0x3E,0x20,0x53,0x44
0025c3 6d5f
0025c4 756f
0025c5 746e
0025c6 2928      	.DB  0x5F,0x6D,0x6F,0x75,0x6E,0x74,0x28,0x29
0025c7 6620
0025c8 6961
0025c9 656c
0025ca 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0025cb 000a
0025cc 533c
0025cd 5f44
0025ce 7263      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x63,0x72
0025cf 6165
0025d0 6574
0025d1 6946
0025d2 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
0025d3 203e
0025d4 4453
0025d5 4320
0025d6 7261      	.DB  0x3E,0x20,0x53,0x44,0x20,0x43,0x61,0x72
0025d7 2064
0025d8 6f6e
0025d9 2074
0025da 6572      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x72,0x65
0025db 6461
0025dc 0d79
0025dd 000a
0025de 7325      	.DB  0x61,0x64,0x79,0xD,0xA,0x0,0x25,0x73
0025df 7325
0025e0 3c00
0025e1 4453
0025e2 635f      	.DB  0x25,0x73,0x0,0x3C,0x53,0x44,0x5F,0x63
0025e3 6572
0025e4 7461
0025e5 4665
0025e6 6c69      	.DB  0x72,0x65,0x61,0x74,0x65,0x46,0x69,0x6C
0025e7 3e65
0025e8 6620
0025e9 6f5f
0025ea 6570      	.DB  0x65,0x3E,0x20,0x66,0x5F,0x6F,0x70,0x65
0025eb 286e
0025ec 2029
0025ed 6166
0025ee 6c69      	.DB  0x6E,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
0025ef 6465
0025f0 0a0d
0025f1 3c00
0025f2 4453      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x53,0x44
0025f3 635f
0025f4 6572
0025f5 7461
0025f6 4665      	.DB  0x5F,0x63,0x72,0x65,0x61,0x74,0x65,0x46
0025f7 6c69
0025f8 3e65
0025f9 6620
0025fa 635f      	.DB  0x69,0x6C,0x65,0x3E,0x20,0x66,0x5F,0x63
0025fb 6f6c
0025fc 6573
0025fd 2928
0025fe 6620      	.DB  0x6C,0x6F,0x73,0x65,0x28,0x29,0x20,0x66
0025ff 6961
002600 656c
002601 0d64
002602 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002603 533c
002604 5f44
002605 706f
002606 6e65      	.DB  0x3C,0x53,0x44,0x5F,0x6F,0x70,0x65,0x6E
002607 6946
002608 656c
002609 203e
00260a 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
00260b 4320
00260c 7261
00260d 2064
00260e 6f6e      	.DB  0x20,0x43,0x61,0x72,0x64,0x20,0x6E,0x6F
00260f 2074
002610 6572
002611 6461
002612 0d79      	.DB  0x74,0x20,0x72,0x65,0x61,0x64,0x79,0xD
002613 000a
002614 533c
002615 5f44
002616 706f      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x6F,0x70
002617 6e65
002618 6946
002619 656c
00261a 203e      	.DB  0x65,0x6E,0x46,0x69,0x6C,0x65,0x3E,0x20
00261b 5f66
00261c 706f
00261d 6e65
00261e 2928      	.DB  0x66,0x5F,0x6F,0x70,0x65,0x6E,0x28,0x29
00261f 5b20
002620 7325
002621 205d
002622 6166      	.DB  0x20,0x5B,0x25,0x73,0x5D,0x20,0x66,0x61
002623 6c69
002624 6465
002625 0a0d
002626 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002627 4453
002628 635f
002629 6f6c
00262a 6573      	.DB  0x53,0x44,0x5F,0x63,0x6C,0x6F,0x73,0x65
00262b 6946
00262c 656c
00262d 203e
00262e 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
00262f 4320
002630 7261
002631 2064
002632 6f6e      	.DB  0x20,0x43,0x61,0x72,0x64,0x20,0x6E,0x6F
002633 2074
002634 6572
002635 6461
002636 0d79      	.DB  0x74,0x20,0x72,0x65,0x61,0x64,0x79,0xD
002637 000a
002638 533c
002639 5f44
00263a 6c63      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x63,0x6C
00263b 736f
00263c 4665
00263d 6c69
00263e 3e65      	.DB  0x6F,0x73,0x65,0x46,0x69,0x6C,0x65,0x3E
00263f 6620
002640 635f
002641 6f6c
002642 6573      	.DB  0x20,0x66,0x5F,0x63,0x6C,0x6F,0x73,0x65
002643 2928
002644 6620
002645 6961
002646 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002647 0d64
002648 000a
002649 533c
00264a 5f44      	.DB  0x64,0xD,0xA,0x0,0x3C,0x53,0x44,0x5F
00264b 6e69
00264c 7469
00264d 203e
00264e 7453      	.DB  0x69,0x6E,0x69,0x74,0x3E,0x20,0x53,0x74
00264f 7261
002650 2074
002651 6e69
002652 7469      	.DB  0x61,0x72,0x74,0x20,0x69,0x6E,0x69,0x74
002653 6169
002654 206c
002655 656d
002656 6f6d      	.DB  0x69,0x61,0x6C,0x20,0x6D,0x65,0x6D,0x6F
002657 7972
002658 6320
002659 7261
00265a 0d64      	.DB  0x72,0x79,0x20,0x63,0x61,0x72,0x64,0xD
00265b 000a
00265c 0a0d
00265d 533c
00265e 5f44      	.DB  0xA,0x0,0xD,0xA,0x3C,0x53,0x44,0x5F
00265f 6e69
002660 7469
002661 203e
002662 6f4d      	.DB  0x69,0x6E,0x69,0x74,0x3E,0x20,0x4D,0x6F
002663 6e75
002664 6974
002665 676e
002666 5320      	.DB  0x75,0x6E,0x74,0x69,0x6E,0x67,0x20,0x53
002667 2044
002668 6143
002669 6472
00266a 2e2e      	.DB  0x44,0x20,0x43,0x61,0x72,0x64,0x2E,0x2E
00266b 002e
00266c 533c
00266d 5f44
00266e 6e69      	.DB  0x2E,0x0,0x3C,0x53,0x44,0x5F,0x69,0x6E
00266f 7469
002670 203e
002671 4453
002672 6d5f      	.DB  0x69,0x74,0x3E,0x20,0x53,0x44,0x5F,0x6D
002673 756f
002674 746e
002675 2928
002676 6620      	.DB  0x6F,0x75,0x6E,0x74,0x28,0x29,0x20,0x66
002677 6961
002678 656c
002679 0d64
00267a 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00267b 0a0d
00267c 533c
00267d 5f44
00267e 6e69      	.DB  0xD,0xA,0x3C,0x53,0x44,0x5F,0x69,0x6E
00267f 7469
002680 203e
002681 6843
002682 6365      	.DB  0x69,0x74,0x3E,0x20,0x43,0x68,0x65,0x63
002683 206b
002684 6143
002685 6472
002686 5320      	.DB  0x6B,0x20,0x43,0x61,0x72,0x64,0x20,0x53
002687 7a69
002688 2e65
002689 2e2e
00268a 3c00      	.DB  0x69,0x7A,0x65,0x2E,0x2E,0x2E,0x0,0x3C
00268b 4453
00268c 695f
00268d 696e
00268e 3e74      	.DB  0x53,0x44,0x5F,0x69,0x6E,0x69,0x74,0x3E
00268f 5320
002690 5f44
002691 6572
002692 6461      	.DB  0x20,0x53,0x44,0x5F,0x72,0x65,0x61,0x64
002693 654d
002694 6f6d
002695 7972
002696 6552      	.DB  0x4D,0x65,0x6D,0x6F,0x72,0x79,0x52,0x65
002697 616d
002698 6e69
002699 2928
00269a 6620      	.DB  0x6D,0x61,0x69,0x6E,0x28,0x29,0x20,0x66
00269b 6961
00269c 656c
00269d 0d64
00269e 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00269f 533c
0026a0 5f44
0026a1 6e69
0026a2 7469      	.DB  0x3C,0x53,0x44,0x5F,0x69,0x6E,0x69,0x74
0026a3 203e
0026a4 7246
0026a5 6565
0026a6 7320      	.DB  0x3E,0x20,0x46,0x72,0x65,0x65,0x20,0x73
0026a7 6170
0026a8 6563
0026a9 6f20
0026aa 206e      	.DB  0x70,0x61,0x63,0x65,0x20,0x6F,0x6E,0x20
0026ab 6f6c
0026ac 6967
0026ad 6163
0026ae 206c      	.DB  0x6C,0x6F,0x67,0x69,0x63,0x61,0x6C,0x20
0026af 7264
0026b0 7669
0026b1 2065
0026b2 3a30      	.DB  0x64,0x72,0x69,0x76,0x65,0x20,0x30,0x3A
0026b3 2520
0026b4 756c
0026b5 6b20
0026b6 7962      	.DB  0x20,0x25,0x6C,0x75,0x20,0x6B,0x62,0x79
0026b7 6574
0026b8 0d73
0026b9 000a      	.DB  0x74,0x65,0x73,0xD,0xA,0x0
                 _0x280003:
0026ba 6164
0026bb 6174
0026bc 6c2e
0026bd 676f      	.DB  0x64,0x61,0x74,0x61,0x2E,0x6C,0x6F,0x67
                 _0x280004:
0026be 7665
0026bf 6e65
0026c0 2e74
0026c1 6f6c      	.DB  0x65,0x76,0x65,0x6E,0x74,0x2E,0x6C,0x6F
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3729): warning: .cseg .db misalignment - padding zero byte
0026c2 0067      	.DB  0x67
                 _0x280005:
0026c3 7265
0026c4 6f72
0026c5 2e72
0026c6 6f6c      	.DB  0x65,0x72,0x72,0x6F,0x72,0x2E,0x6C,0x6F
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3732): warning: .cseg .db misalignment - padding zero byte
0026c7 0067      	.DB  0x67
                 _0x280006:
0026c8 0000
0026c9 0000
0026ca 0000
0026cb 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0026cc ffff
0026cd ffff
0026ce ffff
0026cf ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x280007:
0026d0 718c
0026d1 0000      	.DB  LOW(_SD_openFile),HIGH(_SD_openFile),BYTE3(_SD_openFile),BYTE4(_SD_openFile)
                 _0x280008:
0026d2 71cb
0026d3 0000      	.DB  LOW(_SD_closeFile),HIGH(_SD_closeFile),BYTE3(_SD_closeFile),BYTE4(_SD_closeFile)
                 _0x280000:
0026d4 4c3c
0026d5 474f
0026d6 695f
0026d7 736e      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x69,0x6E,0x73
0026d8 7265
0026d9 4474
0026da 7461
0026db 3e61      	.DB  0x65,0x72,0x74,0x44,0x61,0x74,0x61,0x3E
0026dc 4c20
0026dd 474f
0026de 675f
0026df 7465      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
0026e0 614c
0026e1 7473
0026e2 6e49
0026e3 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
0026e4 7472
0026e5 2928
0026e6 6620
0026e7 6961      	.DB  0x72,0x74,0x28,0x29,0x20,0x66,0x61,0x69
0026e8 656c
0026e9 0d64
0026ea 000a
0026eb 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
0026ec 474f
0026ed 695f
0026ee 736e
0026ef 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
0026f0 4474
0026f1 7461
0026f2 3e61
0026f3 5320      	.DB  0x74,0x44,0x61,0x74,0x61,0x3E,0x20,0x53
0026f4 5f44
0026f5 7277
0026f6 7469
0026f7 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
0026f8 7461
0026f9 2861
0026fa 6c66
0026fb 6761      	.DB  0x61,0x74,0x61,0x28,0x66,0x6C,0x61,0x67
0026fc 2029
0026fd 6166
0026fe 6c69
0026ff 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002700 0a0d
002701 3c00
002702 4f4c
002703 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002704 6e69
002705 6573
002706 7472
002707 6144      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x44,0x61
002708 6174
002709 203e
00270a 4453
00270b 775f      	.DB  0x74,0x61,0x3E,0x20,0x53,0x44,0x5F,0x77
00270c 6972
00270d 6574
00270e 6144
00270f 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
002710 7428
002711 6d69
002712 7365
002713 6174      	.DB  0x28,0x74,0x69,0x6D,0x65,0x73,0x74,0x61
002714 706d
002715 2029
002716 6166
002717 6c69      	.DB  0x6D,0x70,0x29,0x20,0x66,0x61,0x69,0x6C
002718 6465
002719 0a0d
00271a 3c00
00271b 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
00271c 5f47
00271d 6e69
00271e 6573
00271f 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
002720 6144
002721 6174
002722 203e
002723 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
002724 775f
002725 6972
002726 6574
002727 6144      	.DB  0x5F,0x77,0x72,0x69,0x74,0x65,0x44,0x61
002728 6174
002729 6328
00272a 6168
00272b 6e6e      	.DB  0x74,0x61,0x28,0x63,0x68,0x61,0x6E,0x6E
00272c 6c65
00272d 2029
00272e 6166
00272f 6c69      	.DB  0x65,0x6C,0x29,0x20,0x66,0x61,0x69,0x6C
002730 6465
002731 0a0d
002732 3c00
002733 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002734 5f47
002735 6e69
002736 6573
002737 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
002738 6144
002739 6174
00273a 203e
00273b 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
00273c 775f
00273d 6972
00273e 6574
00273f 6144      	.DB  0x5F,0x77,0x72,0x69,0x74,0x65,0x44,0x61
002740 6174
002741 7628
002742 6c61
002743 6575      	.DB  0x74,0x61,0x28,0x76,0x61,0x6C,0x75,0x65
002744 2029
002745 6166
002746 6c69
002747 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002748 0a0d
002749 3c00
00274a 4f4c
00274b 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
00274c 6e69
00274d 6573
00274e 7472
00274f 6144      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x44,0x61
002750 6174
002751 203e
002752 4f4c
002753 5f47      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F
002754 6573
002755 4c74
002756 7361
002757 4974      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
002758 736e
002759 7265
00275a 2874
00275b 6c25      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x25,0x6C
00275c 2964
00275d 6620
00275e 6961
00275f 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002760 0d64
002761 000a
002762 4c3c
002763 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002764 725f
002765 6165
002766 4464
002767 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
002768 3e61
002769 4c20
00276a 474f
00276b 675f      	.DB  0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x67
00276c 7465
00276d 614c
00276e 7473
00276f 6e49      	.DB  0x65,0x74,0x4C,0x61,0x73,0x74,0x49,0x6E
002770 6573
002771 7472
002772 2928
002773 6620      	.DB  0x73,0x65,0x72,0x74,0x28,0x29,0x20,0x66
002774 6961
002775 656c
002776 0d64
002777 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002778 4c3c
002779 474f
00277a 725f
00277b 6165      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61
00277c 4464
00277d 7461
00277e 3e61
00277f 4c20      	.DB  0x64,0x44,0x61,0x74,0x61,0x3E,0x20,0x4C
002780 474f
002781 675f
002782 7465
002783 614c      	.DB  0x4F,0x47,0x5F,0x67,0x65,0x74,0x4C,0x61
002784 7473
002785 6553
002786 646e
002787 2928      	.DB  0x73,0x74,0x53,0x65,0x6E,0x64,0x28,0x29
002788 6620
002789 6961
00278a 656c
00278b 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
00278c 000a
00278d 4c3c
00278e 474f
00278f 725f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x72
002790 6165
002791 4564
002792 6576
002793 746e      	.DB  0x65,0x61,0x64,0x45,0x76,0x65,0x6E,0x74
002794 203e
002795 616c
002796 7473
002797 6553      	.DB  0x3E,0x20,0x6C,0x61,0x73,0x74,0x53,0x65
002798 646e
002799 6c2f
00279a 7361
00279b 4974      	.DB  0x6E,0x64,0x2F,0x6C,0x61,0x73,0x74,0x49
00279c 736e
00279d 7265
00279e 2074
00279f 2d20      	.DB  0x6E,0x73,0x65,0x72,0x74,0x20,0x20,0x2D
0027a0 3e2d
0027a1 2520
0027a2 646c
0027a3 252f      	.DB  0x2D,0x3E,0x20,0x25,0x6C,0x64,0x2F,0x25
0027a4 646c
0027a5 0a0d
0027a6 3c00
0027a7 4f4c      	.DB  0x6C,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
0027a8 5f47
0027a9 6572
0027aa 6461
0027ab 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
0027ac 6174
0027ad 203e
0027ae 6f4c
0027af 2067      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x6F,0x67,0x20
0027b0 6d65
0027b1 7470
0027b2 2e79
0027b3 212e      	.DB  0x65,0x6D,0x70,0x74,0x79,0x2E,0x2E,0x21
0027b4 0d21
0027b5 000a
0027b6 443c
0027b7 4245      	.DB  0x21,0xD,0xA,0x0,0x3C,0x44,0x45,0x42
0027b8 4755
0027b9 435f
0027ba 656c
0027bb 7261      	.DB  0x55,0x47,0x5F,0x43,0x6C,0x65,0x61,0x72
0027bc 6f4c
0027bd 4667
0027be 6c69
0027bf 3e65      	.DB  0x4C,0x6F,0x67,0x46,0x69,0x6C,0x65,0x3E
0027c0 4c20
0027c1 474f
0027c2 635f
0027c3 6572      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65
0027c4 7461
0027c5 4665
0027c6 6c69
0027c7 2865      	.DB  0x61,0x74,0x65,0x46,0x69,0x6C,0x65,0x28
0027c8 7325
0027c9 2029
0027ca 6166
0027cb 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
0027cc 6465
0027cd 0a0d
0027ce 3c00
0027cf 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
0027d0 5f47
0027d1 6572
0027d2 6461
0027d3 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
0027d4 6174
0027d5 203e
0027d6 4453
0027d7 725f      	.DB  0x74,0x61,0x3E,0x20,0x53,0x44,0x5F,0x72
0027d8 6165
0027d9 4464
0027da 7461
0027db 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
0027dc 6c66
0027dd 6761
0027de 2029
0027df 6166      	.DB  0x66,0x6C,0x61,0x67,0x29,0x20,0x66,0x61
0027e0 6c69
0027e1 6465
0027e2 0a0d
0027e3 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0027e4 4f4c
0027e5 5f47
0027e6 6572
0027e7 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
0027e8 6144
0027e9 6174
0027ea 203e
0027eb 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
0027ec 725f
0027ed 6165
0027ee 4464
0027ef 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
0027f0 2861
0027f1 6974
0027f2 656d
0027f3 7473      	.DB  0x61,0x28,0x74,0x69,0x6D,0x65,0x73,0x74
0027f4 6d61
0027f5 2970
0027f6 6620
0027f7 6961      	.DB  0x61,0x6D,0x70,0x29,0x20,0x66,0x61,0x69
0027f8 656c
0027f9 0d64
0027fa 000a
0027fb 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
0027fc 474f
0027fd 725f
0027fe 6165
0027ff 4464      	.DB  0x4F,0x47,0x5F,0x72,0x65,0x61,0x64,0x44
002800 7461
002801 3e61
002802 5320
002803 5f44      	.DB  0x61,0x74,0x61,0x3E,0x20,0x53,0x44,0x5F
002804 6572
002805 6461
002806 6144
002807 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002808 6328
002809 6168
00280a 6e6e
00280b 6c65      	.DB  0x28,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
00280c 2029
00280d 6166
00280e 6c69
00280f 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002810 0a0d
002811 3c00
002812 4f4c
002813 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002814 6572
002815 6461
002816 6144
002817 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002818 203e
002819 4453
00281a 725f
00281b 6165      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x72,0x65,0x61
00281c 4464
00281d 7461
00281e 2861
00281f 6176      	.DB  0x64,0x44,0x61,0x74,0x61,0x28,0x76,0x61
002820 756c
002821 2965
002822 6620
002823 6961      	.DB  0x6C,0x75,0x65,0x29,0x20,0x66,0x61,0x69
002824 656c
002825 0d64
002826 000a
002827 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002828 474f
002829 695f
00282a 736e
00282b 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
00282c 4574
00282d 6576
00282e 746e
00282f 203e      	.DB  0x74,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002830 4f4c
002831 5f47
002832 6567
002833 4c74      	.DB  0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74,0x4C
002834 7361
002835 4974
002836 736e
002837 7265      	.DB  0x61,0x73,0x74,0x49,0x6E,0x73,0x65,0x72
002838 2874
002839 2029
00283a 6166
00283b 6c69      	.DB  0x74,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00283c 6465
00283d 0a0d
00283e 3c00
00283f 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002840 5f47
002841 6e69
002842 6573
002843 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
002844 7645
002845 6e65
002846 3e74
002847 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002848 5f44
002849 7277
00284a 7469
00284b 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
00284c 7461
00284d 2861
00284e 6c66
00284f 6761      	.DB  0x61,0x74,0x61,0x28,0x66,0x6C,0x61,0x67
002850 2029
002851 6166
002852 6c69
002853 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002854 0a0d
002855 3c00
002856 4f4c
002857 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002858 6e69
002859 6573
00285a 7472
00285b 7645      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x45,0x76
00285c 6e65
00285d 3e74
00285e 5320
00285f 5f44      	.DB  0x65,0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F
002860 7277
002861 7469
002862 4465
002863 7461      	.DB  0x77,0x72,0x69,0x74,0x65,0x44,0x61,0x74
002864 2861
002865 6974
002866 656d
002867 7473      	.DB  0x61,0x28,0x74,0x69,0x6D,0x65,0x73,0x74
002868 6d61
002869 2970
00286a 6620
00286b 6961      	.DB  0x61,0x6D,0x70,0x29,0x20,0x66,0x61,0x69
00286c 656c
00286d 0d64
00286e 000a
00286f 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002870 474f
002871 695f
002872 736e
002873 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
002874 4574
002875 6576
002876 746e
002877 203e      	.DB  0x74,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002878 4453
002879 775f
00287a 6972
00287b 6574      	.DB  0x53,0x44,0x5F,0x77,0x72,0x69,0x74,0x65
00287c 6144
00287d 6174
00287e 6928
00287f 2964      	.DB  0x44,0x61,0x74,0x61,0x28,0x69,0x64,0x29
002880 6620
002881 6961
002882 656c
002883 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002884 000a
002885 4c3c
002886 474f
002887 695f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x69
002888 736e
002889 7265
00288a 4574
00288b 6576      	.DB  0x6E,0x73,0x65,0x72,0x74,0x45,0x76,0x65
00288c 746e
00288d 203e
00288e 4453
00288f 775f      	.DB  0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F,0x77
002890 6972
002891 6574
002892 6144
002893 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
002894 7328
002895 6174
002896 7574
002897 2973      	.DB  0x28,0x73,0x74,0x61,0x74,0x75,0x73,0x29
002898 6620
002899 6961
00289a 656c
00289b 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
00289c 000a
00289d 4c3c
00289e 474f
00289f 695f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x69
0028a0 736e
0028a1 7265
0028a2 4574
0028a3 6576      	.DB  0x6E,0x73,0x65,0x72,0x74,0x45,0x76,0x65
0028a4 746e
0028a5 203e
0028a6 4f4c
0028a7 5f47      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
0028a8 6573
0028a9 4c74
0028aa 7361
0028ab 4974      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
0028ac 736e
0028ad 7265
0028ae 2874
0028af 6c25      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x25,0x6C
0028b0 2964
0028b1 6620
0028b2 6961
0028b3 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0028b4 0d64
0028b5 000a
0028b6 4c3c
0028b7 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
0028b8 725f
0028b9 6165
0028ba 4564
0028bb 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
0028bc 746e
0028bd 203e
0028be 4f4c
0028bf 5f47      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
0028c0 6567
0028c1 4c74
0028c2 7361
0028c3 4974      	.DB  0x67,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
0028c4 736e
0028c5 7265
0028c6 2874
0028c7 2029      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x29,0x20
0028c8 6166
0028c9 6c69
0028ca 6465
0028cb 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0028cc 3c00
0028cd 4f4c
0028ce 5f47
0028cf 6572      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65
0028d0 6461
0028d1 7645
0028d2 6e65
0028d3 3e74      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x3E
0028d4 4c20
0028d5 474f
0028d6 675f
0028d7 7465      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
0028d8 614c
0028d9 7473
0028da 6553
0028db 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
0028dc 2928
0028dd 6620
0028de 6961
0028df 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0028e0 0d64
0028e1 000a
0028e2 4c3c
0028e3 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
0028e4 725f
0028e5 6165
0028e6 4564
0028e7 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
0028e8 746e
0028e9 203e
0028ea 6f4c
0028eb 2067      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x6F,0x67,0x20
0028ec 6d65
0028ed 7470
0028ee 2e79
0028ef 212e      	.DB  0x65,0x6D,0x70,0x74,0x79,0x2E,0x2E,0x21
0028f0 0d21
0028f1 000a
0028f2 4c3c
0028f3 474f      	.DB  0x21,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
0028f4 725f
0028f5 6165
0028f6 4564
0028f7 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
0028f8 746e
0028f9 203e
0028fa 4453
0028fb 725f      	.DB  0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F,0x72
0028fc 6165
0028fd 4464
0028fe 7461
0028ff 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002900 6c66
002901 6761
002902 2029
002903 6166      	.DB  0x66,0x6C,0x61,0x67,0x29,0x20,0x66,0x61
002904 6c69
002905 6465
002906 0a0d
002907 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002908 4f4c
002909 5f47
00290a 6572
00290b 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
00290c 7645
00290d 6e65
00290e 3e74
00290f 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002910 5f44
002911 6572
002912 6461
002913 6144      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002914 6174
002915 7428
002916 6d69
002917 7365      	.DB  0x74,0x61,0x28,0x74,0x69,0x6D,0x65,0x73
002918 6174
002919 706d
00291a 2029
00291b 6166      	.DB  0x74,0x61,0x6D,0x70,0x29,0x20,0x66,0x61
00291c 6c69
00291d 6465
00291e 0a0d
00291f 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002920 4f4c
002921 5f47
002922 6572
002923 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
002924 7645
002925 6e65
002926 3e74
002927 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002928 5f44
002929 6572
00292a 6461
00292b 6144      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
00292c 6174
00292d 6928
00292e 2964
00292f 6620      	.DB  0x74,0x61,0x28,0x69,0x64,0x29,0x20,0x66
002930 6961
002931 656c
002932 0d64
002933 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002934 4c3c
002935 474f
002936 725f
002937 6165      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61
002938 4564
002939 6576
00293a 746e
00293b 203e      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
00293c 4453
00293d 725f
00293e 6165
00293f 4464      	.DB  0x53,0x44,0x5F,0x72,0x65,0x61,0x64,0x44
002940 7461
002941 2861
002942 7473
002943 7461      	.DB  0x61,0x74,0x61,0x28,0x73,0x74,0x61,0x74
002944 7375
002945 2029
002946 6166
002947 6c69      	.DB  0x75,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
002948 6465
002949 0a0d
00294a 3c00
00294b 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
00294c 5f47
00294d 6567
00294e 4c74
00294f 7361      	.DB  0x47,0x5F,0x67,0x65,0x74,0x4C,0x61,0x73
002950 4974
002951 736e
002952 7265
002953 3e74      	.DB  0x74,0x49,0x6E,0x73,0x65,0x72,0x74,0x3E
002954 5320
002955 5f44
002956 6572
002957 6461      	.DB  0x20,0x53,0x44,0x5F,0x72,0x65,0x61,0x64
002958 6144
002959 6174
00295a 2928
00295b 6620      	.DB  0x44,0x61,0x74,0x61,0x28,0x29,0x20,0x66
00295c 6961
00295d 656c
00295e 0d64
00295f 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002960 4c3c
002961 474f
002962 675f
002963 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
002964 614c
002965 7473
002966 6e49
002967 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
002968 7472
002969 203e
00296a 6f67
00296b 2074      	.DB  0x72,0x74,0x3E,0x20,0x67,0x6F,0x74,0x20
00296c 6c25
00296d 0d64
00296e 000a
00296f 4c3c      	.DB  0x25,0x6C,0x64,0xD,0xA,0x0,0x3C,0x4C
002970 474f
002971 735f
002972 7465
002973 614c      	.DB  0x4F,0x47,0x5F,0x73,0x65,0x74,0x4C,0x61
002974 7473
002975 6e49
002976 6573
002977 7472      	.DB  0x73,0x74,0x49,0x6E,0x73,0x65,0x72,0x74
002978 203e
002979 7277
00297a 7469
00297b 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
00297c 2067
00297d 6c25
00297e 0d64
00297f 000a      	.DB  0x67,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002980 4c3c
002981 474f
002982 735f
002983 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002984 614c
002985 7473
002986 6e49
002987 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
002988 7472
002989 203e
00298a 4453
00298b 725f      	.DB  0x72,0x74,0x3E,0x20,0x53,0x44,0x5F,0x72
00298c 6165
00298d 4464
00298e 7461
00298f 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002990 2029
002991 6166
002992 6c69
002993 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002994 0a0d
002995 3c00
002996 4f4c
002997 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002998 6567
002999 4c74
00299a 7361
00299b 5374      	.DB  0x67,0x65,0x74,0x4C,0x61,0x73,0x74,0x53
00299c 6e65
00299d 3e64
00299e 5320
00299f 5f44      	.DB  0x65,0x6E,0x64,0x3E,0x20,0x53,0x44,0x5F
0029a0 6572
0029a1 6461
0029a2 6144
0029a3 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
0029a4 2928
0029a5 6620
0029a6 6961
0029a7 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0029a8 0d64
0029a9 000a
0029aa 4c3c
0029ab 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
0029ac 675f
0029ad 7465
0029ae 614c
0029af 7473      	.DB  0x5F,0x67,0x65,0x74,0x4C,0x61,0x73,0x74
0029b0 6553
0029b1 646e
0029b2 203e
0029b3 6f67      	.DB  0x53,0x65,0x6E,0x64,0x3E,0x20,0x67,0x6F
0029b4 2074
0029b5 6c25
0029b6 0d64
0029b7 000a      	.DB  0x74,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
0029b8 4c3c
0029b9 474f
0029ba 735f
0029bb 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
0029bc 614c
0029bd 7473
0029be 6553
0029bf 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
0029c0 203e
0029c1 7277
0029c2 7469
0029c3 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
0029c4 2067
0029c5 6c25
0029c6 0d64
0029c7 000a      	.DB  0x67,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
0029c8 4c3c
0029c9 474f
0029ca 735f
0029cb 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
0029cc 614c
0029cd 7473
0029ce 6553
0029cf 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
0029d0 203e
0029d1 4453
0029d2 725f
0029d3 6165      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x72,0x65,0x61
0029d4 4464
0029d5 7461
0029d6 2861
0029d7 2029      	.DB  0x64,0x44,0x61,0x74,0x61,0x28,0x29,0x20
0029d8 6166
0029d9 6c69
0029da 6465
0029db 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0029dc 3c00
0029dd 4f4c
0029de 5f47
0029df 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
0029e0 6165
0029e1 6574
0029e2 6946
0029e3 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
0029e4 203e
0029e5 4453
0029e6 635f
0029e7 6572      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x63,0x72,0x65
0029e8 7461
0029e9 4665
0029ea 6c69
0029eb 2865      	.DB  0x61,0x74,0x65,0x46,0x69,0x6C,0x65,0x28
0029ec 7325
0029ed 2029
0029ee 6166
0029ef 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
0029f0 6465
0029f1 0a0d
0029f2 3c00
0029f3 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
0029f4 5f47
0029f5 7263
0029f6 6165
0029f7 6574      	.DB  0x47,0x5F,0x63,0x72,0x65,0x61,0x74,0x65
0029f8 6946
0029f9 656c
0029fa 203e
0029fb 7325      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x25,0x73
0029fc 6120
0029fd 726c
0029fe 6165
0029ff 7964      	.DB  0x20,0x61,0x6C,0x72,0x65,0x61,0x64,0x79
002a00 6520
002a01 6978
002a02 7473
002a03 0a0d      	.DB  0x20,0x65,0x78,0x69,0x73,0x74,0xD,0xA
002a04 3c00
002a05 4f4c
002a06 5f47
002a07 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002a08 6165
002a09 6574
002a0a 6946
002a0b 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002a0c 203e
002a0d 7325
002a0e 6320
002a0f 6572      	.DB  0x3E,0x20,0x25,0x73,0x20,0x63,0x72,0x65
002a10 7461
002a11 6465
002a12 0a0d
002a13 3c00      	.DB  0x61,0x74,0x65,0x64,0xD,0xA,0x0,0x3C
002a14 4f4c
002a15 5f47
002a16 7263
002a17 6165      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65,0x61
002a18 6574
002a19 6946
002a1a 656c
002a1b 203e      	.DB  0x74,0x65,0x46,0x69,0x6C,0x65,0x3E,0x20
002a1c 7325
002a1d 6320
002a1e 6e6f
002a1f 6174      	.DB  0x25,0x73,0x20,0x63,0x6F,0x6E,0x74,0x61
002a20 6e69
002a21 6465
002a22 6e20
002a23 206f      	.DB  0x69,0x6E,0x65,0x64,0x20,0x6E,0x6F,0x20
002a24 6e69
002a25 7469
002a26 6169
002a27 206c      	.DB  0x69,0x6E,0x69,0x74,0x69,0x61,0x6C,0x20
002a28 6164
002a29 6174
002a2a 0a0d
002a2b 3c00      	.DB  0x64,0x61,0x74,0x61,0xD,0xA,0x0,0x3C
002a2c 4f4c
002a2d 5f47
002a2e 7263
002a2f 6165      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65,0x61
002a30 6574
002a31 6946
002a32 656c
002a33 203e      	.DB  0x74,0x65,0x46,0x69,0x6C,0x65,0x3E,0x20
002a34 4453
002a35 6f5f
002a36 6570
002a37 466e      	.DB  0x53,0x44,0x5F,0x6F,0x70,0x65,0x6E,0x46
002a38 6c69
002a39 2865
002a3a 7325
002a3b 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
002a3c 6166
002a3d 6c69
002a3e 6465
002a3f 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002a40 3c00
002a41 4f4c
002a42 5f47
002a43 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002a44 6165
002a45 6574
002a46 6946
002a47 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002a48 203e
002a49 7277
002a4a 7469
002a4b 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002a4c 2067
002a4d 6e69
002a4e 7469
002a4f 6169      	.DB  0x67,0x20,0x69,0x6E,0x69,0x74,0x69,0x61
002a50 206c
002a51 6164
002a52 6174
002a53 0a0d      	.DB  0x6C,0x20,0x64,0x61,0x74,0x61,0xD,0xA
002a54 3c00
002a55 4f4c
002a56 5f47
002a57 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002a58 6165
002a59 6574
002a5a 6946
002a5b 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002a5c 203e
002a5d 4453
002a5e 775f
002a5f 6972      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x77,0x72,0x69
002a60 6574
002a61 6144
002a62 6174
002a63 2928      	.DB  0x74,0x65,0x44,0x61,0x74,0x61,0x28,0x29
002a64 6620
002a65 6961
002a66 656c
002a67 2064      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x20
002a68 7257
002a69 7469
002a6a 6e69
002a6b 2e67      	.DB  0x57,0x72,0x69,0x74,0x69,0x6E,0x67,0x2E
002a6c 202e
002a6d 0a0d
002a6e 3c00
002a6f 4f4c      	.DB  0x2E,0x20,0xD,0xA,0x0,0x3C,0x4C,0x4F
002a70 5f47
002a71 7263
002a72 6165
002a73 6574      	.DB  0x47,0x5F,0x63,0x72,0x65,0x61,0x74,0x65
002a74 6946
002a75 656c
002a76 203e
002a77 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
002a78 635f
002a79 6f6c
002a7a 6573
002a7b 6946      	.DB  0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46,0x69
002a7c 656c
002a7d 2928
002a7e 6620
002a7f 6961      	.DB  0x6C,0x65,0x28,0x29,0x20,0x66,0x61,0x69
002a80 656c
002a81 0d64
002a82 000a
002a83 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002a84 474f
002a85 695f
002a86 696e
002a87 3e74      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x69,0x74,0x3E
002a88 4920
002a89 696e
002a8a 6974
002a8b 6c61      	.DB  0x20,0x49,0x6E,0x69,0x74,0x69,0x61,0x6C
002a8c 6c20
002a8d 676f
002a8e 6620
002a8f 6c69      	.DB  0x20,0x6C,0x6F,0x67,0x20,0x66,0x69,0x6C
002a90 0d65
002a91 000a
002a92 4c3c
002a93 474f      	.DB  0x65,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002a94 695f
002a95 696e
002a96 3e74
002a97 4c20      	.DB  0x5F,0x69,0x6E,0x69,0x74,0x3E,0x20,0x4C
002a98 474f
002a99 635f
002a9a 6572
002a9b 7461      	.DB  0x4F,0x47,0x5F,0x63,0x72,0x65,0x61,0x74
002a9c 4665
002a9d 6c69
002a9e 2865
002a9f 7325      	.DB  0x65,0x46,0x69,0x6C,0x65,0x28,0x25,0x73
002aa0 2029
002aa1 6166
002aa2 6c69
002aa3 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002aa4 0a0d
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3985): warning: .cseg .db misalignment - padding zero byte
002aa5 0000      	.DB  0xD,0xA,0x0
                 _0x2A0000:
002aa6 0a0d
002aa7 0a0d
002aa8 613c
002aa9 6464      	.DB  0xD,0xA,0xD,0xA,0x3C,0x61,0x64,0x64
002aaa 6144
002aab 6174
002aac 6f4c
002aad 5167      	.DB  0x44,0x61,0x74,0x61,0x4C,0x6F,0x67,0x51
002aae 6575
002aaf 6575
002ab0 203e
002ab1 4157      	.DB  0x75,0x65,0x75,0x65,0x3E,0x20,0x57,0x41
002ab2 4e52
002ab3 4e49
002ab4 2047
002ab5 203a      	.DB  0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A,0x20
002ab6 6164
002ab7 6174
002ab8 6f4c
002ab9 5167      	.DB  0x64,0x61,0x74,0x61,0x4C,0x6F,0x67,0x51
002aba 6575
002abb 6575
002abc 4620
002abd 4c55      	.DB  0x75,0x65,0x75,0x65,0x20,0x46,0x55,0x4C
002abe 0d4c
002abf 0d0a
002ac0 000a
002ac1 0a0d      	.DB  0x4C,0xD,0xA,0xD,0xA,0x0,0xD,0xA
002ac2 613c
002ac3 6464
002ac4 6144
002ac5 6174      	.DB  0x3C,0x61,0x64,0x64,0x44,0x61,0x74,0x61
002ac6 6f4c
002ac7 5167
002ac8 6575
002ac9 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002aca 203e
002acb 2020
002acc 2020
002acd 2020      	.DB  0x3E,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002ace 2020
002acf 2020
002ad0 2020
002ad1 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002ad2 2020
002ad3 2020
002ad4 2020
002ad5 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002ad6 2020
002ad7 2020
002ad8 6441
002ad9 6564      	.DB  0x20,0x20,0x20,0x20,0x41,0x64,0x64,0x65
002ada 2064
002adb 2528
002adc 3230
002add 2958      	.DB  0x64,0x20,0x28,0x25,0x30,0x32,0x58,0x29
002ade 7420
002adf 206f
002ae0 6164
002ae1 6174      	.DB  0x20,0x74,0x6F,0x20,0x64,0x61,0x74,0x61
002ae2 6f4c
002ae3 5167
002ae4 6575
002ae5 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002ae6 255b
002ae7 5d64
002ae8 4320
002ae9 756f      	.DB  0x5B,0x25,0x64,0x5D,0x20,0x43,0x6F,0x75
002aea 746e
002aeb 3d20
002aec 2520
002aed 0d64      	.DB  0x6E,0x74,0x20,0x3D,0x20,0x25,0x64,0xD
002aee 000a
002aef 723c
002af0 6165
002af1 4464      	.DB  0xA,0x0,0x3C,0x72,0x65,0x61,0x64,0x44
002af2 7461
002af3 4c61
002af4 676f
002af5 7551      	.DB  0x61,0x74,0x61,0x4C,0x6F,0x67,0x51,0x75
002af6 7565
002af7 3e65
002af8 5720
002af9 5241      	.DB  0x65,0x75,0x65,0x3E,0x20,0x57,0x41,0x52
002afa 3a4e
002afb 6420
002afc 7461
002afd 4c61      	.DB  0x4E,0x3A,0x20,0x64,0x61,0x74,0x61,0x4C
002afe 676f
002aff 7551
002b00 7565
002b01 2065      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x20
002b02 6d65
002b03 7470
002b04 2179
002b05 0d21      	.DB  0x65,0x6D,0x70,0x74,0x79,0x21,0x21,0xD
002b06 000a
002b07 723c
002b08 6165
002b09 4464      	.DB  0xA,0x0,0x3C,0x72,0x65,0x61,0x64,0x44
002b0a 7461
002b0b 4c61
002b0c 676f
002b0d 7551      	.DB  0x61,0x74,0x61,0x4C,0x6F,0x67,0x51,0x75
002b0e 7565
002b0f 3e65
002b10 5720
002b11 5241      	.DB  0x65,0x75,0x65,0x3E,0x20,0x57,0x41,0x52
002b12 3a4e
002b13 6e20
002b14 746f
002b15 6620      	.DB  0x4E,0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66
002b16 756f
002b17 646e
002b18 6920
002b19 5b64      	.DB  0x6F,0x75,0x6E,0x64,0x20,0x69,0x64,0x5B
002b1a 7830
002b1b 3025
002b1c 5832
002b1d 205d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0x20
002b1e 6e69
002b1f 6420
002b20 7461
002b21 4c61      	.DB  0x69,0x6E,0x20,0x64,0x61,0x74,0x61,0x4C
002b22 676f
002b23 7551
002b24 7565
002b25 0d65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0xD
002b26 000a
002b27 0a0d
002b28 723c
002b29 6d65      	.DB  0xA,0x0,0xD,0xA,0x3C,0x72,0x65,0x6D
002b2a 766f
002b2b 4465
002b2c 7461
002b2d 4c61      	.DB  0x6F,0x76,0x65,0x44,0x61,0x74,0x61,0x4C
002b2e 676f
002b2f 7551
002b30 7565
002b31 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002b32 2020
002b33 2020
002b34 2020
002b35 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002b36 2020
002b37 2020
002b38 2020
002b39 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002b3a 2020
002b3b 2020
002b3c 2020
002b3d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002b3e 6552
002b3f 6f6d
002b40 6576
002b41 2064      	.DB  0x52,0x65,0x6D,0x6F,0x76,0x65,0x64,0x20
002b42 2528
002b43 3230
002b44 2958
002b45 6620      	.DB  0x28,0x25,0x30,0x32,0x58,0x29,0x20,0x66
002b46 6f72
002b47 206d
002b48 6164
002b49 6174      	.DB  0x72,0x6F,0x6D,0x20,0x64,0x61,0x74,0x61
002b4a 6f4c
002b4b 5167
002b4c 6575
002b4d 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002b4e 255b
002b4f 5d64
002b50 0a0d
002b51 3c00      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x3C
002b52 6572
002b53 6f6d
002b54 6576
002b55 6144      	.DB  0x72,0x65,0x6D,0x6F,0x76,0x65,0x44,0x61
002b56 6174
002b57 6f4c
002b58 5167
002b59 6575      	.DB  0x74,0x61,0x4C,0x6F,0x67,0x51,0x75,0x65
002b5a 6575
002b5b 203e
002b5c 4157
002b5d 4e52      	.DB  0x75,0x65,0x3E,0x20,0x57,0x41,0x52,0x4E
002b5e 203a
002b5f 6f6e
002b60 2074
002b61 6f66      	.DB  0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F
002b62 6e75
002b63 2064
002b64 6469
002b65 305b      	.DB  0x75,0x6E,0x64,0x20,0x69,0x64,0x5B,0x30
002b66 2578
002b67 3230
002b68 5d58
002b69 6920      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x69
002b6a 206e
002b6b 6164
002b6c 6174
002b6d 6f4c      	.DB  0x6E,0x20,0x64,0x61,0x74,0x61,0x4C,0x6F
002b6e 5167
002b6f 6575
002b70 6575
002b71 0a0d      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0xD,0xA
002b72 0d00
002b73 0d0a
002b74 3c0a
002b75 6461      	.DB  0x0,0xD,0xA,0xD,0xA,0x3C,0x61,0x64
002b76 4564
002b77 6576
002b78 746e
002b79 6f4c      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x4C,0x6F
002b7a 5167
002b7b 6575
002b7c 6575
002b7d 203e      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0x3E,0x20
002b7e 4157
002b7f 4e52
002b80 4e49
002b81 2047      	.DB  0x57,0x41,0x52,0x4E,0x49,0x4E,0x47,0x20
002b82 203a
002b83 7665
002b84 6e65
002b85 4c74      	.DB  0x3A,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002b86 676f
002b87 7551
002b88 7565
002b89 2065      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x20
002b8a 5546
002b8b 4c4c
002b8c 0a0d
002b8d 0a0d      	.DB  0x46,0x55,0x4C,0x4C,0xD,0xA,0xD,0xA
002b8e 0d00
002b8f 3c0a
002b90 6461
002b91 4564      	.DB  0x0,0xD,0xA,0x3C,0x61,0x64,0x64,0x45
002b92 6576
002b93 746e
002b94 6f4c
002b95 5167      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51
002b96 6575
002b97 6575
002b98 203e
002b99 2020      	.DB  0x75,0x65,0x75,0x65,0x3E,0x20,0x20,0x20
002b9a 2020
002b9b 2020
002b9c 2020
002b9d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002b9e 2020
002b9f 2020
002ba0 2020
002ba1 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002ba2 2020
002ba3 2020
002ba4 2020
002ba5 6441      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x41,0x64
002ba6 6564
002ba7 2064
002ba8 2528
002ba9 3230      	.DB  0x64,0x65,0x64,0x20,0x28,0x25,0x30,0x32
002baa 2958
002bab 7420
002bac 206f
002bad 7665      	.DB  0x58,0x29,0x20,0x74,0x6F,0x20,0x65,0x76
002bae 6e65
002baf 4c74
002bb0 676f
002bb1 7551      	.DB  0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75
002bb2 7565
002bb3 5b65
002bb4 6425
002bb5 205d      	.DB  0x65,0x75,0x65,0x5B,0x25,0x64,0x5D,0x20
002bb6 6f43
002bb7 6e75
002bb8 2074
002bb9 203d      	.DB  0x43,0x6F,0x75,0x6E,0x74,0x20,0x3D,0x20
002bba 6425
002bbb 0a0d
002bbc 3c00
002bbd 6572      	.DB  0x25,0x64,0xD,0xA,0x0,0x3C,0x72,0x65
002bbe 6461
002bbf 7645
002bc0 6e65
002bc1 4c74      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x4C
002bc2 676f
002bc3 7551
002bc4 7565
002bc5 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002bc6 5720
002bc7 5241
002bc8 3a4e
002bc9 6520      	.DB  0x20,0x57,0x41,0x52,0x4E,0x3A,0x20,0x65
002bca 6576
002bcb 746e
002bcc 6f4c
002bcd 5167      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51
002bce 6575
002bcf 6575
002bd0 6520
002bd1 706d      	.DB  0x75,0x65,0x75,0x65,0x20,0x65,0x6D,0x70
002bd2 7974
002bd3 2121
002bd4 0a0d
002bd5 3c00      	.DB  0x74,0x79,0x21,0x21,0xD,0xA,0x0,0x3C
002bd6 6572
002bd7 6461
002bd8 7645
002bd9 6e65      	.DB  0x72,0x65,0x61,0x64,0x45,0x76,0x65,0x6E
002bda 4c74
002bdb 676f
002bdc 7551
002bdd 7565      	.DB  0x74,0x4C,0x6F,0x67,0x51,0x75,0x65,0x75
002bde 3e65
002bdf 5720
002be0 5241
002be1 3a4e      	.DB  0x65,0x3E,0x20,0x57,0x41,0x52,0x4E,0x3A
002be2 6e20
002be3 746f
002be4 6620
002be5 756f      	.DB  0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F,0x75
002be6 646e
002be7 6920
002be8 5b64
002be9 7830      	.DB  0x6E,0x64,0x20,0x69,0x64,0x5B,0x30,0x78
002bea 3025
002beb 5832
002bec 205d
002bed 6e69      	.DB  0x25,0x30,0x32,0x58,0x5D,0x20,0x69,0x6E
002bee 6520
002bef 6576
002bf0 746e
002bf1 6f4c      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x4C,0x6F
002bf2 5167
002bf3 6575
002bf4 6575
002bf5 0a0d      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0xD,0xA
002bf6 0d00
002bf7 3c0a
002bf8 6572
002bf9 6f6d      	.DB  0x0,0xD,0xA,0x3C,0x72,0x65,0x6D,0x6F
002bfa 6576
002bfb 7645
002bfc 6e65
002bfd 4c74      	.DB  0x76,0x65,0x45,0x76,0x65,0x6E,0x74,0x4C
002bfe 676f
002bff 7551
002c00 7565
002c01 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002c02 2020
002c03 2020
002c04 2020
002c05 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002c06 2020
002c07 2020
002c08 2020
002c09 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002c0a 2020
002c0b 2020
002c0c 2020
002c0d 6552      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x52,0x65
002c0e 6f6d
002c0f 6576
002c10 2064
002c11 2528      	.DB  0x6D,0x6F,0x76,0x65,0x64,0x20,0x28,0x25
002c12 3230
002c13 2958
002c14 6620
002c15 6f72      	.DB  0x30,0x32,0x58,0x29,0x20,0x66,0x72,0x6F
002c16 206d
002c17 7665
002c18 6e65
002c19 4c74      	.DB  0x6D,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002c1a 676f
002c1b 7551
002c1c 7565
002c1d 5b65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x5B
002c1e 6425
002c1f 0d5d
002c20 000a
002c21 723c      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x3C,0x72
002c22 6d65
002c23 766f
002c24 4565
002c25 6576      	.DB  0x65,0x6D,0x6F,0x76,0x65,0x45,0x76,0x65
002c26 746e
002c27 6f4c
002c28 5167
002c29 6575      	.DB  0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75,0x65
002c2a 6575
002c2b 203e
002c2c 4157
002c2d 4e52      	.DB  0x75,0x65,0x3E,0x20,0x57,0x41,0x52,0x4E
002c2e 203a
002c2f 6f6e
002c30 2074
002c31 6f66      	.DB  0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F
002c32 6e75
002c33 2064
002c34 6469
002c35 305b      	.DB  0x75,0x6E,0x64,0x20,0x69,0x64,0x5B,0x30
002c36 2578
002c37 3230
002c38 5d58
002c39 6920      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x69
002c3a 206e
002c3b 7665
002c3c 6e65
002c3d 4c74      	.DB  0x6E,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002c3e 676f
002c3f 7551
002c40 7565
002c41 0d65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0xD
002c42 000a      	.DB  0xA,0x0
                 _0x2C0003:
002c43 0000
002c44 0000
002c45 0000
002c46 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002c47 0000
002c48 0000
002c49 0000
002c4a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002c4b 0000
002c4c 0000
002c4d 0000
002c4e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002c4f 0000
002c50 0000
002c51 0000
002c52 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002c53 0000
002c54 0000
002c55 0000
002c56 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002c57 0000
002c58 0000
002c59 0000
002c5a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002c5b 0000
002c5c 0000
002c5d 0000
002c5e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002c5f 0000
002c60 0000
002c61 0000
002c62 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002c63 0000
002c64 0000
002c65 0000
002c66 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002c67 0613
002c68 060f
002c69 0000      	.DB  LOW(_servicePwd),HIGH(_servicePwd),LOW(_userPwd),HIGH(_userPwd),0x0,0x0
                 _0x2C022A:
002c6a 0000
002c6b 0000
002c6c 0000
002c6d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002c6e 0000
002c6f 0000
002c70 0000
002c71 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002c72 0000
002c73 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x2C0000:
002c74 314d
002c75 3125
002c76 0064
002c77 304d      	.DB  0x4D,0x31,0x25,0x31,0x64,0x0,0x4D,0x30
002c78 4d00
002c79 2541
002c7a 6431
002c7b 4d00      	.DB  0x0,0x4D,0x41,0x25,0x31,0x64,0x0,0x4D
002c7c 2532
002c7d 6431
002c7e 4d00
002c7f 2533      	.DB  0x32,0x25,0x31,0x64,0x0,0x4D,0x33,0x25
002c80 6431
002c81 4d00
002c82 2534
002c83 6431      	.DB  0x31,0x64,0x0,0x4D,0x34,0x25,0x31,0x64
002c84 5000
002c85 0031
002c86 354d
002c87 3125      	.DB  0x0,0x50,0x31,0x0,0x4D,0x35,0x25,0x31
002c88 0064
002c89 3050
002c8a 3c00
002c8b 454d      	.DB  0x64,0x0,0x50,0x30,0x0,0x3C,0x4D,0x45
002c8c 554e
002c8d 705f
002c8e 6f72
002c8f 6563      	.DB  0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63,0x65
002c90 7373
002c91 654b
002c92 3e79
002c93 5620      	.DB  0x73,0x73,0x4B,0x65,0x79,0x3E,0x20,0x56
002c94 2550
002c95 2c73
002c96 7325
002c97 252c      	.DB  0x50,0x25,0x73,0x2C,0x25,0x73,0x2C,0x25
002c98 2c73
002c99 5200
002c9a 6165
002c9b 746c      	.DB  0x73,0x2C,0x0,0x52,0x65,0x61,0x6C,0x74
002c9c 6d69
002c9d 2c65
002c9e 4400
002c9f 7461      	.DB  0x69,0x6D,0x65,0x2C,0x0,0x44,0x61,0x74
002ca0 6c61
002ca1 676f
002ca2 6567
002ca3 2c72      	.DB  0x61,0x6C,0x6F,0x67,0x67,0x65,0x72,0x2C
002ca4 5500
002ca5 6b6e
002ca6 6f6e
002ca7 6e77      	.DB  0x0,0x55,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
002ca8 002c
002ca9 6e45
002caa 6261
002cab 656c      	.DB  0x2C,0x0,0x45,0x6E,0x61,0x62,0x6C,0x65
002cac 002c
002cad 6944
002cae 6173
002caf 6c62      	.DB  0x2C,0x0,0x44,0x69,0x73,0x61,0x62,0x6C
002cb0 2c65
002cb1 3c00
002cb2 454d
002cb3 554e      	.DB  0x65,0x2C,0x0,0x3C,0x4D,0x45,0x4E,0x55
002cb4 705f
002cb5 6f72
002cb6 6563
002cb7 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
002cb8 654b
002cb9 3e79
002cba 5620
002cbb 254f      	.DB  0x4B,0x65,0x79,0x3E,0x20,0x56,0x4F,0x25
002cbc 0073
002cbd 4d3c
002cbe 4e45
002cbf 5f55      	.DB  0x73,0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F
002cc0 7270
002cc1 636f
002cc2 7365
002cc3 4b73      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x4B
002cc4 7965
002cc5 203e
002cc6 616d
002cc7 6c6c      	.DB  0x65,0x79,0x3E,0x20,0x6D,0x61,0x6C,0x6C
002cc8 636f
002cc9 4328
002cca 4e4f
002ccb 5f46      	.DB  0x6F,0x63,0x28,0x43,0x4F,0x4E,0x46,0x5F
002ccc 4552
002ccd 4441
002cce 425f
002ccf 4655      	.DB  0x52,0x45,0x41,0x44,0x5F,0x42,0x55,0x46
002cd0 4546
002cd1 2952
002cd2 6620
002cd3 6961      	.DB  0x46,0x45,0x52,0x29,0x20,0x66,0x61,0x69
002cd4 656c
002cd5 0d64
002cd6 000a
002cd7 4d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4D
002cd8 4e45
002cd9 5f55
002cda 7270
002cdb 636f      	.DB  0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63
002cdc 7365
002cdd 4b73
002cde 7965
002cdf 203e      	.DB  0x65,0x73,0x73,0x4B,0x65,0x79,0x3E,0x20
002ce0 5445
002ce1 5f48
002ce2 6567
002ce3 4374      	.DB  0x45,0x54,0x48,0x5F,0x67,0x65,0x74,0x43
002ce4 6e6f
002ce5 6966
002ce6 2867
002ce7 2029      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x29,0x20
002ce8 6166
002ce9 6c69
002cea 6465
002ceb 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002cec 3c00
002ced 454d
002cee 554e
002cef 705f      	.DB  0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70
002cf0 6f72
002cf1 6563
002cf2 7373
002cf3 654b      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x4B,0x65
002cf4 3e79
002cf5 4520
002cf6 4854
002cf7 675f      	.DB  0x79,0x3E,0x20,0x45,0x54,0x48,0x5F,0x67
002cf8 7465
002cf9 6f43
002cfa 666e
002cfb 6769      	.DB  0x65,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
002cfc 2928
002cfd 7320
002cfe 6375
002cff 6563      	.DB  0x28,0x29,0x20,0x73,0x75,0x63,0x63,0x65
002d00 7373
002d01 0a0d
002d02 0d00
002d03 0d0a      	.DB  0x73,0x73,0xD,0xA,0x0,0xD,0xA,0xD
002d04 3c0a
002d05 454d
002d06 554e
002d07 705f      	.DB  0xA,0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70
002d08 6f72
002d09 6563
002d0a 7373
002d0b 654b      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x4B,0x65
002d0c 3e79
002d0d 7220
002d0e 6165
002d0f 5b64      	.DB  0x79,0x3E,0x20,0x72,0x65,0x61,0x64,0x5B
002d10 6425
002d11 205d
002d12 2d2d
002d13 0d3e      	.DB  0x25,0x64,0x5D,0x20,0x2D,0x2D,0x3E,0xD
002d14 000a
002d15 4d3c
002d16 4e45
002d17 5f55      	.DB  0xA,0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F
002d18 7270
002d19 636f
002d1a 7365
002d1b 4b73      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x4B
002d1c 7965
002d1d 203e
002d1e 6567
002d1f 4e74      	.DB  0x65,0x79,0x3E,0x20,0x67,0x65,0x74,0x4E
002d20 7465
002d21 6f77
002d22 6b72
002d23 6e49      	.DB  0x65,0x74,0x77,0x6F,0x72,0x6B,0x49,0x6E
002d24 6f66
002d25 2928
002d26 6620
002d27 6961      	.DB  0x66,0x6F,0x28,0x29,0x20,0x66,0x61,0x69
002d28 656c
002d29 0d64
002d2a 000a
002d2b 4d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4D
002d2c 4e45
002d2d 5f55
002d2e 7270
002d2f 636f      	.DB  0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63
002d30 7365
002d31 4b73
002d32 7965
002d33 203e      	.DB  0x65,0x73,0x73,0x4B,0x65,0x79,0x3E,0x20
002d34 4e56
002d35 7525
002d36 252e
002d37 2e75      	.DB  0x56,0x4E,0x25,0x75,0x2E,0x25,0x75,0x2E
002d38 7525
002d39 252e
002d3a 2c75
002d3b 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2C,0x25,0x75
002d3c 252e
002d3d 2e75
002d3e 7525
002d3f 252e      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E,0x25
002d40 2c75
002d41 7525
002d42 252e
002d43 2e75      	.DB  0x75,0x2C,0x25,0x75,0x2E,0x25,0x75,0x2E
002d44 7525
002d45 252e
002d46 2c75
002d47 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2C,0x25,0x75
002d48 252e
002d49 2e75
002d4a 7525
002d4b 252e      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E,0x25
002d4c 2c75
002d4d 0a0d
002d4e 5600
002d4f 254e      	.DB  0x75,0x2C,0xD,0xA,0x0,0x56,0x4E,0x25
002d50 2e75
002d51 7525
002d52 252e
002d53 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
002d54 7525
002d55 252c
002d56 2e75
002d57 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
002d58 252e
002d59 2e75
002d5a 7525
002d5b 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
002d5c 2e75
002d5d 7525
002d5e 252e
002d5f 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
002d60 7525
002d61 252c
002d62 2e75
002d63 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
002d64 252e
002d65 2e75
002d66 7525
002d67 002c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x0
002d68 4d3c
002d69 4e45
002d6a 5f55
002d6b 7270      	.DB  0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72
002d6c 636f
002d6d 7365
002d6e 4b73
002d6f 7965      	.DB  0x6F,0x63,0x65,0x73,0x73,0x4B,0x65,0x79
002d70 203e
002d71 6564
002d72 4576
002d73 5b6e      	.DB  0x3E,0x20,0x64,0x65,0x76,0x45,0x6E,0x5B
002d74 6425
002d75 205d
002d76 6c61
002d77 456d      	.DB  0x25,0x64,0x5D,0x20,0x61,0x6C,0x6D,0x45
002d78 5b6e
002d79 6425
002d7a 005d
002d7b 4f53      	.DB  0x6E,0x5B,0x25,0x64,0x5D,0x0,0x53,0x4F
002d7c 3125
002d7d 0064
002d7e 4445
002d7f 2532      	.DB  0x25,0x31,0x64,0x0,0x45,0x44,0x32,0x25
002d80 6431
002d81 4500
002d82 3344
002d83 3125      	.DB  0x31,0x64,0x0,0x45,0x44,0x33,0x25,0x31
002d84 0064
002d85 4953
002d86 4900
002d87 2544      	.DB  0x64,0x0,0x53,0x49,0x0,0x49,0x44,0x25
002d88 5831
002d89 3125
002d8a 0064
002d8b 364d      	.DB  0x31,0x58,0x25,0x31,0x64,0x0,0x4D,0x36
002d8c 3125
002d8d 0064
002d8e 4d3c
002d8f 4e45      	.DB  0x25,0x31,0x64,0x0,0x3C,0x4D,0x45,0x4E
002d90 5f55
002d91 7270
002d92 636f
002d93 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
002d94 4b73
002d95 7965
002d96 203e
002d97 6564      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x64,0x65
002d98 4576
002d99 206e
002d9a 3e2d
002d9b 4520      	.DB  0x76,0x45,0x6E,0x20,0x2D,0x3E,0x20,0x45
002d9c 2544
002d9d 6431
002d9e 3125
002d9f 0064      	.DB  0x44,0x25,0x31,0x64,0x25,0x31,0x64,0x0
002da0 4d3c
002da1 4e45
002da2 5f55
002da3 7270      	.DB  0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72
002da4 636f
002da5 7365
002da6 4b73
002da7 7965      	.DB  0x6F,0x63,0x65,0x73,0x73,0x4B,0x65,0x79
002da8 203e
002da9 6c61
002daa 456d
002dab 206e      	.DB  0x3E,0x20,0x61,0x6C,0x6D,0x45,0x6E,0x20
002dac 3e2d
002dad 4520
002dae 2544
002daf 6431      	.DB  0x2D,0x3E,0x20,0x45,0x44,0x25,0x31,0x64
002db0 3125
002db1 0064
002db2 4d3c
002db3 4e45      	.DB  0x25,0x31,0x64,0x0,0x3C,0x4D,0x45,0x4E
002db4 5f55
002db5 7270
002db6 636f
002db7 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
002db8 4b73
002db9 7965
002dba 203e
002dbb 6573      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x73,0x65
002dbc 4f74
002dbd 6570
002dbe 6172
002dbf 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
002dc0 676e
002dc1 6f43
002dc2 666e
002dc3 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
002dc4 2928
002dc5 6620
002dc6 6961
002dc7 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002dc8 0d64
002dc9 000a
002dca 4c46
002dcb 4600      	.DB  0x64,0xD,0xA,0x0,0x46,0x4C,0x0,0x46
002dcc 0049
002dcd 4149
002dce 3125
002dcf 0058      	.DB  0x49,0x0,0x49,0x41,0x25,0x31,0x58,0x0
002dd0 4d53
002dd1 5300
002dd2 0047
002dd3 5353      	.DB  0x53,0x4D,0x0,0x53,0x47,0x0,0x53,0x53
002dd4 5300
002dd5 2546
002dd6 2e75
002dd7 7525      	.DB  0x0,0x53,0x46,0x25,0x75,0x2E,0x25,0x75
002dd8 252e
002dd9 2e75
002dda 7525
002ddb 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
002ddc 2e75
002ddd 7525
002dde 252e
002ddf 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
002de0 7525
002de1 252c
002de2 2e75
002de3 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
002de4 252e
002de5 2e75
002de6 7525
002de7 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
002de8 2e75
002de9 7525
002dea 252e
002deb 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
002dec 7525
002ded 002c
002dee 4d3c
002def 4e45      	.DB  0x25,0x75,0x2C,0x0,0x3C,0x4D,0x45,0x4E
002df0 5f55
002df1 7270
002df2 636f
002df3 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
002df4 4b73
002df5 7965
002df6 203e
002df7 5445      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x45,0x54
002df8 5f48
002df9 6573
002dfa 4374
002dfb 6e6f      	.DB  0x48,0x5F,0x73,0x65,0x74,0x43,0x6F,0x6E
002dfc 6966
002dfd 2867
002dfe 2029
002dff 6166      	.DB  0x66,0x69,0x67,0x28,0x29,0x20,0x66,0x61
002e00 6c69
002e01 6465
002e02 0d20
002e03 000a      	.DB  0x69,0x6C,0x65,0x64,0x20,0xD,0xA,0x0
002e04 554d
002e05 3125
002e06 0064
002e07 4450      	.DB  0x4D,0x55,0x25,0x31,0x64,0x0,0x50,0x44
002e08 3125
002e09 2a64
002e0a 5000
002e0b 2541      	.DB  0x25,0x31,0x64,0x2A,0x0,0x50,0x41,0x25
002e0c 6431
002e0d 5000
002e0e 0035
002e0f 4450      	.DB  0x31,0x64,0x0,0x50,0x35,0x0,0x50,0x44
002e10 3125
002e11 2564
002e12 6431
002e13 3c00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x3C
002e14 454d
002e15 554e
002e16 705f
002e17 6f72      	.DB  0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F
002e18 6563
002e19 7373
002e1a 654b
002e1b 3e79      	.DB  0x63,0x65,0x73,0x73,0x4B,0x65,0x79,0x3E
002e1c 6e20
002e1d 7765
002e1e 7750
002e1f 2064      	.DB  0x20,0x6E,0x65,0x77,0x50,0x77,0x64,0x20
002e20 2026
002e21 6f63
002e22 666e
002e23 7750      	.DB  0x26,0x20,0x63,0x6F,0x6E,0x66,0x50,0x77
002e24 2064
002e25 6f6e
002e26 2074
002e27 616d      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x6D,0x61
002e28 6374
002e29 0d68
002e2a 000a
002e2b 5653      	.DB  0x74,0x63,0x68,0xD,0xA,0x0,0x53,0x56
002e2c 5600
002e2d 2544
002e2e 6431
002e2f 3125      	.DB  0x0,0x56,0x44,0x25,0x31,0x64,0x25,0x31
002e30 0064
002e31 3153
002e32 3125
002e33 0064      	.DB  0x64,0x0,0x53,0x31,0x25,0x31,0x64,0x0
002e34 3253
002e35 3125
002e36 0064
002e37 4352      	.DB  0x53,0x32,0x25,0x31,0x64,0x0,0x52,0x43
002e38 4d00
002e39 2537
002e3a 6431
002e3b 5600      	.DB  0x0,0x4D,0x37,0x25,0x31,0x64,0x0,0x56
002e3c 2541
002e3d 6431
002e3e 5300
002e3f 2541      	.DB  0x41,0x25,0x31,0x64,0x0,0x53,0x41,0x25
002e40 6431
002e41 5000
002e42 254e
002e43 6431      	.DB  0x31,0x64,0x0,0x50,0x4E,0x25,0x31,0x64
002e44 4300
002e45 2543
002e46 6431
002e47 4d00      	.DB  0x0,0x43,0x43,0x25,0x31,0x64,0x0,0x4D
002e48 2538
002e49 6431
002e4a 5700
002e4b 0050      	.DB  0x38,0x25,0x31,0x64,0x0,0x57,0x50,0x0
002e4c 5350
002e4d 5000
002e4e 0034
002e4f 455b      	.DB  0x50,0x53,0x0,0x50,0x34,0x0,0x5B,0x45
002e50 005d
002e51 445b
002e52 005d
002e53 6e45      	.DB  0x5D,0x0,0x5B,0x44,0x5D,0x0,0x45,0x6E
002e54 6261
002e55 656c
002e56 4400
002e57 7369      	.DB  0x61,0x62,0x6C,0x65,0x0,0x44,0x69,0x73
002e58 6261
002e59 656c
002e5a 3c00
002e5b 6873      	.DB  0x61,0x62,0x6C,0x65,0x0,0x3C,0x73,0x68
002e5c 776f
002e5d 7250
002e5e 626f
002e5f 4365      	.DB  0x6F,0x77,0x50,0x72,0x6F,0x62,0x65,0x43
002e60 6e6f
002e61 6966
002e62 3e67
002e63 5020      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x50
002e64 2543
002e65 6431
002e66 3125
002e67 2564      	.DB  0x43,0x25,0x31,0x64,0x25,0x31,0x64,0x25
002e68 2c64
002e69 7325
002e6a 252c
002e6b 2c73      	.DB  0x64,0x2C,0x25,0x73,0x2C,0x25,0x73,0x2C
002e6c 2e25
002e6d 6631
002e6e 252c
002e6f 2c64      	.DB  0x25,0x2E,0x31,0x66,0x2C,0x25,0x64,0x2C
002e70 2e25
002e71 6631
002e72 252c
002e73 312e      	.DB  0x25,0x2E,0x31,0x66,0x2C,0x25,0x2E,0x31
002e74 2c66
002e75 6425
002e76 252c
002e77 312e      	.DB  0x66,0x2C,0x25,0x64,0x2C,0x25,0x2E,0x31
002e78 0066
002e79 0a0d
002e7a 673c
002e7b 7465      	.DB  0x66,0x0,0xD,0xA,0x3C,0x67,0x65,0x74
002e7c 635f
002e7d 7275
002e7e 6572
002e7f 746e      	.DB  0x5F,0x63,0x75,0x72,0x72,0x65,0x6E,0x74
002e80 735f
002e81 6d61
002e82 6c70
002e83 6e69      	.DB  0x5F,0x73,0x61,0x6D,0x70,0x6C,0x69,0x6E
002e84 3e67
002e85 7220
002e86 6165
002e87 206c      	.DB  0x67,0x3E,0x20,0x72,0x65,0x61,0x6C,0x20
002e88 6176
002e89 756c
002e8a 2065
002e8b 2528      	.DB  0x76,0x61,0x6C,0x75,0x65,0x20,0x28,0x25
002e8c 206c
002e8d 6573
002e8e 2e63
002e8f 0d29      	.DB  0x6C,0x20,0x73,0x65,0x63,0x2E,0x29,0xD
002e90 000a
002e91 673c
002e92 7465
002e93 635f      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x5F,0x63
002e94 7275
002e95 6572
002e96 746e
002e97 735f      	.DB  0x75,0x72,0x72,0x65,0x6E,0x74,0x5F,0x73
002e98 6d61
002e99 6c70
002e9a 6e69
002e9b 3e67      	.DB  0x61,0x6D,0x70,0x6C,0x69,0x6E,0x67,0x3E
002e9c 2520
002e9d 2064
002e9e 7268
002e9f 0d2e      	.DB  0x20,0x25,0x64,0x20,0x68,0x72,0x2E,0xD
002ea0 000a
002ea1 673c
002ea2 7465
002ea3 635f      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x5F,0x63
002ea4 7275
002ea5 6572
002ea6 746e
002ea7 735f      	.DB  0x75,0x72,0x72,0x65,0x6E,0x74,0x5F,0x73
002ea8 6d61
002ea9 6c70
002eaa 6e69
002eab 3e67      	.DB  0x61,0x6D,0x70,0x6C,0x69,0x6E,0x67,0x3E
002eac 2520
002ead 2064
002eae 696d
002eaf 2e6e      	.DB  0x20,0x25,0x64,0x20,0x6D,0x69,0x6E,0x2E
002eb0 0a0d
002eb1 3c00
002eb2 6567
002eb3 5f74      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x5F
002eb4 7563
002eb5 7272
002eb6 6e65
002eb7 5f74      	.DB  0x63,0x75,0x72,0x72,0x65,0x6E,0x74,0x5F
002eb8 6173
002eb9 706d
002eba 696c
002ebb 676e      	.DB  0x73,0x61,0x6D,0x70,0x6C,0x69,0x6E,0x67
002ebc 203e
002ebd 6425
002ebe 7320
002ebf 6365      	.DB  0x3E,0x20,0x25,0x64,0x20,0x73,0x65,0x63
002ec0 0d2e
002ec1 000a
002ec2 673c
002ec3 7465      	.DB  0x2E,0xD,0xA,0x0,0x3C,0x67,0x65,0x74
002ec4 635f
002ec5 7275
002ec6 6572
002ec7 746e      	.DB  0x5F,0x63,0x75,0x72,0x72,0x65,0x6E,0x74
002ec8 735f
002ec9 6d61
002eca 6c70
002ecb 6e69      	.DB  0x5F,0x73,0x61,0x6D,0x70,0x6C,0x69,0x6E
002ecc 3e67
002ecd 2520
002ece 2064
002ecf 696d      	.DB  0x67,0x3E,0x20,0x25,0x64,0x20,0x6D,0x69
002ed0 2e6e
002ed1 2520
002ed2 2064
002ed3 6573      	.DB  0x6E,0x2E,0x20,0x25,0x64,0x20,0x73,0x65
002ed4 2e63
002ed5 0020
002ed6 2d2d
002ed7 203e      	.DB  0x63,0x2E,0x20,0x0,0x2D,0x2D,0x3E,0x20
002ed8 6425
002ed9 6d20
002eda 6e69
002edb 0d2e      	.DB  0x25,0x64,0x20,0x6D,0x69,0x6E,0x2E,0xD
002edc 000a
002edd 673c
002ede 7465
002edf 635f      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x5F,0x63
002ee0 7275
002ee1 6572
002ee2 746e
002ee3 735f      	.DB  0x75,0x72,0x72,0x65,0x6E,0x74,0x5F,0x73
002ee4 6d61
002ee5 6c70
002ee6 6e69
002ee7 3e67      	.DB  0x61,0x6D,0x70,0x6C,0x69,0x6E,0x67,0x3E
002ee8 2520
002ee9 2064
002eea 7268
002eeb 202e      	.DB  0x20,0x25,0x64,0x20,0x68,0x72,0x2E,0x20
002eec 6425
002eed 6d20
002eee 6e69
002eef 202e      	.DB  0x25,0x64,0x20,0x6D,0x69,0x6E,0x2E,0x20
002ef0 6425
002ef1 7320
002ef2 6365
002ef3 202e      	.DB  0x25,0x64,0x20,0x73,0x65,0x63,0x2E,0x20
002ef4 2d00
002ef5 3e2d
002ef6 2520
002ef7 2064      	.DB  0x0,0x2D,0x2D,0x3E,0x20,0x25,0x64,0x20
002ef8 7268
002ef9 0d2e
002efa 000a
002efb 673c      	.DB  0x68,0x72,0x2E,0xD,0xA,0x0,0x3C,0x67
002efc 7465
002efd 635f
002efe 7275
002eff 6572      	.DB  0x65,0x74,0x5F,0x63,0x75,0x72,0x72,0x65
002f00 746e
002f01 735f
002f02 6d61
002f03 6c70      	.DB  0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70,0x6C
002f04 6e69
002f05 3e67
002f06 4320
002f07 6e61      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x43,0x61,0x6E
002f08 7427
002f09 5320
002f0a 6f68
002f0b 2e77      	.DB  0x27,0x74,0x20,0x53,0x68,0x6F,0x77,0x2E
002f0c 0a0d
002f0d 3c00
002f0e 6567
002f0f 5f74      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x5F
002f10 7563
002f11 7272
002f12 6e65
002f13 5f74      	.DB  0x63,0x75,0x72,0x72,0x65,0x6E,0x74,0x5F
002f14 7276
002f15 6665
002f16 203e
002f17 7276      	.DB  0x76,0x72,0x65,0x66,0x3E,0x20,0x76,0x72
002f18 6665
002f19 2528
002f1a 2966
002f1b 7620      	.DB  0x65,0x66,0x28,0x25,0x66,0x29,0x20,0x76
002f1c 6c61
002f1d 6d54
002f1e 2070
002f1f 203d      	.DB  0x61,0x6C,0x54,0x6D,0x70,0x20,0x3D,0x20
002f20 7325
002f21 0a0d
002f22 3c00
002f23 6567      	.DB  0x25,0x73,0xD,0xA,0x0,0x3C,0x67,0x65
002f24 5f74
002f25 7563
002f26 7272
002f27 6e65      	.DB  0x74,0x5F,0x63,0x75,0x72,0x72,0x65,0x6E
002f28 5f74
002f29 7276
002f2a 6665
002f2b 203e      	.DB  0x74,0x5F,0x76,0x72,0x65,0x66,0x3E,0x20
002f2c 7562
002f2d 2066
002f2e 3e2d
002f2f 0020      	.DB  0x62,0x75,0x66,0x20,0x2D,0x3E,0x20,0x0
002f30 255b
002f31 5d63
002f32 3c00
002f33 6567      	.DB  0x5B,0x25,0x63,0x5D,0x0,0x3C,0x67,0x65
002f34 4e74
002f35 7465
002f36 6f77
002f37 6b72      	.DB  0x74,0x4E,0x65,0x74,0x77,0x6F,0x72,0x6B
002f38 6e49
002f39 6f66
002f3a 203e
002f3b 494c      	.DB  0x49,0x6E,0x66,0x6F,0x3E,0x20,0x4C,0x49
002f3c 2050
002f3d 203a
002f3e 7525
002f3f 252e      	.DB  0x50,0x20,0x3A,0x20,0x25,0x75,0x2E,0x25
002f40 2e75
002f41 7525
002f42 252e
002f43 0d75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0xD
002f44 000a
002f45 673c
002f46 7465
002f47 654e      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x4E,0x65
002f48 7774
002f49 726f
002f4a 496b
002f4b 666e      	.DB  0x74,0x77,0x6F,0x72,0x6B,0x49,0x6E,0x66
002f4c 3e6f
002f4d 4d20
002f4e 4b53
002f4f 3a20      	.DB  0x6F,0x3E,0x20,0x4D,0x53,0x4B,0x20,0x3A
002f50 2520
002f51 2e75
002f52 7525
002f53 252e      	.DB  0x20,0x25,0x75,0x2E,0x25,0x75,0x2E,0x25
002f54 2e75
002f55 7525
002f56 0a0d
002f57 3c00      	.DB  0x75,0x2E,0x25,0x75,0xD,0xA,0x0,0x3C
002f58 6567
002f59 4e74
002f5a 7465
002f5b 6f77      	.DB  0x67,0x65,0x74,0x4E,0x65,0x74,0x77,0x6F
002f5c 6b72
002f5d 6e49
002f5e 6f66
002f5f 203e      	.DB  0x72,0x6B,0x49,0x6E,0x66,0x6F,0x3E,0x20
002f60 4744
002f61 2057
002f62 203a
002f63 7525      	.DB  0x44,0x47,0x57,0x20,0x3A,0x20,0x25,0x75
002f64 252e
002f65 2e75
002f66 7525
002f67 252e      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E,0x25
002f68 0d75
002f69 000a
002f6a 673c
002f6b 7465      	.DB  0x75,0xD,0xA,0x0,0x3C,0x67,0x65,0x74
002f6c 654e
002f6d 7774
002f6e 726f
002f6f 496b      	.DB  0x4E,0x65,0x74,0x77,0x6F,0x72,0x6B,0x49
002f70 666e
002f71 3e6f
002f72 5320
002f73 5049      	.DB  0x6E,0x66,0x6F,0x3E,0x20,0x53,0x49,0x50
002f74 3a20
002f75 2520
002f76 2e75
002f77 7525      	.DB  0x20,0x3A,0x20,0x25,0x75,0x2E,0x25,0x75
002f78 252e
002f79 2e75
002f7a 7525
002f7b 0a0d      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0xD,0xA
002f7c 3c00
002f7d 6573
002f7e 5f74
002f7f 7276      	.DB  0x0,0x3C,0x73,0x65,0x74,0x5F,0x76,0x72
002f80 6665
002f81 203e
002f82 255b
002f83 5d64      	.DB  0x65,0x66,0x3E,0x20,0x5B,0x25,0x64,0x5D
002f84 255b
002f85 5d64
002f86 255b
002f87 5d64      	.DB  0x5B,0x25,0x64,0x5D,0x5B,0x25,0x64,0x5D
002f88 2d20
002f89 203e
002f8a 6425
002f8b 2d20      	.DB  0x20,0x2D,0x3E,0x20,0x25,0x64,0x20,0x2D
002f8c 203e
002f8d 6625
002f8e 0a0d
002f8f 3c00      	.DB  0x3E,0x20,0x25,0x66,0xD,0xA,0x0,0x3C
002f90 6572
002f91 6d63
002f92 3e70
002f93 7320      	.DB  0x72,0x65,0x63,0x6D,0x70,0x3E,0x20,0x73
002f94 6372
002f95 5b31
002f96 3025
002f97 5832      	.DB  0x72,0x63,0x31,0x5B,0x25,0x30,0x32,0x58
002f98 205d
002f99 7273
002f9a 3263
002f9b 255b      	.DB  0x5D,0x20,0x73,0x72,0x63,0x32,0x5B,0x25
002f9c 3230
002f9d 5d58
002f9e 7520
002f9f 6573      	.DB  0x30,0x32,0x58,0x5D,0x20,0x75,0x73,0x65
002fa0 5b72
002fa1 3025
002fa2 5832
002fa3 205d      	.DB  0x72,0x5B,0x25,0x30,0x32,0x58,0x5D,0x20
002fa4 6573
002fa5 7672
002fa6 6369
002fa7 5b65      	.DB  0x73,0x65,0x72,0x76,0x69,0x63,0x65,0x5B
002fa8 3025
002fa9 5832
002faa 0d5d
002fab 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
                 _0x2E0003:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(4314): warning: .cseg .db misalignment - padding zero byte
002fac 0009      	.DB  0x9
                 _0x2E0000:
002fad 0a0d
002fae 443c
002faf 6265
002fb0 6775      	.DB  0xD,0xA,0x3C,0x44,0x65,0x62,0x75,0x67
002fb1 473e
002fb2 7465
002fb3 7543
002fb4 5372      	.DB  0x3E,0x47,0x65,0x74,0x43,0x75,0x72,0x53
002fb5 6e65
002fb6 6f73
002fb7 3a72
002fb8 0d20      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x3A,0x20,0xD
002fb9 000a
002fba 6843
002fbb 6e61
002fbc 656e      	.DB  0xA,0x0,0x43,0x68,0x61,0x6E,0x6E,0x65
002fbd 206c
002fbe 4449
002fbf 253a
002fc0 2064      	.DB  0x6C,0x20,0x49,0x44,0x3A,0x25,0x64,0x20
002fc1 0a0d
002fc2 6300
002fc3 7275
002fc4 6572      	.DB  0xD,0xA,0x0,0x63,0x75,0x72,0x72,0x65
002fc5 746e
002fc6 7320
002fc7 6e65
002fc8 6f73      	.DB  0x6E,0x74,0x20,0x73,0x65,0x6E,0x73,0x6F
002fc9 2072
002fca 6863
002fcb 255b
002fcc 5d64      	.DB  0x72,0x20,0x63,0x68,0x5B,0x25,0x64,0x5D
002fcd 2c20
002fce 7620
002fcf 6c61
002fd0 6575      	.DB  0x20,0x2C,0x20,0x76,0x61,0x6C,0x75,0x65
002fd1 253a
002fd2 2e30
002fd3 6632
002fd4 0a0d      	.DB  0x3A,0x25,0x30,0x2E,0x32,0x66,0xD,0xA
002fd5 4300
002fd6 6168
002fd7 6e6e
002fd8 6c65      	.DB  0x0,0x43,0x68,0x61,0x6E,0x6E,0x65,0x6C
002fd9 4920
002fda 2044
002fdb 7369
002fdc 6920      	.DB  0x20,0x49,0x44,0x20,0x69,0x73,0x20,0x69
002fdd 206e
002fde 6172
002fdf 676e
002fe0 2e65      	.DB  0x6E,0x20,0x72,0x61,0x6E,0x67,0x65,0x2E
002fe1 0a0d
002fe2 0d00
002fe3 3c0a
002fe4 6544      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x44,0x65
002fe5 7562
002fe6 3e67
002fe7 6547
002fe8 4374      	.DB  0x62,0x75,0x67,0x3E,0x47,0x65,0x74,0x43
002fe9 6c61
002fea 203a
002feb 0a0d
002fec 7300      	.DB  0x61,0x6C,0x3A,0x20,0xD,0xA,0x0,0x73
002fed 6474
002fee 6552
002fef 5b66
002ff0 6425      	.DB  0x74,0x64,0x52,0x65,0x66,0x5B,0x25,0x64
002ff1 205d
002ff2 203a
002ff3 3025
002ff4 322e      	.DB  0x5D,0x20,0x3A,0x20,0x25,0x30,0x2E,0x32
002ff5 2066
002ff6 202c
002ff7 7300
002ff8 6e65      	.DB  0x66,0x20,0x2C,0x20,0x0,0x73,0x65,0x6E
002ff9 6f73
002ffa 5272
002ffb 6665
002ffc 255b      	.DB  0x73,0x6F,0x72,0x52,0x65,0x66,0x5B,0x25
002ffd 5d64
002ffe 3a20
002fff 2520
003000 2e30      	.DB  0x64,0x5D,0x20,0x3A,0x20,0x25,0x30,0x2E
003001 6632
003002 0a0d
003003 4300
003004 6c61      	.DB  0x32,0x66,0xD,0xA,0x0,0x43,0x61,0x6C
003005 7954
003006 6570
003007 3a20
003008 4320      	.DB  0x54,0x79,0x70,0x65,0x20,0x3A,0x20,0x43
003009 4c41
00300a 445f
00300b 4645
00300c 5541      	.DB  0x41,0x4C,0x5F,0x44,0x45,0x46,0x41,0x55
00300d 544c
00300e 4300
00300f 6c61
003010 7954      	.DB  0x4C,0x54,0x0,0x43,0x61,0x6C,0x54,0x79
003011 6570
003012 3a20
003013 4320
003014 4c41      	.DB  0x70,0x65,0x20,0x3A,0x20,0x43,0x41,0x4C
003015 455f
003016 5458
003017 464f
003018 5346      	.DB  0x5F,0x45,0x58,0x54,0x4F,0x46,0x46,0x53
003019 5445
00301a 4300
00301b 6c61
00301c 7954      	.DB  0x45,0x54,0x0,0x43,0x61,0x6C,0x54,0x79
00301d 6570
00301e 3a20
00301f 4320
003020 4c41      	.DB  0x70,0x65,0x20,0x3A,0x20,0x43,0x41,0x4C
003021 455f
003022 5458
003023 494c
003024 454e      	.DB  0x5F,0x45,0x58,0x54,0x4C,0x49,0x4E,0x45
003025 5241
003026 4300
003027 6c61
003028 7954      	.DB  0x41,0x52,0x0,0x43,0x61,0x6C,0x54,0x79
003029 6570
00302a 3a20
00302b 4320
00302c 4c41      	.DB  0x70,0x65,0x20,0x3A,0x20,0x43,0x41,0x4C
00302d 455f
00302e 5458
00302f 4f50
003030 594c      	.DB  0x5F,0x45,0x58,0x54,0x50,0x4F,0x4C,0x59
003031 4f4e
003032 494d
003033 4c41
003034 0d00      	.DB  0x4E,0x4F,0x4D,0x49,0x41,0x4C,0x0,0xD
003035 3c0a
003036 6544
003037 7562
003038 3e67      	.DB  0xA,0x3C,0x44,0x65,0x62,0x75,0x67,0x3E
003039 6553
00303a 4374
00303b 6c61
00303c 203a      	.DB  0x53,0x65,0x74,0x43,0x61,0x6C,0x3A,0x20
00303d 0a0d
00303e 5000
00303f 696f
003040 746e      	.DB  0xD,0xA,0x0,0x50,0x6F,0x69,0x6E,0x74
003041 4920
003042 3a44
003043 6425
003044 0d20      	.DB  0x20,0x49,0x44,0x3A,0x25,0x64,0x20,0xD
003045 000a
003046 6f70
003047 6e69
003048 5674      	.DB  0xA,0x0,0x70,0x6F,0x69,0x6E,0x74,0x56
003049 6c61
00304a 6575
00304b 6d28
00304c 7465      	.DB  0x61,0x6C,0x75,0x65,0x28,0x6D,0x65,0x74
00304d 7265
00304e 6552
00304f 2966
003050 3a20      	.DB  0x65,0x72,0x52,0x65,0x66,0x29,0x20,0x3A
003051 3025
003052 322e
003053 2066
003054 0a0d      	.DB  0x25,0x30,0x2E,0x32,0x66,0x20,0xD,0xA
003055 0d00
003056 3c0a
003057 6544
003058 7562      	.DB  0x0,0xD,0xA,0x3C,0x44,0x65,0x62,0x75
003059 3e67
00305a 6f43
00305b 666e
00305c 7269      	.DB  0x67,0x3E,0x43,0x6F,0x6E,0x66,0x69,0x72
00305d 436d
00305e 6c61
00305f 203a
003060 0a0d      	.DB  0x6D,0x43,0x61,0x6C,0x3A,0x20,0xD,0xA
003061 6700
003062 7465
003063 7920
003064 6165      	.DB  0x0,0x67,0x65,0x74,0x20,0x79,0x65,0x61
003065 2072
003066 203d
003067 6425
003068 0a0d      	.DB  0x72,0x20,0x3D,0x20,0x25,0x64,0xD,0xA
003069 6700
00306a 7465
00306b 6d20
00306c 6e6f      	.DB  0x0,0x67,0x65,0x74,0x20,0x6D,0x6F,0x6E
00306d 6874
00306e 3d20
00306f 2520
003070 0d64      	.DB  0x74,0x68,0x20,0x3D,0x20,0x25,0x64,0xD
003071 000a
003072 6567
003073 2074
003074 6164      	.DB  0xA,0x0,0x67,0x65,0x74,0x20,0x64,0x61
003075 6574
003076 3d20
003077 2520
003078 0d64      	.DB  0x74,0x65,0x20,0x3D,0x20,0x25,0x64,0xD
003079 000a
00307a 6567
00307b 2074
00307c 6f68      	.DB  0xA,0x0,0x67,0x65,0x74,0x20,0x68,0x6F
00307d 7275
00307e 3d20
00307f 2520
003080 0d64      	.DB  0x75,0x72,0x20,0x3D,0x20,0x25,0x64,0xD
003081 000a
003082 6567
003083 2074
003084 696d      	.DB  0xA,0x0,0x67,0x65,0x74,0x20,0x6D,0x69
003085 206e
003086 203d
003087 6425
003088 0a0d      	.DB  0x6E,0x20,0x3D,0x20,0x25,0x64,0xD,0xA
003089 6700
00308a 7465
00308b 7320
00308c 6365      	.DB  0x0,0x67,0x65,0x74,0x20,0x73,0x65,0x63
00308d 3d20
00308e 2520
00308f 0d64
003090 000a      	.DB  0x20,0x3D,0x20,0x25,0x64,0xD,0xA,0x0
003091 6567
003092 2074
003093 6974
003094 656d      	.DB  0x67,0x65,0x74,0x20,0x74,0x69,0x6D,0x65
003095 6f7a
003096 656e
003097 3d20
003098 2520      	.DB  0x7A,0x6F,0x6E,0x65,0x20,0x3D,0x20,0x25
003099 642b
00309a 0a0d
00309b 0d00
00309c 3c0a      	.DB  0x2B,0x64,0xD,0xA,0x0,0xD,0xA,0x3C
00309d 4544
00309e 5542
00309f 3e47
0030a0 4120      	.DB  0x44,0x45,0x42,0x55,0x47,0x3E,0x20,0x41
0030a1 616c
0030a2 6d72
0030a3 5320
0030a4 6174      	.DB  0x6C,0x61,0x72,0x6D,0x20,0x53,0x74,0x61
0030a5 7574
0030a6 2073
0030a7 6552
0030a8 6573      	.DB  0x74,0x75,0x73,0x20,0x52,0x65,0x73,0x65
0030a9 2e74
0030aa 212e
0030ab 0d21
0030ac 000a      	.DB  0x74,0x2E,0x2E,0x21,0x21,0xD,0xA,0x0
0030ad 443c
0030ae 4245
0030af 4755
0030b0 435f      	.DB  0x3C,0x44,0x45,0x42,0x55,0x47,0x5F,0x43
0030b1 656c
0030b2 7261
0030b3 6f4c
0030b4 4667      	.DB  0x6C,0x65,0x61,0x72,0x4C,0x6F,0x67,0x46
0030b5 6c69
0030b6 3e65
0030b7 5220
0030b8 2d65      	.DB  0x69,0x6C,0x65,0x3E,0x20,0x52,0x65,0x2D
0030b9 6e69
0030ba 7469
0030bb 6169
0030bc 6574      	.DB  0x69,0x6E,0x69,0x74,0x69,0x61,0x74,0x65
0030bd 6c20
0030be 676f
0030bf 6620
0030c0 6c69      	.DB  0x20,0x6C,0x6F,0x67,0x20,0x66,0x69,0x6C
0030c1 0d65
0030c2 000a
0030c3 443c
0030c4 4245      	.DB  0x65,0xD,0xA,0x0,0x3C,0x44,0x45,0x42
0030c5 4755
0030c6 435f
0030c7 656c
0030c8 7261      	.DB  0x55,0x47,0x5F,0x43,0x6C,0x65,0x61,0x72
0030c9 6f4c
0030ca 4667
0030cb 6c69
0030cc 3e65      	.DB  0x4C,0x6F,0x67,0x46,0x69,0x6C,0x65,0x3E
0030cd 4c20
0030ce 474f
0030cf 635f
0030d0 6572      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65
0030d1 7461
0030d2 4665
0030d3 6c69
0030d4 2865      	.DB  0x61,0x74,0x65,0x46,0x69,0x6C,0x65,0x28
0030d5 7325
0030d6 2029
0030d7 6166
0030d8 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
0030d9 6465
0030da 0a0d
0030db 3c00
0030dc 4544      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x44,0x45
0030dd 5542
0030de 5f47
0030df 6573
0030e0 5274      	.DB  0x42,0x55,0x47,0x5F,0x73,0x65,0x74,0x52
0030e1 6165
0030e2 566c
0030e3 6572
0030e4 3e66      	.DB  0x65,0x61,0x6C,0x56,0x72,0x65,0x66,0x3E
0030e5 6720
0030e6 7465
0030e7 7320
0030e8 7465      	.DB  0x20,0x67,0x65,0x74,0x20,0x73,0x65,0x74
0030e9 5620
0030ea 6572
0030eb 3c66
0030ec 7473      	.DB  0x20,0x56,0x72,0x65,0x66,0x3C,0x73,0x74
0030ed 6972
0030ee 676e
0030ef 203e
0030f0 7325      	.DB  0x72,0x69,0x6E,0x67,0x3E,0x20,0x25,0x73
0030f1 0a0d
0030f2 3c00
0030f3 4544
0030f4 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
0030f5 5f47
0030f6 6573
0030f7 5274
0030f8 6165      	.DB  0x47,0x5F,0x73,0x65,0x74,0x52,0x65,0x61
0030f9 566c
0030fa 6572
0030fb 3e66
0030fc 4120      	.DB  0x6C,0x56,0x72,0x65,0x66,0x3E,0x20,0x41
0030fd 7466
0030fe 7265
0030ff 6320
003100 6e6f      	.DB  0x66,0x74,0x65,0x72,0x20,0x63,0x6F,0x6E
003101 6576
003102 7472
003103 3d20
003104 2520      	.DB  0x76,0x65,0x72,0x74,0x20,0x3D,0x20,0x25
003105 0d66
003106 000a
003107 443c
003108 4245      	.DB  0x66,0xD,0xA,0x0,0x3C,0x44,0x45,0x42
003109 4755
00310a 735f
00310b 6e65
00310c 6f73      	.DB  0x55,0x47,0x5F,0x73,0x65,0x6E,0x73,0x6F
00310d 5372
00310e 6c65
00310f 6365
003110 3e74      	.DB  0x72,0x53,0x65,0x6C,0x65,0x63,0x74,0x3E
003111 5420
003112 6968
003113 2073
003114 4554      	.DB  0x20,0x54,0x68,0x69,0x73,0x20,0x54,0x45
003115 504d
003116 535f
003117 4c45
003118 6e20      	.DB  0x4D,0x50,0x5F,0x53,0x45,0x4C,0x20,0x6E
003119 746f
00311a 7320
00311b 7075
00311c 6f70      	.DB  0x6F,0x74,0x20,0x73,0x75,0x70,0x70,0x6F
00311d 7472
00311e 0a0d
00311f 0a0d
003120 3c00      	.DB  0x72,0x74,0xD,0xA,0xD,0xA,0x0,0x3C
003121 4544
003122 5542
003123 5f47
003124 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
003125 736e
003126 726f
003127 6553
003128 656c      	.DB  0x6E,0x73,0x6F,0x72,0x53,0x65,0x6C,0x65
003129 7463
00312a 203e
00312b 6544
00312c 6573      	.DB  0x63,0x74,0x3E,0x20,0x44,0x65,0x73,0x65
00312d 656c
00312e 7463
00312f 7320
003130 6e65      	.DB  0x6C,0x65,0x63,0x74,0x20,0x73,0x65,0x6E
003131 6f73
003132 0d72
003133 0d0a
003134 000a      	.DB  0x73,0x6F,0x72,0xD,0xA,0xD,0xA,0x0
003135 443c
003136 4245
003137 4755
003138 735f      	.DB  0x3C,0x44,0x45,0x42,0x55,0x47,0x5F,0x73
003139 6e65
00313a 6f73
00313b 5372
00313c 6c65      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x53,0x65,0x6C
00313d 6365
00313e 3e74
00313f 5320
003140 6c65      	.DB  0x65,0x63,0x74,0x3E,0x20,0x53,0x65,0x6C
003141 6365
003142 6574
003143 2064
003144 6573      	.DB  0x65,0x63,0x74,0x65,0x64,0x20,0x73,0x65
003145 736e
003146 726f
003147 2520
003148 0d64      	.DB  0x6E,0x73,0x6F,0x72,0x20,0x25,0x64,0xD
003149 0d0a
00314a 000a
00314b 443c
00314c 4245      	.DB  0xA,0xD,0xA,0x0,0x3C,0x44,0x45,0x42
00314d 4755
00314e 735f
00314f 6e65
003150 6f73      	.DB  0x55,0x47,0x5F,0x73,0x65,0x6E,0x73,0x6F
003151 5372
003152 6c65
003153 6365
003154 3e74      	.DB  0x72,0x53,0x65,0x6C,0x65,0x63,0x74,0x3E
003155 4520
003156 5252
003157 524f
003158 3a20      	.DB  0x20,0x45,0x52,0x52,0x4F,0x52,0x20,0x3A
003159 5320
00315a 6c65
00315b 6365
00315c 6974      	.DB  0x20,0x53,0x65,0x6C,0x65,0x63,0x74,0x69
00315d 676e
00315e 7320
00315f 6e65
003160 6f73      	.DB  0x6E,0x67,0x20,0x73,0x65,0x6E,0x73,0x6F
003161 2072
003162 255b
003163 5d63
003164 305b      	.DB  0x72,0x20,0x5B,0x25,0x63,0x5D,0x5B,0x30
003165 2578
003166 3230
003167 5d58
003168 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0xD,0xA
003169 0a0d
00316a 3c00
00316b 4544
00316c 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
00316d 5f47
00316e 6573
00316f 5374
003170 7265      	.DB  0x47,0x5F,0x73,0x65,0x74,0x53,0x65,0x72
003171 6169
003172 4e6c
003173 6d75
003174 6562      	.DB  0x69,0x61,0x6C,0x4E,0x75,0x6D,0x62,0x65
003175 3e72
003176 6920
003177 766e
003178 6c61      	.DB  0x72,0x3E,0x20,0x69,0x6E,0x76,0x61,0x6C
003179 6469
00317a 7320
00317b 7465
00317c 6974      	.DB  0x69,0x64,0x20,0x73,0x65,0x74,0x74,0x69
00317d 676e
00317e 7320
00317f 7274
003180 6e69      	.DB  0x6E,0x67,0x20,0x73,0x74,0x72,0x69,0x6E
003181 2067
003182 2528
003183 2963
003184 305b      	.DB  0x67,0x20,0x28,0x25,0x63,0x29,0x5B,0x30
003185 2578
003186 3230
003187 0d5d
003188 000a      	.DB  0x78,0x25,0x30,0x32,0x5D,0xD,0xA,0x0
003189 443c
00318a 4245
00318b 4755
00318c 735f      	.DB  0x3C,0x44,0x45,0x42,0x55,0x47,0x5F,0x73
00318d 7465
00318e 6553
00318f 6972
003190 6c61      	.DB  0x65,0x74,0x53,0x65,0x72,0x69,0x61,0x6C
003191 754e
003192 626d
003193 7265
003194 203e      	.DB  0x4E,0x75,0x6D,0x62,0x65,0x72,0x3E,0x20
003195 6552
003196 6c70
003197 6361
003198 6e69      	.DB  0x52,0x65,0x70,0x6C,0x61,0x63,0x69,0x6E
003199 2067
00319a 4544
00319b 4956
00319c 4543      	.DB  0x67,0x20,0x44,0x45,0x56,0x49,0x43,0x45
00319d 535f
00319e 5245
00319f 4149
0031a0 2e4c      	.DB  0x5F,0x53,0x45,0x52,0x49,0x41,0x4C,0x2E
0031a1 0d2e
0031a2 000a
0031a3 443c
0031a4 4245      	.DB  0x2E,0xD,0xA,0x0,0x3C,0x44,0x45,0x42
0031a5 4755
0031a6 735f
0031a7 7465
0031a8 6553      	.DB  0x55,0x47,0x5F,0x73,0x65,0x74,0x53,0x65
0031a9 6972
0031aa 6c61
0031ab 754e
0031ac 626d      	.DB  0x72,0x69,0x61,0x6C,0x4E,0x75,0x6D,0x62
0031ad 7265
0031ae 203e
0031af 6553
0031b0 2074      	.DB  0x65,0x72,0x3E,0x20,0x53,0x65,0x74,0x20
0031b1 7453
0031b2 6972
0031b3 676e
0031b4 2d20      	.DB  0x53,0x74,0x72,0x69,0x6E,0x67,0x20,0x2D
0031b5 3e2d
0031b6 0020
0031b7 255b
0031b8 0063      	.DB  0x2D,0x3E,0x20,0x0,0x5B,0x25,0x63,0x0
0031b9 6325
0031ba 005d
0031bb 443c
0031bc 4245      	.DB  0x25,0x63,0x5D,0x0,0x3C,0x44,0x45,0x42
0031bd 4755
0031be 735f
0031bf 7465
0031c0 6553      	.DB  0x55,0x47,0x5F,0x73,0x65,0x74,0x53,0x65
0031c1 6972
0031c2 6c61
0031c3 754e
0031c4 626d      	.DB  0x72,0x69,0x61,0x6C,0x4E,0x75,0x6D,0x62
0031c5 7265
0031c6 203e
0031c7 7553
0031c8 6363      	.DB  0x65,0x72,0x3E,0x20,0x53,0x75,0x63,0x63
0031c9 7365
0031ca 2173
0031cb 2021
0031cc 4544      	.DB  0x65,0x73,0x73,0x21,0x21,0x20,0x44,0x45
0031cd 5f56
0031ce 4553
0031cf 4952
0031d0 4c41      	.DB  0x56,0x5F,0x53,0x45,0x52,0x49,0x41,0x4C
0031d1 3d20
0031d2 3e3d
0031d3 0020
0031d4 255b      	.DB  0x20,0x3D,0x3D,0x3E,0x20,0x0,0x5B,0x25
0031d5 3230
0031d6 5d58
0031d7 3c00
0031d8 4544      	.DB  0x30,0x32,0x58,0x5D,0x0,0x3C,0x44,0x45
0031d9 5542
0031da 5f47
0031db 6572
0031dc 6461      	.DB  0x42,0x55,0x47,0x5F,0x72,0x65,0x61,0x64
0031dd 6553
0031de 6972
0031df 6c61
0031e0 754e      	.DB  0x53,0x65,0x72,0x69,0x61,0x6C,0x4E,0x75
0031e1 626d
0031e2 7265
0031e3 203e
0031e4 4544      	.DB  0x6D,0x62,0x65,0x72,0x3E,0x20,0x44,0x45
0031e5 5f56
0031e6 4553
0031e7 4952
0031e8 4c41      	.DB  0x56,0x5F,0x53,0x45,0x52,0x49,0x41,0x4C
0031e9 3d20
0031ea 3e3d
0031eb 0020
0031ec 6547      	.DB  0x20,0x3D,0x3D,0x3E,0x20,0x0,0x47,0x65
0031ed 2074
0031ee 6544
0031ef 7562
0031f0 2067      	.DB  0x74,0x20,0x44,0x65,0x62,0x75,0x67,0x20
0031f1 6552
0031f2 2e71
0031f3 003a
0031f4 3025      	.DB  0x52,0x65,0x71,0x2E,0x3A,0x0,0x25,0x30
0031f5 6435
0031f6 2020
0031f7 0020
0031f8 3025      	.DB  0x35,0x64,0x20,0x20,0x20,0x0,0x25,0x30
0031f9 7832
0031fa 0020
0031fb 002e      	.DB  0x32,0x78,0x20,0x0,0x2E,0x0
                 _0x300003:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(4465): warning: .cseg .db misalignment - padding zero byte
0031fc 0003      	.DB  0x3
                 _0x320007:
0031fd 0000
0031fe 0000
0031ff 0000
003200 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
003201 0000
003202 0000
003203 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0
                 _0x340022:
003204 0000
003205 0000
003206 0000
003207 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
003208 0000
003209 0000
00320a 0000
00320b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00320c 0000
00320d 0000
00320e 0000
00320f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
003210 0000
003211 0000
003212 0000
003213 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
003214 0000
003215 0000
003216 0000
003217 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
003218 0000
003219 0000
00321a 0000
00321b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x340000:
00321c 433c
00321d 6c61
00321e 5320
00321f 6474      	.DB  0x3C,0x43,0x61,0x6C,0x20,0x53,0x74,0x64
003220 7220
003221 6665
003222 633e
003223 5b68      	.DB  0x20,0x72,0x65,0x66,0x3E,0x63,0x68,0x5B
003224 6425
003225 2c5d
003226 6f66
003227 6d72      	.DB  0x25,0x64,0x5D,0x2C,0x66,0x6F,0x72,0x6D
003228 7461
003229 7954
00322a 6570
00322b 253a      	.DB  0x61,0x74,0x54,0x79,0x70,0x65,0x3A,0x25
00322c 2e30
00322d 6632
00322e 0a0d
00322f 7300      	.DB  0x30,0x2E,0x32,0x66,0xD,0xA,0x0,0x73
003230 6474
003231 6552
003232 3a66
003233 3025      	.DB  0x74,0x64,0x52,0x65,0x66,0x3A,0x25,0x30
003234 322e
003235 2c66
003236 6573
003237 736e      	.DB  0x2E,0x32,0x66,0x2C,0x73,0x65,0x6E,0x73
003238 726f
003239 6552
00323a 3a66
00323b 3025      	.DB  0x6F,0x72,0x52,0x65,0x66,0x3A,0x25,0x30
00323c 322e
00323d 0d66
00323e 000a
00323f 633c      	.DB  0x2E,0x32,0x66,0xD,0xA,0x0,0x3C,0x63
003240 6c61
003241 6269
003242 6172
003243 6974      	.DB  0x61,0x6C,0x69,0x62,0x72,0x61,0x74,0x69
003244 6e6f
003245 433e
003246 6c61
003247 7020      	.DB  0x6F,0x6E,0x3E,0x43,0x61,0x6C,0x20,0x70
003248 6f72
003249 6570
00324a 7472
00324b 6569      	.DB  0x72,0x6F,0x70,0x65,0x72,0x74,0x69,0x65
00324c 3a73
00324d 6573
00324e 2074
00324f 6163      	.DB  0x73,0x3A,0x73,0x65,0x74,0x20,0x63,0x61
003250 206e
003251 6f6e
003252 2074
003253 6567      	.DB  0x6E,0x20,0x6E,0x6F,0x74,0x20,0x67,0x65
003254 2074
003255 6176
003256 756c
003257 2e65      	.DB  0x74,0x20,0x76,0x61,0x6C,0x75,0x65,0x2E
003258 3c00
003259 6163
00325a 696c
00325b 7262      	.DB  0x0,0x3C,0x63,0x61,0x6C,0x69,0x62,0x72
00325c 7461
00325d 6f69
00325e 3e6e
00325f 6143      	.DB  0x61,0x74,0x69,0x6F,0x6E,0x3E,0x43,0x61
003260 206c
003261 7270
003262 706f
003263 7265      	.DB  0x6C,0x20,0x70,0x72,0x6F,0x70,0x65,0x72
003264 6974
003265 7365
003266 673a
003267 7465      	.DB  0x74,0x69,0x65,0x73,0x3A,0x67,0x65,0x74
003268 6320
003269 6e61
00326a 6e20
00326b 746f      	.DB  0x20,0x63,0x61,0x6E,0x20,0x6E,0x6F,0x74
00326c 7320
00326d 7465
00326e 7620
00326f 6c61      	.DB  0x20,0x73,0x65,0x74,0x20,0x76,0x61,0x6C
003270 6575
003271 002e
003272 433c
003273 6c61      	.DB  0x75,0x65,0x2E,0x0,0x3C,0x43,0x61,0x6C
003274 5320
003275 6474
003276 7220
003277 6665      	.DB  0x20,0x53,0x74,0x64,0x20,0x72,0x65,0x66
003278 633e
003279 5b68
00327a 6425
00327b 2c5d      	.DB  0x3E,0x63,0x68,0x5B,0x25,0x64,0x5D,0x2C
00327c 6f66
00327d 6d72
00327e 7461
00327f 7954      	.DB  0x66,0x6F,0x72,0x6D,0x61,0x74,0x54,0x79
003280 6570
003281 253a
003282 0d64
003283 000a      	.DB  0x70,0x65,0x3A,0x25,0x64,0xD,0xA,0x0
                 _0x2000060:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(4504): warning: .cseg .db misalignment - padding zero byte
003284 0001      	.DB  0x1
                 _0x2000000:
003285 4e2d
003286 4e41
003287 4900
003288 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(4507): warning: .cseg .db misalignment - padding zero byte
003289 0000      	.DB  0x0
                 _0x2040003:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(4509): warning: .cseg .db misalignment - padding zero byte
00328a 0001      	.DB  0x1
                 _0x2080000:
00328b 4e2d
00328c 4e41
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(4511): warning: .cseg .db misalignment - padding zero byte
00328d 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 
                 __GLOBAL_INI_TBL:
00328e 0004      	.DW  0x04
00328f 1d8a      	.DW  0x1D8A
003290 01aa 0000 	.DD  __HEAP_START_MARKER*2
                 
003292 0004      	.DW  0x04
003293 14df      	.DW  _ETH_rst_timer_S0000001000
003294 01ca 0000 	.DD  _0x75*2
                 
003296 002b      	.DW  0x2B
003297 0cf0      	.DW  _0x40009
003298 0e7a 0000 	.DD  _0x40000*2
                 
00329a 0026      	.DW  0x26
00329b 0d1b      	.DW  _0x40009+43
00329c 0ea5 0000 	.DD  _0x40000*2+43
                 
00329e 002b      	.DW  0x2B
00329f 0d41      	.DW  _0x40009+81
0032a0 0e7a 0000 	.DD  _0x40000*2
                 
0032a2 0002      	.DW  0x02
0032a3 143c      	.DW  _d_out
0032a4 0f52 0000 	.DD  _0x80003*2
                 
0032a6 0001      	.DW  0x01
0032a7 10f6      	.DW  _is_properties_config_update
0032a8 10bc 0000 	.DD  _0xE0003*2
                 
0032aa 0001      	.DW  0x01
0032ab 10f7      	.DW  _is_operating_config_update
0032ac 10be 0000 	.DD  _0xE0004*2
                 
0032ae 0005      	.DW  0x05
0032af 10f8      	.DW  _is_sensor_config_update
0032b0 10c0 0000 	.DD  _0xE0005*2
                 
0032b2 0010      	.DW  0x10
0032b3 10fd      	.DW  _is_din_config_update
0032b4 10c6 0000 	.DD  _0xE0006*2
                 
0032b6 0005      	.DW  0x05
0032b7 110d      	.DW  _is_dout_config_update
0032b8 10d6 0000 	.DD  _0xE0007*2
                 
0032ba 0001      	.DW  0x01
0032bb 1112      	.DW  _is_buzzer_config_update
0032bc 10dc 0000 	.DD  _0xE0008*2
                 
0032be 0001      	.DW  0x01
0032bf 1113      	.DW  _is_status_config_update
0032c0 10de 0000 	.DD  _0xE0009*2
                 
0032c2 0001      	.DW  0x01
0032c3 1114      	.DW  _is_env_config_update
0032c4 10e0 0000 	.DD  _0xE000A*2
                 
0032c6 0002      	.DW  0x02
0032c7 0d6c      	.DW  _0x1200D0
0032c8 3061 0000 	.DD  _0x120000*2+4883
                 
0032ca 0003      	.DW  0x03
0032cb 0007      	.DW  0x07
0032cc 4104 0000 	.DD  _0x18001D*2
                 
0032ce 0004      	.DW  0x04
0032cf 000a      	.DW  0x0A
0032d0 4476 0000 	.DD  _0x1C0005*2
                 
0032d2 0002      	.DW  0x02
0032d3 147c      	.DW  _dinStatus
0032d4 447a 0000 	.DD  _0x1E0003*2
                 
0032d6 0002      	.DW  0x02
0032d7 147e      	.DW  _doutStatus
0032d8 447c 0000 	.DD  _0x1E0004*2
                 
0032da 0001      	.DW  0x01
0032db 1480      	.DW  _serverCommStatus
0032dc 447e 0000 	.DD  _0x1E0005*2
                 
0032de 0002      	.DW  0x02
0032df 15f7      	.DW  _lastDinCheck_S00F0006000
0032e0 4480 0000 	.DD  _0x1E003A*2
                 
0032e2 0010      	.DW  0x10
0032e3 1496      	.DW  _dinAlarm
0032e4 45c0 0000 	.DD  _0x220003*2
                 
0032e6 0010      	.DW  0x10
0032e7 1679      	.DW  _ainAlarm
0032e8 45d0 0000 	.DD  _0x220004*2
                 
0032ea 0001      	.DW  0x01
0032eb 1693      	.DW  _lastCheck_S0110003000
0032ec 45e0 0000 	.DD  _0x2200A8*2
                 
0032ee 0001      	.DW  0x01
0032ef 1699      	.DW  _lastCheck_S0110004000
0032f0 45e2 0000 	.DD  _0x2200B1*2
                 
0032f2 0002      	.DW  0x02
0032f3 16a9      	.DW  _lastCheck_S0110006000
0032f4 45e4 0000 	.DD  _0x2200C5*2
                 
0032f6 0005      	.DW  0x05
0032f7 16c4      	.DW  _lastCheck_S0110007000
0032f8 45e6 0000 	.DD  _0x2200CF*2
                 
0032fa 0004      	.DW  0x04
0032fb 1487      	.DW  _muteAlarmExpired
0032fc 45ec 0000 	.DD  _0x2200DD*2
                 
0032fe 0001      	.DW  0x01
0032ff 0006      	.DW  0x06
003300 45f0 0000 	.DD  _0x2200F6*2
                 
003302 0003      	.DW  0x03
003303 1916      	.DW  _root_path
003304 489a 0000 	.DD  _0x260003*2
                 
003306 0008      	.DW  0x08
003307 14a8      	.DW  _LOGFILE_DATA
003308 4d74 0000 	.DD  _0x280003*2
                 
00330a 0009      	.DW  0x09
00330b 14b1      	.DW  _LOGFILE_EVENT
00330c 4d7c 0000 	.DD  _0x280004*2
                 
00330e 0009      	.DW  0x09
00330f 14bb      	.DW  _LOGFILE_ERROR
003310 4d86 0000 	.DD  _0x280005*2
                 
003312 0010      	.DW  0x10
003313 14c5      	.DW  _LOG_INIT_STR
003314 4d90 0000 	.DD  _0x280006*2
                 
003316 0004      	.DW  0x04
003317 14d5      	.DW  _LOG_openFile
003318 4da0 0000 	.DD  _0x280007*2
                 
00331a 0004      	.DW  0x04
00331b 14d9      	.DW  _LOG_closeFile
00331c 4da4 0000 	.DD  _0x280008*2
                 
00331e 0001      	.DW  0x01
00331f 10f4      	.DW  _hwCalId
003320 5f58 0000 	.DD  _0x2E0003*2
                 
003322 0001      	.DW  0x01
003323 1a17      	.DW  _n
003324 63f8 0000 	.DD  _0x300003*2
                 
003326 0001      	.DW  0x01
003327 1a49      	.DW  __seed_G100
003328 6508 0000 	.DD  _0x2000060*2
                 
00332a 0001      	.DW  0x01
00332b 1a4d      	.DW  _status_G102
00332c 6514 0000 	.DD  _0x2040003*2
                 
                 _0xFFFFFFFF:
00332e 0000      	.DW  0
                 
                 __RESET:
00332f 94f8      	CLI
003330 27ee      	CLR  R30
003331 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
003332 e0f1      	LDI  R31,1
003333 bff5      	OUT  MCUCR,R31
003334 bfe5      	OUT  MCUCR,R30
003335 93e0 0074 	STS  XMCRA,R30
003337 93e0 0075 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
003339 e1f8      	LDI  R31,0x18
00333a 95a8      	WDR
00333b b7a4      	IN   R26,MCUSR
00333c 7fa7      	CBR  R26,8
00333d bfa4      	OUT  MCUSR,R26
00333e 93f0 0060 	STS  WDTCSR,R31
003340 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
003342 e08d      	LDI  R24,(14-2)+1
003343 e0a2      	LDI  R26,2
003344 27bb      	CLR  R27
                 __CLEAR_REG:
003345 93ed      	ST   X+,R30
003346 958a      	DEC  R24
003347 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
003348 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
003349 e290      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00334a e0a0      	LDI  R26,LOW(__SRAM_START)
00334b e0b2      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00334c 93ed      	ST   X+,R30
00334d 9701      	SBIW R24,1
00334e f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00334f e1ec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
003350 e6f5      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
003351 e0d0      	LDI  R29,BYTE3(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
003352 bfdb      	OUT  RAMPZ,R29
003353 9187      	ELPM R24,Z+
003354 9197      	ELPM R25,Z+
003355 9700      	SBIW R24,0
003356 f081      	BREQ __GLOBAL_INI_END
003357 91a7      	ELPM R26,Z+
003358 91b7      	ELPM R27,Z+
003359 9007      	ELPM R0,Z+
00335a 9017      	ELPM R1,Z+
00335b 91c7      	ELPM R28,Z+
00335c 91d7      	ELPM R29,Z+
00335d 01bf      	MOVW R22,R30
00335e b7db      	IN   R29,RAMPZ
00335f 01f0      	MOVW R30,R0
003360 bfcb      	OUT  RAMPZ,R28
                 __GLOBAL_INI_LOOP:
003361 9007      	ELPM R0,Z+
003362 920d      	ST   X+,R0
003363 9701      	SBIW R24,1
003364 f7e1      	BRNE __GLOBAL_INI_LOOP
003365 01fb      	MOVW R30,R22
003366 cfeb      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
003367 e0e0      	LDI  R30,__GPIOR0_INIT
003368 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
003369 e8e9      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00336a bfed      	OUT  SPL,R30
00336b e1ed      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00336c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00336d efc0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00336e e0dc      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00336f 940c 3371 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0xCF0
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Project : COMM-ETH : 0.01a
                 ;Date    : 17/7/2012
                 ;Author  : Tawan Srisang
                 ;Company : Intelenics Co.,Ltd.
                 ;Comments:
                 ;Version Format : 1Major.2Minor.1Edition
                 ;
                 ;
                 ;Chip type               : ATmega2560
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;*****************************************************/
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "ims_eth_header.h"
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "ds1672.h"
                 ;#include "sensor.h"
                 ;#include "status.h"
                 ;#include "alarm.h"
                 ;#include "dataqueue.h"
                 ;#include "eventqueue.h"
                 ;#include "log.h"
                 ;#include "logqueue.h"
                 ;//#include "oled.h"
                 ;//#include "menu.h"
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;#include "gaussian.h"
                 ;#include "dht11.h"
                 ;
                 ;#include "uart.h"
                 ;#include <stdio.h>
                 ;
                 ;#define MAX(a,b)                (((a) > (b)) ? (a) : (b))
                 ;#define MIN(a,b)                (((a) < (b)) ? (a) : (b))
                 ;//#define RANDOM(a,b)             ((rand() % (MAX(a,b) - MIN(a,b))) + MIN(a,b))
                 ;
                 ;#define PERIOD_CHECK_MEMORY     300
                 ;
                 ;// I2C Bus functions (for INT-AVXB-00-04)
                 ;#asm
                    .equ __i2c_port=0x0B ;PORTD
                    .equ __sda_bit=1
                    .equ __scl_bit=0
                 ; 0000 0032 #endasm
                 ;
                 ;//unsigned char FIRMWARE_VERSION[] = "COMM-ETH-0.01a";
                 ;
                 ;int updateStatus(void);
                 ;int eventCapture(void);
                 ;int statusReport(void);
                 ;int sensorDataReport(void);
                 ;int eventReport(void);
                 ;int sensorDataSave(void);
                 ;int eventSave(void);
                 ;int logReport(void);
                 ;extern void updateSensorADC(int ch);
                 ;extern int DHT11Read(ST_DHT11 *dhtDevice);
                 ;
                 ;/*============================================================*/
                 ;void main(void)
                 ; 0000 0043 {
                 
                 	.CSEG
                 _main:
                 ; 0000 0044     int                     err,i=0,k=0,res,last_status;
                 ; 0000 0045 
                 ; 0000 0046     TIMER                   sensor_report_timer[5];
                 ; 0000 0047     TIMER                   status_report_timer;
                 ; 0000 0048     TIMER                   check_reset_timer;
                 ; 0000 0049     TIMER                   check_memory_timer;
                 ; 0000 004A     TIMER                   clear_duplicate_timer = 0;
                 ; 0000 004B     TIMER                   readSensorTimer = 0;
                 ; 0000 004C     unsigned long int       timestamp_rd;
                 ; 0000 004D 
                 ; 0000 004E     char                    key_press = 0;
                 ; 0000 004F 
                 ; 0000 0050     float tmpA = 0.0;
                 ; 0000 0051     float tmpB = 0.0;
                 ; 0000 0052     float tmpC = 0.0;
                 ; 0000 0053 
                 ; 0000 0054     /*bongkot*/
                 ; 0000 0055     int countSenserRead = 0;
                 ; 0000 0056 
                 ; 0000 0057     struct rtc_structure st_rtc;
                 ; 0000 0058     //ST_DHT11 dhtDevice;
                 ; 0000 0059     //int dhtRet = 0;
                 ; 0000 005A 
                 ; 0000 005B     // -------- System Initialize ----------- //
                 ; 0000 005C     do{ err = initial_system();  }while(err);
003371 97ef      	SBIW R28,63
003372 976a      	SBIW R28,26
003373 e18b      	LDI  R24,27
003374 e1aa      	LDI  R26,LOW(26)
003375 e0b0      	LDI  R27,HIGH(26)
003376 eaee      	LDI  R30,LOW(_0x3*2)
003377 e0f1      	LDI  R31,HIGH(_0x3*2)
003378 e060      	LDI  R22,BYTE3(_0x3*2)
003379 940e b6a8 	CALL __INITLOCB
                 ;	err -> R16,R17
                 ;	i -> R18,R19
                 ;	k -> R20,R21
                 ;	res -> Y+87
                 ;	last_status -> Y+85
                 ;	sensor_report_timer -> Y+65
                 ;	status_report_timer -> Y+61
                 ;	check_reset_timer -> Y+57
                 ;	check_memory_timer -> Y+53
                 ;	clear_duplicate_timer -> Y+49
                 ;	readSensorTimer -> Y+45
                 ;	timestamp_rd -> Y+41
                 ;	key_press -> Y+40
                 ;	tmpA -> Y+36
                 ;	tmpB -> Y+32
                 ;	tmpC -> Y+28
                 ;	countSenserRead -> Y+26
                 ;	st_rtc -> Y+0
00337b 940e 9f57 	CALL SUBOPT_0x0
                 _0x5:
00337d 940e 3ad8 	CALL _initial_system
00337f 018f      	MOVW R16,R30
003380 2e00      	MOV  R0,R16
003381 2a01      	OR   R0,R17
003382 f7d1      	BRNE _0x5
                 ; 0000 005D 
                 ; 0000 005E //    /*bongkot*/
                 ; 0000 005F //    while(1){
                 ; 0000 0060 //        #asm("wdr")
                 ; 0000 0061 //        dhtRet = DHT11Read(&dhtDevice);
                 ; 0000 0062 //        if(dhtRet == DHT11_SUCCESS){
                 ; 0000 0063 //           printDebug("DHT11: Temp(%f), Humi(%f) \r\n",dhtDevice.temp,dhtDevice.humi);
                 ; 0000 0064 //        }else if(dhtRet == DHT11_ERROR_TIMEOUT){      //DHT11_ERROR_TIMEOUT
                 ; 0000 0065 //           printDebug("DHT11:Time out. \r\n");
                 ; 0000 0066 //        }else if(dhtRet == DHT11_ERROR_CHECKSUM){      //DHT11_ERROR_TIMEOUT
                 ; 0000 0067 //           printDebug("DHT11:Check sum error. \r\n");
                 ; 0000 0068 //        }
                 ; 0000 0069 //
                 ; 0000 006A //        delay_ms(2000);
                 ; 0000 006B //    }
                 ; 0000 006C //
                 ; 0000 006D     /*bongkot*/
                 ; 0000 006E //    while(1){
                 ; 0000 006F //        #asm("wdr")
                 ; 0000 0070 //        for(countSenserRead=0;countSenserRead<5;countSenserRead++){
                 ; 0000 0071 ////            if(TIMER_checkTimerExceed(readSensorTimer)){
                 ; 0000 0072 ////                TIMER_setTimer(&readSensorTimer, 5);
                 ; 0000 0073 ////                updateSensorADC(countSenserRead);                    // -- update adcData[ch] -- //
                 ; 0000 0074 ////                //printDebug("[%d]ADC: %f, Volt: %f \r\n", i, adcData[i], (adcData[i]/1023)*2.56);
                 ; 0000 0075 ////                //printDebug("[%d]ADC: %f, Volt: %f \r\n", i, adcData[countSenserRead], (adcData[countSenserRead]/1023)*3.30);
                 ; 0000 0076 ////            }
                 ; 0000 0077 //
                 ; 0000 0078 //             updateSensorADC(countSenserRead);
                 ; 0000 0079 ////             updateSensorADC(1);
                 ; 0000 007A ////             delay_ms(100);
                 ; 0000 007B ////             updateSensorADC(2);
                 ; 0000 007C //             delay_ms(100);
                 ; 0000 007D //        }
                 ; 0000 007E //        //delay_ms(2000);
                 ; 0000 007F //
                 ; 0000 0080 //    }
                 ; 0000 0081 
                 ; 0000 0082     //ETH_CONF;
                 ; 0000 0083 
                 ; 0000 0084     ETH_switchMode((unsigned char) MODE_NORM);
003383 e8a0      	LDI  R26,LOW(128)
003384 940e 5a19 	CALL _ETH_switchMode
                 ; 0000 0085 
                 ; 0000 0086     /*bongkot*/
                 ; 0000 0087 //    ETH_NORM;
                 ; 0000 0088 //    ETH_reset();
                 ; 0000 0089 //    ETH_OFF;
                 ; 0000 008A //    delay_ms(2000);
                 ; 0000 008B //    ETH_ON;
                 ; 0000 008C 
                 ; 0000 008D     // -- alarm indicator initialize -- //
                 ; 0000 008E     buzzer_on = 0;          // -- buzzer off -- //
003386 98f3      	CBI  0x1E,3
                 ; 0000 008F     for(k=0;k<2;k++)        // -- MAX_DO_CHANNEL
                +
003387 e040     +LDI R20 , LOW ( 0 )
003388 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0xA:
                +
003389 3042     +CPI R20 , LOW ( 2 )
00338a e0e0     +LDI R30 , HIGH ( 2 )
00338b 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
00338c f444      	BRGE _0xB
                 ; 0000 0090     {
                 ; 0000 0091         /*bongkot edit logic*/
                 ; 0000 0092         IO_dout(k,dout_config[k].stateOnEvent);     // -- Digital Output X OFF -- //
00338d 940e 9f5c 	CALL SUBOPT_0x1
00338f 81a0      	LD   R26,Z
003390 940e 3fa6 	CALL _IO_dout
                 ; 0000 0093         //IO_dout(k,!dout_config[k].stateOnEvent);     // -- Digital Output X OFF -- //
                 ; 0000 0094     }
                +
003392 5f4f     +SUBI R20 , LOW ( - 1 )
003393 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
003394 cff4      	RJMP _0xA
                 _0xB:
                 ; 0000 0095 
                 ; 0000 0096     initDataLogQueue();
003395 940e 76df 	CALL _initDataLogQueue
                 ; 0000 0097     initEventLogQueue();
003397 940e 77ba 	CALL _initEventLogQueue
                 ; 0000 0098     ETH_initWaitQueue();
003399 940e 6391 	CALL _ETH_initWaitQueue
                 ; 0000 0099 
                 ; 0000 009A     printDebug("\r\n------ Initial Complete ------\r\n");
                +
00339b ecee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00339c e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
00339d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 0 ) )
00339e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 0 ) )
                 	__POINTD1FN _0x0,0
00339f 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 009B     printDebug("Contact : contact.tawan@gmail.com\r\n");
                +
0033a1 efe1     +LDI R30 , LOW ( 2 * _0x0 + ( 35 ) )
0033a2 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 35 ) )
0033a3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 35 ) )
0033a4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 35 ) )
                 	__POINTD1FN _0x0,35
0033a5 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 009C 
                 ; 0000 009D 
                 ; 0000 009E     //while(1){ printDebug("<main> TEMP_SEL = 0x%02X\r",TEMP_SEL);    delay_ms(100);   #asm("wdr")}
                 ; 0000 009F 
                 ; 0000 00A0     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
0033a7 e020     +LDI R18 , LOW ( 0 )
0033a8 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xD:
                +
0033a9 3025     +CPI R18 , LOW ( 5 )
0033aa e0e0     +LDI R30 , HIGH ( 5 )
0033ab 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
0033ac f444      	BRGE _0xE
                 ; 0000 00A1         if(operating_config.sensorEnable[i]){
0033ad 940e 9f6d 	CALL SUBOPT_0x3
0033af f011      	BREQ _0xF
                 ; 0000 00A2             TIMER_setTimer(&sensor_report_timer[i], 5);
0033b0 940e 9f74 	CALL SUBOPT_0x4
                 ; 0000 00A3         }
                 ; 0000 00A4     }
                 _0xF:
                +
0033b2 5f2f     +SUBI R18 , LOW ( - 1 )
0033b3 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0033b4 cff4      	RJMP _0xD
                 _0xE:
                 ; 0000 00A5 
                 ; 0000 00A6 //    gaussian(271.8683, 392.0240, 489.2156,
                 ; 0000 00A7 //                 -90, -20, 50,
                 ; 0000 00A8 //                 &tmpA, &tmpB, &tmpC);
                 ; 0000 00A9 //
                 ; 0000 00AA //    printDebug("<main> --A--> %f\r\n", tmpA);
                 ; 0000 00AB //    printDebug("<main> --B--> %f\r\n", tmpB);
                 ; 0000 00AC //    printDebug("<main> --C--> %f\r\n", tmpC);
                 ; 0000 00AD 
                 ; 0000 00AE     TIMER_setTimer(&status_report_timer, 7);
0033b5 940e 9f84 	CALL SUBOPT_0x5
                 ; 0000 00AF     TIMER_setTimer(&check_reset_timer, 60);
0033b7 940e 9f8e 	CALL SUBOPT_0x6
                 ; 0000 00B0     TIMER_setTimer(&check_memory_timer, PERIOD_CHECK_MEMORY);
0033b9 940e 9f98 	CALL SUBOPT_0x7
                 ; 0000 00B1 
                 ; 0000 00B2     while(1){
                 _0x10:
                 ; 0000 00B3 
                 ; 0000 00B4         #asm("wdr")
0033bb 95a8      	wdr
                 ; 0000 00B5 
                 ; 0000 00B6         // Reset at 05.00 in every day
                 ; 0000 00B7         if(TIMER_checkTimerExceed(check_reset_timer))
                +
0033bc ada9     +LDD R26 , Y + 57
0033bd adba     +LDD R27 , Y + 57 + 1
0033be ad8b     +LDD R24 , Y + 57 + 2
0033bf ad9c     +LDD R25 , Y + 57 + 3
                 	__GETD2S 57
0033c0 940e 3dff 	CALL _TIMER_checkTimerExceed
0033c2 9730      	SBIW R30,0
0033c3 f0c9      	BREQ _0x13
                 ; 0000 00B8         {
                 ; 0000 00B9             TIMER_setTimer(&check_reset_timer, 60);
0033c4 940e 9f8e 	CALL SUBOPT_0x6
                 ; 0000 00BA             RTC_getDateTime(&st_rtc, 7);
0033c6 01fe      	MOVW R30,R28
0033c7 93fa      	ST   -Y,R31
0033c8 93ea      	ST   -Y,R30
0033c9 940e 9fa2 	CALL SUBOPT_0x8
0033cb 940e 440f 	CALL _RTC_getDateTime
                 ; 0000 00BB //            printRTC(st_rtc);
                 ; 0000 00BC             if(st_rtc.hour == 5) {
0033cd 940e 9fa5 	CALL SUBOPT_0x9
                +
0033cf 30a5     +CPI R26 , LOW ( 0x5 )
0033d0 e0e0     +LDI R30 , HIGH ( 0x5 )
0033d1 07be     +CPC R27 , R30
0033d2 e0e0     +LDI R30 , BYTE3 ( 0x5 )
0033d3 078e     +CPC R24 , R30
0033d4 e0e0     +LDI R30 , BYTE4 ( 0x5 )
0033d5 079e     +CPC R25 , R30
                 	__CPD2N 0x5
0033d6 f431      	BRNE _0x14
                 ; 0000 00BD                 if(st_rtc.min == 0) {
0033d7 940e 9faa 	CALL SUBOPT_0xA
0033d9 940e b67e 	CALL __CPD10
0033db f409      	BRNE _0x15
                 ; 0000 00BE                     while(1);
                 _0x16:
0033dc cfff      	RJMP _0x16
                 ; 0000 00BF                 }
                 ; 0000 00C0             }
                 _0x15:
                 ; 0000 00C1         }
                 _0x14:
                 ; 0000 00C2 
                 ; 0000 00C3         // ----------- Received Debug Request ---------- //
                 ; 0000 00C4         if(flag_PackageTerminate3){    debug_req();     }
                 _0x13:
0033dd 91e0 0d6e 	LDS  R30,_flag_PackageTerminate3
0033df 30e0      	CPI  R30,0
0033e0 f011      	BREQ _0x19
0033e1 940e 7c06 	CALL _debug_req
                 ; 0000 00C5 
                 ; 0000 00C6         // ----------- On Device Key Press ------------- //
                 ; 0000 00C7 //        key_press = IO_keyCheck();
                 ; 0000 00C8 //        if(key_press){
                 ; 0000 00C9 //            MENU_processKey(key_press);
                 ; 0000 00CA //        }
                 ; 0000 00CB 
                 ; 0000 00CC         // ----------- Ethernet Communication ---------- //
                 ; 0000 00CD         ETH_receive();
                 _0x19:
0033e3 940e 58b8 	CALL _ETH_receive
                 ; 0000 00CE         ETH_retransmit();
0033e5 940e 530d 	CALL _ETH_retransmit
                 ; 0000 00CF 
                 ; 0000 00D0         // ----- check if configuration(s) has been updated ----- //
                 ; 0000 00D1         if(is_properties_config_update){
0033e7 91e0 10f6 	LDS  R30,_is_properties_config_update
0033e9 30e0      	CPI  R30,0
0033ea f011      	BREQ _0x1A
                 ; 0000 00D2             getPropertiesConfig(&properties_config);
0033eb 940e 9faf 	CALL SUBOPT_0xB
                 ; 0000 00D3             is_properties_config_update = 0;
                 ; 0000 00D4         }
                 ; 0000 00D5 
                 ; 0000 00D6         if(is_operating_config_update){
                 _0x1A:
0033ed 91e0 10f7 	LDS  R30,_is_operating_config_update
0033ef 30e0      	CPI  R30,0
0033f0 f011      	BREQ _0x1B
                 ; 0000 00D7             getOperatingConfig(&operating_config);
0033f1 940e 9fb7 	CALL SUBOPT_0xC
                 ; 0000 00D8             is_operating_config_update = 0;
                 ; 0000 00D9         }
                 ; 0000 00DA 
                 ; 0000 00DB         for(i=0;i<MAX_SENS_CHANNEL;i++){
                 _0x1B:
                +
0033f3 e020     +LDI R18 , LOW ( 0 )
0033f4 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1D:
                +
0033f5 3025     +CPI R18 , LOW ( 5 )
0033f6 e0e0     +LDI R30 , HIGH ( 5 )
0033f7 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
0033f8 f504      	BRGE _0x1E
                 ; 0000 00DC             if(is_sensor_config_update[i]){
0033f9 efa8      	LDI  R26,LOW(_is_sensor_config_update)
0033fa e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
0033fb 940e 9fbf 	CALL SUBOPT_0xD
0033fd f0c1      	BREQ _0x1F
                 ; 0000 00DD                 err = getSensorConfig(i,&sensor_config[i]);
0033fe 933a      	ST   -Y,R19
0033ff 932a      	ST   -Y,R18
003400 940e 9fc4 	CALL SUBOPT_0xE
003402 940e 45d1 	CALL _getSensorConfig
003404 018f      	MOVW R16,R30
                 ; 0000 00DE                 if(err < 0){
003405 2311      	TST  R17
003406 f44a      	BRPL _0x20
                 ; 0000 00DF                     printDebug("<main> getSensorConfig(%d) error\r\n",i);
                +
003407 e1e5     +LDI R30 , LOW ( 2 * _0x0 + ( 71 ) )
003408 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 71 ) )
003409 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 71 ) )
00340a e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 71 ) )
                 	__POINTD1FN _0x0,71
00340b 940e 9fcd 	CALL SUBOPT_0xF
00340d 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0000 00E0                     continue;
00340f c006      	RJMP _0x1C
                 ; 0000 00E1                 }
                 ; 0000 00E2                 is_sensor_config_update[i] = 0;
                 _0x20:
003410 efa8      	LDI  R26,LOW(_is_sensor_config_update)
003411 e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
003412 940e 9fda 	CALL SUBOPT_0x11
                 ; 0000 00E3                 TIMER_setTimer(&sensor_report_timer[i], 5);
003414 940e 9f74 	CALL SUBOPT_0x4
                 ; 0000 00E4             }
                 ; 0000 00E5         }
                 _0x1F:
                 _0x1C:
                +
003416 5f2f     +SUBI R18 , LOW ( - 1 )
003417 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003418 cfdc      	RJMP _0x1D
                 _0x1E:
                 ; 0000 00E6 
                 ; 0000 00E7         if(is_buzzer_config_update){            // -- update buzzer configuration if needed -- //
003419 91e0 1112 	LDS  R30,_is_buzzer_config_update
00341b 30e0      	CPI  R30,0
00341c f011      	BREQ _0x21
                 ; 0000 00E8             getBuzzerConfig(&buzz_config);
00341d 940e 9fdf 	CALL SUBOPT_0x12
                 ; 0000 00E9             is_buzzer_config_update = 0;
                 ; 0000 00EA         }
                 ; 0000 00EB 
                 ; 0000 00EC         for(i=0;i<USE_DIN;i++){
                 _0x21:
                +
00341f e020     +LDI R18 , LOW ( 0 )
003420 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x23:
                +
003421 3022     +CPI R18 , LOW ( 2 )
003422 e0e0     +LDI R30 , HIGH ( 2 )
003423 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
003424 f49c      	BRGE _0x24
                 ; 0000 00ED             if(is_din_config_update[i]){        // -- update digital input configuration if needed -- //
003425 efad      	LDI  R26,LOW(_is_din_config_update)
003426 e1b0      	LDI  R27,HIGH(_is_din_config_update)
003427 940e 9fbf 	CALL SUBOPT_0xD
003429 f059      	BREQ _0x25
                 ; 0000 00EE                 getAuxDinConfig(i,&din_config[i]);
00342a 933a      	ST   -Y,R19
00342b 932a      	ST   -Y,R18
00342c 940e 9fe7 	CALL SUBOPT_0x13
00342e 01df      	MOVW R26,R30
00342f 940e 46b9 	CALL _getAuxDinConfig
                 ; 0000 00EF                 is_din_config_update[i] = 0;
003431 efad      	LDI  R26,LOW(_is_din_config_update)
003432 e1b0      	LDI  R27,HIGH(_is_din_config_update)
003433 940e 9fda 	CALL SUBOPT_0x11
                 ; 0000 00F0             }
                 ; 0000 00F1         }
                 _0x25:
                +
003435 5f2f     +SUBI R18 , LOW ( - 1 )
003436 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003437 cfe9      	RJMP _0x23
                 _0x24:
                 ; 0000 00F2 
                 ; 0000 00F3         for(i=0;i<USE_DOUT;i++){
                +
003438 e020     +LDI R18 , LOW ( 0 )
003439 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x27:
                +
00343a 3022     +CPI R18 , LOW ( 2 )
00343b e0e0     +LDI R30 , HIGH ( 2 )
00343c 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
00343d f49c      	BRGE _0x28
                 ; 0000 00F4             if(is_dout_config_update[i]){       // -- update digital output configuration if needed -- //
00343e e0ad      	LDI  R26,LOW(_is_dout_config_update)
00343f e1b1      	LDI  R27,HIGH(_is_dout_config_update)
003440 940e 9fbf 	CALL SUBOPT_0xD
003442 f059      	BREQ _0x29
                 ; 0000 00F5                 getAuxDoutConfig(i,&dout_config[i]);
003443 933a      	ST   -Y,R19
003444 932a      	ST   -Y,R18
                +
003445 e2a6     +LDI R26 , 38
003446 9fa2     +MUL R26 , R18
003447 01f0     +MOVW R30 , R0
003448 9fa3     +MUL R26 , R19
003449 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,38
00344a 940e 9fef 	CALL SUBOPT_0x14
                 ; 0000 00F6                 is_dout_config_update[i] = 0;
00344c 940e 9fda 	CALL SUBOPT_0x11
                 ; 0000 00F7             }
                 ; 0000 00F8         }
                 _0x29:
                +
00344e 5f2f     +SUBI R18 , LOW ( - 1 )
00344f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003450 cfe9      	RJMP _0x27
                 _0x28:
                 ; 0000 00F9 
                 ; 0000 00FA         if(is_status_config_update){
003451 91e0 1113 	LDS  R30,_is_status_config_update
003453 30e0      	CPI  R30,0
003454 f021      	BREQ _0x2A
                 ; 0000 00FB             getStatusReportConfig(&status_config);
003455 940e 9ff7 	CALL SUBOPT_0x15
                 ; 0000 00FC             is_status_config_update = 0;
                 ; 0000 00FD 
                 ; 0000 00FE             TIMER_setTimer(&status_report_timer, 7);
003457 940e 9f84 	CALL SUBOPT_0x5
                 ; 0000 00FF         }
                 ; 0000 0100 
                 ; 0000 0101         if(is_env_config_update){
                 _0x2A:
003459 91e0 1114 	LDS  R30,_is_env_config_update
00345b 30e0      	CPI  R30,0
00345c f011      	BREQ _0x2B
                 ; 0000 0102             getEnvAlarmConfig(&env_config);
00345d 940e 9fff 	CALL SUBOPT_0x16
                 ; 0000 0103             is_env_config_update = 0;
                 ; 0000 0104         }
                 ; 0000 0105 
                 ; 0000 0106         /**
                 ; 0000 0107            bongkot test data;
                 ; 0000 0108         **/
                 ; 0000 0109 //        operating_config.alarmEnable = 0;
                 ; 0000 010A //        operating_config.deviceEnable = 1;
                 ; 0000 010B //        operating_config.mode = 0;
                 ; 0000 010C //        operating_config.sensorEnable[0] = 1;
                 ; 0000 010D //        operating_config.sensorEnable[1] = 1;
                 ; 0000 010E //        operating_config.sensorEnable[2] = 1;
                 ; 0000 010F //        operating_config.sensorEnable[3] = 1;
                 ; 0000 0110 //        operating_config.sensorEnable[4] = 1;
                 ; 0000 0111 
                 ; 0000 0112 
                 ; 0000 0113         if(operating_config.deviceEnable)                       // ----- device enable ------ //
                 _0x2B:
                +
00345f 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
003461 30e0      	CPI  R30,0
003462 f411      	BRNE PC+3
003463 940c 35cc 	JMP _0x2C
                 ; 0000 0114         {
                 ; 0000 0115             // -------------- Sensor Association -------------- //
                 ; 0000 0116             for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
003465 e020     +LDI R18 , LOW ( 0 )
003466 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x2E:
                +
003467 3025     +CPI R18 , LOW ( 5 )
003468 e0e0     +LDI R30 , HIGH ( 5 )
003469 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
00346a f014      	BRLT PC+3
00346b 940c 34ad 	JMP _0x2F
                 ; 0000 0117             {
                 ; 0000 0118                 if(operating_config.sensorEnable[i])            // .. sensor enable .. //
00346d 940e 9f6d 	CALL SUBOPT_0x3
00346f f1d1      	BREQ _0x30
                 ; 0000 0119                 {
                 ; 0000 011A                     //** test **//
                 ; 0000 011B //                    if(TIMER_checkTimerExceed(readSensorTimer))
                 ; 0000 011C //                    {
                 ; 0000 011D //                        TIMER_setTimer(&readSensorTimer, 5);
                 ; 0000 011E //                        updateSensorADC(i);                    // -- update adcData[ch] -- //
                 ; 0000 011F //                        printDebug("[%d]ADC: %f, Volt: %f \r\n", i, adcData[i], (adcData[i]/1023)*2.56);
                 ; 0000 0120 //                    }
                 ; 0000 0121                     //-- test --//
                 ; 0000 0122 
                 ; 0000 0123 //                    printDebug("<main> sensorRead\r\n");
                 ; 0000 0124                     err = sensorRead(i,&sensor[i]);
003470 940e a007 	CALL SUBOPT_0x17
003472 940e 6435 	CALL _sensorRead
003474 018f      	MOVW R16,R30
                 ; 0000 0125                     if(err < 0)                                 // . sensor value error . //
003475 2311      	TST  R17
003476 f19a      	BRMI _0x2D
                 ; 0000 0126                     {
                 ; 0000 0127                         continue;
                 ; 0000 0128                     }
                 ; 0000 0129                     else                                        // . sensor value valid . //
                 ; 0000 012A                     {
                 ; 0000 012B                         // --==== More detail in config (Re-Occurrance) ====-- //
                 ; 0000 012C                         if(TIMER_checkTimerExceed(sensor_report_timer[i]))
003477 940e a012 	CALL SUBOPT_0x18
003479 940e a019 	CALL SUBOPT_0x19
00347b 940e a01e 	CALL SUBOPT_0x1A
00347d f161      	BREQ _0x33
                 ; 0000 012D                         {
                 ; 0000 012E                             TIMER_setTimer(&sensor_report_timer[i], sensor_config[i].samplingRate);
00347e 940e a012 	CALL SUBOPT_0x18
003480 940e a024 	CALL SUBOPT_0x1B
003482 940e 9fc4 	CALL SUBOPT_0xE
003484 940e a029 	CALL SUBOPT_0x1C
003486 940e a02e 	CALL SUBOPT_0x1D
                 ; 0000 012F 
                 ; 0000 0130                             timestamp_rd = DS1672_read();
003488 940e 40e0 	CALL _DS1672_read
                +
00348a a7e9     +STD Y + 41 , R30
00348b a7fa     +STD Y + 41 + 1 , R31
00348c a76b     +STD Y + 41 + 2 , R22
00348d a77c     +STD Y + 41 + 3 , R23
                 	__PUTD1S 41
                 ; 0000 0131                             err = addDataQueue(timestamp_rd, i, sensor[i].value);
00348e 940e b62a 	CALL __PUTPARD1
003490 940e a007 	CALL SUBOPT_0x17
003492 940e b5fa 	CALL __GETD1P
003494 01df      	MOVW R26,R30
003495 01cb      	MOVW R24,R22
003496 940e 6674 	CALL _addDataQueue
003498 018f      	MOVW R16,R30
                 ; 0000 0132                             if(err<0){
003499 2311      	TST  R17
00349a f47a      	BRPL _0x34
                 ; 0000 0133                                 printDebug("<main> addSensorDataQueue(%d,%.1f) failed\r\n",i,sensor[i].value);
                +
00349b e3e8     +LDI R30 , LOW ( 2 * _0x0 + ( 106 ) )
00349c e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 106 ) )
00349d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 106 ) )
00349e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 106 ) )
                 	__POINTD1FN _0x0,106
00349f 940e 9fcd 	CALL SUBOPT_0xF
                +
0034a1 e0a5     +LDI R26 , 5
0034a2 9fa2     +MUL R26 , R18
0034a3 01f0     +MOVW R30 , R0
0034a4 9fa3     +MUL R26 , R19
0034a5 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,5
0034a6 940e a032 	CALL SUBOPT_0x1E
0034a8 940e a038 	CALL SUBOPT_0x1F
                 ; 0000 0134                                 continue;   // -- continue other sensor
                 ; 0000 0135                             }
                 ; 0000 0136                         }
                 _0x34:
                 ; 0000 0137                         else{
                 _0x33:
                 ; 0000 0138                             //printDebug("<main> [%d] %ld:%ld\r\n",i,baseCounter,sensor_report_timer[i]);
                 ; 0000 0139                         }
                 ; 0000 013A                     }
                 ; 0000 013B 
                 ; 0000 013C                 }
                 ; 0000 013D                 else                                            // .. sensor disable .. //
                 _0x30:
                 ; 0000 013E                 {
                 ; 0000 013F                 }
                 ; 0000 0140             } // -- iterate each probe -- //
                 _0x2D:
                +
0034aa 5f2f     +SUBI R18 , LOW ( - 1 )
0034ab 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0034ac cfba      	RJMP _0x2E
                 _0x2F:
                 ; 0000 0141 
                 ; 0000 0142             #asm("wdr")
0034ad 95a8      	wdr
                 ; 0000 0143             // --------------- Status Management --------------- //
                 ; 0000 0144            // printDebug("<main> updateStatus()\r\n");
                 ; 0000 0145             last_status = updateStatus();
0034ae d12f      	RCALL _updateStatus
                +
0034af 01de     +MOVW R26 , R28
0034b0 5aab     +SUBI R26 , LOW ( - 85 )
0034b1 4fbf     +SBCI R27 , HIGH ( - 85 )
0034b2 93ed     +ST X + , R30
0034b3 93fc     +ST X , R31
                 	__PUTW1SX 85
                 ; 0000 0146 
                 ; 0000 0147             // --------------- Alarm Management --------------- //
                 ; 0000 0148             if(operating_config.alarmEnable)                    // .. alarm enable .. //
                +
0034b4 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
0034b6 30e0      	CPI  R30,0
0034b7 f411      	BRNE PC+3
0034b8 940c 352d 	JMP _0x37
                 ; 0000 0149             {
                 ; 0000 014A                 // -- check alarm all -- //
                 ; 0000 014B                 if(last_status < 0)                             // .. status update falied .. //
                +
0034ba 01de     +MOVW R26 , R28
0034bb 5aaa     +SUBI R26 , LOW ( - 86 )
0034bc 4fbf     +SBCI R27 , HIGH ( - 86 )
0034bd 91ac     +LD R26 , X
                 	__GETB2SX 86
0034be 23aa      	TST  R26
0034bf f43a      	BRPL _0x38
                 ; 0000 014C                 {
                 ; 0000 014D                     printDebug("<main> updateStatus() failed\r\n");
                +
0034c0 e6e4     +LDI R30 , LOW ( 2 * _0x0 + ( 150 ) )
0034c1 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 150 ) )
0034c2 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 150 ) )
0034c3 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 150 ) )
                 	__POINTD1FN _0x0,150
0034c4 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 014E                 }
                 ; 0000 014F                 else if((last_status > 0) && !muteMode)         // .. found some status error and alarm not muted .. //
0034c6 c062      	RJMP _0x39
                 _0x38:
                +
0034c7 01de     +MOVW R26 , R28
0034c8 5aab     +SUBI R26 , LOW ( - 85 )
0034c9 4fbf     +SBCI R27 , HIGH ( - 85 )
0034ca 900d     +LD R0 , X +
0034cb 91bc     +LD R27 , X
0034cc 2da0     +MOV R26 , R0
                 	__GETW2SX 85
0034cd 940e b682 	CALL __CPW02
0034cf f424      	BRGE _0x3B
0034d0 91e0 148b 	LDS  R30,_muteMode
0034d2 30e0      	CPI  R30,0
0034d3 f009      	BREQ _0x3C
                 _0x3B:
0034d4 c045      	RJMP _0x3A
                 _0x3C:
                 ; 0000 0150                 {
                 ; 0000 0151                     // -- Buzzer Alarm -- //
                 ; 0000 0152                     if(buzz_config.enable == 0x01 )             // -- buzzer enabled -- //
0034d5 91a0 133d 	LDS  R26,_buzz_config
0034d7 30a1      	CPI  R26,LOW(0x1)
0034d8 f471      	BRNE _0x3D
                 ; 0000 0153                     {
                 ; 0000 0154                         // -- check alarm source binded to Buzzer -- //
                 ; 0000 0155                         res = checkAlarm(buzz_config.eventSource, buzz_config.eventSourceNumber);       // -- alarm.h -- //
                +
0034d9 e3ef     +LDI R30 , LOW ( _buzz_config + ( 2 ) )
0034da e1f3     +LDI R31 , HIGH ( _buzz_config + ( 2 ) )
                 	__POINTW1MN _buzz_config,2
0034db 93fa      	ST   -Y,R31
0034dc 93ea      	ST   -Y,R30
                +
0034dd 91a0 133e+LDS R26 , _buzz_config + ( 1 )
                 	__GETB2MN _buzz_config,1
0034df 27bb      	CLR  R27
0034e0 940e a03f 	CALL SUBOPT_0x20
                 ; 0000 0156                         if(res){
0034e2 f011      	BREQ _0x3E
                 ; 0000 0157                             buzzer_on = 1;          // -- buzzer on -- //
0034e3 9af3      	SBI  0x1E,3
                 ; 0000 0158                         }
                 ; 0000 0159                         else{
0034e4 c001      	RJMP _0x41
                 _0x3E:
                 ; 0000 015A                             buzzer_on = 0;          // -- buzzer off -- //
0034e5 98f3      	CBI  0x1E,3
                 ; 0000 015B                         }
                 _0x41:
                 ; 0000 015C                     }
                 ; 0000 015D                     else                                        // -- buzzer disabled -- //
0034e6 c001      	RJMP _0x44
                 _0x3D:
                 ; 0000 015E                     {
                 ; 0000 015F                         buzzer_on = 0;                  // -- buzzer off -- //
0034e7 98f3      	CBI  0x1E,3
                 ; 0000 0160                     }
                 _0x44:
                 ; 0000 0161 
                 ; 0000 0162                     // -- Digital Output Alarm (iterate each channel) -- //
                 ; 0000 0163                     for(k=0;k<USE_DOUT;k++)
                +
0034e8 e040     +LDI R20 , LOW ( 0 )
0034e9 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x48:
                +
0034ea 3042     +CPI R20 , LOW ( 2 )
0034eb e0e0     +LDI R30 , HIGH ( 2 )
0034ec 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
0034ed f55c      	BRGE _0x49
                 ; 0000 0164                     {
                 ; 0000 0165                         if(dout_config[k].channelEnable == 0x01)            // -- digital output enabled -- //
0034ee 940e a048 	CALL SUBOPT_0x21
0034f0 58e1      	SUBI R30,LOW(-_dout_config)
0034f1 4efd      	SBCI R31,HIGH(-_dout_config)
0034f2 81a0      	LD   R26,Z
0034f3 30a1      	CPI  R26,LOW(0x1)
0034f4 f4e1      	BRNE _0x4A
                 ; 0000 0166                         {
                 ; 0000 0167                             // -- check alarm Digital Output -- //
                 ; 0000 0168 //                            printDebug("<main> dout[%d] alarm check -- \r\n",k);
                 ; 0000 0169                             res = checkAlarm(dout_config[k].eventSource, dout_config[k].eventSourceNumber);       // -- alarm.h -- //
0034f5 940e a048 	CALL SUBOPT_0x21
                +
0034f7 57ee     +SUBI R30 , LOW ( - _dout_config - ( 3 ) )
0034f8 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 3 ) )
                 	__ADDW1MN _dout_config,3
0034f9 93fa      	ST   -Y,R31
0034fa 93ea      	ST   -Y,R30
0034fb 940e a048 	CALL SUBOPT_0x21
                +
0034fd 57ef     +SUBI R30 , LOW ( - _dout_config - ( 2 ) )
0034fe 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 2 ) )
                 	__ADDW1MN _dout_config,2
0034ff 81a0      	LD   R26,Z
003500 e0b0      	LDI  R27,0
003501 940e a03f 	CALL SUBOPT_0x20
                 ; 0000 016A                             if(res){
003503 f039      	BREQ _0x4B
                 ; 0000 016B                                 /*bongkot edit logic*/
                 ; 0000 016C                                 IO_dout(k,!dout_config[k].stateOnEvent);     // -- Digital Output X ON -- //
003504 940e 9f5c 	CALL SUBOPT_0x1
003506 81e0      	LD   R30,Z
003507 940e b531 	CALL __LNEGB1
003509 2fae      	MOV  R26,R30
00350a c003      	RJMP _0x103
                 ; 0000 016D                                 //IO_dout(k,dout_config[k].stateOnEvent);     // -- Digital Output X ON -- //
                 ; 0000 016E                             }
                 ; 0000 016F                             else{
                 _0x4B:
                 ; 0000 0170                                 /*bongkot edit logic*/
                 ; 0000 0171                                 IO_dout(k,dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
00350b 940e 9f5c 	CALL SUBOPT_0x1
00350d 81a0      	LD   R26,Z
                 _0x103:
00350e 940e 3fa6 	CALL _IO_dout
                 ; 0000 0172                                 //IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
                 ; 0000 0173                             }
                 ; 0000 0174                         }
                 ; 0000 0175                         else                                                // -- digital output disabled -- //
003510 c005      	RJMP _0x4D
                 _0x4A:
                 ; 0000 0176                         {
                 ; 0000 0177                             /*bongkot edit logic*/
                 ; 0000 0178                             IO_dout(k,dout_config[k].stateOnEvent);        // -- Digital Output X OFF -- //
003511 940e 9f5c 	CALL SUBOPT_0x1
003513 81a0      	LD   R26,Z
003514 940e 3fa6 	CALL _IO_dout
                 ; 0000 0179                             //IO_dout(k,!dout_config[k].stateOnEvent);        // -- Digital Output X OFF -- //
                 ; 0000 017A                         }
                 _0x4D:
                 ; 0000 017B                     }
                +
003516 5f4f     +SUBI R20 , LOW ( - 1 )
003517 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
003518 cfd1      	RJMP _0x48
                 _0x49:
                 ; 0000 017C                 }
                 ; 0000 017D                 else                                            // .. no event .. //
003519 c00f      	RJMP _0x4E
                 _0x3A:
                 ; 0000 017E                 {
                 ; 0000 017F                     // -- no alarm -- // ^_^
                 ; 0000 0180                     buzzer_on = 0;                  // -- buzzer off -- //
00351a 98f3      	CBI  0x1E,3
                 ; 0000 0181                     for(k=0;k<USE_DOUT;k++)         // -- MAX_DO_CHANNEL
                +
00351b e040     +LDI R20 , LOW ( 0 )
00351c e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x52:
                +
00351d 3042     +CPI R20 , LOW ( 2 )
00351e e0e0     +LDI R30 , HIGH ( 2 )
00351f 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
003520 f444      	BRGE _0x53
                 ; 0000 0182                     {
                 ; 0000 0183                         /*bongkot edit logic*/
                 ; 0000 0184                         IO_dout(k,dout_config[k].stateOnEvent);     // -- Digital Output X OFF -- //
003521 940e 9f5c 	CALL SUBOPT_0x1
003523 81a0      	LD   R26,Z
003524 940e 3fa6 	CALL _IO_dout
                 ; 0000 0185                         //IO_dout(k,!dout_config[k].stateOnEvent);     // -- Digital Output X OFF -- //
                 ; 0000 0186                     }
                +
003526 5f4f     +SUBI R20 , LOW ( - 1 )
003527 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
003528 cff4      	RJMP _0x52
                 _0x53:
                 ; 0000 0187                 }
                 _0x4E:
                 _0x39:
                 ; 0000 0188 
                 ; 0000 0189                 res = eventCapture();                           // -- send event packet if needed -- //
003529 d129      	RCALL _eventCapture
00352a 940e a04e 	CALL SUBOPT_0x22
                 ; 0000 018A             }
                 ; 0000 018B             else                                                // .. alarm disable .. //
00352c c00f      	RJMP _0x54
                 _0x37:
                 ; 0000 018C             {
                 ; 0000 018D             //    printDebug("<main> alarmDisable()\r\n");
                 ; 0000 018E                 // -- no alarm -- // ;-P
                 ; 0000 018F                 buzzer_on = 0;                      // -- buzzer off -- //
00352d 98f3      	CBI  0x1E,3
                 ; 0000 0190                 for(k=0;k<USE_DOUT;k++)             // -- MAX_DO_CHANNEL
                +
00352e e040     +LDI R20 , LOW ( 0 )
00352f e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x58:
                +
003530 3042     +CPI R20 , LOW ( 2 )
003531 e0e0     +LDI R30 , HIGH ( 2 )
003532 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
003533 f444      	BRGE _0x59
                 ; 0000 0191                 {
                 ; 0000 0192                     /*bongkot edit logic*/
                 ; 0000 0193                     IO_dout(k,dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
003534 940e 9f5c 	CALL SUBOPT_0x1
003536 81a0      	LD   R26,Z
003537 940e 3fa6 	CALL _IO_dout
                 ; 0000 0194                     //IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
                 ; 0000 0195                 }
                +
003539 5f4f     +SUBI R20 , LOW ( - 1 )
00353a 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00353b cff4      	RJMP _0x58
                 _0x59:
                 ; 0000 0196             }
                 _0x54:
                 ; 0000 0197 
                 ; 0000 0198             // -- check mute expired -- //
                 ; 0000 0199             if(muteMode){
00353c 91e0 148b 	LDS  R30,_muteMode
00353e 30e0      	CPI  R30,0
00353f f059      	BREQ _0x5A
                 ; 0000 019A                // printDebug("<main> ALARM_checkMuteExpired()\r\n");
                 ; 0000 019B                 if(ALARM_checkMuteExpired()){
003540 940e 6f9c 	CALL _ALARM_checkMuteExpired
003542 9730      	SBIW R30,0
003543 f039      	BREQ _0x5B
                 ; 0000 019C                     muteAlarmExpired = 0xFFFFFFFF;
003544 940e a054 	CALL SUBOPT_0x23
003546 940e a059 	CALL SUBOPT_0x24
                 ; 0000 019D                     muteMode = 0;
003548 e0e0      	LDI  R30,LOW(0)
003549 93e0 148b 	STS  _muteMode,R30
                 ; 0000 019E                 }
                 ; 0000 019F             }
                 _0x5B:
                 ; 0000 01A0 
                 ; 0000 01A1             // ---------------- Operating Mode ---------------- //
                 ; 0000 01A2 //            operating_config.mode = MODE_REALTIME;      //test
                 ; 0000 01A3             if(operating_config.mode == MODE_REALTIME)          // .. realtime mode .. //
                 _0x5A:
00354b 91a0 11b6 	LDS  R26,_operating_config
00354d 31a0      	CPI  R26,LOW(0x10)
00354e f011      	BREQ PC+3
00354f 940c 3595 	JMP _0x5C
                 ; 0000 01A4             {
                 ; 0000 01A5                 if(!duplicateListClear)
003551 91e0 1425 	LDS  R30,_duplicateListClear
003553 30e0      	CPI  R30,0
003554 f4c9      	BRNE _0x5D
                 ; 0000 01A6                 {
                 ; 0000 01A7                     res = TIMER_checkTimerExceed(clear_duplicate_timer);
                +
003555 a9a9     +LDD R26 , Y + 49
003556 a9ba     +LDD R27 , Y + 49 + 1
003557 a98b     +LDD R24 , Y + 49 + 2
003558 a99c     +LDD R25 , Y + 49 + 3
                 	__GETD2S 49
003559 940e 3dff 	CALL _TIMER_checkTimerExceed
00355b 940e a04e 	CALL SUBOPT_0x22
                 ; 0000 01A8                     if(res != 0){
                +
00355d 01fe     +MOVW R30 , R28
00355e 5ae9     +SUBI R30 , LOW ( - 87 )
00355f 4fff     +SBCI R31 , HIGH ( - 87 )
003560 9001     +LD R0 , Z +
003561 81f0     +LD R31 , Z
003562 2de0     +MOV R30 , R0
                 	__GETW1SX 87
003563 9730      	SBIW R30,0
003564 f031      	BREQ _0x5E
                 ; 0000 01A9                         TIMER_setTimer(&clear_duplicate_timer, 10);
003565 01fe      	MOVW R30,R28
003566 96f1      	ADIW R30,49
003567 940e a062 	CALL SUBOPT_0x25
                 ; 0000 01AA                         ETH_clearDuplicateRequestCmd();
003569 940e 522a 	CALL _ETH_clearDuplicateRequestCmd
                 ; 0000 01AB                     }
                 ; 0000 01AC 
                 ; 0000 01AD                     sensorDataSave();
                 _0x5E:
00356b d33b      	RCALL _sensorDataSave
                 ; 0000 01AE                     eventSave();
00356c d3ba      	RCALL _eventSave
                 ; 0000 01AF                 }
                 ; 0000 01B0                 else
00356d c026      	RJMP _0x5F
                 _0x5D:
                 ; 0000 01B1                 {
                 ; 0000 01B2                     if(TIMER_checkTimerExceed(status_report_timer))
                +
00356e 01de     +MOVW R26 , R28
00356f 5ca3     +SUBI R26 , LOW ( - 61 )
003570 4fbf     +SBCI R27 , HIGH ( - 61 )
003571 900d     +LD R0 , X +
003572 901d     +LD R1 , X +
003573 918d     +LD R24 , X +
003574 919c     +LD R25 , X
003575 01d0     +MOVW R26 , R0
                 	__GETD2SX 61
003576 940e 3dff 	CALL _TIMER_checkTimerExceed
003578 9730      	SBIW R30,0
003579 f069      	BREQ _0x60
                 ; 0000 01B3                     {
                 ; 0000 01B4                         TIMER_setTimer(&status_report_timer, status_config.intv);
00357a 01fe      	MOVW R30,R28
00357b 96fd      	ADIW R30,61
00357c 93fa      	ST   -Y,R31
00357d 93ea      	ST   -Y,R30
                +
00357e 91a0 1363+LDS R26 , _status_config + ( 1 )
003580 91b0 1364+LDS R27 , _status_config + ( 1 ) + 1
                 	__GETW2MN _status_config,1
003582 2788      	CLR  R24
003583 2799      	CLR  R25
003584 940e 3e15 	CALL _TIMER_setTimer
                 ; 0000 01B5 
                 ; 0000 01B6                         statusReport();
003586 d1e0      	RCALL _statusReport
                 ; 0000 01B7                     }
                 ; 0000 01B8 
                 ; 0000 01B9                     // -- report log only when no realtime data not ready -- //
                 ; 0000 01BA                     if( (sensorDataReport() == 0) && (eventReport() == 0) && (sdFreeSpace > 0) )
                 _0x60:
003587 d282      	RCALL _sensorDataReport
003588 9730      	SBIW R30,0
003589 f441      	BRNE _0x62
00358a d2cf      	RCALL _eventReport
00358b 9730      	SBIW R30,0
00358c f429      	BRNE _0x62
00358d 940e a06a 	CALL SUBOPT_0x26
00358f 940e b68a 	CALL __CPD02
003591 f008      	BRLO _0x63
                 _0x62:
003592 c001      	RJMP _0x61
                 _0x63:
                 ; 0000 01BB                     {
                 ; 0000 01BC                         logReport();
003593 d419      	RCALL _logReport
                 ; 0000 01BD                     }
                 ; 0000 01BE                 }
                 _0x61:
                 _0x5F:
                 ; 0000 01BF             }
                 ; 0000 01C0             else if(operating_config.mode == MODE_DATALOGGER)   // .. datalogger mode .. //
003594 c011      	RJMP _0x64
                 _0x5C:
003595 91a0 11b6 	LDS  R26,_operating_config
003597 32a0      	CPI  R26,LOW(0x20)
003598 f419      	BRNE _0x65
                 ; 0000 01C1             {
                 ; 0000 01C2                // printDebug("<main> sensorDataSave()\r\n");
                 ; 0000 01C3                 sensorDataSave();
003599 d30d      	RCALL _sensorDataSave
                 ; 0000 01C4               //  printDebug("<main> eventSave()\r\n");
                 ; 0000 01C5                 eventSave();
00359a d38c      	RCALL _eventSave
                 ; 0000 01C6             }
                 ; 0000 01C7             else                                                // .. unknown mode .. //
00359b c00a      	RJMP _0x66
                 _0x65:
                 ; 0000 01C8             {
                 ; 0000 01C9                 printDebug("<main> operating mode error!! [0x%02X]\r\n",operating_config.mode);
                +
00359c e8e3     +LDI R30 , LOW ( 2 * _0x0 + ( 181 ) )
00359d e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 181 ) )
00359e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 181 ) )
00359f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 181 ) )
                 	__POINTD1FN _0x0,181
0035a0 940e b62a 	CALL __PUTPARD1
0035a2 91e0 11b6 	LDS  R30,_operating_config
0035a4 940e a073 	CALL SUBOPT_0x27
                 ; 0000 01CA             }
                 _0x66:
                 _0x64:
                 ; 0000 01CB 
                 ; 0000 01CC             #asm("wdr")
0035a6 95a8      	wdr
                 ; 0000 01CD             if(timer_1sec_flag)
0035a7 9bf2      	SBIS 0x1E,2
0035a8 c022      	RJMP _0x67
                 ; 0000 01CE             {
                 ; 0000 01CF               //  printDebug("<main> timer_1sec_flag\r\n");
                 ; 0000 01D0                 if(TIMER_checkTimerExceed(check_memory_timer) && (memoryStatus != ERROR))
                +
0035a9 a9ad     +LDD R26 , Y + 53
0035aa a9be     +LDD R27 , Y + 53 + 1
0035ab a98f     +LDD R24 , Y + 53 + 2
0035ac ad98     +LDD R25 , Y + 53 + 3
                 	__GETD2S 53
0035ad 940e 3dff 	CALL _TIMER_checkTimerExceed
0035af 9730      	SBIW R30,0
0035b0 f021      	BREQ _0x69
0035b1 91a0 1482 	LDS  R26,_memoryStatus
0035b3 30a1      	CPI  R26,LOW(0x1)
0035b4 f409      	BRNE _0x6A
                 _0x69:
0035b5 c014      	RJMP _0x68
                 _0x6A:
                 ; 0000 01D1                 {
                 ; 0000 01D2               //      printDebug("<main> Check Memory \r\n");
                 ; 0000 01D3                     TIMER_setTimer(&check_memory_timer, PERIOD_CHECK_MEMORY);
0035b6 940e 9f98 	CALL SUBOPT_0x7
                 ; 0000 01D4 
                 ; 0000 01D5                     res = SD_readMemoryRemain(&sdFreeSpace);
0035b8 e6ab      	LDI  R26,LOW(_sdFreeSpace)
0035b9 e1b4      	LDI  R27,HIGH(_sdFreeSpace)
0035ba 940e 70e3 	CALL _SD_readMemoryRemain
0035bc 940e a04e 	CALL SUBOPT_0x22
                 ; 0000 01D6                     if(res < 0){
                +
0035be 01de     +MOVW R26 , R28
0035bf 5aa8     +SUBI R26 , LOW ( - 88 )
0035c0 4fbf     +SBCI R27 , HIGH ( - 88 )
0035c1 91ac     +LD R26 , X
                 	__GETB2SX 88
0035c2 23aa      	TST  R26
0035c3 f432      	BRPL _0x6B
                 ; 0000 01D7                         printDebug("<main> SD_readMemoryRemain() failed\r\n");
                +
0035c4 eaec     +LDI R30 , LOW ( 2 * _0x0 + ( 222 ) )
0035c5 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 222 ) )
0035c6 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 222 ) )
0035c7 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 222 ) )
                 	__POINTD1FN _0x0,222
0035c8 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 01D8                     }
                 ; 0000 01D9                 }
                 _0x6B:
                 ; 0000 01DA 
                 ; 0000 01DB //                if(currentPage == P_MONITOR)
                 ; 0000 01DC //                {
                 ; 0000 01DD //              //      printDebug("<main> OLED_showSensorValue\r\n");
                 ; 0000 01DE //                    OLED_showSensorValue();
                 ; 0000 01DF //
                 ; 0000 01E0 //                    for(i=0;i<2;i++){
                 ; 0000 01E1 //                        OLED_showInputStatus(i,dinStatus[i]);
                 ; 0000 01E2 //                    }
                 ; 0000 01E3 //
                 ; 0000 01E4 //                    for(i=0;i<2;i++){
                 ; 0000 01E5 //                        OLED_showOutputStatus(i,doutStatus[i]);
                 ; 0000 01E6 //                    }
                 ; 0000 01E7 //
                 ; 0000 01E8 //               //     printDebug("<main> OLED_showDateTime\r\n");
                 ; 0000 01E9 //                    OLED_showDateTime(properties_config.timeZone);
                 ; 0000 01EA //
                 ; 0000 01EB //              //      printDebug("<main> OLED_showAlarmStatus\r\n");
                 ; 0000 01EC //                    OLED_showAlarmStatus();
                 ; 0000 01ED //                }
                 ; 0000 01EE 
                 ; 0000 01EF               //  printDebug("<main> powerSrcStatus\r\n");
                 ; 0000 01F0 //                switch(powerSrcStatus){
                 ; 0000 01F1 //                    case PWR_NORMAL     :   OLED_showPowerStatus(PWR_NORMAL,0);                     break;
                 ; 0000 01F2 //                    case PWR_DOWN       :   OLED_showPowerStatus(PWR_DOWN,batteryVolt);             break;
                 ; 0000 01F3 //                    default             :   break;
                 ; 0000 01F4 //                }
                 ; 0000 01F5 //
                 ; 0000 01F6 //            //    printDebug("<main> serverCommStatus\r\n");
                 ; 0000 01F7 //                switch(serverCommStatus){
                 ; 0000 01F8 //                    case COMM_NORMAL    :   OLED_showServerCommStatus(OLED_SERVER_CONNECT);         break;
                 ; 0000 01F9 //                    case COMM_LOST      :   OLED_showServerCommStatus(OLED_SERVER_DISCONNECT);      break;
                 ; 0000 01FA //                    default             :   OLED_showServerCommStatus(OLED_SERVER_UNKNOWN);         break;
                 ; 0000 01FB //                }
                 ; 0000 01FC //
                 ; 0000 01FD //            //    printDebug("<main> lanStatus\r\n");
                 ; 0000 01FE //                switch(lanStatus){
                 ; 0000 01FF //                    case COMM_LAN_CONNECT       :   OLED_showLanStatus(OLED_LAN_CONNECT);           break;
                 ; 0000 0200 //                    case COMM_LAN_DISCONNECT    :   OLED_showLanStatus(OLED_LAN_DISCONNECT);        break;
                 ; 0000 0201 //                    default                     :   break;
                 ; 0000 0202 //                }
                 ; 0000 0203 //
                 ; 0000 0204 //            //    printDebug("<main> OLED_showBuzzerStatus\r\n");
                 ; 0000 0205 //                if(muteMode){
                 ; 0000 0206 //                    OLED_showBuzzerStatus(OLED_BUZZER_MUTE);
                 ; 0000 0207 //                }
                 ; 0000 0208 //                else if(buzz_config.enable == 0x01){
                 ; 0000 0209 //                    OLED_showBuzzerStatus(OLED_BUZZER_ENABLE);
                 ; 0000 020A //                }
                 ; 0000 020B //                else{
                 ; 0000 020C //                    OLED_showBuzzerStatus(OLED_BUZZER_DISABLE);
                 ; 0000 020D //                }
                 ; 0000 020E //
                 ; 0000 020F //           //     printDebug("<main> memoryStatus\r\n");
                 ; 0000 0210 //                switch(memoryStatus){
                 ; 0000 0211 //                    case MEM_NORMAL         :   OLED_showMemoryStatus(OLED_MEMORY_NORMAL);          break;
                 ; 0000 0212 //                    case MEM_LOW            :   OLED_showMemoryStatus(OLED_MEMORY_LOW);             break;
                 ; 0000 0213 //                    case MEM_ERROR          :   OLED_showMemoryStatus(OLED_MEMORY_ERROR);           break;
                 ; 0000 0214 //                    default                 :   break;
                 ; 0000 0215 //                }
                 ; 0000 0216 
                 ; 0000 0217                 timer_1sec_flag = 0;
                 _0x68:
0035ca 98f2      	CBI  0x1E,2
                 ; 0000 0218             }
                 ; 0000 0219         } // -- device enable -- //
                 _0x67:
                 ; 0000 021A         else                                                    // ----- device disable ----- //
0035cb c00f      	RJMP _0x6E
                 _0x2C:
                 ; 0000 021B         {
                 ; 0000 021C             // -- no alarm -- // ;-P
                 ; 0000 021D             buzzer_on = 0;                      // -- buzzer off -- //
0035cc 98f3      	CBI  0x1E,3
                 ; 0000 021E             for(k=0;k<USE_DOUT;k++)             // -- MAX_DO_CHANNEL
                +
0035cd e040     +LDI R20 , LOW ( 0 )
0035ce e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x72:
                +
0035cf 3042     +CPI R20 , LOW ( 2 )
0035d0 e0e0     +LDI R30 , HIGH ( 2 )
0035d1 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
0035d2 f444      	BRGE _0x73
                 ; 0000 021F             {
                 ; 0000 0220                 /*bongkot edit logic*/
                 ; 0000 0221                 IO_dout(k,dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
0035d3 940e 9f5c 	CALL SUBOPT_0x1
0035d5 81a0      	LD   R26,Z
0035d6 940e 3fa6 	CALL _IO_dout
                 ; 0000 0222                 //IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
                 ; 0000 0223             }
                +
0035d8 5f4f     +SUBI R20 , LOW ( - 1 )
0035d9 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0035da cff4      	RJMP _0x72
                 _0x73:
                 ; 0000 0224         }
                 _0x6E:
                 ; 0000 0225 
                 ; 0000 0226         #asm("wdr")
0035db 95a8      	wdr
                 ; 0000 0227     }
0035dc cdde      	RJMP _0x10
                 ; 0000 0228 
                 ; 0000 0229 }
                 _0x74:
0035dd cfff      	RJMP _0x74
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Status & Event Management *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int updateStatus(void)   // -- manipulate function in status.c -- //
                 ; 0000 0231 {
                 _updateStatus:
                 ; 0000 0232     int                 res=0, i=0, err=0;
                 ; 0000 0233     static TIMER        ETH_rst_timer=0xFFFFFFFF;
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0000 0234 
                 ; 0000 0235     // --------------- Update Sensor's Event --------------- //
                 ; 0000 0236     for(i=0;i<MAX_SENS_CHANNEL;i++)
0035de 940e a079 	CALL SUBOPT_0x28
                 ;	res -> R16,R17
                 ;	i -> R18,R19
                 ;	err -> R20,R21
                +
0035e0 e020     +LDI R18 , LOW ( 0 )
0035e1 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x77:
                +
0035e2 3025     +CPI R18 , LOW ( 5 )
0035e3 e0e0     +LDI R30 , HIGH ( 5 )
0035e4 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
0035e5 f4dc      	BRGE _0x78
                 ; 0000 0237     {
                 ; 0000 0238         if(operating_config.sensorEnable[i])        // .. sensor enable .. //
0035e6 940e 9f6d 	CALL SUBOPT_0x3
0035e8 f0a9      	BREQ _0x79
                 ; 0000 0239         {
                 ; 0000 023A             // ----------- Update Probe Status ------------------------- //
                 ; 0000 023B             err =   updateSensorStatus(i);
0035e9 01d9      	MOVW R26,R18
0035ea 940e 67bf 	CALL _updateSensorStatus
0035ec 01af      	MOVW R20,R30
                 ; 0000 023C             if(err >= 0){
0035ed 2355      	TST  R21
0035ee f07a      	BRMI _0x7A
                 ; 0000 023D                 res |=  err;
                +
0035ef 2b04     +OR R16 , R20
0035f0 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 023E                 if(sensor_config[i].alarmEnable && !err)        // . sensor alarm enable . //
0035f1 940e a07e 	CALL SUBOPT_0x29
0035f3 f019      	BREQ _0x7C
0035f4 2e04      	MOV  R0,R20
0035f5 2a05      	OR   R0,R21
0035f6 f009      	BREQ _0x7D
                 _0x7C:
0035f7 c006      	RJMP _0x7B
                 _0x7D:
                 ; 0000 023F                 {
                 ; 0000 0240                     // ----------- Update Temperature Status ------------------- //
                 ; 0000 0241                     err =   updateDataStatus(i);
0035f8 01d9      	MOVW R26,R18
0035f9 940e 67f6 	CALL _updateDataStatus
0035fb 01af      	MOVW R20,R30
                 ; 0000 0242                     res |=  err;
                +
0035fc 2b04     +OR R16 , R20
0035fd 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0243                 }
                 ; 0000 0244             }
                 _0x7B:
                 ; 0000 0245         }
                 _0x7A:
                 ; 0000 0246     }
                 _0x79:
                +
0035fe 5f2f     +SUBI R18 , LOW ( - 1 )
0035ff 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003600 cfe1      	RJMP _0x77
                 _0x78:
                 ; 0000 0247 
                 ; 0000 0248     // --- Update Battery Status --- //
                 ; 0000 0249     err =   updateBatteryStatus();
003601 940e 66d8 	CALL _updateBatteryStatus
003603 01af      	MOVW R20,R30
                 ; 0000 024A     res |=  err;
                +
003604 2b04     +OR R16 , R20
003605 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 024B     // --- Update Digital Input Status --- //
                 ; 0000 024C     err =   updateDinStatus();
003606 940e 68e4 	CALL _updateDinStatus
003608 01af      	MOVW R20,R30
                 ; 0000 024D     res |=  err;
                +
003609 2b04     +OR R16 , R20
00360a 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 024E     // --- Update Digital Output Status --- //
                 ; 0000 024F     err =   updateDoutStatus();
00360b 940e 6961 	CALL _updateDoutStatus
00360d 01af      	MOVW R20,R30
                 ; 0000 0250     res |=  err;
                +
00360e 2b04     +OR R16 , R20
00360f 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0251     // --- Update Analog Input Status --- //
                 ; 0000 0252     // --- Update Communication Status --- //
                 ; 0000 0253     err =   updateCommStatus();
003610 940e 673b 	CALL _updateCommStatus
003612 01af      	MOVW R20,R30
                 ; 0000 0254     if(err){
003613 2e04      	MOV  R0,R20
003614 2a05      	OR   R0,R21
003615 f189      	BREQ _0x7E
                 ; 0000 0255 
                 ; 0000 0256         if((ETH_rst_timer == 0xFFFFFFFF) || (ETH_rst_timer == 0)){
003616 940e a088 	CALL SUBOPT_0x2A
003618 940e a091 	CALL SUBOPT_0x2B
00361a f029      	BREQ _0x80
00361b 940e a088 	CALL SUBOPT_0x2A
00361d 940e b68a 	CALL __CPD02
00361f f471      	BRNE _0x7F
                 _0x80:
                 ; 0000 0257             TIMER_setTimer(&ETH_rst_timer,15);
003620 edef      	LDI  R30,LOW(_ETH_rst_timer_S0000001000)
003621 e1f4      	LDI  R31,HIGH(_ETH_rst_timer_S0000001000)
003622 940e a099 	CALL SUBOPT_0x2C
                 ; 0000 0258             printDebug("<updateStatus> ETH_rst_timer time left = %ld(%lX)\r\n",(ETH_rst_timer-baseCounter),(ETH_rst_timer-baseCounter));
                +
003624 ede2     +LDI R30 , LOW ( 2 * _0x0 + ( 260 ) )
003625 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 260 ) )
003626 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 260 ) )
003627 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 260 ) )
                 	__POINTD1FN _0x0,260
003628 940e a0a1 	CALL SUBOPT_0x2D
00362a 940e a0a1 	CALL SUBOPT_0x2D
00362c 940e a038 	CALL SUBOPT_0x1F
                 ; 0000 0259         }
                 ; 0000 025A 
                 ; 0000 025B         if(TIMER_checkTimerExceed(ETH_rst_timer) == 1){
                 _0x7F:
00362e 940e a088 	CALL SUBOPT_0x2A
003630 940e 3dff 	CALL _TIMER_checkTimerExceed
003632 30e1      	CPI  R30,LOW(0x1)
003633 e0a0      	LDI  R26,HIGH(0x1)
003634 07fa      	CPC  R31,R26
003635 f489      	BRNE _0x82
                 ; 0000 025C             ETH_NORM;
003636 91e0 0102 	LDS  R30,258
003638 77ef      	ANDI R30,0x7F
003639 93e0 0102 	STS  258,R30
                 ; 0000 025D             ETH_reset();
00363b 940e 5a49 	CALL _ETH_reset
                 ; 0000 025E             ETH_rst_timer = 0xFFFFFFFF;
00363d 940e a054 	CALL SUBOPT_0x23
00363f 93e0 14df 	STS  _ETH_rst_timer_S0000001000,R30
003641 93f0 14e0 	STS  _ETH_rst_timer_S0000001000+1,R31
003643 9360 14e1 	STS  _ETH_rst_timer_S0000001000+2,R22
003645 9370 14e2 	STS  _ETH_rst_timer_S0000001000+3,R23
                 ; 0000 025F         }
                 ; 0000 0260     }
                 _0x82:
                 ; 0000 0261     res |=  err;
                 _0x7E:
                +
003647 2b04     +OR R16 , R20
003648 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0262     // --- Update Memory Card Status --- //
                 ; 0000 0263     err =   updateMemoryStatus();
003649 940e 679f 	CALL _updateMemoryStatus
00364b 01af      	MOVW R20,R30
                 ; 0000 0264     res |=  err;
                +
00364c 2b04     +OR R16 , R20
00364d 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0265 
                 ; 0000 0266     return res;
00364e 01f8      	MOVW R30,R16
00364f 940e b6a1 	CALL __LOADLOCR6
003651 9626      	ADIW R28,6
003652 9508      	RET
                 ; 0000 0267 }
                 ;/*============================================================*/
                 ;int eventCapture(void)
                 ; 0000 026A {
                 _eventCapture:
                 ; 0000 026B     int                 res=0, i=0, err=0;
                 ; 0000 026C     unsigned long int   timestamp_rd;
                 ; 0000 026D     unsigned char       statusCode;
                 ; 0000 026E 
                 ; 0000 026F     // --------------- Check for Maintenance Event --------------- //
                 ; 0000 0270     err =   checkSendMIPAlarm(&statusCode);
003653 9725      	SBIW R28,5
003654 940e a079 	CALL SUBOPT_0x28
                 ;	res -> R16,R17
                 ;	i -> R18,R19
                 ;	err -> R20,R21
                 ;	timestamp_rd -> Y+7
                 ;	statusCode -> Y+6
003656 01de      	MOVW R26,R28
003657 9616      	ADIW R26,6
003658 940e 6d4d 	CALL _checkSendMIPAlarm
00365a 940e a0b6 	CALL SUBOPT_0x2E
                 ; 0000 0271     res |=  err;
                 ; 0000 0272     if(err){
00365c f0c1      	BREQ _0x83
                 ; 0000 0273         timestamp_rd    = DS1672_read();
00365d 940e a0bc 	CALL SUBOPT_0x2F
                 ; 0000 0274         if(statusCode)
00365f f029      	BREQ _0x84
                 ; 0000 0275         {
                 ; 0000 0276             printDebug("\r\n<eventCapture> !!!!!!!!!!! Monitor Mode !!!!!\r\n");
                +
003660 e0e6     +LDI R30 , LOW ( 2 * _0x0 + ( 312 ) )
003661 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 312 ) )
003662 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 312 ) )
003663 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 312 ) )
                 	__POINTD1FN _0x0,312
003664 c004      	RJMP _0x104
                 ; 0000 0277             //printOLED("AL12%1d",i+1);
                 ; 0000 0278         }
                 ; 0000 0279         else
                 _0x84:
                 ; 0000 027A         {
                 ; 0000 027B             printDebug("\r\n<eventCapture> !!!!!!!!!!! Maintenance In Progress !!!!!\r\n");
                +
003665 e3e8     +LDI R30 , LOW ( 2 * _0x0 + ( 362 ) )
003666 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 362 ) )
003667 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 362 ) )
003668 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 362 ) )
                 	__POINTD1FN _0x0,362
                 _0x104:
003669 940e b62a 	CALL __PUTPARD1
00366b 940e a0c5 	CALL SUBOPT_0x30
                 ; 0000 027C             //printOLED("AL02%1d",i+1);
                 ; 0000 027D         }
                 ; 0000 027E         err = addEventQueue(timestamp_rd,EVENT_MTNC,statusCode);
00366d 940e a0ca 	CALL SUBOPT_0x31
00366f e1e0      	LDI  R30,LOW(16)
003670 940e a0d1 	CALL SUBOPT_0x32
                 ; 0000 027F         if(err < 0){
003672 f412      	BRPL _0x86
                 ; 0000 0280             printDebug("<eventCapture> addEventQueue() failed\r\n");
003673 940e a0d8 	CALL SUBOPT_0x33
                 ; 0000 0281         }
                 ; 0000 0282     }
                 _0x86:
                 ; 0000 0283 
                 ; 0000 0284     /*
                 ; 0000 0285     // -- Analog Input Event -- //
                 ; 0000 0286     // -- reserved -- //
                 ; 0000 0287     */
                 ; 0000 0288     // --------------- Check for Power Down Event --------------- //
                 ; 0000 0289     err =   checkSendPowerAlarm(&statusCode);
                 _0x83:
003675 01de      	MOVW R26,R28
003676 9616      	ADIW R26,6
003677 940e 6d62 	CALL _checkSendPowerAlarm
003679 940e a0b6 	CALL SUBOPT_0x2E
                 ; 0000 028A     res |=  err;
                 ; 0000 028B     if(err){
00367b f0c1      	BREQ _0x87
                 ; 0000 028C         timestamp_rd    = DS1672_read();
00367c 940e a0bc 	CALL SUBOPT_0x2F
                 ; 0000 028D         if(statusCode)
00367e f029      	BREQ _0x88
                 ; 0000 028E         {
                 ; 0000 028F             printDebug("\r\n<eventCapture> !!!!!!!!!!! Main Power Down !!!!!\r\n");
                +
00367f e9ed     +LDI R30 , LOW ( 2 * _0x0 + ( 463 ) )
003680 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 463 ) )
003681 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 463 ) )
003682 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 463 ) )
                 	__POINTD1FN _0x0,463
003683 c004      	RJMP _0x105
                 ; 0000 0290             //printOLED("AL12%1d",i+1);
                 ; 0000 0291         }
                 ; 0000 0292         else
                 _0x88:
                 ; 0000 0293         {
                 ; 0000 0294             printDebug("\r\n<eventCapture> !!!!!!!!!!! Main Power Up !!!!!\r\n");
                +
003684 ede2     +LDI R30 , LOW ( 2 * _0x0 + ( 516 ) )
003685 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 516 ) )
003686 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 516 ) )
003687 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 516 ) )
                 	__POINTD1FN _0x0,516
                 _0x105:
003688 940e b62a 	CALL __PUTPARD1
00368a 940e a0c5 	CALL SUBOPT_0x30
                 ; 0000 0295             //printOLED("AL02%1d",i+1);
                 ; 0000 0296         }
                 ; 0000 0297         err = addEventQueue(timestamp_rd,EVENT_PWR,statusCode);
00368c 940e a0ca 	CALL SUBOPT_0x31
00368e e5e0      	LDI  R30,LOW(80)
00368f 940e a0d1 	CALL SUBOPT_0x32
                 ; 0000 0298         if(err < 0){
003691 f412      	BRPL _0x8A
                 ; 0000 0299             printDebug("<eventCapture> addEventQueue() failed\r\n");
003692 940e a0d8 	CALL SUBOPT_0x33
                 ; 0000 029A         }
                 ; 0000 029B     }
                 _0x8A:
                 ; 0000 029C 
                 ; 0000 029D     // --------------- Check for Battery Event --------------- //
                 ; 0000 029E     err =   checkSendBatteryAlarm(&statusCode);
                 _0x87:
003694 01de      	MOVW R26,R28
003695 9616      	ADIW R26,6
003696 940e 6dae 	CALL _checkSendBatteryAlarm
003698 940e a0b6 	CALL SUBOPT_0x2E
                 ; 0000 029F     res |=  err;
                 ; 0000 02A0     if(err){
00369a f0c1      	BREQ _0x8B
                 ; 0000 02A1         timestamp_rd    = DS1672_read();
00369b 940e a0bc 	CALL SUBOPT_0x2F
                 ; 0000 02A2         if(statusCode)
00369d f029      	BREQ _0x8C
                 ; 0000 02A3         {
                 ; 0000 02A4             printDebug("\r\n<eventCapture> !!!!!!!!!!! Battery Low !!!!!\r\n");
                +
00369e e0e5     +LDI R30 , LOW ( 2 * _0x0 + ( 567 ) )
00369f e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 567 ) )
0036a0 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 567 ) )
0036a1 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 567 ) )
                 	__POINTD1FN _0x0,567
0036a2 c004      	RJMP _0x106
                 ; 0000 02A5             //printOLED("AL12%1d",i+1);
                 ; 0000 02A6         }
                 ; 0000 02A7         else
                 _0x8C:
                 ; 0000 02A8         {
                 ; 0000 02A9             printDebug("\r\n<eventCapture> !!!!!!!!!!! Battery OK !!!!!\r\n");
                +
0036a3 e3e6     +LDI R30 , LOW ( 2 * _0x0 + ( 616 ) )
0036a4 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 616 ) )
0036a5 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 616 ) )
0036a6 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 616 ) )
                 	__POINTD1FN _0x0,616
                 _0x106:
0036a7 940e b62a 	CALL __PUTPARD1
0036a9 940e a0c5 	CALL SUBOPT_0x30
                 ; 0000 02AA             //printOLED("AL02%1d",i+1);
                 ; 0000 02AB         }
                 ; 0000 02AC         err = addEventQueue(timestamp_rd,EVENT_BAT,statusCode);
0036ab 940e a0ca 	CALL SUBOPT_0x31
0036ad e5e1      	LDI  R30,LOW(81)
0036ae 940e a0d1 	CALL SUBOPT_0x32
                 ; 0000 02AD         if(err < 0){
0036b0 f412      	BRPL _0x8E
                 ; 0000 02AE             printDebug("<eventCapture> addEventQueue() failed\r\n");
0036b1 940e a0d8 	CALL SUBOPT_0x33
                 ; 0000 02AF         }
                 ; 0000 02B0     }
                 _0x8E:
                 ; 0000 02B1 
                 ; 0000 02B2     // --------------- Check for Memory Event --------------- //
                 ; 0000 02B3     err =   checkSendMemoryAlarm(&statusCode);
                 _0x8B:
0036b3 01de      	MOVW R26,R28
0036b4 9616      	ADIW R26,6
0036b5 940e 6e0f 	CALL _checkSendMemoryAlarm
0036b7 940e a0b6 	CALL SUBOPT_0x2E
                 ; 0000 02B4     res |=  err;
                 ; 0000 02B5     if(err){
0036b9 f131      	BREQ _0x8F
                 ; 0000 02B6         timestamp_rd    = DS1672_read();
0036ba 940e 40e0 	CALL _DS1672_read
                +
0036bc 83ef     +STD Y + 7 , R30
0036bd 87f8     +STD Y + 7 + 1 , R31
0036be 8769     +STD Y + 7 + 2 , R22
0036bf 877a     +STD Y + 7 + 3 , R23
                 	__PUTD1S 7
                 ; 0000 02B7         if(statusCode == ES_LOWMEMORY)
0036c0 81ae      	LDD  R26,Y+6
0036c1 30a1      	CPI  R26,LOW(0x1)
0036c2 f429      	BRNE _0x90
                 ; 0000 02B8         {
                 ; 0000 02B9             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory Low !!!!!\r\n");
                +
0036c3 e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 664 ) )
0036c4 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 664 ) )
0036c5 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 664 ) )
0036c6 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 664 ) )
                 	__POINTD1FN _0x0,664
0036c7 c00c      	RJMP _0x107
                 ; 0000 02BA             //printOLED("AL12%1d",i+1);
                 ; 0000 02BB         }
                 ; 0000 02BC         else if(statusCode == ES_MEMORYERROR)
                 _0x90:
0036c8 81ae      	LDD  R26,Y+6
0036c9 30a2      	CPI  R26,LOW(0x2)
0036ca f429      	BRNE _0x92
                 ; 0000 02BD         {
                 ; 0000 02BE             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory Error !!!!!\r\n");
                +
0036cb e9e6     +LDI R30 , LOW ( 2 * _0x0 + ( 712 ) )
0036cc e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 712 ) )
0036cd e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 712 ) )
0036ce e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 712 ) )
                 	__POINTD1FN _0x0,712
0036cf c004      	RJMP _0x107
                 ; 0000 02BF             //printOLED("AL12%1d",i+1);
                 ; 0000 02C0         }
                 ; 0000 02C1         else
                 _0x92:
                 ; 0000 02C2         {
                 ; 0000 02C3             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory OK !!!!!\r\n");
                +
0036d0 ece8     +LDI R30 , LOW ( 2 * _0x0 + ( 762 ) )
0036d1 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 762 ) )
0036d2 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 762 ) )
0036d3 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 762 ) )
                 	__POINTD1FN _0x0,762
                 _0x107:
0036d4 940e b62a 	CALL __PUTPARD1
0036d6 940e a0c5 	CALL SUBOPT_0x30
                 ; 0000 02C4             //printOLED("AL02%1d",i+1);
                 ; 0000 02C5         }
                 ; 0000 02C6         err = addEventQueue(timestamp_rd,EVENT_MEM,statusCode);
0036d8 940e a0ca 	CALL SUBOPT_0x31
0036da e7e0      	LDI  R30,LOW(112)
0036db 940e a0d1 	CALL SUBOPT_0x32
                 ; 0000 02C7         if(err < 0){
0036dd f412      	BRPL _0x94
                 ; 0000 02C8             printDebug("<eventCapture> addEventQueue() failed\r\n");
0036de 940e a0d8 	CALL SUBOPT_0x33
                 ; 0000 02C9         }
                 ; 0000 02CA     }
                 _0x94:
                 ; 0000 02CB 
                 ; 0000 02CC     // --------------- Check for Digital Input Event --------------- //
                 ; 0000 02CD     for(i=0;i<USE_DIN;i++)
                 _0x8F:
                +
0036e0 e020     +LDI R18 , LOW ( 0 )
0036e1 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x96:
                +
0036e2 3022     +CPI R18 , LOW ( 2 )
0036e3 e0e0     +LDI R30 , HIGH ( 2 )
0036e4 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
0036e5 f544      	BRGE _0x97
                 ; 0000 02CE     {
                 ; 0000 02CF         if(din_config[i].channelEnable)
0036e6 940e 9fe7 	CALL SUBOPT_0x13
0036e8 81e0      	LD   R30,Z
0036e9 30e0      	CPI  R30,0
0036ea f101      	BREQ _0x98
                 ; 0000 02D0         {
                 ; 0000 02D1             err =   checkSendDinAlarm(i,&statusCode);
0036eb 940e a0dd 	CALL SUBOPT_0x34
0036ed 940e 6e61 	CALL _checkSendDinAlarm
0036ef 940e a0b6 	CALL SUBOPT_0x2E
                 ; 0000 02D2             res |=  err;
                 ; 0000 02D3             if(err){
0036f1 f0c9      	BREQ _0x99
                 ; 0000 02D4                 timestamp_rd    = DS1672_read();
0036f2 940e a0bc 	CALL SUBOPT_0x2F
                 ; 0000 02D5                 if(statusCode)
0036f4 f029      	BREQ _0x9A
                 ; 0000 02D6                 {
                 ; 0000 02D7                     printDebug("\r\n<eventCapture> !!!!!!!!!!! Din %d Rising !!!!!\r\n", i+1);
                +
0036f5 efe7     +LDI R30 , LOW ( 2 * _0x0 + ( 809 ) )
0036f6 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 809 ) )
0036f7 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 809 ) )
0036f8 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 809 ) )
                 	__POINTD1FN _0x0,809
0036f9 c004      	RJMP _0x108
                 ; 0000 02D8                     //printOLED("AL12%1d",i+1);
                 ; 0000 02D9                 }
                 ; 0000 02DA                 else
                 _0x9A:
                 ; 0000 02DB                 {
                 ; 0000 02DC                     printDebug("\r\n<eventCapture> !!!!!!!!!!! Din %d Falling !!!!!\r\n", i+1);
                +
0036fa e2ea     +LDI R30 , LOW ( 2 * _0x0 + ( 860 ) )
0036fb e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 860 ) )
0036fc e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 860 ) )
0036fd e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 860 ) )
                 	__POINTD1FN _0x0,860
                 _0x108:
0036fe 940e b62a 	CALL __PUTPARD1
003700 940e a0e2 	CALL SUBOPT_0x35
                 ; 0000 02DD                     //printOLED("AL02%1d",i+1);
                 ; 0000 02DE                 }
                 ; 0000 02DF                 err = addEventQueue(timestamp_rd,EVENT_DIN(i),statusCode);
003702 940e a0ca 	CALL SUBOPT_0x31
003704 2fe2      	MOV  R30,R18
003705 6ce0      	ORI  R30,LOW(0xC0)
003706 940e a0d1 	CALL SUBOPT_0x32
                 ; 0000 02E0                 if(err < 0){
003708 f412      	BRPL _0x9C
                 ; 0000 02E1                     printDebug("<eventCapture> addEventQueue() failed\r\n");
003709 940e a0d8 	CALL SUBOPT_0x33
                 ; 0000 02E2                 }
                 ; 0000 02E3             }
                 _0x9C:
                 ; 0000 02E4         }// -- din channel Enable -- //
                 _0x99:
                 ; 0000 02E5     }// -- for loop -- //
                 _0x98:
                +
00370b 5f2f     +SUBI R18 , LOW ( - 1 )
00370c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00370d cfd4      	RJMP _0x96
                 _0x97:
                 ; 0000 02E6 
                 ; 0000 02E7     // --------------- Check for Sensor's Event --------------- //
                 ; 0000 02E8     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
00370e e020     +LDI R18 , LOW ( 0 )
00370f e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x9E:
                +
003710 3025     +CPI R18 , LOW ( 5 )
003711 e0e0     +LDI R30 , HIGH ( 5 )
003712 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003713 f014      	BRLT PC+3
003714 940c 3762 	JMP _0x9F
                 ; 0000 02E9     {
                 ; 0000 02EA         if(operating_config.sensorEnable[i])        // .. sensor enable .. //
003716 940e 9f6d 	CALL SUBOPT_0x3
003718 f411      	BRNE PC+3
003719 940c 375f 	JMP _0xA0
                 ; 0000 02EB         {
                 ; 0000 02EC             // ----------- Check Probe Alarm ------------------------- //
                 ; 0000 02ED             err =   checkSendSensorAlarm(i,&statusCode);
00371b 940e a0dd 	CALL SUBOPT_0x34
00371d 940e 6ec8 	CALL _checkSendSensorAlarm
00371f 940e a0b6 	CALL SUBOPT_0x2E
                 ; 0000 02EE             res |=  err;
                 ; 0000 02EF             if(err){
003721 f0d1      	BREQ _0xA1
                 ; 0000 02F0                 timestamp_rd    = DS1672_read();
003722 940e a0bc 	CALL SUBOPT_0x2F
                 ; 0000 02F1                 if(statusCode)
003724 f029      	BREQ _0xA2
                 ; 0000 02F2                 {
                 ; 0000 02F3                     printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d DISCONNECT !!!!!\r\n", i+1);
                +
003725 e5ee     +LDI R30 , LOW ( 2 * _0x0 + ( 912 ) )
003726 e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 912 ) )
003727 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 912 ) )
003728 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 912 ) )
                 	__POINTD1FN _0x0,912
003729 c004      	RJMP _0x109
                 ; 0000 02F4                     //printOLED("AL12%1d",i+1);
                 ; 0000 02F5                 }
                 ; 0000 02F6                 else
                 _0xA2:
                 ; 0000 02F7                 {
                 ; 0000 02F8                     printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d CONNECT !!!!!\r\n", i+1);
                +
00372a e9e7     +LDI R30 , LOW ( 2 * _0x0 + ( 969 ) )
00372b e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 969 ) )
00372c e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 969 ) )
00372d e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 969 ) )
                 	__POINTD1FN _0x0,969
                 _0x109:
00372e 940e b62a 	CALL __PUTPARD1
003730 940e a0e2 	CALL SUBOPT_0x35
                 ; 0000 02F9                     //printOLED("AL02%1d",i+1);
                 ; 0000 02FA                 }
                 ; 0000 02FB 
                 ; 0000 02FC                 err = addEventQueue(timestamp_rd,EVENT_SEN(i),statusCode);
003732 940e a0ca 	CALL SUBOPT_0x31
003734 2fe2      	MOV  R30,R18
003735 6fe0      	ORI  R30,LOW(0xF0)
003736 940e a0d1 	CALL SUBOPT_0x32
                 ; 0000 02FD                 if(err < 0){
003738 f412      	BRPL _0xA4
                 ; 0000 02FE                     printDebug("<eventCapture> addEventQueue() failed\r\n");
003739 940e a0d8 	CALL SUBOPT_0x33
                 ; 0000 02FF                 }
                 ; 0000 0300             }// -- check sensor alarm -- //
                 _0xA4:
                 ; 0000 0301             else
00373b c023      	RJMP _0xA5
                 _0xA1:
                 ; 0000 0302             {
                 ; 0000 0303                 if(sensor_config[i].alarmEnable)        // . sensor alarm enable . //
00373c 940e a07e 	CALL SUBOPT_0x29
00373e f101      	BREQ _0xA6
                 ; 0000 0304                 {
                 ; 0000 0305                     // ----------- Check Temperature Alarm ------------------- //
                 ; 0000 0306                     err =   checkSendDataAlarm(i,&statusCode);
00373f 940e a0dd 	CALL SUBOPT_0x34
003741 940e 6f2c 	CALL _checkSendDataAlarm
003743 940e a0b6 	CALL SUBOPT_0x2E
                 ; 0000 0307                     res |=  err;
                 ; 0000 0308                     if(err){
003745 f0c9      	BREQ _0xA7
                 ; 0000 0309                         timestamp_rd    = DS1672_read();
003746 940e a0bc 	CALL SUBOPT_0x2F
                 ; 0000 030A                         if(statusCode)
003748 f029      	BREQ _0xA8
                 ; 0000 030B                         {
                 ; 0000 030C                             printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d Temperature ERROR !!!!!\r\n", i+1);
                +
003749 eced     +LDI R30 , LOW ( 2 * _0x0 + ( 1023 ) )
00374a e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 1023 ) )
00374b e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1023 ) )
00374c e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1023 ) )
                 	__POINTD1FN _0x0,1023
00374d c004      	RJMP _0x10A
                 ; 0000 030D                             //printOLED("AL12%1d",i+1);
                 ; 0000 030E                         }
                 ; 0000 030F                         else
                 _0xA8:
                 ; 0000 0310                         {
                 ; 0000 0311                             printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d Temperature OK !!!!!\r\n", i+1);
                +
00374e e0ed     +LDI R30 , LOW ( 2 * _0x0 + ( 1087 ) )
00374f e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1087 ) )
003750 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1087 ) )
003751 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1087 ) )
                 	__POINTD1FN _0x0,1087
                 _0x10A:
003752 940e b62a 	CALL __PUTPARD1
003754 940e a0e2 	CALL SUBOPT_0x35
                 ; 0000 0312                             //printOLED("AL02%1d",i+1);
                 ; 0000 0313                         }
                 ; 0000 0314                         err = addEventQueue(timestamp_rd,EVENT_DAT(i),statusCode);
003756 940e a0ca 	CALL SUBOPT_0x31
003758 2fe2      	MOV  R30,R18
003759 6ee0      	ORI  R30,LOW(0xE0)
00375a 940e a0d1 	CALL SUBOPT_0x32
                 ; 0000 0315                         if(err < 0){
00375c f412      	BRPL _0xAA
                 ; 0000 0316                             printDebug("<eventCapture> addEventQueue() failed\r\n");
00375d 940e a0d8 	CALL SUBOPT_0x33
                 ; 0000 0317                         }
                 ; 0000 0318                     }
                 _0xAA:
                 ; 0000 0319                 }// -- sensor.alarmEnable -- //
                 _0xA7:
                 ; 0000 031A             }// -- check data alarm -- //
                 _0xA6:
                 _0xA5:
                 ; 0000 031B         }// -- sensor Enable -- //
                 ; 0000 031C     }// -- for loop -- //
                 _0xA0:
                +
00375f 5f2f     +SUBI R18 , LOW ( - 1 )
003760 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003761 cfae      	RJMP _0x9E
                 _0x9F:
                 ; 0000 031D 
                 ; 0000 031E 
                 ; 0000 031F     return res;
003762 01f8      	MOVW R30,R16
003763 940e b6a1 	CALL __LOADLOCR6
003765 962b      	ADIW R28,11
003766 9508      	RET
                 ; 0000 0320 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** Realtime Report Management *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int statusReport(void)
                 ; 0000 0328 {
                 _statusReport:
                 ; 0000 0329     int                     res = 0;
                 ; 0000 032A     unsigned long int       timestamp_rd;
                 ; 0000 032B     unsigned char           *param;
                 ; 0000 032C     int                     paramLen = 0;
                 ; 0000 032D 
                 ; 0000 032E     unsigned short          deviceState;
                 ; 0000 032F 
                 ; 0000 0330     switch (status_config.accm)
003767 9726      	SBIW R28,6
003768 940e a0e9 	CALL SUBOPT_0x36
                 ;	res -> R16,R17
                 ;	timestamp_rd -> Y+8
                 ;	*param -> R18,R19
                 ;	paramLen -> R20,R21
                 ;	deviceState -> Y+6
                +
00376a e040     +LDI R20 , LOW ( 0 )
00376b e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00376c 91e0 1362 	LDS  R30,_status_config
00376e 940e a0ee 	CALL SUBOPT_0x37
                 ; 0000 0331     {
                 ; 0000 0332         case REPORT_SINGLE      :   printDebug("<statusReport> REPORT_SINGLE mode not supported yet\r\n");
003770 f449      	BRNE _0xAE
                +
003771 e4ea     +LDI R30 , LOW ( 2 * _0x0 + ( 1148 ) )
003772 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1148 ) )
003773 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1148 ) )
003774 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1148 ) )
                 	__POINTD1FN _0x0,1148
003775 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 0333                                     return -1;
003777 efef      	LDI  R30,LOW(65535)
003778 efff      	LDI  R31,HIGH(65535)
003779 c08c      	RJMP _0x20E0087
                 ; 0000 0334         case REPORT_MULTIPLE    :   printDebug("<statusReport> REPORT_MULTIPLE mode not supported yet\r\n");
                 _0xAE:
00377a 32e0      	CPI  R30,LOW(0x20)
00377b e0a0      	LDI  R26,HIGH(0x20)
00377c 07fa      	CPC  R31,R26
00377d f449      	BRNE _0xAF
                +
00377e e8e0     +LDI R30 , LOW ( 2 * _0x0 + ( 1202 ) )
00377f e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1202 ) )
003780 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1202 ) )
003781 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1202 ) )
                 	__POINTD1FN _0x0,1202
003782 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 0335                                     return -1;
003784 efef      	LDI  R30,LOW(65535)
003785 efff      	LDI  R31,HIGH(65535)
003786 c07f      	RJMP _0x20E0087
                 ; 0000 0336         case REPORT_ALL         :   param = (unsigned char *) malloc(sizeof(char) * 11);
                 _0xAF:
003787 33e0      	CPI  R30,LOW(0x30)
003788 e0a0      	LDI  R26,HIGH(0x30)
003789 07fa      	CPC  R31,R26
00378a f011      	BREQ PC+3
00378b 940c 37df 	JMP _0xB3
00378d 940e a0f3 	CALL SUBOPT_0x38
00378f 940e 846d 	CALL _malloc
003791 019f      	MOVW R18,R30
                 ; 0000 0337                                     if(param == NULL){
003792 2e02      	MOV  R0,R18
003793 2a03      	OR   R0,R19
003794 f449      	BRNE _0xB1
                 ; 0000 0338                                         printDebug("<statusReport> malloc failed (%d bytes)\r\n",paramLen);
                +
003795 ebe8     +LDI R30 , LOW ( 2 * _0x0 + ( 1258 ) )
003796 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1258 ) )
003797 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1258 ) )
003798 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1258 ) )
                 	__POINTD1FN _0x0,1258
003799 940e a0f6 	CALL SUBOPT_0x39
                 ; 0000 0339                                         return -1;
00379b efef      	LDI  R30,LOW(65535)
00379c efff      	LDI  R31,HIGH(65535)
00379d c068      	RJMP _0x20E0087
                 ; 0000 033A                                     }
                 ; 0000 033B 
                 ; 0000 033C                                     res = getDeviceState(&deviceState);
                 _0xB1:
00379e 01de      	MOVW R26,R28
00379f 9616      	ADIW R26,6
0037a0 940e 6976 	CALL _getDeviceState
0037a2 018f      	MOVW R16,R30
                 ; 0000 033D                                     if(res<0){
0037a3 2311      	TST  R17
0037a4 f462      	BRPL _0xB2
                 ; 0000 033E                                         printDebug("<statusReport> getDeviceState() failed\r\n");
                +
0037a5 eee2     +LDI R30 , LOW ( 2 * _0x0 + ( 1300 ) )
0037a6 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1300 ) )
0037a7 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1300 ) )
0037a8 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1300 ) )
                 	__POINTD1FN _0x0,1300
0037a9 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 033F                                         free ( param );
0037ab 01d9      	MOVW R26,R18
0037ac 940e 8488 	CALL _free
                 ; 0000 0340                                         return -1;
0037ae efef      	LDI  R30,LOW(65535)
0037af efff      	LDI  R31,HIGH(65535)
0037b0 c055      	RJMP _0x20E0087
                 ; 0000 0341                                     }
                 ; 0000 0342 
                 ; 0000 0343                                     param[paramLen++] = (deviceState >> 8) & 0x00FF;
                 _0xB2:
0037b1 940e a0fe 	CALL SUBOPT_0x3A
0037b3 81ef      	LDD  R30,Y+7
0037b4 70f0      	ANDI R31,HIGH(0x0)
0037b5 93ec      	ST   X,R30
                 ; 0000 0344                                     param[paramLen++] = (deviceState & 0x00FF);
0037b6 940e a0fe 	CALL SUBOPT_0x3A
0037b8 81ee      	LDD  R30,Y+6
0037b9 93ec      	ST   X,R30
                 ; 0000 0345                                     param[paramLen++] = powerSrcStatus;
0037ba 940e a105 	CALL SUBOPT_0x3B
0037bc 91a0 147a 	LDS  R26,_powerSrcStatus
0037be 83a0      	STD  Z+0,R26
                 ; 0000 0346 
                 ; 0000 0347 
                 ; 0000 0348                                     memcpy(&param[paramLen],&batteryVolt,sizeof(batteryVolt));
0037bf 01fa      	MOVW R30,R20
0037c0 0fe2      	ADD  R30,R18
0037c1 1ff3      	ADC  R31,R19
0037c2 93fa      	ST   -Y,R31
0037c3 93ea      	ST   -Y,R30
0037c4 e8e3      	LDI  R30,LOW(_batteryVolt)
0037c5 e1f4      	LDI  R31,HIGH(_batteryVolt)
0037c6 940e a10b 	CALL SUBOPT_0x3C
                 ; 0000 0349                                     paramLen         += sizeof(batteryVolt);
                +
0037c8 5f4c     +SUBI R20 , LOW ( - 4 )
0037c9 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
                 ; 0000 034A 
                 ; 0000 034B                                     param[paramLen++] = dinStatus[0];
0037ca 940e a105 	CALL SUBOPT_0x3B
0037cc 91a0 147c 	LDS  R26,_dinStatus
0037ce 83a0      	STD  Z+0,R26
                 ; 0000 034C                                     param[paramLen++] = dinStatus[1];
0037cf 940e a105 	CALL SUBOPT_0x3B
                +
0037d1 91a0 147d+LDS R26 , _dinStatus + ( 1 )
                 	__GETB2MN _dinStatus,1
0037d3 83a0      	STD  Z+0,R26
                 ; 0000 034D                                     param[paramLen++] = doutStatus[0];
0037d4 940e a105 	CALL SUBOPT_0x3B
0037d6 91a0 147e 	LDS  R26,_doutStatus
0037d8 83a0      	STD  Z+0,R26
                 ; 0000 034E                                     param[paramLen++] = doutStatus[1];
0037d9 940e a105 	CALL SUBOPT_0x3B
                +
0037db 91a0 147f+LDS R26 , _doutStatus + ( 1 )
                 	__GETB2MN _doutStatus,1
0037dd 83a0      	STD  Z+0,R26
                 ; 0000 034F 
                 ; 0000 0350                                     break;
0037de c00d      	RJMP _0xAD
                 ; 0000 0351         default                 :   printDebug("<statusReport> status report accm unknown [0x%02X]\r\n",status_config.accm);
                 _0xB3:
                +
0037df e0eb     +LDI R30 , LOW ( 2 * _0x0 + ( 1341 ) )
0037e0 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1341 ) )
0037e1 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1341 ) )
0037e2 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1341 ) )
                 	__POINTD1FN _0x0,1341
0037e3 940e b62a 	CALL __PUTPARD1
0037e5 91e0 1362 	LDS  R30,_status_config
0037e7 940e a073 	CALL SUBOPT_0x27
                 ; 0000 0352                                     return -1;
0037e9 efef      	LDI  R30,LOW(65535)
0037ea efff      	LDI  R31,HIGH(65535)
0037eb c01a      	RJMP _0x20E0087
                 ; 0000 0353     }
                 _0xAD:
                 ; 0000 0354 
                 ; 0000 0355     timestamp_rd = DS1672_read();
0037ec 940e a111 	CALL SUBOPT_0x3D
                 ; 0000 0356 
                 ; 0000 0357     res = ETH_sendStatusReportCmd(timestamp_rd,status_config.accm,param,paramLen);
0037ee 940e a118 	CALL SUBOPT_0x3E
0037f0 940e b62a 	CALL __PUTPARD1
0037f2 91e0 1362 	LDS  R30,_status_config
0037f4 93ea      	ST   -Y,R30
0037f5 933a      	ST   -Y,R19
0037f6 932a      	ST   -Y,R18
0037f7 01da      	MOVW R26,R20
0037f8 940e 4fb7 	CALL _ETH_sendStatusReportCmd
0037fa 018f      	MOVW R16,R30
                 ; 0000 0358     if(res < 0)
0037fb 2311      	TST  R17
0037fc f432      	BRPL _0xB4
                 ; 0000 0359     {
                 ; 0000 035A         printDebug("<statusReport> ETH_sendStatusReportCmd() failed\r\n");
                +
0037fd e4e0     +LDI R30 , LOW ( 2 * _0x0 + ( 1394 ) )
0037fe e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1394 ) )
0037ff e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1394 ) )
003800 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1394 ) )
                 	__POINTD1FN _0x0,1394
003801 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 035B     }
                 ; 0000 035C 
                 ; 0000 035D     free ( param );
                 _0xB4:
003803 01d9      	MOVW R26,R18
003804 940e 8488 	CALL _free
                 ; 0000 035E }
                 _0x20E0087:
003806 940e b6a1 	CALL __LOADLOCR6
003808 962c      	ADIW R28,12
003809 9508      	RET
                 ;/*============================================================*/
                 ;int sensorDataReport(void)
                 ; 0000 0361 {
                 _sensorDataReport:
                 ; 0000 0362     int                     count = 0;
                 ; 0000 0363     int                     res;
                 ; 0000 0364     unsigned long int       timestamp;
                 ; 0000 0365     unsigned int            channel;
                 ; 0000 0366     float                   value;
                 ; 0000 0367 
                 ; 0000 0368     // -- for debug -- //
                 ; 0000 0369     //struct rtc_structure    dt;
                 ; 0000 036A     // --------------- //
                 ; 0000 036B     //printDebug("<sensorDataReport> ------------------------- \r\n");
                 ; 0000 036C 
                 ; 0000 036D     while (count < MAX_DATA_QUEUE)
00380a 9728      	SBIW R28,8
00380b 940e a0e9 	CALL SUBOPT_0x36
                 ;	count -> R16,R17
                 ;	res -> R18,R19
                 ;	timestamp -> Y+10
                 ;	channel -> R20,R21
                 ;	value -> Y+6
                 _0xB5:
                +
00380d 300a     +CPI R16 , LOW ( 10 )
00380e e0e0     +LDI R30 , HIGH ( 10 )
00380f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
003810 f014      	BRLT PC+3
003811 940c 3855 	JMP _0xB7
                 ; 0000 036E     {
                 ; 0000 036F         res = fetchDataQueue(&timestamp, &channel, &value);
003813 940e a11d 	CALL SUBOPT_0x3F
003815 b7ed      	IN   R30,SPL
003816 b7fe      	IN   R31,SPH
003817 9731      	SBIW R30,1
003818 93fa      	ST   -Y,R31
003819 93ea      	ST   -Y,R30
00381a 935f      	PUSH R21
00381b 934f      	PUSH R20
00381c 01de      	MOVW R26,R28
00381d 961a      	ADIW R26,10
00381e 940e 66a5 	CALL _fetchDataQueue
003820 914f      	POP  R20
003821 915f      	POP  R21
003822 019f      	MOVW R18,R30
                 ; 0000 0370         if(res < 0)
003823 2333      	TST  R19
003824 f182      	BRMI _0xB7
                 ; 0000 0371         {
                 ; 0000 0372             break;
                 ; 0000 0373         }
                 ; 0000 0374         else
                 ; 0000 0375         {
                 ; 0000 0376             printDebug("<sensorDataReport> [%ld][%d][%.2f]\r\n",timestamp,channel,value);
                +
003825 e7e2     +LDI R30 , LOW ( 2 * _0x0 + ( 1444 ) )
003826 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1444 ) )
003827 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1444 ) )
003828 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1444 ) )
                 	__POINTD1FN _0x0,1444
003829 940e a122 	CALL SUBOPT_0x40
00382b 01fa      	MOVW R30,R20
00382c 940e a12b 	CALL SUBOPT_0x41
                 ; 0000 0377             /*
                 ; 0000 0378             binary_to_date(timestamp, &dt);
                 ; 0000 0379             printRTC(dt);
                 ; 0000 037A             printDebug("timestamp [%ld]\r\n",   timestamp);
                 ; 0000 037B             printDebug("channel   [%d]\r\n",    channel);
                 ; 0000 037C             printDebug("value     [%.2f]\r\n",  value);
                 ; 0000 037D             */
                 ; 0000 037E 
                 ; 0000 037F             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
00382e 940e a13a 	CALL SUBOPT_0x42
003830 940e b68a 	CALL __CPD02
003832 f039      	BREQ _0xBB
003833 940e a13f 	CALL SUBOPT_0x43
003835 f021      	BREQ _0xBB
                +
003836 3045     +CPI R20 , LOW ( 5 )
003837 e0e0     +LDI R30 , HIGH ( 5 )
003838 075e     +CPC R21 , R30
                 	__CPWRN 20,21,5
003839 f038      	BRLO _0xBA
                 _0xBB:
                 ; 0000 0380             {
                 ; 0000 0381                 printDebug("\r\n<sensorDataReport> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
00383a e9e7     +LDI R30 , LOW ( 2 * _0x0 + ( 1481 ) )
00383b e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1481 ) )
00383c e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1481 ) )
00383d e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1481 ) )
                 	__POINTD1FN _0x0,1481
00383e 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 0382                 continue;
003840 cfcc      	RJMP _0xB5
                 ; 0000 0383             }
                 ; 0000 0384 
                 ; 0000 0385 
                 ; 0000 0386             res = ETH_sendDataReportCmd(TYP_RLT,timestamp,channel,value);
                 _0xBA:
003841 e0e0      	LDI  R30,LOW(0)
003842 940e a141 	CALL SUBOPT_0x44
003844 935a      	ST   -Y,R21
003845 934a      	ST   -Y,R20
003846 940e a149 	CALL SUBOPT_0x45
003848 019f      	MOVW R18,R30
                 ; 0000 0387             if(res < 0)
003849 2333      	TST  R19
00384a f43a      	BRPL _0xBD
                 ; 0000 0388             {
                 ; 0000 0389                 printDebug("<sensorDataReport> ETH_sendDataReportCmd() failed\r\n");
                +
00384b ede5     +LDI R30 , LOW ( 2 * _0x0 + ( 1543 ) )
00384c e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1543 ) )
00384d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1543 ) )
00384e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1543 ) )
                 	__POINTD1FN _0x0,1543
00384f 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 038A                 // --- Keep in Log --- //
                 ; 0000 038B                 continue;
003851 cfbb      	RJMP _0xB5
                 ; 0000 038C             }
                 ; 0000 038D             count++;
                 _0xBD:
                +
003852 5f0f     +SUBI R16 , LOW ( - 1 )
003853 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 038E         }
                 ; 0000 038F 
                 ; 0000 0390     }
003854 cfb8      	RJMP _0xB5
                 _0xB7:
                 ; 0000 0391 
                 ; 0000 0392     return count;
003855 01f8      	MOVW R30,R16
003856 940e b6a1 	CALL __LOADLOCR6
003858 962e      	ADIW R28,14
003859 9508      	RET
                 ; 0000 0393 }
                 ;/*============================================================*/
                 ;int eventReport(void)
                 ; 0000 0396 {
                 _eventReport:
                 ; 0000 0397     int                     count = 0;
                 ; 0000 0398     int                     res;
                 ; 0000 0399     unsigned long int       timestamp;
                 ; 0000 039A     unsigned char           eventID;
                 ; 0000 039B     unsigned char           eventStatus;
                 ; 0000 039C 
                 ; 0000 039D     // -- for debug -- //
                 ; 0000 039E     //struct rtc_structure    dt;
                 ; 0000 039F     // --------------- //
                 ; 0000 03A0     //printDebug("<eventReport> ------------------------- \r\n");
                 ; 0000 03A1 
                 ; 0000 03A2     while (count < MAX_EVENT_QUEUE)
00385a 9724      	SBIW R28,4
00385b 940e a0e9 	CALL SUBOPT_0x36
                 ;	count -> R16,R17
                 ;	res -> R18,R19
                 ;	timestamp -> Y+6
                 ;	eventID -> R21
                 ;	eventStatus -> R20
                 _0xBE:
                +
00385d 3104     +CPI R16 , LOW ( 20 )
00385e e0e0     +LDI R30 , HIGH ( 20 )
00385f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
003860 f014      	BRLT PC+3
003861 940c 38a2 	JMP _0xC0
                 ; 0000 03A3     {
                 ; 0000 03A4         res = fetchEventQueue(&timestamp, &eventID, &eventStatus);
003863 940e a14f 	CALL SUBOPT_0x46
003865 b7ed      	IN   R30,SPL
003866 b7fe      	IN   R31,SPH
003867 93fa      	ST   -Y,R31
003868 93ea      	ST   -Y,R30
003869 935f      	PUSH R21
00386a b7ad      	IN   R26,SPL
00386b b7be      	IN   R27,SPH
00386c 934f      	PUSH R20
00386d 940e 6a23 	CALL _fetchEventQueue
00386f 914f      	POP  R20
003870 915f      	POP  R21
003871 019f      	MOVW R18,R30
                 ; 0000 03A5         if(res < 0)
003872 2333      	TST  R19
003873 f172      	BRMI _0xC0
                 ; 0000 03A6         {
                 ; 0000 03A7             break;
                 ; 0000 03A8         }
                 ; 0000 03A9         else
                 ; 0000 03AA         {
                 ; 0000 03AB 
                 ; 0000 03AC             printDebug("<eventReport> [%ld][0x%02X][0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
003874 e0e9     +LDI R30 , LOW ( 2 * _0x0 + ( 1595 ) )
003875 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1595 ) )
003876 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1595 ) )
003877 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1595 ) )
                 	__POINTD1FN _0x0,1595
003878 940e a154 	CALL SUBOPT_0x47
00387a 940e a15d 	CALL SUBOPT_0x48
                 ; 0000 03AD             /*
                 ; 0000 03AE             binary_to_date(timestamp, &dt);
                 ; 0000 03AF             printRTC(dt);
                 ; 0000 03B0             */
                 ; 0000 03B1 
                 ; 0000 03B2             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
00387c 940e a16e 	CALL SUBOPT_0x49
00387e 940e b68a 	CALL __CPD02
003880 f029      	BREQ _0xC4
003881 940e a16e 	CALL SUBOPT_0x49
003883 940e a091 	CALL SUBOPT_0x2B
003885 f439      	BRNE _0xC3
                 _0xC4:
                 ; 0000 03B3             {
                 ; 0000 03B4                 printDebug("\r\n<eventReport> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003886 e2ef     +LDI R30 , LOW ( 2 * _0x0 + ( 1633 ) )
003887 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1633 ) )
003888 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1633 ) )
003889 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1633 ) )
                 	__POINTD1FN _0x0,1633
00388a 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 03B5                 continue;
00388c cfd0      	RJMP _0xBE
                 ; 0000 03B6             }
                 ; 0000 03B7 
                 ; 0000 03B8 
                 ; 0000 03B9             res = ETH_sendEventReportCmd(TYP_RLT,timestamp,eventID,eventStatus);
                 _0xC3:
00388d e0e0      	LDI  R30,LOW(0)
00388e 93ea      	ST   -Y,R30
00388f 940e a0ca 	CALL SUBOPT_0x31
003891 935a      	ST   -Y,R21
003892 2fa4      	MOV  R26,R20
003893 940e 5006 	CALL _ETH_sendEventReportCmd
003895 019f      	MOVW R18,R30
                 ; 0000 03BA             if(res < 0)
003896 2333      	TST  R19
003897 f43a      	BRPL _0xC6
                 ; 0000 03BB             {
                 ; 0000 03BC                 printDebug("<eventReport> ETH_sendEventReportCmd() failed\r\n");
                +
003898 e6e8     +LDI R30 , LOW ( 2 * _0x0 + ( 1690 ) )
003899 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1690 ) )
00389a e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1690 ) )
00389b e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1690 ) )
                 	__POINTD1FN _0x0,1690
00389c 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 03BD                 // --- Keep in Log --- //
                 ; 0000 03BE                 continue;
00389e cfbe      	RJMP _0xBE
                 ; 0000 03BF             }
                 ; 0000 03C0             count++;
                 _0xC6:
                +
00389f 5f0f     +SUBI R16 , LOW ( - 1 )
0038a0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 03C1         }
                 ; 0000 03C2     }
0038a1 cfbb      	RJMP _0xBE
                 _0xC0:
                 ; 0000 03C3 
                 ; 0000 03C4     return count;
0038a2 01f8      	MOVW R30,R16
0038a3 940e b6a1 	CALL __LOADLOCR6
0038a5 962a      	ADIW R28,10
0038a6 9508      	RET
                 ; 0000 03C5 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Log Management ***********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int sensorDataSave(void)
                 ; 0000 03CD {
                 _sensorDataSave:
                 ; 0000 03CE     FIL                     file;
                 ; 0000 03CF     char                    isFileOpen = 0;
                 ; 0000 03D0     int                     count = 0;
                 ; 0000 03D1     int                     res;
                 ; 0000 03D2     unsigned long int       timestamp;
                 ; 0000 03D3     unsigned int            channel;
                 ; 0000 03D4     float                   value;
                 ; 0000 03D5 
                 ; 0000 03D6 
                 ; 0000 03D7     // -- for debug -- //
                 ; 0000 03D8     //struct rtc_structure    dt;
                 ; 0000 03D9     // --------------- //
                 ; 0000 03DA 
                 ; 0000 03DB     while (count < MAX_DATA_QUEUE)
0038a7 97aa      	SBIW R28,42
0038a8 50d2      	SUBI R29,2
0038a9 940e b69a 	CALL __SAVELOCR6
                 ;	file -> Y+16
                 ;	isFileOpen -> R17
                 ;	count -> R18,R19
                 ;	res -> R20,R21
                 ;	timestamp -> Y+12
                 ;	channel -> Y+10
                 ;	value -> Y+6
0038ab e010      	LDI  R17,0
                +
0038ac e020     +LDI R18 , LOW ( 0 )
0038ad e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xC7:
                +
0038ae 302a     +CPI R18 , LOW ( 10 )
0038af e0e0     +LDI R30 , HIGH ( 10 )
0038b0 073e     +CPC R19 , R30
                 	__CPWRN 18,19,10
0038b1 f014      	BRLT PC+3
0038b2 940c 3907 	JMP _0xC9
                 ; 0000 03DC     {
                 ; 0000 03DD         res = fetchDataQueue(&timestamp, &channel, &value);
0038b4 940e a173 	CALL SUBOPT_0x4A
0038b6 940e a173 	CALL SUBOPT_0x4A
0038b8 01de      	MOVW R26,R28
0038b9 961a      	ADIW R26,10
0038ba 940e 66a5 	CALL _fetchDataQueue
0038bc 01af      	MOVW R20,R30
                 ; 0000 03DE         if(res < 0)    //queue empty
0038bd 2355      	TST  R21
0038be f40a      	BRPL _0xCA
                 ; 0000 03DF         {
                 ; 0000 03E0             break;
0038bf c047      	RJMP _0xC9
                 ; 0000 03E1         }
                 ; 0000 03E2         else          //there are data in queue
                 _0xCA:
                 ; 0000 03E3         {
                 ; 0000 03E4             printDebug("<sensorDataSave> time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
0038c0 e9e8     +LDI R30 , LOW ( 2 * _0x0 + ( 1738 ) )
0038c1 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1738 ) )
0038c2 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1738 ) )
0038c3 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1738 ) )
                 	__POINTD1FN _0x0,1738
0038c4 940e a178 	CALL SUBOPT_0x4B
0038c6 89ea      	LDD  R30,Y+18
0038c7 89fb      	LDD  R31,Y+18+1
0038c8 940e a12b 	CALL SUBOPT_0x41
                 ; 0000 03E5             /*
                 ; 0000 03E6             binary_to_date(timestamp, &dt);
                 ; 0000 03E7             printRTC(dt);
                 ; 0000 03E8             */
                 ; 0000 03E9 
                 ; 0000 03EA             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
0038ca 940e 9fa5 	CALL SUBOPT_0x9
0038cc 940e b68a 	CALL __CPD02
0038ce f039      	BREQ _0xCD
0038cf 940e a17e 	CALL SUBOPT_0x4C
0038d1 f021      	BREQ _0xCD
0038d2 85aa      	LDD  R26,Y+10
0038d3 85bb      	LDD  R27,Y+10+1
0038d4 9715      	SBIW R26,5
0038d5 f038      	BRLO _0xCC
                 _0xCD:
                 ; 0000 03EB             {
                 ; 0000 03EC                 printDebug("\r\n<sensorDataSave> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
0038d6 ece6     +LDI R30 , LOW ( 2 * _0x0 + ( 1784 ) )
0038d7 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1784 ) )
0038d8 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1784 ) )
0038d9 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1784 ) )
                 	__POINTD1FN _0x0,1784
0038da 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 03ED                 continue;
0038dc cfd1      	RJMP _0xC7
                 ; 0000 03EE             }
                 ; 0000 03EF 
                 ; 0000 03F0             //if(sdStatus == OK && logStatus == OK)
                 ; 0000 03F1             if(!isFileOpen)
                 _0xCC:
0038dd 3010      	CPI  R17,0
0038de f479      	BRNE _0xCF
                 ; 0000 03F2             {
                 ; 0000 03F3                 res = LOG_openFile(&file,LOGFILE_DATA);
0038df 940e a180 	CALL SUBOPT_0x4D
0038e1 940e a185 	CALL SUBOPT_0x4E
0038e3 01af      	MOVW R20,R30
                 ; 0000 03F4                 if(res < 0)
0038e4 2355      	TST  R21
0038e5 f43a      	BRPL _0xD0
                 ; 0000 03F5                 {
                 ; 0000 03F6                     printDebug("<sensorDataSave> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_DATA);
                +
0038e6 e0e2     +LDI R30 , LOW ( 2 * _0x0 + ( 1844 ) )
0038e7 e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1844 ) )
0038e8 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1844 ) )
0038e9 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1844 ) )
                 	__POINTD1FN _0x0,1844
0038ea 940e a190 	CALL SUBOPT_0x4F
                 ; 0000 03F7                     continue;
0038ec cfc1      	RJMP _0xC7
                 ; 0000 03F8                 }
                 ; 0000 03F9                 isFileOpen = 1;
                 _0xD0:
0038ed e011      	LDI  R17,LOW(1)
                 ; 0000 03FA             }
                 ; 0000 03FB 
                 ; 0000 03FC             res = LOG_insertData(&file,timestamp,channel,value);
                 _0xCF:
0038ee 940e a180 	CALL SUBOPT_0x4D
0038f0 940e a199 	CALL SUBOPT_0x50
0038f2 940e b62a 	CALL __PUTPARD1
0038f4 89e8      	LDD  R30,Y+16
0038f5 89f9      	LDD  R31,Y+16+1
0038f6 93fa      	ST   -Y,R31
0038f7 93ea      	ST   -Y,R30
0038f8 940e a19e 	CALL SUBOPT_0x51
0038fa 01af      	MOVW R20,R30
                 ; 0000 03FD             if(res < 0)
0038fb 2355      	TST  R21
0038fc f43a      	BRPL _0xD1
                 ; 0000 03FE             {
                 ; 0000 03FF                 printDebug("<sensorDataSave> LOG_insertData() failed\r\n");
                +
0038fd e4e0     +LDI R30 , LOW ( 2 * _0x0 + ( 1906 ) )
0038fe e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1906 ) )
0038ff e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1906 ) )
003900 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1906 ) )
                 	__POINTD1FN _0x0,1906
003901 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 0400                 continue;
003903 cfaa      	RJMP _0xC7
                 ; 0000 0401             }
                 ; 0000 0402             count++;
                 _0xD1:
                +
003904 5f2f     +SUBI R18 , LOW ( - 1 )
003905 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 0403         }
                 ; 0000 0404     }
003906 cfa7      	RJMP _0xC7
                 _0xC9:
                 ; 0000 0405 
                 ; 0000 0406     if(isFileOpen)
003907 3010      	CPI  R17,0
003908 f071      	BREQ _0xD2
                 ; 0000 0407     {
                 ; 0000 0408         res = LOG_closeFile(&file);
003909 01de      	MOVW R26,R28
00390a 9650      	ADIW R26,16
00390b 940e a1a4 	CALL SUBOPT_0x52
                 ; 0000 0409         if(res < 0)
00390d f44a      	BRPL _0xD3
                 ; 0000 040A         {
                 ; 0000 040B             printDebug("<sensorDataSave> LOG_closeFile() failed\r\n");
                +
00390e e6eb     +LDI R30 , LOW ( 2 * _0x0 + ( 1949 ) )
00390f e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1949 ) )
003910 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1949 ) )
003911 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1949 ) )
                 	__POINTD1FN _0x0,1949
003912 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 040C             return -1;
003914 efef      	LDI  R30,LOW(65535)
003915 efff      	LDI  R31,HIGH(65535)
003916 c00b      	RJMP _0x20E0086
                 ; 0000 040D         }
                 ; 0000 040E     }
                 _0xD3:
                 ; 0000 040F 
                 ; 0000 0410     if(count > 0){
                 _0xD2:
003917 2400      	CLR  R0
003918 1602      	CP   R0,R18
003919 0603      	CPC  R0,R19
00391a f434      	BRGE _0xD4
                 ; 0000 0411         //isDataLogEmpty  = 0;
                 ; 0000 0412         printDebug("<sensorDataSave> Data Log is not empty\r\n");
                +
00391b e9e5     +LDI R30 , LOW ( 2 * _0x0 + ( 1991 ) )
00391c e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1991 ) )
00391d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1991 ) )
00391e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1991 ) )
                 	__POINTD1FN _0x0,1991
00391f 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 0413     }
                 ; 0000 0414 
                 ; 0000 0415     return count;
                 _0xD4:
003921 01f9      	MOVW R30,R18
                 _0x20E0086:
003922 940e b6a1 	CALL __LOADLOCR6
003924 96e0      	ADIW R28,48
003925 5fde      	SUBI R29,-2
003926 9508      	RET
                 ; 0000 0416 }
                 ;/*============================================================*/
                 ;int eventSave(void)
                 ; 0000 0419 {
                 _eventSave:
                 ; 0000 041A     FIL                     file;
                 ; 0000 041B     char                    isFileOpen = 0;
                 ; 0000 041C     int                     count = 0;
                 ; 0000 041D     int                     res;
                 ; 0000 041E     unsigned long int       timestamp;
                 ; 0000 041F     unsigned char           eventID;
                 ; 0000 0420     unsigned char           eventStatus;
                 ; 0000 0421 
                 ; 0000 0422     // -- for debug -- //
                 ; 0000 0423     //struct rtc_structure    dt;
                 ; 0000 0424     // --------------- //
                 ; 0000 0425 
                 ; 0000 0426     while (count < MAX_EVENT_QUEUE)
003927 97a5      	SBIW R28,37
003928 50d2      	SUBI R29,2
003929 940e b69a 	CALL __SAVELOCR6
                 ;	file -> Y+11
                 ;	isFileOpen -> R17
                 ;	count -> R18,R19
                 ;	res -> R20,R21
                 ;	timestamp -> Y+7
                 ;	eventID -> R16
                 ;	eventStatus -> Y+6
00392b e010      	LDI  R17,0
                +
00392c e020     +LDI R18 , LOW ( 0 )
00392d e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xD5:
                +
00392e 3124     +CPI R18 , LOW ( 20 )
00392f e0e0     +LDI R30 , HIGH ( 20 )
003930 073e     +CPC R19 , R30
                 	__CPWRN 18,19,20
003931 f014      	BRLT PC+3
003932 940c 398d 	JMP _0xD7
                 ; 0000 0427     {
                 ; 0000 0428         res = fetchEventQueue(&timestamp, &eventID, &eventStatus);
003934 940e a1af 	CALL SUBOPT_0x53
003936 b7ed      	IN   R30,SPL
003937 b7fe      	IN   R31,SPH
003938 93fa      	ST   -Y,R31
003939 93ea      	ST   -Y,R30
00393a 930f      	PUSH R16
00393b 01de      	MOVW R26,R28
00393c 961a      	ADIW R26,10
00393d 940e 6a23 	CALL _fetchEventQueue
00393f 910f      	POP  R16
003940 01af      	MOVW R20,R30
                 ; 0000 0429         if(res < 0)
003941 2355      	TST  R21
003942 f40a      	BRPL _0xD8
                 ; 0000 042A         {
                 ; 0000 042B             break;
003943 c049      	RJMP _0xD7
                 ; 0000 042C         }
                 ; 0000 042D         else
                 _0xD8:
                 ; 0000 042E         {
                 ; 0000 042F             printDebug("<eventSave> time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
003944 ebee     +LDI R30 , LOW ( 2 * _0x0 + ( 2032 ) )
003945 e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 2032 ) )
003946 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2032 ) )
003947 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2032 ) )
                 	__POINTD1FN _0x0,2032
003948 940e b62a 	CALL __PUTPARD1
00394a 940e a1b4 	CALL SUBOPT_0x54
00394c 2fe0      	MOV  R30,R16
00394d 940e a1bb 	CALL SUBOPT_0x55
00394f 89ea      	LDD  R30,Y+18
003950 940e a1bb 	CALL SUBOPT_0x55
003952 940e a1c1 	CALL SUBOPT_0x56
                 ; 0000 0430             /*
                 ; 0000 0431             binary_to_date(timestamp, &dt);
                 ; 0000 0432             printRTC(dt);
                 ; 0000 0433             */
                 ; 0000 0434 
                 ; 0000 0435             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003954 940e a1c6 	CALL SUBOPT_0x57
003956 940e b68a 	CALL __CPD02
003958 f029      	BREQ _0xDB
003959 940e a1c6 	CALL SUBOPT_0x57
00395b 940e a091 	CALL SUBOPT_0x2B
00395d f439      	BRNE _0xDA
                 _0xDB:
                 ; 0000 0436             {
                 ; 0000 0437                 printDebug("\r\n<eventSave> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
00395e eeee     +LDI R30 , LOW ( 2 * _0x0 + ( 2080 ) )
00395f e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 2080 ) )
003960 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2080 ) )
003961 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2080 ) )
                 	__POINTD1FN _0x0,2080
003962 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 0438                 continue;
003964 cfc9      	RJMP _0xD5
                 ; 0000 0439             }
                 ; 0000 043A 
                 ; 0000 043B             //if(sdStatus == OK && logStatus == OK)
                 ; 0000 043C             if(!isFileOpen)
                 _0xDA:
003965 3010      	CPI  R17,0
003966 f479      	BRNE _0xDD
                 ; 0000 043D             {
                 ; 0000 043E                 res = LOG_openFile(&file,LOGFILE_EVENT);
003967 940e a1cb 	CALL SUBOPT_0x58
003969 940e a1d0 	CALL SUBOPT_0x59
00396b 01af      	MOVW R20,R30
                 ; 0000 043F                 if(res < 0)
00396c 2355      	TST  R21
00396d f43a      	BRPL _0xDE
                 ; 0000 0440                 {
                 ; 0000 0441                     printDebug("<eventSave> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_EVENT);
                +
00396e e2e5     +LDI R30 , LOW ( 2 * _0x0 + ( 2135 ) )
00396f e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2135 ) )
003970 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2135 ) )
003971 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2135 ) )
                 	__POINTD1FN _0x0,2135
003972 940e a1db 	CALL SUBOPT_0x5A
                 ; 0000 0442                     continue;
003974 cfb9      	RJMP _0xD5
                 ; 0000 0443                 }
                 ; 0000 0444                 isFileOpen = 1;
                 _0xDE:
003975 e011      	LDI  R17,LOW(1)
                 ; 0000 0445             }
                 ; 0000 0446 
                 ; 0000 0447             res = LOG_insertEvent(&file,timestamp,eventID,eventStatus);
                 _0xDD:
003976 940e a1cb 	CALL SUBOPT_0x58
003978 940e a1e4 	CALL SUBOPT_0x5B
00397a 940e b62a 	CALL __PUTPARD1
00397c 930a      	ST   -Y,R16
00397d 85ad      	LDD  R26,Y+13
00397e 940e 736a 	CALL _LOG_insertEvent
003980 01af      	MOVW R20,R30
                 ; 0000 0448             if(res < 0)
003981 2355      	TST  R21
003982 f43a      	BRPL _0xDF
                 ; 0000 0449             {
                 ; 0000 044A                 printDebug("<eventSave> LOG_insertEvent() failed\r\n");
                +
003983 e5ee     +LDI R30 , LOW ( 2 * _0x0 + ( 2192 ) )
003984 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2192 ) )
003985 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2192 ) )
003986 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2192 ) )
                 	__POINTD1FN _0x0,2192
003987 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 044B                 continue;
003989 cfa4      	RJMP _0xD5
                 ; 0000 044C             }
                 ; 0000 044D             count++;
                 _0xDF:
                +
00398a 5f2f     +SUBI R18 , LOW ( - 1 )
00398b 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 044E         }
                 ; 0000 044F     }
00398c cfa1      	RJMP _0xD5
                 _0xD7:
                 ; 0000 0450 
                 ; 0000 0451     if(isFileOpen)
00398d 3010      	CPI  R17,0
00398e f071      	BREQ _0xE0
                 ; 0000 0452     {
                 ; 0000 0453         res = LOG_closeFile(&file);
00398f 01de      	MOVW R26,R28
003990 961b      	ADIW R26,11
003991 940e a1a4 	CALL SUBOPT_0x52
                 ; 0000 0454         if(res < 0)
003993 f44a      	BRPL _0xE1
                 ; 0000 0455         {
                 ; 0000 0456             printDebug("<eventSave> LOG_closeFile() failed\r\n");
                +
003994 e8e5     +LDI R30 , LOW ( 2 * _0x0 + ( 2231 ) )
003995 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2231 ) )
003996 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2231 ) )
003997 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2231 ) )
                 	__POINTD1FN _0x0,2231
003998 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 0457             return -1;
00399a efef      	LDI  R30,LOW(65535)
00399b efff      	LDI  R31,HIGH(65535)
00399c c00b      	RJMP _0x20E0085
                 ; 0000 0458         }
                 ; 0000 0459     }
                 _0xE1:
                 ; 0000 045A 
                 ; 0000 045B     if(count > 0){
                 _0xE0:
00399d 2400      	CLR  R0
00399e 1602      	CP   R0,R18
00399f 0603      	CPC  R0,R19
0039a0 f434      	BRGE _0xE2
                 ; 0000 045C         //isEventLogEmpty    = 0;
                 ; 0000 045D         printDebug("<eventSave> Event Log is not empty\r\n");
                +
0039a1 eaea     +LDI R30 , LOW ( 2 * _0x0 + ( 2268 ) )
0039a2 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2268 ) )
0039a3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2268 ) )
0039a4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2268 ) )
                 	__POINTD1FN _0x0,2268
0039a5 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 045E     }
                 ; 0000 045F 
                 ; 0000 0460     return count;
                 _0xE2:
0039a7 01f9      	MOVW R30,R18
                 _0x20E0085:
0039a8 940e b6a1 	CALL __LOADLOCR6
0039aa 96ab      	ADIW R28,43
0039ab 5fde      	SUBI R29,-2
0039ac 9508      	RET
                 ; 0000 0461 }
                 ;/*============================================================*/
                 ;int logReport(void)
                 ; 0000 0464 {
                 _logReport:
                 ; 0000 0465     FIL                     file;
                 ; 0000 0466     int                     res;
                 ; 0000 0467     unsigned long int       index;
                 ; 0000 0468     unsigned long int       timestamp;
                 ; 0000 0469     unsigned int            channel;
                 ; 0000 046A     float                   value;
                 ; 0000 046B     unsigned char           id;
                 ; 0000 046C     unsigned char           status;
                 ; 0000 046D 
                 ; 0000 046E     // -- send data log if any exist -- //
                 ; 0000 046F     if((!isDataLogEmpty) && (logDataWait.frameID == 0x00))   // -- if no logDataWaitFrameID, look for some data log to send -- //
0039ad 97ac      	SBIW R28,44
0039ae 50d2      	SUBI R29,2
0039af 940e b69a 	CALL __SAVELOCR6
                 ;	file -> Y+18
                 ;	res -> R16,R17
                 ;	index -> Y+14
                 ;	timestamp -> Y+10
                 ;	channel -> R18,R19
                 ;	value -> Y+6
                 ;	id -> R21
                 ;	status -> R20
0039b1 91e0 14dd 	LDS  R30,_isDataLogEmpty
0039b3 30e0      	CPI  R30,0
0039b4 f421      	BRNE _0xE4
0039b5 91a0 1426 	LDS  R26,_logDataWait
0039b7 30a0      	CPI  R26,LOW(0x0)
0039b8 f009      	BREQ _0xE5
                 _0xE4:
0039b9 c089      	RJMP _0xE3
                 _0xE5:
                 ; 0000 0470     {
                 ; 0000 0471         printDebug("<logReport> Check Data Log Exist\r\n");
                +
0039ba ecef     +LDI R30 , LOW ( 2 * _0x0 + ( 2305 ) )
0039bb e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2305 ) )
0039bc e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2305 ) )
0039bd e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2305 ) )
                 	__POINTD1FN _0x0,2305
0039be 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 0472         res = LOG_openFile(&file,LOGFILE_DATA);
0039c0 940e a1e9 	CALL SUBOPT_0x5C
0039c2 940e a185 	CALL SUBOPT_0x4E
0039c4 018f      	MOVW R16,R30
                 ; 0000 0473         if(res < 0)
0039c5 2311      	TST  R17
0039c6 f43a      	BRPL _0xE6
                 ; 0000 0474         {
                 ; 0000 0475             printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_DATA);
                +
0039c7 efe2     +LDI R30 , LOW ( 2 * _0x0 + ( 2340 ) )
0039c8 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2340 ) )
0039c9 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2340 ) )
0039ca e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2340 ) )
                 	__POINTD1FN _0x0,2340
0039cb 940e a190 	CALL SUBOPT_0x4F
                 ; 0000 0476         }
                 ; 0000 0477         else
0039cd c075      	RJMP _0xE7
                 _0xE6:
                 ; 0000 0478         {
                 ; 0000 0479             res = LOG_readData(&file,&timestamp,&channel,&value,&index);
0039ce 940e a1e9 	CALL SUBOPT_0x5C
0039d0 940e a173 	CALL SUBOPT_0x4A
0039d2 b7ed      	IN   R30,SPL
0039d3 b7fe      	IN   R31,SPH
0039d4 9731      	SBIW R30,1
0039d5 93fa      	ST   -Y,R31
0039d6 93ea      	ST   -Y,R30
0039d7 933f      	PUSH R19
0039d8 932f      	PUSH R18
0039d9 940e a173 	CALL SUBOPT_0x4A
0039db 01de      	MOVW R26,R28
0039dc 9656      	ADIW R26,22
0039dd 940e 72d1 	CALL _LOG_readData
0039df 912f      	POP  R18
0039e0 913f      	POP  R19
0039e1 018f      	MOVW R16,R30
                 ; 0000 047A             if(res < 0)
0039e2 2311      	TST  R17
0039e3 f43a      	BRPL _0xE8
                 ; 0000 047B             {
                 ; 0000 047C                 printDebug("<logReport> LOG_readData(%s) failed\r\n",LOGFILE_DATA);
                +
0039e4 e1e8     +LDI R30 , LOW ( 2 * _0x0 + ( 2378 ) )
0039e5 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2378 ) )
0039e6 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2378 ) )
0039e7 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2378 ) )
                 	__POINTD1FN _0x0,2378
0039e8 940e a190 	CALL SUBOPT_0x4F
                 ; 0000 047D             }
                 ; 0000 047E             else if(res == 0)
0039ea c04f      	RJMP _0xE9
                 _0xE8:
0039eb 2e00      	MOV  R0,R16
0039ec 2a01      	OR   R0,R17
0039ed f439      	BRNE _0xEA
                 ; 0000 047F             {
                 ; 0000 0480                 //isDataLogEmpty      = 1;
                 ; 0000 0481                 printDebug("<logReport> LOG_readData() Log empty\r\n");
                +
0039ee e3ee     +LDI R30 , LOW ( 2 * _0x0 + ( 2416 ) )
0039ef e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2416 ) )
0039f0 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2416 ) )
0039f1 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2416 ) )
                 	__POINTD1FN _0x0,2416
0039f2 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 0482             }
                 ; 0000 0483             else
0039f4 c045      	RJMP _0xEB
                 _0xEA:
                 ; 0000 0484             {
                 ; 0000 0485                 if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
0039f5 940e a1ee 	CALL SUBOPT_0x5D
0039f7 f039      	BREQ _0xED
0039f8 940e a13f 	CALL SUBOPT_0x43
0039fa f021      	BREQ _0xED
                +
0039fb 3025     +CPI R18 , LOW ( 5 )
0039fc e0e0     +LDI R30 , HIGH ( 5 )
0039fd 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
0039fe f038      	BRLO _0xEC
                 _0xED:
                 ; 0000 0486                 {
                 ; 0000 0487                     printDebug("\r\n<logReport> === ERROR INFOMATION IN %s ===\r\n",LOGFILE_DATA);
                +
0039ff e6e5     +LDI R30 , LOW ( 2 * _0x0 + ( 2455 ) )
003a00 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2455 ) )
003a01 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2455 ) )
003a02 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2455 ) )
                 	__POINTD1FN _0x0,2455
003a03 940e a190 	CALL SUBOPT_0x4F
                 ; 0000 0488                 }
                 ; 0000 0489                 else
003a05 c034      	RJMP _0xEF
                 _0xEC:
                 ; 0000 048A                 {
                 ; 0000 048B                     printDebug("<logReport> DataLog found time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
003a06 e9e4     +LDI R30 , LOW ( 2 * _0x0 + ( 2502 ) )
003a07 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2502 ) )
003a08 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2502 ) )
003a09 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2502 ) )
                 	__POINTD1FN _0x0,2502
003a0a 940e a122 	CALL SUBOPT_0x40
003a0c 01f9      	MOVW R30,R18
003a0d 940e a12b 	CALL SUBOPT_0x41
                 ; 0000 048C                     res = ETH_sendDataReportCmd(TYP_LOG,timestamp,channel,value);
003a0f e0e1      	LDI  R30,LOW(1)
003a10 940e a141 	CALL SUBOPT_0x44
003a12 933a      	ST   -Y,R19
003a13 932a      	ST   -Y,R18
003a14 940e a149 	CALL SUBOPT_0x45
003a16 018f      	MOVW R16,R30
                 ; 0000 048D                     if(res < 0)
003a17 2311      	TST  R17
003a18 f44a      	BRPL _0xF0
                 ; 0000 048E                     {
                 ; 0000 048F                         logDataWait.frameID    = 0;
003a19 940e a1f2 	CALL SUBOPT_0x5E
                 ; 0000 0490                         logDataWait.logID      = 0;
                 ; 0000 0491                         printDebug("<logReport> ETH_sendDataReportCmd() failed\r\n");
                +
003a1b eceb     +LDI R30 , LOW ( 2 * _0x0 + ( 2557 ) )
003a1c e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2557 ) )
003a1d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2557 ) )
003a1e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2557 ) )
                 	__POINTD1FN _0x0,2557
003a1f 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 0492                     }
                 ; 0000 0493                     else
003a21 c018      	RJMP _0xF1
                 _0xF0:
                 ; 0000 0494                     {
                 ; 0000 0495                         logDataWait.logID       = index;
003a22 940e a199 	CALL SUBOPT_0x50
                +
003a24 93e0 1427+STS _logDataWait + ( 1 ) , R30
003a26 93f0 1428+STS _logDataWait + ( 1 ) + 1 , R31
003a28 9360 1429+STS _logDataWait + ( 1 ) + 2 , R22
003a2a 9370 142a+STS _logDataWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logDataWait,1
                 ; 0000 0496                         printDebug("<logReport> DataLog sent frameID[0x%02X] logID[0x%02X]\r\n",logDataWait.frameID,logDataWait.logID);
                +
003a2c efe8     +LDI R30 , LOW ( 2 * _0x0 + ( 2602 ) )
003a2d e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2602 ) )
003a2e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2602 ) )
003a2f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2602 ) )
                 	__POINTD1FN _0x0,2602
003a30 940e b62a 	CALL __PUTPARD1
003a32 91e0 1426 	LDS  R30,_logDataWait
003a34 940e a1bb 	CALL SUBOPT_0x55
003a36 940e a202 	CALL SUBOPT_0x5F
003a38 940e a038 	CALL SUBOPT_0x1F
                 ; 0000 0497                     }
                 _0xF1:
                 ; 0000 0498                 }
                 _0xEF:
                 ; 0000 0499             }
                 _0xEB:
                 _0xE9:
                 ; 0000 049A 
                 ; 0000 049B             res = LOG_closeFile(&file);
003a3a 940e a20b 	CALL SUBOPT_0x60
                 ; 0000 049C             if(res < 0)
003a3c f432      	BRPL _0xF2
                 ; 0000 049D             {
                 ; 0000 049E                 printDebug("<logReport> LOG_closeFile() failed\r\n");
                +
003a3d e3e1     +LDI R30 , LOW ( 2 * _0x0 + ( 2659 ) )
003a3e e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2659 ) )
003a3f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2659 ) )
003a40 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2659 ) )
                 	__POINTD1FN _0x0,2659
003a41 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 049F             }
                 ; 0000 04A0         }
                 _0xF2:
                 _0xE7:
                 ; 0000 04A1     }
                 ; 0000 04A2 
                 ; 0000 04A3     // -- send event log if any exist -- //
                 ; 0000 04A4     if((!isEventLogEmpty) && (logEventWait.frameID == 0x00))  // -- if no logEventWaitFrameID, look for some event log to send -- //
                 _0xE3:
003a43 91e0 14de 	LDS  R30,_isEventLogEmpty
003a45 30e0      	CPI  R30,0
003a46 f421      	BRNE _0xF4
003a47 91a0 142b 	LDS  R26,_logEventWait
003a49 30a0      	CPI  R26,LOW(0x0)
003a4a f009      	BREQ _0xF5
                 _0xF4:
003a4b c087      	RJMP _0xF3
                 _0xF5:
                 ; 0000 04A5     {
                 ; 0000 04A6         printDebug("<logReport> Check Event Log Exist\r\n");
                +
003a4c e5e6     +LDI R30 , LOW ( 2 * _0x0 + ( 2696 ) )
003a4d e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2696 ) )
003a4e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2696 ) )
003a4f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2696 ) )
                 	__POINTD1FN _0x0,2696
003a50 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 04A7         res = LOG_openFile(&file,LOGFILE_EVENT);
003a52 940e a1e9 	CALL SUBOPT_0x5C
003a54 940e a1d0 	CALL SUBOPT_0x59
003a56 018f      	MOVW R16,R30
                 ; 0000 04A8         if(res < 0)
003a57 2311      	TST  R17
003a58 f42a      	BRPL _0xF6
                 ; 0000 04A9         {
                 ; 0000 04AA             printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_EVENT);
                +
003a59 efe2     +LDI R30 , LOW ( 2 * _0x0 + ( 2340 ) )
003a5a e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2340 ) )
003a5b e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2340 ) )
003a5c e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2340 ) )
                 	__POINTD1FN _0x0,2340
003a5d c06f      	RJMP _0x10B
                 ; 0000 04AB         }
                 ; 0000 04AC         else
                 _0xF6:
                 ; 0000 04AD         {
                 ; 0000 04AE             res = LOG_readEvent(&file,&timestamp,&id,&status,&index);
003a5e 940e a1e9 	CALL SUBOPT_0x5C
003a60 940e a173 	CALL SUBOPT_0x4A
003a62 b7ed      	IN   R30,SPL
003a63 b7fe      	IN   R31,SPH
003a64 93fa      	ST   -Y,R31
003a65 93ea      	ST   -Y,R30
003a66 935f      	PUSH R21
003a67 b7ed      	IN   R30,SPL
003a68 b7fe      	IN   R31,SPH
003a69 93fa      	ST   -Y,R31
003a6a 93ea      	ST   -Y,R30
003a6b 934f      	PUSH R20
003a6c 01de      	MOVW R26,R28
003a6d 9656      	ADIW R26,22
003a6e 940e 73f6 	CALL _LOG_readEvent
003a70 914f      	POP  R20
003a71 915f      	POP  R21
003a72 018f      	MOVW R16,R30
                 ; 0000 04AF             if(res < 0)
003a73 2311      	TST  R17
003a74 f43a      	BRPL _0xF8
                 ; 0000 04B0             {
                 ; 0000 04B1                 printDebug("<logReport> LOG_readEvent() failed\r\n");
                +
003a75 e7ea     +LDI R30 , LOW ( 2 * _0x0 + ( 2732 ) )
003a76 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2732 ) )
003a77 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2732 ) )
003a78 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2732 ) )
                 	__POINTD1FN _0x0,2732
003a79 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 04B2             }
                 ; 0000 04B3             else if(res == 0)
003a7b c04a      	RJMP _0xF9
                 _0xF8:
003a7c 2e00      	MOV  R0,R16
003a7d 2a01      	OR   R0,R17
003a7e f439      	BRNE _0xFA
                 ; 0000 04B4             {
                 ; 0000 04B5                 //isEventLogEmpty     = 1;
                 ; 0000 04B6                 printDebug("<logReport> LOG_readEvent() Log empty\r\n");
                +
003a7f e9ef     +LDI R30 , LOW ( 2 * _0x0 + ( 2769 ) )
003a80 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2769 ) )
003a81 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2769 ) )
003a82 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2769 ) )
                 	__POINTD1FN _0x0,2769
003a83 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 04B7             }
                 ; 0000 04B8             else
003a85 c040      	RJMP _0xFB
                 _0xFA:
                 ; 0000 04B9             {
                 ; 0000 04BA                 if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003a86 940e a1ee 	CALL SUBOPT_0x5D
003a88 f019      	BREQ _0xFD
003a89 940e a13f 	CALL SUBOPT_0x43
003a8b f439      	BRNE _0xFC
                 _0xFD:
                 ; 0000 04BB                 {
                 ; 0000 04BC                     printDebug("\r\n<logReport> === ERROR INFOMATION IN %s ===\r\n",LOGFILE_EVENT);
                +
003a8c e6e5     +LDI R30 , LOW ( 2 * _0x0 + ( 2455 ) )
003a8d e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2455 ) )
003a8e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2455 ) )
003a8f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2455 ) )
                 	__POINTD1FN _0x0,2455
003a90 940e a1db 	CALL SUBOPT_0x5A
                 ; 0000 04BD                 }
                 ; 0000 04BE                 else
003a92 c033      	RJMP _0xFF
                 _0xFC:
                 ; 0000 04BF                 {
                 ; 0000 04C0                     printDebug("<logReport> EventLog found time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,id,status);
                +
003a93 ece7     +LDI R30 , LOW ( 2 * _0x0 + ( 2809 ) )
003a94 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2809 ) )
003a95 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2809 ) )
003a96 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2809 ) )
                 	__POINTD1FN _0x0,2809
003a97 940e a122 	CALL SUBOPT_0x40
003a99 940e a15d 	CALL SUBOPT_0x48
                 ; 0000 04C1                     res = ETH_sendEventReportCmd(TYP_LOG,timestamp,id,status);
003a9b e0e1      	LDI  R30,LOW(1)
003a9c 940e a141 	CALL SUBOPT_0x44
003a9e 935a      	ST   -Y,R21
003a9f 2fa4      	MOV  R26,R20
003aa0 940e 5006 	CALL _ETH_sendEventReportCmd
003aa2 018f      	MOVW R16,R30
                 ; 0000 04C2                     if(res < 0)
003aa3 2311      	TST  R17
003aa4 f44a      	BRPL _0x100
                 ; 0000 04C3                     {
                 ; 0000 04C4                         logEventWait.frameID    = 0;
003aa5 940e a218 	CALL SUBOPT_0x61
                 ; 0000 04C5                         logEventWait.logID      = 0;
                 ; 0000 04C6                         printDebug("<logReport> ETH_sendEventReportCmd() failed\r\n");
                +
003aa7 e0e6     +LDI R30 , LOW ( 2 * _0x0 + ( 2872 ) )
003aa8 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2872 ) )
003aa9 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2872 ) )
003aaa e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2872 ) )
                 	__POINTD1FN _0x0,2872
003aab 940e 9f66 	CALL SUBOPT_0x2
                 ; 0000 04C7                     }
                 ; 0000 04C8                     else
003aad c018      	RJMP _0x101
                 _0x100:
                 ; 0000 04C9                     {
                 ; 0000 04CA                         logEventWait.logID      = index;
003aae 940e a199 	CALL SUBOPT_0x50
                +
003ab0 93e0 142c+STS _logEventWait + ( 1 ) , R30
003ab2 93f0 142d+STS _logEventWait + ( 1 ) + 1 , R31
003ab4 9360 142e+STS _logEventWait + ( 1 ) + 2 , R22
003ab6 9370 142f+STS _logEventWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logEventWait,1
                 ; 0000 04CB                         printDebug("<logReport> EventLog sent frameID[0x%02X] logID[0x%02X]\r\n",logEventWait.frameID,logEventWait.logID);
                +
003ab8 e3e4     +LDI R30 , LOW ( 2 * _0x0 + ( 2918 ) )
003ab9 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2918 ) )
003aba e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2918 ) )
003abb e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2918 ) )
                 	__POINTD1FN _0x0,2918
003abc 940e b62a 	CALL __PUTPARD1
003abe 91e0 142b 	LDS  R30,_logEventWait
003ac0 940e a1bb 	CALL SUBOPT_0x55
003ac2 940e a228 	CALL SUBOPT_0x62
003ac4 940e a038 	CALL SUBOPT_0x1F
                 ; 0000 04CC                     }
                 _0x101:
                 ; 0000 04CD                 }
                 _0xFF:
                 ; 0000 04CE             }
                 _0xFB:
                 _0xF9:
                 ; 0000 04CF 
                 ; 0000 04D0             res = LOG_closeFile(&file);
003ac6 940e a20b 	CALL SUBOPT_0x60
                 ; 0000 04D1             if(res < 0)
003ac8 f452      	BRPL _0x102
                 ; 0000 04D2             {
                 ; 0000 04D3                 printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_EVENT);
                +
003ac9 e6ee     +LDI R30 , LOW ( 2 * _0x0 + ( 2976 ) )
003aca e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2976 ) )
003acb e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2976 ) )
003acc e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2976 ) )
                 	__POINTD1FN _0x0,2976
                 _0x10B:
003acd 940e b62a 	CALL __PUTPARD1
003acf 940e a231 	CALL SUBOPT_0x63
003ad1 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0000 04D4             }
                 ; 0000 04D5         }
                 _0x102:
                 ; 0000 04D6     }
                 ; 0000 04D7 
                 ; 0000 04D8     return 0;
                 _0xF3:
003ad3 940e a238 	CALL SUBOPT_0x64
003ad5 96e2      	ADIW R28,50
003ad6 5fde      	SUBI R29,-2
003ad7 9508      	RET
                 ; 0000 04D9 }
                 ;/*============================================================*/
                 ;#include <delay.h>
                 ;#include <stdlib.h>
                 ;#include <i2c.h>
                 ;#include "initial_sys.h"
                 ;#include "uart.h"
                 ;#include "timer.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "ds1672.h"
                 ;#include "config.h"
                 ;#include "oled.h"
                 ;#include "adc.h"
                 ;#include "debug.h"
                 ;#include "log.h"
                 ;#include "sdcard.h"
                 ;
                 ;/*============================================================*/
                 ;int initial_system(void)
                 ; 0001 0012 {
                 
                 	.CSEG
                 _initial_system:
                 ; 0001 0013     int res=0;
                 ; 0001 0014 
                 ; 0001 0015     // Crystal Oscillator division factor: 1
                 ; 0001 0016     #pragma optsize-
                 ; 0001 0017     CLKPR=0x80;
003ad8 931a      	ST   -Y,R17
003ad9 930a      	ST   -Y,R16
                 ;	res -> R16,R17
                +
003ada e000     +LDI R16 , LOW ( 0 )
003adb e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
003adc e8e0      	LDI  R30,LOW(128)
003add 93e0 0061 	STS  97,R30
                 ; 0001 0018     CLKPR=0x00;
003adf e0e0      	LDI  R30,LOW(0)
003ae0 93e0 0061 	STS  97,R30
                 ; 0001 0019     #ifdef _OPTIMIZE_SIZE_
                 ; 0001 001A     #pragma optsize+
                 ; 0001 001B     #endif
                 ; 0001 001C 
                 ; 0001 001D     init_uart();
003ae2 940e 3dc2 	CALL _init_uart
                 ; 0001 001E 
                 ; 0001 001F     if(MCUSR & (1<<PORF)){
003ae4 b7e4      	IN   R30,0x34
003ae5 ffe0      	SBRS R30,0
003ae6 c009      	RJMP _0x20003
                 ; 0001 0020         printDebug("\r\nPower-on Reset\r\n");
                +
003ae7 e9e6     +LDI R30 , LOW ( 2 * _0x20000 + ( 0 ) )
003ae8 e0fd     +LDI R31 , HIGH ( 2 * _0x20000 + ( 0 ) )
003ae9 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 0 ) )
003aea e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 0 ) )
                 	__POINTD1FN _0x20000,0
003aeb 940e 9f66 	CALL SUBOPT_0x2
                 ; 0001 0021         MCUSR &= ~(1<<PORF);
003aed b7e4      	IN   R30,0x34
003aee 7fee      	ANDI R30,0xFE
003aef bfe4      	OUT  0x34,R30
                 ; 0001 0022     }
                 ; 0001 0023     if(MCUSR & (1<<EXTRF)){
                 _0x20003:
003af0 b7e4      	IN   R30,0x34
003af1 ffe1      	SBRS R30,1
003af2 c009      	RJMP _0x20004
                 ; 0001 0024         printDebug("\r\nExternal Reset\r\n");
                +
003af3 eae9     +LDI R30 , LOW ( 2 * _0x20000 + ( 19 ) )
003af4 e0fd     +LDI R31 , HIGH ( 2 * _0x20000 + ( 19 ) )
003af5 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 19 ) )
003af6 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 19 ) )
                 	__POINTD1FN _0x20000,19
003af7 940e 9f66 	CALL SUBOPT_0x2
                 ; 0001 0025         MCUSR &= ~(1<<EXTRF);
003af9 b7e4      	IN   R30,0x34
003afa 7fed      	ANDI R30,0xFD
003afb bfe4      	OUT  0x34,R30
                 ; 0001 0026     }
                 ; 0001 0027     if(MCUSR & (1<<BORF)){
                 _0x20004:
003afc b7e4      	IN   R30,0x34
003afd ffe2      	SBRS R30,2
003afe c009      	RJMP _0x20005
                 ; 0001 0028         printDebug("\r\nBrown-out Reset\r\n");
                +
003aff ebec     +LDI R30 , LOW ( 2 * _0x20000 + ( 38 ) )
003b00 e0fd     +LDI R31 , HIGH ( 2 * _0x20000 + ( 38 ) )
003b01 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 38 ) )
003b02 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 38 ) )
                 	__POINTD1FN _0x20000,38
003b03 940e 9f66 	CALL SUBOPT_0x2
                 ; 0001 0029         MCUSR &= ~(1<<BORF);
003b05 b7e4      	IN   R30,0x34
003b06 7feb      	ANDI R30,0xFB
003b07 bfe4      	OUT  0x34,R30
                 ; 0001 002A     }
                 ; 0001 002B     if(MCUSR & (1<<WDRF)){
                 _0x20005:
003b08 b7e4      	IN   R30,0x34
003b09 ffe3      	SBRS R30,3
003b0a c009      	RJMP _0x20006
                 ; 0001 002C         printDebug("\r\nWatchdog Reset\r\n");
                +
003b0b ede0     +LDI R30 , LOW ( 2 * _0x20000 + ( 58 ) )
003b0c e0fd     +LDI R31 , HIGH ( 2 * _0x20000 + ( 58 ) )
003b0d e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 58 ) )
003b0e e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 58 ) )
                 	__POINTD1FN _0x20000,58
003b0f 940e 9f66 	CALL SUBOPT_0x2
                 ; 0001 002D         MCUSR &= ~(1<<WDRF);
003b11 b7e4      	IN   R30,0x34
003b12 7fe7      	ANDI R30,0XF7
003b13 bfe4      	OUT  0x34,R30
                 ; 0001 002E     }
                 ; 0001 002F     if(MCUSR & (1<<JTRF)){
                 _0x20006:
003b14 b7e4      	IN   R30,0x34
003b15 ffe4      	SBRS R30,4
003b16 c009      	RJMP _0x20007
                 ; 0001 0030         printDebug("\r\nJTAG Reset\r\n");
                +
003b17 eee3     +LDI R30 , LOW ( 2 * _0x20000 + ( 77 ) )
003b18 e0fd     +LDI R31 , HIGH ( 2 * _0x20000 + ( 77 ) )
003b19 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 77 ) )
003b1a e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 77 ) )
                 	__POINTD1FN _0x20000,77
003b1b 940e 9f66 	CALL SUBOPT_0x2
                 ; 0001 0031         MCUSR &= ~(1<<JTRF);
003b1d b7e4      	IN   R30,0x34
003b1e 7eef      	ANDI R30,0xEF
003b1f bfe4      	OUT  0x34,R30
                 ; 0001 0032     }
                 ; 0001 0033 
                 ; 0001 0034     // -------- Peripheral Initialize ----------- //
                 ; 0001 0035     init_io();
                 _0x20007:
003b20 940e 3f63 	CALL _init_io
                 ; 0001 0036     init_i2c();
003b22 d050      	RCALL _init_i2c
                 ; 0001 0037     init_spi();
003b23 d052      	RCALL _init_spi
                 ; 0001 0038     init_adc();
003b24 940e 40b3 	CALL _init_adc
                 ; 0001 0039     init_timer();
003b26 940e 3eb3 	CALL _init_timer
                 ; 0001 003A     init_common();
003b28 d052      	RCALL _init_common
                 ; 0001 003B 
                 ; 0001 003C     enable_interrupt(2);
003b29 940e a23d 	CALL SUBOPT_0x65
003b2b 940e 3f3d 	CALL _enable_interrupt
                 ; 0001 003D 
                 ; 0001 003E     delay_ms(500);
003b2d efa4      	LDI  R26,LOW(500)
003b2e e0b1      	LDI  R27,HIGH(500)
003b2f 940e b2e6 	CALL _delay_ms
                 ; 0001 003F 
                 ; 0001 0040     // -------- Module Initialize ----------- //
                 ; 0001 0041     BUZZER = 0;                 // BUZZER Off.
003b31 9877      	CBI  0xE,7
                 ; 0001 0042     init_RTC();         delay_ms(100);
003b32 940e 44a8 	CALL _init_RTC
003b34 940e a240 	CALL SUBOPT_0x66
                 ; 0001 0043     init_oled();        delay_ms(100);
003b36 940e 700e 	CALL _init_oled
003b38 940e a240 	CALL SUBOPT_0x66
                 ; 0001 0044     adc_init_read();            //getting first ADC to initial
003b3a 940e 4050 	CALL _adc_init_read
                 ; 0001 0045 
                 ; 0001 0046     enable_interrupt(1);        // -- adc_sampling
003b3c 940e a244 	CALL SUBOPT_0x67
003b3e 940e 3f3d 	CALL _enable_interrupt
                 ; 0001 0047     enable_interrupt(3);        // -- 1 sec timer
003b40 940e a247 	CALL SUBOPT_0x68
003b42 940e 3f3d 	CALL _enable_interrupt
                 ; 0001 0048     enable_interrupt(4);        // -- 0.5 sec timer
003b44 940e a24a 	CALL SUBOPT_0x69
003b46 940e 3f3d 	CALL _enable_interrupt
                 ; 0001 0049 
                 ; 0001 004A     getAllConfig();
003b48 940e 4f09 	CALL _getAllConfig
                 ; 0001 004B     // -- Initialize Complete -- //
                 ; 0001 004C     /*bongkot*/
                 ; 0001 004D     //playBeep();
                 ; 0001 004E     showLedInitComplete();
003b4a d096      	RCALL _showLedInitComplete
                 ; 0001 004F     showDebugInitComplete();
003b4b d047      	RCALL _showDebugInitComplete
                 ; 0001 0050 
                 ; 0001 0051     if(SD_init() == 0)
003b4c 940e 71f3 	CALL _SD_init
003b4e 9730      	SBIW R30,0
003b4f f459      	BRNE _0x2000A
                 ; 0001 0052     {
                 ; 0001 0053         if(LOG_init() < 0)
003b50 940e 75d9 	CALL _LOG_init
003b52 23ff      	TST  R31
003b53 f432      	BRPL _0x2000B
                 ; 0001 0054         {
                 ; 0001 0055             // -- log status = error -- //
                 ; 0001 0056             printDebug("<initial_system> LOG_init() failed\r\n");
                +
003b54 efe2     +LDI R30 , LOW ( 2 * _0x20000 + ( 92 ) )
003b55 e0fd     +LDI R31 , HIGH ( 2 * _0x20000 + ( 92 ) )
003b56 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 92 ) )
003b57 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 92 ) )
                 	__POINTD1FN _0x20000,92
003b58 940e 9f66 	CALL SUBOPT_0x2
                 ; 0001 0057         }
                 ; 0001 0058 
                 ; 0001 0059         // -- log status = ok -- //
                 ; 0001 005A     }
                 _0x2000B:
                 ; 0001 005B     else
003b5a c006      	RJMP _0x2000C
                 _0x2000A:
                 ; 0001 005C     {
                 ; 0001 005D         // -- sd status = error -- //
                 ; 0001 005E         printDebug("<initial_system> SD_init() failed\r\n");
                +
003b5b e1e7     +LDI R30 , LOW ( 2 * _0x20000 + ( 129 ) )
003b5c e0fe     +LDI R31 , HIGH ( 2 * _0x20000 + ( 129 ) )
003b5d e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 129 ) )
003b5e e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 129 ) )
                 	__POINTD1FN _0x20000,129
003b5f 940e 9f66 	CALL SUBOPT_0x2
                 ; 0001 005F     }
                 _0x2000C:
                 ; 0001 0060 
                 ; 0001 0061     srand((unsigned int)raw_rtc + (unsigned int)(read_adc(8) * 13));        // set random seed
003b61 e0a8      	LDI  R26,LOW(8)
003b62 940e 3fc3 	CALL _read_adc
003b64 e0ad      	LDI  R26,LOW(13)
003b65 e0b0      	LDI  R27,HIGH(13)
003b66 940e b53b 	CALL __MULW12U
003b68 91a0 1430 	LDS  R26,_raw_rtc
003b6a 91b0 1431 	LDS  R27,_raw_rtc+1
003b6c 0fae      	ADD  R26,R30
003b6d 1fbf      	ADC  R27,R31
003b6e 940e 83ac 	CALL _srand
                 ; 0001 0062 
                 ; 0001 0063     // -------- Configuration Initialize ----------- //
                 ; 0001 0064 //    readConfig();
                 ; 0001 0065 //    initAlarm();        //delay_ms(100);
                 ; 0001 0066 //
                 ; 0001 0067 //    if(init_logfile() < 0){
                 ; 0001 0068 //        printDebug("init_logdata() failed\r\n");
                 ; 0001 0069 //        return -1;
                 ; 0001 006A //    }
                 ; 0001 006B 
                 ; 0001 006C 
                 ; 0001 006D     return res;
003b70 01f8      	MOVW R30,R16
003b71 940c 40b0 	JMP  _0x20E0080
                 ; 0001 006E }
                 ;/*============================================================*/
                 ;void init_i2c(void)
                 ; 0001 0071 {
                 _init_i2c:
                 ; 0001 0072     // I2C Bus initialization
                 ; 0001 0073     i2c_init();
003b73 940e b295 	CALL _i2c_init
                 ; 0001 0074 }
003b75 9508      	RET
                 ;/*============================================================*/
                 ;void init_spi(void)
                 ; 0001 0077 {
                 _init_spi:
                 ; 0001 0078     // SPI initialization
                 ; 0001 0079     // SPI Type: Master
                 ; 0001 007A     // SPI Clock Rate: 2000.000 kHz
                 ; 0001 007B     // SPI Clock Phase: Cycle Start
                 ; 0001 007C     // SPI Clock Polarity: Low
                 ; 0001 007D     // SPI Data Order: MSB First
                 ; 0001 007E     SPCR=0x50;
003b76 e5e0      	LDI  R30,LOW(80)
003b77 bdec      	OUT  0x2C,R30
                 ; 0001 007F     SPSR=0x00;
003b78 e0e0      	LDI  R30,LOW(0)
003b79 bded      	OUT  0x2D,R30
                 ; 0001 0080 }
003b7a 9508      	RET
                 ;/*============================================================*/
                 ;void init_common(void)
                 ; 0001 0083 {
                 _init_common:
                 ; 0001 0084     // External Interrupt(s) initialization
                 ; 0001 0085     // INT0: Off, INT1: Off, INT2: Off, INT3: Off, INT4: Off, INT5: Off, INT6: Off, INT7: Off
                 ; 0001 0086     EICRA=0x00;
003b7b e0e0      	LDI  R30,LOW(0)
003b7c 93e0 0069 	STS  105,R30
                 ; 0001 0087     EICRB=0x00;
003b7e 93e0 006a 	STS  106,R30
                 ; 0001 0088     EIMSK=0x00;
003b80 bbed      	OUT  0x1D,R30
                 ; 0001 0089 
                 ; 0001 008A     PCMSK0=0x00;
003b81 93e0 006b 	STS  107,R30
                 ; 0001 008B     PCMSK1=0x00;
003b83 93e0 006c 	STS  108,R30
                 ; 0001 008C     PCMSK2=0x00;
003b85 93e0 006d 	STS  109,R30
                 ; 0001 008D     PCICR=0x00;
003b87 93e0 0068 	STS  104,R30
                 ; 0001 008E 
                 ; 0001 008F     // Analog Comparator initialization
                 ; 0001 0090     // Analog Comparator: Off
                 ; 0001 0091     // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0001 0092     ACSR=0x80;
003b89 e8e0      	LDI  R30,LOW(128)
003b8a bfe0      	OUT  0x30,R30
                 ; 0001 0093     ADCSRB=0x00;
003b8b e0e0      	LDI  R30,LOW(0)
003b8c 93e0 007b 	STS  123,R30
                 ; 0001 0094     DIDR1=0x00;
003b8e 93e0 007f 	STS  127,R30
                 ; 0001 0095 
                 ; 0001 0096     // TWI initialization
                 ; 0001 0097     // TWI disabled
                 ; 0001 0098     TWCR=0x00;
003b90 93e0 00bc 	STS  188,R30
                 ; 0001 0099 }
003b92 9508      	RET
                 ;/*============================================================*/
                 ;void playBeep(void)
                 ; 0001 009C {
                 ; 0001 009D     BUZZER = 1;                                     // Buzzer ON Starting
                 ; 0001 009E     delay_ms(200);
                 ; 0001 009F     BUZZER = 0;
                 ; 0001 00A0 }
                 ;/*============================================================*/
                 ;void showDebugInitComplete(void)
                 ; 0001 00A3 {
                 _showDebugInitComplete:
                 ; 0001 00A4     struct rtc_structure time;
                 ; 0001 00A5     struct prop_cnfg_st properties_config;
                 ; 0001 00A6 
                 ; 0001 00A7     printDebug("Initial Device Completed at - ");
003b93 97ef      	SBIW R28,63
003b94 97ef      	SBIW R28,63
003b95 97ed      	SBIW R28,61
                 ;	time -> Y+161
                 ;	properties_config -> Y+0
                +
003b96 e3eb     +LDI R30 , LOW ( 2 * _0x20000 + ( 165 ) )
003b97 e0fe     +LDI R31 , HIGH ( 2 * _0x20000 + ( 165 ) )
003b98 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 165 ) )
003b99 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 165 ) )
                 	__POINTD1FN _0x20000,165
003b9a 940e 9f66 	CALL SUBOPT_0x2
                 ; 0001 00A8     RTC_getDateTime(&time,properties_config.timeZone);
003b9c 01fe      	MOVW R30,R28
003b9d 55ef      	SUBI R30,LOW(-(161))
003b9e 4fff      	SBCI R31,HIGH(-(161))
003b9f 93fa      	ST   -Y,R31
003ba0 93ea      	ST   -Y,R30
003ba1 01de      	MOVW R26,R28
003ba2 55ae      	SUBI R26,LOW(-162)
003ba3 4fbf      	SBCI R27,HIGH(-162)
003ba4 91ec      	LD   R30,X
003ba5 e0f0      	LDI  R31,0
003ba6 fde7      	SBRC R30,7
003ba7 efff      	SER  R31
003ba8 01df      	MOVW R26,R30
003ba9 940e 440f 	CALL _RTC_getDateTime
                 ; 0001 00A9     printDebug("%04d-%02d-%02d %02d:%02d:%02d\r\n",
                 ; 0001 00AA             time.year,time.month,time.date,time.hour,time.min,time.sec);
                +
003bab e5ea     +LDI R30 , LOW ( 2 * _0x20000 + ( 196 ) )
003bac e0fe     +LDI R31 , HIGH ( 2 * _0x20000 + ( 196 ) )
003bad e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 196 ) )
003bae e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 196 ) )
                 	__POINTD1FN _0x20000,196
003baf 940e b62a 	CALL __PUTPARD1
                +
003bb1 01fe     +MOVW R30 , R28
003bb2 55eb     +SUBI R30 , LOW ( - 165 )
003bb3 4fff     +SBCI R31 , HIGH ( - 165 )
003bb4 9001     +LD R0 , Z +
003bb5 9011     +LD R1 , Z +
003bb6 9161     +LD R22 , Z +
003bb7 8170     +LD R23 , Z
003bb8 01f0     +MOVW R30 , R0
                 	__GETD1SX 165
003bb9 940e b62a 	CALL __PUTPARD1
003bbb 01fe      	MOVW R30,R28
003bbc 55e7      	SUBI R30,LOW(-(169))
003bbd 4fff      	SBCI R31,HIGH(-(169))
003bbe 9634      	ADIW R30,4
003bbf 940e a24d 	CALL SUBOPT_0x6A
003bc1 01fe      	MOVW R30,R28
003bc2 55e3      	SUBI R30,LOW(-(173))
003bc3 4fff      	SBCI R31,HIGH(-(173))
003bc4 9638      	ADIW R30,8
003bc5 940e a24d 	CALL SUBOPT_0x6A
003bc7 01fe      	MOVW R30,R28
003bc8 54ef      	SUBI R30,LOW(-(177))
003bc9 4fff      	SBCI R31,HIGH(-(177))
003bca 963c      	ADIW R30,12
003bcb 940e a24d 	CALL SUBOPT_0x6A
003bcd 01fe      	MOVW R30,R28
003bce 54eb      	SUBI R30,LOW(-(181))
003bcf 4fff      	SBCI R31,HIGH(-(181))
003bd0 9670      	ADIW R30,16
003bd1 940e a24d 	CALL SUBOPT_0x6A
003bd3 01fe      	MOVW R30,R28
003bd4 54e7      	SUBI R30,LOW(-(185))
003bd5 4fff      	SBCI R31,HIGH(-(185))
003bd6 9674      	ADIW R30,20
003bd7 940e a24d 	CALL SUBOPT_0x6A
003bd9 e188      	LDI  R24,24
003bda 940e 7ca0 	CALL _printDebug
003bdc 966c      	ADIW R28,28
                 ; 0001 00AB }
003bdd 96ef      	ADIW R28,63
003bde 96ef      	ADIW R28,63
003bdf 96ed      	ADIW R28,61
003be0 9508      	RET
                 ;/*============================================================*/
                 ;void showLedInitComplete(void)
                 ; 0001 00AE {
                 _showLedInitComplete:
                 ; 0001 00AF     LED_ON(BIT_LED_ALARM);
003be1 91e0 0102 	LDS  R30,258
003be3 7bef      	ANDI R30,0xBF
003be4 940e a253 	CALL SUBOPT_0x6B
                 ; 0001 00B0     delay_ms(200);
                 ; 0001 00B1 
                 ; 0001 00B2     LED_ON(BIT_LED_LINK);
003be6 7def      	ANDI R30,0xDF
003be7 940e a253 	CALL SUBOPT_0x6B
                 ; 0001 00B3     delay_ms(200);
                 ; 0001 00B4 
                 ; 0001 00B5     LED_ON(BIT_LED_TEMP);
003be9 7eef      	ANDI R30,0xEF
003bea 940e a253 	CALL SUBOPT_0x6B
                 ; 0001 00B6     delay_ms(200);
                 ; 0001 00B7 
                 ; 0001 00B8     LED_ON(BIT_LED_PWR);
003bec 7fe7      	ANDI R30,0XF7
003bed 940e a253 	CALL SUBOPT_0x6B
                 ; 0001 00B9     delay_ms(200);
                 ; 0001 00BA 
                 ; 0001 00BB     LED_OFF(BIT_LED_PWR|BIT_LED_TEMP|BIT_LED_LINK|BIT_LED_ALARM);
003bef 67e8      	ORI  R30,LOW(0x78)
003bf0 940e a253 	CALL SUBOPT_0x6B
                 ; 0001 00BC     delay_ms(200);
                 ; 0001 00BD 
                 ; 0001 00BE     LED_ON(BIT_LED_PWR);
003bf2 7fe7      	ANDI R30,0XF7
003bf3 93e0 0102 	STS  258,R30
                 ; 0001 00BF     delay_ms(50);
003bf5 940e a25c 	CALL SUBOPT_0x6C
003bf7 940e b2e6 	CALL _delay_ms
                 ; 0001 00C0 }
003bf9 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <ctype.h>
                 ;#include <delay.h>
                 ;#include "uart.h"
                 ;#include "io.h"
                 ;#include "ethcomm.h"
                 ;
                 ;/*============================================================*/
                 ;char flag_PackageTerminate3 = 0;
                 ;
                 ;flash unsigned char charHeader = '$';
                 ;flash unsigned char charTerminate = '#';
                 ;
                 ;bit                 flag_oled_ack      = 0;
                 ;
                 ;unsigned char       rxPackageIndex3;
                 ;unsigned char       rxPackage3[64];
                 ;unsigned char       rxPackageIndexCount3;
                 ;/*============================================================*/
                 ;// USART0 Receiver buffer
                 ;char rx_buffer0[RX_BUFFER_SIZE0];
                 ;
                 ;unsigned int rx_wr_index0,rx_rd_index0,rx_counter0;
                 ;
                 ;// This flag is set on USART0 Receiver buffer overflow
                 ;bit rx_buffer_overflow0;
                 ;
                 ;unsigned char       configRd[CONF_READ_BUFFER];      // for reading config
                 ;int                 configLen=0;
                 ;
                 ;char                config_start    = 0;
                 ;char                config_ready    = 0;    // 1 = failed, 2 = success
                 ;char                config_end      = 0;
                 ;char                config_response = 0;
                 ;
                 ;// USART0 Receiver interrupt service routine
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void)
                 ; 0002 0028 {
                 
                 	.CSEG
                 _usart0_rx_isr:
003bfa 940e a25f 	CALL SUBOPT_0x6D
                 ; 0002 0029     char status,data;
                 ; 0002 002A     status=UCSR0A;
                 ;	status -> R17
                 ;	data -> R16
003bfc 9110 00c0 	LDS  R17,192
                 ; 0002 002B     data=UDR0;
003bfe 9100 00c6 	LDS  R16,198
                 ; 0002 002C 
                 ; 0002 002D     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
003c00 2fe1      	MOV  R30,R17
003c01 71ec      	ANDI R30,LOW(0x1C)
003c02 f011      	BREQ PC+3
003c03 940c 3cb3 	JMP _0x40003
                 ; 0002 002E     {
                 ; 0002 002F         if(ETH_current_mode != MODE_CONF)
003c05 91e0 1420 	LDS  R30,_ETH_current_mode
003c07 30e0      	CPI  R30,0
003c08 f199      	BREQ _0x40004
                 ; 0002 0030         {
                 ; 0002 0031             //putchar3(data);
                 ; 0002 0032             rx_buffer0[rx_wr_index0++]  =   data;
003c09 eaa3      	LDI  R26,LOW(_rx_wr_index0)
003c0a e0bf      	LDI  R27,HIGH(_rx_wr_index0)
003c0b 940e a273 	CALL SUBOPT_0x6E
003c0d 9731      	SBIW R30,1
003c0e 55e1      	SUBI R30,LOW(-_rx_buffer0)
003c0f 4ff2      	SBCI R31,HIGH(-_rx_buffer0)
003c10 8300      	ST   Z,R16
                 ; 0002 0033 
                 ; 0002 0034             if (rx_wr_index0 == RX_BUFFER_SIZE0)
003c11 91a0 0fa3 	LDS  R26,_rx_wr_index0
003c13 91b0 0fa4 	LDS  R27,_rx_wr_index0+1
003c15 3fa4      	CPI  R26,LOW(0x1F4)
003c16 e0e1      	LDI  R30,HIGH(0x1F4)
003c17 07be      	CPC  R27,R30
003c18 f429      	BRNE _0x40005
                 ; 0002 0035             {
                 ; 0002 0036                 rx_wr_index0=0;
003c19 e0e0      	LDI  R30,LOW(0)
003c1a 93e0 0fa3 	STS  _rx_wr_index0,R30
003c1c 93e0 0fa4 	STS  _rx_wr_index0+1,R30
                 ; 0002 0037             }
                 ; 0002 0038             if (++rx_counter0 == RX_BUFFER_SIZE0)
                 _0x40005:
003c1e eaa7      	LDI  R26,LOW(_rx_counter0)
003c1f e0bf      	LDI  R27,HIGH(_rx_counter0)
003c20 940e a273 	CALL SUBOPT_0x6E
003c22 3fe4      	CPI  R30,LOW(0x1F4)
003c23 e0a1      	LDI  R26,HIGH(0x1F4)
003c24 07fa      	CPC  R31,R26
003c25 f4a9      	BRNE _0x40006
                 ; 0002 0039             {
                 ; 0002 003A                 rx_counter0=0;
003c26 e0e0      	LDI  R30,LOW(0)
003c27 93e0 0fa7 	STS  _rx_counter0,R30
003c29 93e0 0fa8 	STS  _rx_counter0+1,R30
                 ; 0002 003B                 rx_buffer_overflow0=1;
003c2b 9af1      	SBI  0x1E,1
                 ; 0002 003C                 send_uart(3,"\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n" );
003c2c e0e3      	LDI  R30,LOW(3)
003c2d 93ea      	ST   -Y,R30
                +
003c2e efa0     +LDI R26 , LOW ( _0x40009 + ( 0 ) )
003c2f e0bc     +LDI R27 , HIGH ( _0x40009 + ( 0 ) )
                 	__POINTW2MN _0x40009,0
003c30 d15e      	RCALL _send_uart
                 ; 0002 003D                 send_uart(3,    "!!!!!!! Eth Buffer Overflow !!!!!!!!!"     );
003c31 e0e3      	LDI  R30,LOW(3)
003c32 93ea      	ST   -Y,R30
                +
003c33 e1ab     +LDI R26 , LOW ( _0x40009 + ( 43 ) )
003c34 e0bd     +LDI R27 , HIGH ( _0x40009 + ( 43 ) )
                 	__POINTW2MN _0x40009,43
003c35 d159      	RCALL _send_uart
                 ; 0002 003E                 send_uart(3,"\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n" );
003c36 e0e3      	LDI  R30,LOW(3)
003c37 93ea      	ST   -Y,R30
                +
003c38 e4a1     +LDI R26 , LOW ( _0x40009 + ( 81 ) )
003c39 e0bd     +LDI R27 , HIGH ( _0x40009 + ( 81 ) )
                 	__POINTW2MN _0x40009,81
003c3a d154      	RCALL _send_uart
                 ; 0002 003F             }
                 ; 0002 0040         }
                 _0x40006:
                 ; 0002 0041         else{
003c3b c077      	RJMP _0x4000A
                 _0x40004:
                 ; 0002 0042             putchar3(data);
003c3c 2fa0      	MOV  R26,R16
003c3d d147      	RCALL _putchar3
                 ; 0002 0043 
                 ; 0002 0044             if (configLen == CONF_READ_BUFFER)
003c3e 91a0 10ee 	LDS  R26,_configLen
003c40 91b0 10ef 	LDS  R27,_configLen+1
003c42 34a5      	CPI  R26,LOW(0x145)
003c43 e0e1      	LDI  R30,HIGH(0x145)
003c44 07be      	CPC  R27,R30
003c45 f429      	BRNE _0x4000B
                 ; 0002 0045             {
                 ; 0002 0046                 configLen=0;
003c46 e0e0      	LDI  R30,LOW(0)
003c47 93e0 10ee 	STS  _configLen,R30
003c49 93e0 10ef 	STS  _configLen+1,R30
                 ; 0002 0047             }
                 ; 0002 0048 
                 ; 0002 0049             if((data == '<') && (config_start == 0)){
                 _0x4000B:
003c4b 330c      	CPI  R16,60
003c4c f421      	BRNE _0x4000D
003c4d 91a0 10f0 	LDS  R26,_config_start
003c4f 30a0      	CPI  R26,LOW(0x0)
003c50 f009      	BREQ _0x4000E
                 _0x4000D:
003c51 c009      	RJMP _0x4000C
                 _0x4000E:
                 ; 0002 004A                 config_start            = 1;
003c52 e0e1      	LDI  R30,LOW(1)
003c53 93e0 10f0 	STS  _config_start,R30
                 ; 0002 004B                 config_response         = 0;
003c55 e0e0      	LDI  R30,LOW(0)
003c56 93e0 10f3 	STS  _config_response,R30
                 ; 0002 004C                 config_ready            = 0;
003c58 93e0 10f1 	STS  _config_ready,R30
                 ; 0002 004D             }
                 ; 0002 004E             else if((data == 0x0D) && (config_end == 0) && (config_start == 1) && (config_response != 0)){
003c5a c058      	RJMP _0x4000F
                 _0x4000C:
003c5b 300d      	CPI  R16,13
003c5c f461      	BRNE _0x40011
003c5d 91a0 10f2 	LDS  R26,_config_end
003c5f 30a0      	CPI  R26,LOW(0x0)
003c60 f441      	BRNE _0x40011
003c61 91a0 10f0 	LDS  R26,_config_start
003c63 30a1      	CPI  R26,LOW(0x1)
003c64 f421      	BRNE _0x40011
003c65 91a0 10f3 	LDS  R26,_config_response
003c67 30a0      	CPI  R26,LOW(0x0)
003c68 f409      	BRNE _0x40012
                 _0x40011:
003c69 c004      	RJMP _0x40010
                 _0x40012:
                 ; 0002 004F                 config_end  = 0x0D;
003c6a e0ed      	LDI  R30,LOW(13)
003c6b 93e0 10f2 	STS  _config_end,R30
                 ; 0002 0050             }
                 ; 0002 0051             else if((data == 0x0A) && (config_end == 0x0D) && (config_start == 1) && (config_response != 0)){
003c6d c045      	RJMP _0x40013
                 _0x40010:
003c6e 300a      	CPI  R16,10
003c6f f461      	BRNE _0x40015
003c70 91a0 10f2 	LDS  R26,_config_end
003c72 30ad      	CPI  R26,LOW(0xD)
003c73 f441      	BRNE _0x40015
003c74 91a0 10f0 	LDS  R26,_config_start
003c76 30a1      	CPI  R26,LOW(0x1)
003c77 f421      	BRNE _0x40015
003c78 91a0 10f3 	LDS  R26,_config_response
003c7a 30a0      	CPI  R26,LOW(0x0)
003c7b f409      	BRNE _0x40016
                 _0x40015:
003c7c c007      	RJMP _0x40014
                 _0x40016:
                 ; 0002 0052                 config_end              = 0x0A;
003c7d e0ea      	LDI  R30,LOW(10)
003c7e 93e0 10f2 	STS  _config_end,R30
                 ; 0002 0053                 config_ready            = 1;
003c80 e0e1      	LDI  R30,LOW(1)
003c81 93e0 10f1 	STS  _config_ready,R30
                 ; 0002 0054             }
                 ; 0002 0055             else if((data == 'E') && (config_start == 1) && (config_response == 0)){
003c83 c02f      	RJMP _0x40017
                 _0x40014:
003c84 3405      	CPI  R16,69
003c85 f441      	BRNE _0x40019
003c86 91a0 10f0 	LDS  R26,_config_start
003c88 30a1      	CPI  R26,LOW(0x1)
003c89 f421      	BRNE _0x40019
003c8a 91a0 10f3 	LDS  R26,_config_response
003c8c 30a0      	CPI  R26,LOW(0x0)
003c8d f009      	BREQ _0x4001A
                 _0x40019:
003c8e c004      	RJMP _0x40018
                 _0x4001A:
                 ; 0002 0056                 config_response         = 'E';
003c8f e4e5      	LDI  R30,LOW(69)
003c90 93e0 10f3 	STS  _config_response,R30
                 ; 0002 0057             }
                 ; 0002 0058             else if((data == 'S') && (config_start == 1) && (config_response == 0)){
003c92 c020      	RJMP _0x4001B
                 _0x40018:
003c93 3503      	CPI  R16,83
003c94 f441      	BRNE _0x4001D
003c95 91a0 10f0 	LDS  R26,_config_start
003c97 30a1      	CPI  R26,LOW(0x1)
003c98 f421      	BRNE _0x4001D
003c99 91a0 10f3 	LDS  R26,_config_response
003c9b 30a0      	CPI  R26,LOW(0x0)
003c9c f009      	BREQ _0x4001E
                 _0x4001D:
003c9d c004      	RJMP _0x4001C
                 _0x4001E:
                 ; 0002 0059                 config_response         = 'S';
003c9e e5e3      	LDI  R30,LOW(83)
003c9f 93e0 10f3 	STS  _config_response,R30
                 ; 0002 005A             }
                 ; 0002 005B             else if((config_start == 1) && (config_response != 0)){
003ca1 c011      	RJMP _0x4001F
                 _0x4001C:
003ca2 91a0 10f0 	LDS  R26,_config_start
003ca4 30a1      	CPI  R26,LOW(0x1)
003ca5 f421      	BRNE _0x40021
003ca6 91a0 10f3 	LDS  R26,_config_response
003ca8 30a0      	CPI  R26,LOW(0x0)
003ca9 f409      	BRNE _0x40022
                 _0x40021:
003caa c008      	RJMP _0x40020
                 _0x40022:
                 ; 0002 005C                 configRd[configLen++]   =   data;
003cab eeae      	LDI  R26,LOW(_configLen)
003cac e1b0      	LDI  R27,HIGH(_configLen)
003cad 940e a273 	CALL SUBOPT_0x6E
003caf 9731      	SBIW R30,1
003cb0 55e7      	SUBI R30,LOW(-_configRd)
003cb1 4ff0      	SBCI R31,HIGH(-_configRd)
003cb2 8300      	ST   Z,R16
                 ; 0002 005D             }
                 ; 0002 005E         }
                 _0x40020:
                 _0x4001F:
                 _0x4001B:
                 _0x40017:
                 _0x40013:
                 _0x4000F:
                 _0x4000A:
                 ; 0002 005F     }
                 ; 0002 0060 }
                 _0x40003:
003cb3 c0bd      	RJMP _0x40053
                 
                 	.DSEG
                 _0x40009:
000cf0           	.BYTE 0x7C
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Get a character from the USART0 Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;
                 ;#pragma used+
                 ;char getchar(void)
                 ; 0002 0068 {
                 
                 	.CSEG
                 ; 0002 0069     char data;
                 ; 0002 006A     while (rx_counter0==0);
                 ;	data -> R17
                 ; 0002 006B     data=rx_buffer0[rx_rd_index0++];
                 ; 0002 006C  //   #if RX_BUFFER_SIZE0 != 256
                 ; 0002 006D     if (rx_rd_index0 == RX_BUFFER_SIZE0)
                 ; 0002 006E         rx_rd_index0=0;
                 ; 0002 006F //    #endif
                 ; 0002 0070     #asm("cli")
                 ; 0002 0071     --rx_counter0;
                 ; 0002 0072     #asm("sei")
                 ; 0002 0073     return data;
                 ; 0002 0074 }
                 ;#pragma used-
                 ;// Write a character to the USART0 Transmitter
                 ;#pragma used+
                 ;void putchar0(char c)
                 ; 0002 0079 {
                 _putchar0:
                 ; 0002 007A     while ((UCSR0A & DATA_REGISTER_EMPTY)==0);
003cb4 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40027:
003cb5 91e0 00c0 	LDS  R30,192
003cb7 72e0      	ANDI R30,LOW(0x20)
003cb8 f3e1      	BREQ _0x40027
                 ; 0002 007B     UDR0=c;
003cb9 81e8      	LD   R30,Y
003cba 93e0 00c6 	STS  198,R30
                 ; 0002 007C }
003cbc c0d0      	RJMP _0x20E0084
                 ;#pragma used-
                 ;#endif
                 ;
                 ;int read_uart0(char *readbuf, int maxread,int interchar)
                 ; 0002 0081 {
                 _read_uart0:
                 ; 0002 0082     char data;
                 ; 0002 0083     int len=0;
                 ; 0002 0084 
                 ; 0002 0085     while (rx_counter0 > 0)
003cbd 940e a279 	CALL SUBOPT_0x6F
                 ;	*readbuf -> Y+8
                 ;	maxread -> Y+6
                 ;	interchar -> Y+4
                 ;	data -> R17
                 ;	len -> R18,R19
                +
003cbf e020     +LDI R18 , LOW ( 0 )
003cc0 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x4002A:
003cc1 91a0 0fa7 	LDS  R26,_rx_counter0
003cc3 91b0 0fa8 	LDS  R27,_rx_counter0+1
003cc5 940e b682 	CALL __CPW02
003cc7 f010      	BRLO PC+3
003cc8 940c 3d0a 	JMP _0x4002C
                 ; 0002 0086     {
                 ; 0002 0087         data=rx_buffer0[rx_rd_index0++];
003cca eaa5      	LDI  R26,LOW(_rx_rd_index0)
003ccb e0bf      	LDI  R27,HIGH(_rx_rd_index0)
003ccc 940e a273 	CALL SUBOPT_0x6E
003cce 9731      	SBIW R30,1
003ccf 55e1      	SUBI R30,LOW(-_rx_buffer0)
003cd0 4ff2      	SBCI R31,HIGH(-_rx_buffer0)
003cd1 8110      	LD   R17,Z
                 ; 0002 0088         if (rx_rd_index0 == RX_BUFFER_SIZE0){
003cd2 91a0 0fa5 	LDS  R26,_rx_rd_index0
003cd4 91b0 0fa6 	LDS  R27,_rx_rd_index0+1
003cd6 3fa4      	CPI  R26,LOW(0x1F4)
003cd7 e0e1      	LDI  R30,HIGH(0x1F4)
003cd8 07be      	CPC  R27,R30
003cd9 f429      	BRNE _0x4002D
                 ; 0002 0089             rx_rd_index0=0;
003cda e0e0      	LDI  R30,LOW(0)
003cdb 93e0 0fa5 	STS  _rx_rd_index0,R30
003cdd 93e0 0fa6 	STS  _rx_rd_index0+1,R30
                 ; 0002 008A         }
                 ; 0002 008B         UCSR0B &= 0x7F;          // -- disable uart0 interrupt -- //
                 _0x4002D:
003cdf 91e0 00c1 	LDS  R30,193
003ce1 77ef      	ANDI R30,0x7F
003ce2 93e0 00c1 	STS  193,R30
                 ; 0002 008C 
                 ; 0002 008D         --rx_counter0;
003ce4 eaa7      	LDI  R26,LOW(_rx_counter0)
003ce5 e0bf      	LDI  R27,HIGH(_rx_counter0)
003ce6 91ed      	LD   R30,X+
003ce7 91fd      	LD   R31,X+
003ce8 9731      	SBIW R30,1
003ce9 93fe      	ST   -X,R31
003cea 93ee      	ST   -X,R30
                 ; 0002 008E 
                 ; 0002 008F         UCSR0B |= 0x80;          // -- enable uart0 interrupt -- //
003ceb 91e0 00c1 	LDS  R30,193
003ced 68e0      	ORI  R30,0x80
003cee 93e0 00c1 	STS  193,R30
                 ; 0002 0090 
                 ; 0002 0091         memcpy(readbuf++,&data,1);
003cf0 940e a27e 	CALL SUBOPT_0x70
003cf2 93fa      	ST   -Y,R31
003cf3 93ea      	ST   -Y,R30
003cf4 b7ed      	IN   R30,SPL
003cf5 b7fe      	IN   R31,SPH
003cf6 93fa      	ST   -Y,R31
003cf7 93ea      	ST   -Y,R30
003cf8 931f      	PUSH R17
003cf9 940e a244 	CALL SUBOPT_0x67
003cfb 940e 848f 	CALL _memcpy
003cfd 911f      	POP  R17
                 ; 0002 0092         len++;
                +
003cfe 5f2f     +SUBI R18 , LOW ( - 1 )
003cff 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0002 0093 
                 ; 0002 0094         if(len == maxread){
003d00 81ee      	LDD  R30,Y+6
003d01 81ff      	LDD  R31,Y+6+1
003d02 17e2      	CP   R30,R18
003d03 07f3      	CPC  R31,R19
003d04 f029      	BREQ _0x4002C
                 ; 0002 0095             break;
                 ; 0002 0096         }
                 ; 0002 0097         delay_ms(interchar);
003d05 81ac      	LDD  R26,Y+4
003d06 81bd      	LDD  R27,Y+4+1
003d07 940e b2e6 	CALL _delay_ms
                 ; 0002 0098     }
003d09 cfb7      	RJMP _0x4002A
                 _0x4002C:
                 ; 0002 0099     return len;
003d0a 01f9      	MOVW R30,R18
003d0b 940e b6a3 	CALL __LOADLOCR4
003d0d c14a      	RJMP _0x20E0083
                 ; 0002 009A }
                 ;
                 ;int write_uart0(char writebuf[], int len)
                 ; 0002 009D {
                 _write_uart0:
                 ; 0002 009E     int i;
                 ; 0002 009F     for(i=0;i<len;i++){
003d0e 940e a285 	CALL SUBOPT_0x71
                 ;	writebuf -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
003d10 e000     +LDI R16 , LOW ( 0 )
003d11 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x40030:
003d12 81ea      	LDD  R30,Y+2
003d13 81fb      	LDD  R31,Y+2+1
003d14 170e      	CP   R16,R30
003d15 071f      	CPC  R17,R31
003d16 f454      	BRGE _0x40031
                 ; 0002 00A0         putchar0(writebuf[i]);
003d17 01f8      	MOVW R30,R16
003d18 81ac      	LDD  R26,Y+4
003d19 81bd      	LDD  R27,Y+4+1
003d1a 0fae      	ADD  R26,R30
003d1b 1fbf      	ADC  R27,R31
003d1c 91ac      	LD   R26,X
003d1d df96      	RCALL _putchar0
                 ; 0002 00A1     }
                +
003d1e 5f0f     +SUBI R16 , LOW ( - 1 )
003d1f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
003d20 cff1      	RJMP _0x40030
                 _0x40031:
                 ; 0002 00A2     return i;
003d21 01f8      	MOVW R30,R16
003d22 8119      	LDD  R17,Y+1
003d23 8108      	LDD  R16,Y+0
003d24 9626      	ADIW R28,6
003d25 9508      	RET
                 ; 0002 00A3 }
                 ;/*============================================================*/
                 ;// USART1 Receiver interrupt service routine
                 ;interrupt [USART1_RXC] void usart1_rx_isr(void)
                 ; 0002 00A7 {
                 _usart1_rx_isr:
003d26 93ea      	ST   -Y,R30
003d27 b7ef      	IN   R30,SREG
003d28 93ea      	ST   -Y,R30
                 ; 0002 00A8     char status,data;
                 ; 0002 00A9     status=UCSR1A;
003d29 931a      	ST   -Y,R17
003d2a 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
003d2b 9110 00c8 	LDS  R17,200
                 ; 0002 00AA     data=UDR1;
003d2d 9100 00ce 	LDS  R16,206
                 ; 0002 00AB 
                 ; 0002 00AC     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
003d2f 2fe1      	MOV  R30,R17
003d30 71ec      	ANDI R30,LOW(0x1C)
                 ; 0002 00AD     {
                 ; 0002 00AE         if(data);
                 ; 0002 00AF     }
                 ; 0002 00B0 }
003d31 c00f      	RJMP _0x40054
                 ;
                 ;/*============================================================*/
                 ;// USART2 Receiver interrupt service routine
                 ;interrupt [USART2_RXC] void usart2_rx_isr(void)
                 ; 0002 00B5 {
                 _usart2_rx_isr:
003d32 93ea      	ST   -Y,R30
003d33 b7ef      	IN   R30,SREG
003d34 93ea      	ST   -Y,R30
                 ; 0002 00B6     char status,data;
                 ; 0002 00B7     status=UCSR2A;
003d35 931a      	ST   -Y,R17
003d36 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
003d37 9110 00d0 	LDS  R17,208
                 ; 0002 00B8     data=UDR2;
003d39 9100 00d6 	LDS  R16,214
                 ; 0002 00B9     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
003d3b 2fe1      	MOV  R30,R17
003d3c 71ec      	ANDI R30,LOW(0x1C)
003d3d f419      	BRNE _0x40034
                 ; 0002 00BA     {
                 ; 0002 00BB         if(data=='K'){
003d3e 340b      	CPI  R16,75
003d3f f409      	BRNE _0x40035
                 ; 0002 00BC             flag_oled_ack = 1;
003d40 9af0      	SBI  0x1E,0
                 ; 0002 00BD         }
                 ; 0002 00BE         else{
                 _0x40035:
                 ; 0002 00BF             //putchar3(data);
                 ; 0002 00C0         }
                 ; 0002 00C1     }
                 ; 0002 00C2 }
                 _0x40034:
                 _0x40054:
003d41 9109      	LD   R16,Y+
003d42 9119      	LD   R17,Y+
003d43 91e9      	LD   R30,Y+
003d44 bfef      	OUT  SREG,R30
003d45 91e9      	LD   R30,Y+
003d46 9518      	RETI
                 ;
                 ;// Write a character to the USART2 Transmitter
                 ;#pragma used+
                 ;void putchar2(char c)
                 ; 0002 00C7 {
                 _putchar2:
                 ; 0002 00C8     while ((UCSR2A & DATA_REGISTER_EMPTY)==0);
003d47 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40039:
003d48 91e0 00d0 	LDS  R30,208
003d4a 72e0      	ANDI R30,LOW(0x20)
003d4b f3e1      	BREQ _0x40039
                 ; 0002 00C9     UDR2=c;
003d4c 81e8      	LD   R30,Y
003d4d 93e0 00d6 	STS  214,R30
                 ; 0002 00CA }
003d4f c03d      	RJMP _0x20E0084
                 ;#pragma used-
                 ;
                 ;
                 ;/*============================================================*/
                 ;// USART3 Receiver interrupt service routine
                 ;interrupt [USART3_RXC] void usart3_rx_isr(void)
                 ; 0002 00D1 {
                 _usart3_rx_isr:
003d50 940e a25f 	CALL SUBOPT_0x6D
                 ; 0002 00D2     char status,data;
                 ; 0002 00D3     status=UCSR3A;
                 ;	status -> R17
                 ;	data -> R16
003d52 9110 0130 	LDS  R17,304
                 ; 0002 00D4     data=UDR3;
003d54 9100 0136 	LDS  R16,310
                 ; 0002 00D5     //putchar3(data);
                 ; 0002 00D6     //putchar0(data);
                 ; 0002 00D7     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
003d56 2fe1      	MOV  R30,R17
003d57 71ec      	ANDI R30,LOW(0x1C)
003d58 f4c1      	BRNE _0x4003C
                 ; 0002 00D8     {
                 ; 0002 00D9         putchar3(data);
003d59 2fa0      	MOV  R26,R16
003d5a d02a      	RCALL _putchar3
                 ; 0002 00DA //        putchar0(data);
                 ; 0002 00DB         // Detect Package Header
                 ; 0002 00DC         if(data == charHeader)
003d5b 3204      	CPI  R16,36
003d5c f409      	BRNE _0x4003D
                 ; 0002 00DD         {
                 ; 0002 00DE             rxPackageIndex3 = 0;
003d5d 2455      	CLR  R5
                 ; 0002 00DF         }
                 ; 0002 00E0 
                 ; 0002 00E1         rxPackage3[rxPackageIndex3++] = data;
                 _0x4003D:
003d5e 2de5      	MOV  R30,R5
003d5f 9453      	INC  R5
003d60 e0f0      	LDI  R31,0
003d61 59e1      	SUBI R30,LOW(-_rxPackage3)
003d62 4ff2      	SBCI R31,HIGH(-_rxPackage3)
003d63 8300      	ST   Z,R16
                 ; 0002 00E2 
                 ; 0002 00E3         if(rxPackageIndex3 >= 64) rxPackageIndex3 = 0;
003d64 e4e0      	LDI  R30,LOW(64)
003d65 165e      	CP   R5,R30
003d66 f008      	BRLO _0x4003E
003d67 2455      	CLR  R5
                 ; 0002 00E4 
                 ; 0002 00E5         if(data == charTerminate)
                 _0x4003E:
003d68 3203      	CPI  R16,35
003d69 f439      	BRNE _0x4003F
                 ; 0002 00E6         {
                 ; 0002 00E7             rxPackageIndexCount3 = rxPackageIndex3-1;
003d6a 2de5      	MOV  R30,R5
003d6b 50e1      	SUBI R30,LOW(1)
003d6c 2e4e      	MOV  R4,R30
                 ; 0002 00E8             rxPackageIndex3 = 0;
003d6d 2455      	CLR  R5
                 ; 0002 00E9             flag_PackageTerminate3 = 1;
003d6e e0e1      	LDI  R30,LOW(1)
003d6f 93e0 0d6e 	STS  _flag_PackageTerminate3,R30
                 ; 0002 00EA         }
                 ; 0002 00EB     }
                 _0x4003F:
                 ; 0002 00EC }
                 _0x4003C:
                 _0x40053:
003d71 9109      	LD   R16,Y+
003d72 9119      	LD   R17,Y+
003d73 91e9      	LD   R30,Y+
003d74 bfef      	OUT  SREG,R30
003d75 91e9      	LD   R30,Y+
003d76 bfec      	OUT  EIND,R30
003d77 91e9      	LD   R30,Y+
003d78 bfeb      	OUT  RAMPZ,R30
003d79 91f9      	LD   R31,Y+
003d7a 91e9      	LD   R30,Y+
003d7b 91b9      	LD   R27,Y+
003d7c 91a9      	LD   R26,Y+
003d7d 9199      	LD   R25,Y+
003d7e 9189      	LD   R24,Y+
003d7f 9179      	LD   R23,Y+
003d80 9169      	LD   R22,Y+
003d81 90f9      	LD   R15,Y+
003d82 9019      	LD   R1,Y+
003d83 9009      	LD   R0,Y+
003d84 9518      	RETI
                 ;
                 ;/*============================================================*/
                 ;// Write a character to the USART3 Transmitter
                 ;#pragma used+
                 ;void putchar3(char c)
                 ; 0002 00F2 {
                 _putchar3:
                 ; 0002 00F3     while ((UCSR3A & DATA_REGISTER_EMPTY)==0);
003d85 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40040:
003d86 91e0 0130 	LDS  R30,304
003d88 72e0      	ANDI R30,LOW(0x20)
003d89 f3e1      	BREQ _0x40040
                 ; 0002 00F4     UDR3=c;
003d8a 81e8      	LD   R30,Y
003d8b 93e0 0136 	STS  310,R30
                 ; 0002 00F5 }
                 _0x20E0084:
003d8d 9621      	ADIW R28,1
003d8e 9508      	RET
                 ;#pragma used-
                 ;
                 ;/*============================================================*/
                 ;void send_uart(char port,char *buffer)
                 ; 0002 00FA {
                 _send_uart:
                 ; 0002 00FB     char i = 0;
                 ; 0002 00FC 
                 ; 0002 00FD     switch (port)
003d8f 93ba      	ST   -Y,R27
003d90 93aa      	ST   -Y,R26
003d91 931a      	ST   -Y,R17
                 ;	port -> Y+3
                 ;	*buffer -> Y+1
                 ;	i -> R17
003d92 e010      	LDI  R17,0
003d93 81eb      	LDD  R30,Y+3
003d94 e0f0      	LDI  R31,0
                 ; 0002 00FE     {
                 ; 0002 00FF         case 0: puts(buffer);
003d95 9730      	SBIW R30,0
003d96 f429      	BRNE _0x40046
003d97 81a9      	LDD  R26,Y+1
003d98 81ba      	LDD  R27,Y+1+1
003d99 940e 9b31 	CALL _puts
                 ; 0002 0100                 break;
003d9b c023      	RJMP _0x40045
                 ; 0002 0101 
                 ; 0002 0102         case 1: while(buffer[i] != 0)
                 _0x40046:
003d9c 30e1      	CPI  R30,LOW(0x1)
003d9d e0a0      	LDI  R26,HIGH(0x1)
003d9e 07fa      	CPC  R31,R26
003d9f f431      	BRNE _0x40047
                 _0x40048:
003da0 940e a28a 	CALL SUBOPT_0x72
003da2 f011      	BREQ _0x4004A
                 ; 0002 0103                 {
                 ; 0002 0104                     //putchar1(buffer[i]);
                 ; 0002 0105                     i++;
003da3 5f1f      	SUBI R17,-1
                 ; 0002 0106                 }
003da4 cffb      	RJMP _0x40048
                 _0x4004A:
                 ; 0002 0107                 break;
003da5 c019      	RJMP _0x40045
                 ; 0002 0108 
                 ; 0002 0109         case 2: while(buffer[i] != 0)
                 _0x40047:
003da6 30e2      	CPI  R30,LOW(0x2)
003da7 e0a0      	LDI  R26,HIGH(0x2)
003da8 07fa      	CPC  R31,R26
003da9 f449      	BRNE _0x4004B
                 _0x4004C:
003daa 940e a28a 	CALL SUBOPT_0x72
003dac f029      	BREQ _0x4004E
                 ; 0002 010A                 {
                 ; 0002 010B                     putchar2(buffer[i]);
003dad 940e a292 	CALL SUBOPT_0x73
003daf df97      	RCALL _putchar2
                 ; 0002 010C                     i++;
003db0 5f1f      	SUBI R17,-1
                 ; 0002 010D                 }
003db1 cff8      	RJMP _0x4004C
                 _0x4004E:
                 ; 0002 010E                 break;
003db2 c00c      	RJMP _0x40045
                 ; 0002 010F 
                 ; 0002 0110         case 3: while(buffer[i] != 0)
                 _0x4004B:
003db3 30e3      	CPI  R30,LOW(0x3)
003db4 e0a0      	LDI  R26,HIGH(0x3)
003db5 07fa      	CPC  R31,R26
003db6 f441      	BRNE _0x40045
                 _0x40050:
003db7 940e a28a 	CALL SUBOPT_0x72
003db9 f029      	BREQ _0x40052
                 ; 0002 0111                 {
                 ; 0002 0112                     putchar3(buffer[i]);
003dba 940e a292 	CALL SUBOPT_0x73
003dbc dfc8      	RCALL _putchar3
                 ; 0002 0113                     i++;
003dbd 5f1f      	SUBI R17,-1
                 ; 0002 0114                 }
003dbe cff8      	RJMP _0x40050
                 _0x40052:
                 ; 0002 0115                 break;
                 ; 0002 0116     }
                 _0x40045:
                 ; 0002 0117 }
003dbf 8118      	LDD  R17,Y+0
003dc0 940c 404e 	JMP  _0x20E0081
                 ;
                 ;/*============================================================*/
                 ;void init_uart(void)
                 ; 0002 011B {
                 _init_uart:
                 ; 0002 011C //    // USART0 initialization
                 ; 0002 011D //    // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 011E //    // USART0 Receiver: On
                 ; 0002 011F //    // USART0 Transmitter: On
                 ; 0002 0120 //    // USART0 Mode: Asynchronous
                 ; 0002 0121 //    // USART0 Baud Rate: 38400
                 ; 0002 0122 //    UCSR0A=0x00;
                 ; 0002 0123 //    UCSR0B=0x98;
                 ; 0002 0124 //    UCSR0C=0x06;
                 ; 0002 0125 //    UBRR0H=0x00;
                 ; 0002 0126 //    UBRR0L=0x0C;
                 ; 0002 0127 
                 ; 0002 0128     // USART0 initialization
                 ; 0002 0129     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 012A     // USART0 Receiver: On
                 ; 0002 012B     // USART0 Transmitter: On
                 ; 0002 012C     // USART0 Mode: Asynchronous
                 ; 0002 012D     // USART0 Baud Rate: 9600
                 ; 0002 012E     UCSR0A=0x00;
003dc2 e0e0      	LDI  R30,LOW(0)
003dc3 93e0 00c0 	STS  192,R30
                 ; 0002 012F     UCSR0B=0x98;
003dc5 e9e8      	LDI  R30,LOW(152)
003dc6 93e0 00c1 	STS  193,R30
                 ; 0002 0130     UCSR0C=0x06;
003dc8 e0e6      	LDI  R30,LOW(6)
003dc9 93e0 00c2 	STS  194,R30
                 ; 0002 0131     UBRR0H=0x00;
003dcb e0e0      	LDI  R30,LOW(0)
003dcc 93e0 00c5 	STS  197,R30
                 ; 0002 0132     UBRR0L=0x33;
003dce e3e3      	LDI  R30,LOW(51)
003dcf 93e0 00c4 	STS  196,R30
                 ; 0002 0133 
                 ; 0002 0134     // USART1 initialization
                 ; 0002 0135     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 0136     // USART1 Receiver: On
                 ; 0002 0137     // USART1 Transmitter: On
                 ; 0002 0138     // USART1 Mode: Asynchronous
                 ; 0002 0139     // USART1 Baud Rate: 38400
                 ; 0002 013A     UCSR1A=0x00;
003dd1 e0e0      	LDI  R30,LOW(0)
003dd2 93e0 00c8 	STS  200,R30
                 ; 0002 013B     UCSR1B=0x98;
003dd4 e9e8      	LDI  R30,LOW(152)
003dd5 93e0 00c9 	STS  201,R30
                 ; 0002 013C     UCSR1C=0x06;
003dd7 e0e6      	LDI  R30,LOW(6)
003dd8 93e0 00ca 	STS  202,R30
                 ; 0002 013D     UBRR1H=0x00;
003dda e0e0      	LDI  R30,LOW(0)
003ddb 93e0 00cd 	STS  205,R30
                 ; 0002 013E     UBRR1L=0x0C;
003ddd e0ec      	LDI  R30,LOW(12)
003dde 93e0 00cc 	STS  204,R30
                 ; 0002 013F 
                 ; 0002 0140 //    // USART2 initialization
                 ; 0002 0141 //    // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 0142 //    // USART2 Receiver: On
                 ; 0002 0143 //    // USART2 Transmitter: On
                 ; 0002 0144 //    // USART2 Mode: Asynchronous
                 ; 0002 0145 //    // USART2 Baud Rate: 115200 (Double Speed Mode)
                 ; 0002 0146 //    UCSR2A=0x02;
                 ; 0002 0147 //    UCSR2B=0x98;
                 ; 0002 0148 //    UCSR2C=0x06;
                 ; 0002 0149 //    UBRR2H=0x00;
                 ; 0002 014A //    UBRR2L=0x08;
                 ; 0002 014B 
                 ; 0002 014C     // USART2 initialization
                 ; 0002 014D     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 014E     // USART2 Receiver: On
                 ; 0002 014F     // USART2 Transmitter: On
                 ; 0002 0150     // USART2 Mode: Asynchronous
                 ; 0002 0151     // USART2 Baud Rate: 38400
                 ; 0002 0152     UCSR2A=0x00;
003de0 e0e0      	LDI  R30,LOW(0)
003de1 93e0 00d0 	STS  208,R30
                 ; 0002 0153     UCSR2B=0x98;
003de3 e9e8      	LDI  R30,LOW(152)
003de4 93e0 00d1 	STS  209,R30
                 ; 0002 0154     UCSR2C=0x06;
003de6 e0e6      	LDI  R30,LOW(6)
003de7 93e0 00d2 	STS  210,R30
                 ; 0002 0155     UBRR2H=0x00;
003de9 e0e0      	LDI  R30,LOW(0)
003dea 93e0 00d5 	STS  213,R30
                 ; 0002 0156     UBRR2L=0x0C;
003dec e0ec      	LDI  R30,LOW(12)
003ded 93e0 00d4 	STS  212,R30
                 ; 0002 0157 
                 ; 0002 0158     // USART3 initialization
                 ; 0002 0159     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 015A     // USART3 Receiver: On
                 ; 0002 015B     // USART3 Transmitter: On
                 ; 0002 015C     // USART3 Mode: Asynchronous
                 ; 0002 015D     // USART3 Baud Rate: 38400
                 ; 0002 015E     UCSR3A=0x00;
003def e0e0      	LDI  R30,LOW(0)
003df0 93e0 0130 	STS  304,R30
                 ; 0002 015F     UCSR3B=0x98;
003df2 e9e8      	LDI  R30,LOW(152)
003df3 93e0 0131 	STS  305,R30
                 ; 0002 0160     UCSR3C=0x06;
003df5 e0e6      	LDI  R30,LOW(6)
003df6 93e0 0132 	STS  306,R30
                 ; 0002 0161     UBRR3H=0x00;
003df8 e0e0      	LDI  R30,LOW(0)
003df9 93e0 0135 	STS  309,R30
                 ; 0002 0162     UBRR3L=0x0C;
003dfb e0ec      	LDI  R30,LOW(12)
003dfc 93e0 0134 	STS  308,R30
                 ; 0002 0163 }
003dfe 9508      	RET
                 ;
                 ;/*============================================================*/
                 ;
                 ;#include "timer.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "adc.h"
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;#include "memcard.h"
                 ;
                 ;TIMER       baseCounter         = 0;    // -- increase continually by 1 second timer. use for timer comparison -- //
                 ;bit         timer_1sec_flag     = 0;    // -- 1 second trigger flag for main loop -- //
                 ;
                 ;bit         buzzer_on           = 0;    // -- buzzer control [0:1] => [on:off] -- //
                 ;
                 ;/**************************************************************/
                 ;/******************* Software Timer Support *******************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;TIMER TIMER_checkTimeLeft(TIMER time)
                 ; 0003 0012 {
                 
                 	.CSEG
                 ; 0003 0013     if(baseCounter < time){
                 ;	time -> Y+0
                 ; 0003 0014         return ( time - baseCounter );
                 ; 0003 0015     }
                 ; 0003 0016     else{
                 ; 0003 0017         return 0;
                 ; 0003 0018     }
                 ; 0003 0019 }
                 ;/*============================================================*/
                 ;int TIMER_checkTimerExceed(TIMER keeper)
                 ; 0003 001C {
                 _TIMER_checkTimerExceed:
                 ; 0003 001D     if(keeper == 0){
003dff 940e a299 	CALL SUBOPT_0x74
                 ;	keeper -> Y+0
003e01 f421      	BRNE _0x60005
                 ; 0003 001E         return -1;
003e02 efef      	LDI  R30,LOW(65535)
003e03 efff      	LDI  R31,HIGH(65535)
003e04 940c 404e 	JMP  _0x20E0081
                 ; 0003 001F     }
                 ; 0003 0020 
                 ; 0003 0021     if((unsigned long int)baseCounter < (unsigned long int)keeper){
                 _0x60005:
003e06 940e a2a0 	CALL SUBOPT_0x75
003e08 940e a2a3 	CALL SUBOPT_0x76
003e0a 940e b695 	CALL __CPD21
003e0c f420      	BRSH _0x60006
                 ; 0003 0022         return 0;
003e0d e0e0      	LDI  R30,LOW(0)
003e0e e0f0      	LDI  R31,HIGH(0)
003e0f 940c 404e 	JMP  _0x20E0081
                 ; 0003 0023     }
                 ; 0003 0024     else{                             // -- time exceed -- //
                 _0x60006:
                 ; 0003 0025         return 1;
003e11 e0e1      	LDI  R30,LOW(1)
003e12 e0f0      	LDI  R31,HIGH(1)
003e13 940c 404e 	JMP  _0x20E0081
                 ; 0003 0026     }
                 ; 0003 0027 }
                 ;/*============================================================*/
                 ;int TIMER_setTimer(TIMER *keeper, unsigned long int period)
                 ; 0003 002A {
                 _TIMER_setTimer:
                 ; 0003 002B     unsigned long int t;
                 ; 0003 002C 
                 ; 0003 002D     if(period == 0){
003e15 940e b62f 	CALL __PUTPARD2
003e17 9724      	SBIW R28,4
                 ;	*keeper -> Y+8
                 ;	period -> Y+4
                 ;	t -> Y+0
003e18 940e a2ac 	CALL SUBOPT_0x77
003e1a 940e b67e 	CALL __CPD10
003e1c f479      	BRNE _0x60008
                 ; 0003 002E         printDebug("<TIMER_setTimer> ERR: period = 0\r\n");
                +
003e1d ecec     +LDI R30 , LOW ( 2 * _0x60000 + ( 0 ) )
003e1e e0fe     +LDI R31 , HIGH ( 2 * _0x60000 + ( 0 ) )
003e1f e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 0 ) )
003e20 e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 0 ) )
                 	__POINTD1FN _0x60000,0
003e21 940e 9f66 	CALL SUBOPT_0x2
                 ; 0003 002F         *keeper = 0xFFFFFFFF;
003e23 85a8      	LDD  R26,Y+8
003e24 85b9      	LDD  R27,Y+8+1
003e25 940e a054 	CALL SUBOPT_0x23
003e27 940e b605 	CALL __PUTDP1
                 ; 0003 0030         return -1;
003e29 efef      	LDI  R30,LOW(65535)
003e2a efff      	LDI  R31,HIGH(65535)
003e2b c02c      	RJMP _0x20E0083
                 ; 0003 0031     }
                 ; 0003 0032 
                 ; 0003 0033     t = baseCounter + period;
                 _0x60008:
003e2c 940e a2ac 	CALL SUBOPT_0x77
003e2e 940e a2a3 	CALL SUBOPT_0x76
003e30 940e a2b1 	CALL SUBOPT_0x78
                 ; 0003 0034 
                 ; 0003 0035     *keeper = t;
003e32 940e a2a0 	CALL SUBOPT_0x75
003e34 85a8      	LDD  R26,Y+8
003e35 85b9      	LDD  R27,Y+8+1
003e36 940e b605 	CALL __PUTDP1
                 ; 0003 0036 
                 ; 0003 0037     if(t <= baseCounter){
003e38 940e a2b6 	CALL SUBOPT_0x79
003e3a 940e a2bf 	CALL SUBOPT_0x7A
003e3c 940e b690 	CALL __CPD12
003e3e f0b8      	BRLO _0x60009
                 ; 0003 0038         printDebug("<TIMER_setTimer> baseCounter[%ld] + period[%ld] = %ld OVERFLOW!!\r\n",baseCounter,period,t);
                +
003e3f eeef     +LDI R30 , LOW ( 2 * _0x60000 + ( 35 ) )
003e40 e0fe     +LDI R31 , HIGH ( 2 * _0x60000 + ( 35 ) )
003e41 e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 35 ) )
003e42 e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 35 ) )
                 	__POINTD1FN _0x60000,35
003e43 940e b62a 	CALL __PUTPARD1
003e45 940e a2b6 	CALL SUBOPT_0x79
003e47 940e a2c2 	CALL SUBOPT_0x7B
003e49 940e a2c2 	CALL SUBOPT_0x7B
003e4b 940e b62a 	CALL __PUTPARD1
003e4d 940e a1c1 	CALL SUBOPT_0x56
                 ; 0003 0039         *keeper = 0;
003e4f 85a8      	LDD  R26,Y+8
003e50 85b9      	LDD  R27,Y+8+1
003e51 940e a2c9 	CALL SUBOPT_0x7C
                 ; 0003 003A         return -1;
003e53 efef      	LDI  R30,LOW(65535)
003e54 efff      	LDI  R31,HIGH(65535)
003e55 c002      	RJMP _0x20E0083
                 ; 0003 003B     }
                 ; 0003 003C     else{
                 _0x60009:
                 ; 0003 003D         return 0;
003e56 e0e0      	LDI  R30,LOW(0)
003e57 e0f0      	LDI  R31,HIGH(0)
                 ; 0003 003E     }
                 ; 0003 003F }
                 _0x20E0083:
003e58 962a      	ADIW R28,10
003e59 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********************** Hardware Support **********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;// Watchdog timeout interrupt service routine
                 ;interrupt [WDT] void wdt_timeout_isr(void)
                 ; 0003 0048 {
                 _wdt_timeout_isr:
003e5a 940e a2d0 	CALL SUBOPT_0x7D
                 ; 0003 0049     // Place your code here
                 ; 0003 004A     printDebug("<WDT> WatchDog Timer Reset!!\r\n");
                +
003e5c e3e2     +LDI R30 , LOW ( 2 * _0x60000 + ( 102 ) )
003e5d e0ff     +LDI R31 , HIGH ( 2 * _0x60000 + ( 102 ) )
003e5e e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 102 ) )
003e5f e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 102 ) )
                 	__POINTD1FN _0x60000,102
003e60 940e 9f66 	CALL SUBOPT_0x2
                 ; 0003 004B     return;
003e62 c00f      	RJMP _0x6002A
                 ; 0003 004C }
                 ;/*============================================================*/
                 ;// Timer 0 overflow interrupt service routine
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0003 0050 {
                 _timer0_ovf_isr:
003e63 93ea      	ST   -Y,R30
                 ; 0003 0051     // Reinitialize Timer 0 value
                 ; 0003 0052     TCNT0=0x64;
003e64 e6e4      	LDI  R30,LOW(100)
003e65 bde6      	OUT  0x26,R30
                 ; 0003 0053     // Place your code here
                 ; 0003 0054 
                 ; 0003 0055 }
003e66 c04a      	RJMP _0x60029
                 ;/*============================================================*/
                 ;// Timer1 overflow interrupt service routine
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0003 0059 {
                 _timer1_ovf_isr:
003e67 93ea      	ST   -Y,R30
                 ; 0003 005A     // Reinitialize Timer1 value
                 ; 0003 005B //    TCNT1H=0xFF64 >> 8;
                 ; 0003 005C //    TCNT1L=0xFF64 & 0xff;
                 ; 0003 005D     TCNT1H=0xFE79 >> 8;
003e68 940e a2e2 	CALL SUBOPT_0x7E
                 ; 0003 005E     TCNT1L=0xFE79 & 0xff;
                 ; 0003 005F 
                 ; 0003 0060     //adc_sampling();
                 ; 0003 0061 }
003e6a c046      	RJMP _0x60029
                 ;/*============================================================*/
                 ;// Timer2 overflow interrupt service routine    (100Hz)
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0003 0065 {
                 _timer2_ovf_isr:
003e6b 940e a2d0 	CALL SUBOPT_0x7D
                 ; 0003 0066     // Reinitialize Timer2 value
                 ; 0003 0067     TCNT2=0xb2;
003e6d ebe2      	LDI  R30,LOW(178)
003e6e 93e0 00b2 	STS  178,R30
                 ; 0003 0068 
                 ; 0003 0069     /* card access low level timing function */
                 ; 0003 006A     disk_timerproc();
003e70 940e 89ca 	CALL _disk_timerproc
                 ; 0003 006B 
                 ; 0003 006C }
                 _0x6002A:
003e72 91e9      	LD   R30,Y+
003e73 bfef      	OUT  SREG,R30
003e74 91e9      	LD   R30,Y+
003e75 bfec      	OUT  EIND,R30
003e76 91e9      	LD   R30,Y+
003e77 bfeb      	OUT  RAMPZ,R30
003e78 91f9      	LD   R31,Y+
003e79 91e9      	LD   R30,Y+
003e7a 91b9      	LD   R27,Y+
003e7b 91a9      	LD   R26,Y+
003e7c 9199      	LD   R25,Y+
003e7d 9189      	LD   R24,Y+
003e7e 9179      	LD   R23,Y+
003e7f 9169      	LD   R22,Y+
003e80 90f9      	LD   R15,Y+
003e81 9019      	LD   R1,Y+
003e82 9009      	LD   R0,Y+
003e83 9518      	RETI
                 ;/*============================================================*/
                 ;// Timer1 overflow interrupt service routine  (1 second)
                 ;interrupt [TIM3_OVF] void timer3_ovf_isr(void)
                 ; 0003 0070 {
                 _timer3_ovf_isr:
003e84 936a      	ST   -Y,R22
003e85 937a      	ST   -Y,R23
003e86 93aa      	ST   -Y,R26
003e87 93ba      	ST   -Y,R27
003e88 93ea      	ST   -Y,R30
003e89 93fa      	ST   -Y,R31
003e8a b7ef      	IN   R30,SREG
003e8b 93ea      	ST   -Y,R30
                 ; 0003 0071     // Reinitialize Timer1 value
                 ; 0003 0072     TCNT3H=0x85ED >> 8;
003e8c 940e a2e9 	CALL SUBOPT_0x7F
                 ; 0003 0073     TCNT3L=0x85ED & 0xff;
                 ; 0003 0074 
                 ; 0003 0075     // Place your code here
                 ; 0003 0076     timer_1sec_flag = 1;
003e8e 9af2      	SBI  0x1E,2
                 ; 0003 0077 
                 ; 0003 0078     baseCounter++;
003e8f e7a7      	LDI  R26,LOW(_baseCounter)
003e90 e1b3      	LDI  R27,HIGH(_baseCounter)
003e91 940e a2f0 	CALL SUBOPT_0x80
                 ; 0003 0079 
                 ; 0003 007A     raw_rtc++;                          // -- update backup RTC
003e93 e3a0      	LDI  R26,LOW(_raw_rtc)
003e94 e1b4      	LDI  R27,HIGH(_raw_rtc)
003e95 940e a2f0 	CALL SUBOPT_0x80
                 ; 0003 007B 
                 ; 0003 007C     //printDebug("<%d>\r\n",baseCounter);
                 ; 0003 007D }
003e97 91e9      	LD   R30,Y+
003e98 bfef      	OUT  SREG,R30
003e99 91f9      	LD   R31,Y+
003e9a 91e9      	LD   R30,Y+
003e9b 91b9      	LD   R27,Y+
003e9c 91a9      	LD   R26,Y+
003e9d 9179      	LD   R23,Y+
003e9e 9169      	LD   R22,Y+
003e9f 9518      	RETI
                 ;/*============================================================*/
                 ;// Timer4 overflow interrupt service routine (0.5 sec)
                 ;interrupt [TIM4_OVF] void timer4_ovf_isr(void)
                 ; 0003 0081 {
                 _timer4_ovf_isr:
003ea0 93ea      	ST   -Y,R30
                 ; 0003 0082     static bit toggle = 0;
                 ; 0003 0083     // Reinitialize Timer4 value
                 ; 0003 0084     TCNT4H=0x85ED >> 8;
003ea1 940e a2f9 	CALL SUBOPT_0x81
                 ; 0003 0085     TCNT4L=0x85ED & 0xff;
                 ; 0003 0086 
                 ; 0003 0087     // Place your code here
                 ; 0003 0088     toggle = !toggle;
003ea3 9bf4      	SBIS 0x1E,4
003ea4 c002      	RJMP _0x6000D
003ea5 98f4      	CBI  0x1E,4
003ea6 c001      	RJMP _0x6000E
                 _0x6000D:
003ea7 9af4      	SBI  0x1E,4
                 _0x6000E:
                 ; 0003 0089 
                 ; 0003 008A     if(buzzer_on){
003ea8 9bf3      	SBIS 0x1E,3
003ea9 c006      	RJMP _0x6000F
                 ; 0003 008B         if(toggle)  {   BUZZER = 1; }
003eaa 9bf4      	SBIS 0x1E,4
003eab c002      	RJMP _0x60010
003eac 9a77      	SBI  0xE,7
                 ; 0003 008C         else        {   BUZZER = 0; }
003ead c001      	RJMP _0x60013
                 _0x60010:
003eae 9877      	CBI  0xE,7
                 _0x60013:
                 ; 0003 008D     }
                 ; 0003 008E     else{
003eaf c001      	RJMP _0x60016
                 _0x6000F:
                 ; 0003 008F         BUZZER = 0;
003eb0 9877      	CBI  0xE,7
                 ; 0003 0090     }
                 _0x60016:
                 ; 0003 0091 
                 ; 0003 0092 }
                 _0x60029:
003eb1 91e9      	LD   R30,Y+
003eb2 9518      	RETI
                 ;
                 ;//// Timer5 overflow interrupt service routine
                 ;//interrupt [TIM5_OVF] void timer5_ovf_isr(void)
                 ;//{
                 ;//// Place your code here
                 ;//
                 ;//}
                 ;/*============================================================*/
                 ;void init_timer(void)
                 ; 0003 009C {
                 _init_timer:
                 ; 0003 009D 
                 ; 0003 009E     // Timer/Counter 0 initialization
                 ; 0003 009F     // Clock source: System Clock
                 ; 0003 00A0     // Clock value: 7.813 kHz
                 ; 0003 00A1     // Mode: Normal top=0xFF
                 ; 0003 00A2     // OC0A output: Disconnected
                 ; 0003 00A3     // OC0B output: Disconnected
                 ; 0003 00A4     TCCR0A=0x00;
003eb3 e0e0      	LDI  R30,LOW(0)
003eb4 bde4      	OUT  0x24,R30
                 ; 0003 00A5     TCCR0B=0x05;
003eb5 e0e5      	LDI  R30,LOW(5)
003eb6 bde5      	OUT  0x25,R30
                 ; 0003 00A6     TCNT0=0x64;
003eb7 e6e4      	LDI  R30,LOW(100)
003eb8 bde6      	OUT  0x26,R30
                 ; 0003 00A7     OCR0A=0x00;
003eb9 e0e0      	LDI  R30,LOW(0)
003eba bde7      	OUT  0x27,R30
                 ; 0003 00A8     OCR0B=0x00;
003ebb bde8      	OUT  0x28,R30
                 ; 0003 00A9 
                 ; 0003 00AA     // Timer/Counter 1 initialization
                 ; 0003 00AB     // Clock source: System Clock
                 ; 0003 00AC     // Clock value: 7.813 kHz
                 ; 0003 00AD     // Mode: Normal top=0xFFFF
                 ; 0003 00AE     // OC1A output: Discon.
                 ; 0003 00AF     // OC1B output: Discon.
                 ; 0003 00B0     // OC1C output: Discon.
                 ; 0003 00B1     // Noise Canceler: Off
                 ; 0003 00B2     // Input Capture on Falling Edge
                 ; 0003 00B3     // Timer1 Overflow Interrupt: On
                 ; 0003 00B4     // Input Capture Interrupt: Off
                 ; 0003 00B5     // Compare A Match Interrupt: Off
                 ; 0003 00B6     // Compare B Match Interrupt: Off
                 ; 0003 00B7     // Compare C Match Interrupt: Off
                 ; 0003 00B8     TCCR1A=0x00;
003ebc 93e0 0080 	STS  128,R30
                 ; 0003 00B9     TCCR1B=0x05;
003ebe e0e5      	LDI  R30,LOW(5)
003ebf 93e0 0081 	STS  129,R30
                 ; 0003 00BA     //TCNT1H=0xFF;
                 ; 0003 00BB     //TCNT1L=0x64;
                 ; 0003 00BC     TCNT1H=0xFE;
003ec1 940e a2e2 	CALL SUBOPT_0x7E
                 ; 0003 00BD     TCNT1L=0x79;
                 ; 0003 00BE     ICR1H=0x00;
003ec3 e0e0      	LDI  R30,LOW(0)
003ec4 93e0 0087 	STS  135,R30
                 ; 0003 00BF     ICR1L=0x00;
003ec6 93e0 0086 	STS  134,R30
                 ; 0003 00C0     OCR1AH=0x00;
003ec8 93e0 0089 	STS  137,R30
                 ; 0003 00C1     OCR1AL=0x00;
003eca 93e0 0088 	STS  136,R30
                 ; 0003 00C2     OCR1BH=0x00;
003ecc 93e0 008b 	STS  139,R30
                 ; 0003 00C3     OCR1BL=0x00;
003ece 93e0 008a 	STS  138,R30
                 ; 0003 00C4     OCR1CH=0x00;
003ed0 93e0 008d 	STS  141,R30
                 ; 0003 00C5     OCR1CL=0x00;
003ed2 93e0 008c 	STS  140,R30
                 ; 0003 00C6 
                 ; 0003 00C7     // Timer/Counter 2 initialization
                 ; 0003 00C8     // Clock source: System Clock
                 ; 0003 00C9     // Clock value: 7.813 kHz
                 ; 0003 00CA     // Mode: Normal top=0xFF
                 ; 0003 00CB     // OC2A output: Disconnected
                 ; 0003 00CC     // OC2B output: Disconnected
                 ; 0003 00CD     ASSR=0x00;
003ed4 93e0 00b6 	STS  182,R30
                 ; 0003 00CE     TCCR2A=0x00;
003ed6 93e0 00b0 	STS  176,R30
                 ; 0003 00CF     TCCR2B=0x07;
003ed8 e0e7      	LDI  R30,LOW(7)
003ed9 93e0 00b1 	STS  177,R30
                 ; 0003 00D0     TCNT2=0xb2;
003edb ebe2      	LDI  R30,LOW(178)
003edc 93e0 00b2 	STS  178,R30
                 ; 0003 00D1     OCR2A=0x00;
003ede e0e0      	LDI  R30,LOW(0)
003edf 93e0 00b3 	STS  179,R30
                 ; 0003 00D2     OCR2B=0x00;
003ee1 93e0 00b4 	STS  180,R30
                 ; 0003 00D3 
                 ; 0003 00D4     // Timer/Counter 3 initialization
                 ; 0003 00D5     // Clock source: System Clock
                 ; 0003 00D6     // Clock value: 31.250 kHz
                 ; 0003 00D7     // Mode: Normal top=0xFFFF
                 ; 0003 00D8     // OC3A output: Discon.
                 ; 0003 00D9     // OC3B output: Discon.
                 ; 0003 00DA     // OC3C output: Discon.
                 ; 0003 00DB     // Noise Canceler: Off
                 ; 0003 00DC     // Input Capture on Falling Edge
                 ; 0003 00DD     // Timer3 Overflow Interrupt: On
                 ; 0003 00DE     // Input Capture Interrupt: Off
                 ; 0003 00DF     // Compare A Match Interrupt: Off
                 ; 0003 00E0     // Compare B Match Interrupt: Off
                 ; 0003 00E1     // Compare C Match Interrupt: Off
                 ; 0003 00E2     TCCR3A=0x00;
003ee3 93e0 0090 	STS  144,R30
                 ; 0003 00E3     TCCR3B=0x04;
003ee5 e0e4      	LDI  R30,LOW(4)
003ee6 93e0 0091 	STS  145,R30
                 ; 0003 00E4     TCNT3H=0x85;
003ee8 940e a2e9 	CALL SUBOPT_0x7F
                 ; 0003 00E5     TCNT3L=0xED;
                 ; 0003 00E6     ICR3H=0x00;
003eea e0e0      	LDI  R30,LOW(0)
003eeb 93e0 0097 	STS  151,R30
                 ; 0003 00E7     ICR3L=0x00;
003eed 93e0 0096 	STS  150,R30
                 ; 0003 00E8     OCR3AH=0x00;
003eef 93e0 0099 	STS  153,R30
                 ; 0003 00E9     OCR3AL=0x00;
003ef1 93e0 0098 	STS  152,R30
                 ; 0003 00EA     OCR3BH=0x00;
003ef3 93e0 009b 	STS  155,R30
                 ; 0003 00EB     OCR3BL=0x00;
003ef5 93e0 009a 	STS  154,R30
                 ; 0003 00EC     OCR3CH=0x00;
003ef7 93e0 009d 	STS  157,R30
                 ; 0003 00ED     OCR3CL=0x00;
003ef9 93e0 009c 	STS  156,R30
                 ; 0003 00EE 
                 ; 0003 00EF     // Timer/Counter 4 initialization
                 ; 0003 00F0     // Clock source: System Clock
                 ; 0003 00F1     // Clock value: 125.000 kHz
                 ; 0003 00F2     // Mode: Normal top=0xFFFF
                 ; 0003 00F3     // OC4A output: Discon.
                 ; 0003 00F4     // OC4B output: Discon.
                 ; 0003 00F5     // OC4C output: Discon.
                 ; 0003 00F6     // Noise Canceler: Off
                 ; 0003 00F7     // Input Capture on Falling Edge
                 ; 0003 00F8     // Timer4 Overflow Interrupt: On
                 ; 0003 00F9     // Input Capture Interrupt: Off
                 ; 0003 00FA     // Compare A Match Interrupt: Off
                 ; 0003 00FB     // Compare B Match Interrupt: Off
                 ; 0003 00FC     // Compare C Match Interrupt: Off
                 ; 0003 00FD     TCCR4A=0x00;
003efb 93e0 00a0 	STS  160,R30
                 ; 0003 00FE     TCCR4B=0x03;
003efd e0e3      	LDI  R30,LOW(3)
003efe 93e0 00a1 	STS  161,R30
                 ; 0003 00FF     TCNT4H=0x85;
003f00 940e a2f9 	CALL SUBOPT_0x81
                 ; 0003 0100     TCNT4L=0xED;
                 ; 0003 0101     ICR4H=0x00;
003f02 e0e0      	LDI  R30,LOW(0)
003f03 93e0 00a7 	STS  167,R30
                 ; 0003 0102     ICR4L=0x00;
003f05 93e0 00a6 	STS  166,R30
                 ; 0003 0103     OCR4AH=0x00;
003f07 93e0 00a9 	STS  169,R30
                 ; 0003 0104     OCR4AL=0x00;
003f09 93e0 00a8 	STS  168,R30
                 ; 0003 0105     OCR4BH=0x00;
003f0b 93e0 00ab 	STS  171,R30
                 ; 0003 0106     OCR4BL=0x00;
003f0d 93e0 00aa 	STS  170,R30
                 ; 0003 0107     OCR4CH=0x00;
003f0f 93e0 00ad 	STS  173,R30
                 ; 0003 0108     OCR4CL=0x00;
003f11 93e0 00ac 	STS  172,R30
                 ; 0003 0109 
                 ; 0003 010A     // Timer/Counter 5 initialization
                 ; 0003 010B     // Clock source: System Clock
                 ; 0003 010C     // Clock value: Timer5 Stopped
                 ; 0003 010D     // Mode: Normal top=0xFFFF
                 ; 0003 010E     // OC5A output: Discon.
                 ; 0003 010F     // OC5B output: Discon.
                 ; 0003 0110     // OC5C output: Discon.
                 ; 0003 0111     // Noise Canceler: Off
                 ; 0003 0112     // Input Capture on Falling Edge
                 ; 0003 0113     // Timer5 Overflow Interrupt: Off
                 ; 0003 0114     // Input Capture Interrupt: Off
                 ; 0003 0115     // Compare A Match Interrupt: Off
                 ; 0003 0116     // Compare B Match Interrupt: Off
                 ; 0003 0117     // Compare C Match Interrupt: Off
                 ; 0003 0118     TCCR5A=0x00;
003f13 93e0 0120 	STS  288,R30
                 ; 0003 0119     TCCR5B=0x00;
003f15 940e a300 	CALL SUBOPT_0x82
                 ; 0003 011A     TCNT5H=0x00;
                 ; 0003 011B     TCNT5L=0x00;
                 ; 0003 011C     ICR5H=0x00;
003f17 e0e0      	LDI  R30,LOW(0)
003f18 93e0 0127 	STS  295,R30
                 ; 0003 011D     ICR5L=0x00;
003f1a 93e0 0126 	STS  294,R30
                 ; 0003 011E     OCR5AH=0x00;
003f1c 93e0 0129 	STS  297,R30
                 ; 0003 011F     OCR5AL=0x00;
003f1e 93e0 0128 	STS  296,R30
                 ; 0003 0120     OCR5BH=0x00;
003f20 93e0 012b 	STS  299,R30
                 ; 0003 0121     OCR5BL=0x00;
003f22 93e0 012a 	STS  298,R30
                 ; 0003 0122     OCR5CH=0x00;
003f24 93e0 012d 	STS  301,R30
                 ; 0003 0123     OCR5CL=0x00;
003f26 93e0 012c 	STS  300,R30
                 ; 0003 0124 
                 ; 0003 0125     // Watchdog Timer initialization
                 ; 0003 0126     // Watchdog Timer Prescaler: OSC/1024k
                 ; 0003 0127     // Watchdog Timer interrupt: On
                 ; 0003 0128     #pragma optsize-
                 ; 0003 0129     #asm("wdr")
003f28 95a8      	wdr
                 ; 0003 012A     WDTCSR=0x79;
003f29 e7e9      	LDI  R30,LOW(121)
003f2a 93e0 0060 	STS  96,R30
                 ; 0003 012B     WDTCSR=0x69;
003f2c e6e9      	LDI  R30,LOW(105)
003f2d 93e0 0060 	STS  96,R30
                 ; 0003 012C 
                 ; 0003 012D     #ifdef _OPTIMIZE_SIZE_
                 ; 0003 012E     #pragma optsize+
                 ; 0003 012F     #endif
                 ; 0003 0130 
                 ; 0003 0131 
                 ; 0003 0132     // Timer/Counter 0 Interrupt(s) initialization
                 ; 0003 0133     TIMSK0=0x00;
003f2f e0e0      	LDI  R30,LOW(0)
003f30 93e0 006e 	STS  110,R30
                 ; 0003 0134 
                 ; 0003 0135     // Timer/Counter 1 Interrupt(s) initialization
                 ; 0003 0136     TIMSK1=0x00;
003f32 93e0 006f 	STS  111,R30
                 ; 0003 0137 
                 ; 0003 0138     // Timer/Counter 2 Interrupt(s) initialization
                 ; 0003 0139     TIMSK2=0x00;
003f34 93e0 0070 	STS  112,R30
                 ; 0003 013A 
                 ; 0003 013B     // Timer/Counter 3 Interrupt(s) initialization
                 ; 0003 013C     TIMSK3=0x00;
003f36 93e0 0071 	STS  113,R30
                 ; 0003 013D 
                 ; 0003 013E     // Timer/Counter 4 Interrupt(s) initialization
                 ; 0003 013F     TIMSK4=0x00;
003f38 93e0 0072 	STS  114,R30
                 ; 0003 0140 
                 ; 0003 0141     // Timer/Counter 5 Interrupt(s) initialization
                 ; 0003 0142     TIMSK5=0x00;
003f3a 93e0 0073 	STS  115,R30
                 ; 0003 0143 }
003f3c 9508      	RET
                 ;/*============================================================*/
                 ;void enable_interrupt(int ch)
                 ; 0003 0146 {
                 _enable_interrupt:
                 ; 0003 0147 
                 ; 0003 0148     // -------------- enable timer ---------------  //
                 ; 0003 0149 
                 ; 0003 014A     switch(ch){
003f3d 940e a308 	CALL SUBOPT_0x83
                 ;	ch -> Y+0
                 ; 0003 014B         case 0: // Timer/Counter 0 Interrupt(s) initialization
003f3f 9730      	SBIW R30,0
003f40 f0f9      	BREQ _0x6001B
                 ; 0003 014C                 //TIMSK0=0x01;
                 ; 0003 014D                 break;
                 ; 0003 014E         case 1: // Timer/Counter 1 Interrupt(s) initialization
003f41 30e1      	CPI  R30,LOW(0x1)
003f42 e0a0      	LDI  R26,HIGH(0x1)
003f43 07fa      	CPC  R31,R26
003f44 f421      	BRNE _0x6001D
                 ; 0003 014F                 TIMSK1=0x01;
003f45 e0e1      	LDI  R30,LOW(1)
003f46 93e0 006f 	STS  111,R30
                 ; 0003 0150                 break;
003f48 c017      	RJMP _0x6001B
                 ; 0003 0151         case 2: // Timer/Counter 2 Interrupt(s) initialization
                 _0x6001D:
003f49 30e2      	CPI  R30,LOW(0x2)
003f4a e0a0      	LDI  R26,HIGH(0x2)
003f4b 07fa      	CPC  R31,R26
003f4c f421      	BRNE _0x6001E
                 ; 0003 0152                 TIMSK2=0x01;
003f4d e0e1      	LDI  R30,LOW(1)
003f4e 93e0 0070 	STS  112,R30
                 ; 0003 0153                 break;
003f50 c00f      	RJMP _0x6001B
                 ; 0003 0154         case 3: // Timer/Counter 3 Interrupt(s) initialization
                 _0x6001E:
003f51 30e3      	CPI  R30,LOW(0x3)
003f52 e0a0      	LDI  R26,HIGH(0x3)
003f53 07fa      	CPC  R31,R26
003f54 f421      	BRNE _0x6001F
                 ; 0003 0155                 TIMSK3=0x01;
003f55 e0e1      	LDI  R30,LOW(1)
003f56 93e0 0071 	STS  113,R30
                 ; 0003 0156                 break;
003f58 c007      	RJMP _0x6001B
                 ; 0003 0157         case 4: // Timer/Counter 4 Interrupt(s) initialization
                 _0x6001F:
003f59 30e4      	CPI  R30,LOW(0x4)
003f5a e0a0      	LDI  R26,HIGH(0x4)
003f5b 07fa      	CPC  R31,R26
003f5c f419      	BRNE _0x6001B
                 ; 0003 0158                 TIMSK4=0x01;
003f5d e0e1      	LDI  R30,LOW(1)
003f5e 93e0 0072 	STS  114,R30
                 ; 0003 0159                 break;
                 ; 0003 015A     }
                 _0x6001B:
                 ; 0003 015B     // Global enable interrupts
                 ; 0003 015C     #asm("sei")
003f60 9478      	sei
                 ; 0003 015D }
003f61 9622      	ADIW R28,2
003f62 9508      	RET
                 ;/*============================================================*/
                 ;void disable_interrupt(int ch)
                 ; 0003 0160 {
                 ; 0003 0161 
                 ; 0003 0162     // -------------- enable timer ---------------  //
                 ; 0003 0163 
                 ; 0003 0164     switch(ch){
                 ;	ch -> Y+0
                 ; 0003 0165         case 0: // Timer/Counter 0 Interrupt(s) initialization
                 ; 0003 0166                 //TIMSK0=0x00;
                 ; 0003 0167                 break;
                 ; 0003 0168         case 1: // Timer/Counter 1 Interrupt(s) initialization
                 ; 0003 0169                 TIMSK1=0x00;
                 ; 0003 016A                 break;
                 ; 0003 016B         case 2: // Timer/Counter 2 Interrupt(s) initialization
                 ; 0003 016C                 TIMSK2=0x00;
                 ; 0003 016D                 break;
                 ; 0003 016E         case 3: // Timer/Counter 3 Interrupt(s) initialization
                 ; 0003 016F                 TIMSK3=0x00;
                 ; 0003 0170                 break;
                 ; 0003 0171         case 4: // Timer/Counter 4 Interrupt(s) initialization
                 ; 0003 0172                 TIMSK4=0x00;
                 ; 0003 0173                 break;
                 ; 0003 0174     }
                 ; 0003 0175     // Global enable interrupts
                 ; 0003 0176     #asm("sei")
                 ; 0003 0177 }
                 ;/*============================================================*/
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <delay.h>
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned char   d_out[USE_DOUT] = {0xFF,0xFF};
                 
                 	.DSEG
                 ;
                 ;/*============================================================*/
                 ;void init_io(void)
                 ; 0004 000A {
                 
                 	.CSEG
                 _init_io:
                 ; 0004 000B     // Input/Output Ports initialization
                 ; 0004 000C     // Port A initialization
                 ; 0004 000D     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=Out Func1=In Func0=In
                 ; 0004 000E     // State7=T State6=T State5=T State4=T State3=T State2=0 State1=T State0=T
                 ; 0004 000F     PORTA=0x00;
003f63 e0e0      	LDI  R30,LOW(0)
003f64 b9e2      	OUT  0x2,R30
                 ; 0004 0010     DDRA=0x04;
003f65 e0e4      	LDI  R30,LOW(4)
003f66 b9e1      	OUT  0x1,R30
                 ; 0004 0011 
                 ; 0004 0012     // Port B initialization
                 ; 0004 0013     // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=Out Func1=Out Func0=Out
                 ; 0004 0014     // State7=1 State6=1 State5=1 State4=1 State3=P State2=1 State1=1 State0=1
                 ; 0004 0015     PORTB=0xFF;
003f67 efef      	LDI  R30,LOW(255)
003f68 b9e5      	OUT  0x5,R30
                 ; 0004 0016     DDRB=0xF7;
003f69 efe7      	LDI  R30,LOW(247)
003f6a b9e4      	OUT  0x4,R30
                 ; 0004 0017 
                 ; 0004 0018     // Port C initialization
                 ; 0004 0019     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 001A     // State7=P State6=P State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 001B     PORTC=0xC0;
003f6b ece0      	LDI  R30,LOW(192)
003f6c b9e8      	OUT  0x8,R30
                 ; 0004 001C     DDRC=0x00;
003f6d e0e0      	LDI  R30,LOW(0)
003f6e b9e7      	OUT  0x7,R30
                 ; 0004 001D 
                 ; 0004 001E     // Port C initialization
                 ; 0004 001F     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0020     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0021     //PORTC=0x80;
                 ; 0004 0022     //DDRC=0x00;
                 ; 0004 0023 
                 ; 0004 0024     // Port D initialization
                 ; 0004 0025     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0026     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0027     PORTD=0x80;
003f6f e8e0      	LDI  R30,LOW(128)
003f70 b9eb      	OUT  0xB,R30
                 ; 0004 0028     DDRD=0x00;
003f71 e0e0      	LDI  R30,LOW(0)
003f72 b9ea      	OUT  0xA,R30
                 ; 0004 0029 
                 ; 0004 002A     // Port E initialization
                 ; 0004 002B     // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=In Func0=In
                 ; 0004 002C     // State7=1 State6=1 State5=1 State4=1 State3=1 State2=P State1=T State0=T
                 ; 0004 002D     PORTE=0xFC;
003f73 efec      	LDI  R30,LOW(252)
003f74 b9ee      	OUT  0xE,R30
                 ; 0004 002E     DDRE=0xFC;
003f75 b9ed      	OUT  0xD,R30
                 ; 0004 002F 
                 ; 0004 0030     // Port F initialization
                 ; 0004 0031     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0032     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0033     PORTF=0x00;
003f76 e0e0      	LDI  R30,LOW(0)
003f77 bbe1      	OUT  0x11,R30
                 ; 0004 0034     DDRF=0x00;
003f78 bbe0      	OUT  0x10,R30
                 ; 0004 0035 
                 ; 0004 0036     // Port G initialization
                 ; 0004 0037     // Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0038     // State5=1 State4=1 State3=T State2=T State1=T State0=T
                 ; 0004 0039     //PORTG=0x20;
                 ; 0004 003A     //DDRG=0x20;
                 ; 0004 003B     PORTG=0x30;
003f79 e3e0      	LDI  R30,LOW(48)
003f7a bbe4      	OUT  0x14,R30
                 ; 0004 003C     DDRG=0x30;
003f7b bbe3      	OUT  0x13,R30
                 ; 0004 003D 
                 ; 0004 003E     // Port H initialization
                 ; 0004 003F     // Func7=In Func6=Out Func5=Out Func4=Out Func3=Out Func2=In Func1=In Func0=In
                 ; 0004 0040     // State7=P State6=1 State5=1 State4=1 State3=1 State2=T State1=T State0=T
                 ; 0004 0041     PORTH=0xF8;
003f7c efe8      	LDI  R30,LOW(248)
003f7d 93e0 0102 	STS  258,R30
                 ; 0004 0042     DDRH=0xF8;
003f7f 93e0 0101 	STS  257,R30
                 ; 0004 0043 
                 ; 0004 0044 //    // Port J initialization
                 ; 0004 0045 //    // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0046 //    // State7=P State6=P State5=P State4=P State3=P State2=P State1=T State0=T
                 ; 0004 0047 //    PORTJ=0xFC;
                 ; 0004 0048 //    DDRJ=0x00;
                 ; 0004 0049 
                 ; 0004 004A     // Port J initialization
                 ; 0004 004B     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 004C     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 004D     PORTJ=0x80;
003f81 e8e0      	LDI  R30,LOW(128)
003f82 93e0 0105 	STS  261,R30
                 ; 0004 004E     DDRJ=0x00;
003f84 e0e0      	LDI  R30,LOW(0)
003f85 93e0 0104 	STS  260,R30
                 ; 0004 004F 
                 ; 0004 0050     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
003f87 940e a30d 	CALL SUBOPT_0x84
003f89 f021      	BREQ _0x80005
003f8a 940e a30d 	CALL SUBOPT_0x84
003f8c 30e3      	CPI  R30,LOW(0x3)
003f8d f429      	BRNE _0x80004
                 _0x80005:
                 ; 0004 0051         // Port K initialization
                 ; 0004 0052         // Func7=In Func6=In Func5=In Func4=In Func3=Out Func2=Out Func1=Out Func0=In
                 ; 0004 0053         // State7=P State6=T State5=T State4=P State3=0 State2=0 State1=0 State0=T
                 ; 0004 0054         PORTK=0x90;
003f8e e9e0      	LDI  R30,LOW(144)
003f8f 93e0 0108 	STS  264,R30
                 ; 0004 0055         DDRK=0x0E;
003f91 e0ee      	LDI  R30,LOW(14)
003f92 c00b      	RJMP _0x8003D
                 ; 0004 0056     }
                 ; 0004 0057     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 _0x80004:
003f93 940e a318 	CALL SUBOPT_0x85
003f95 f021      	BREQ _0x80009
003f96 940e a30d 	CALL SUBOPT_0x84
003f98 30e2      	CPI  R30,LOW(0x2)
003f99 f431      	BRNE _0x80008
                 _0x80009:
                 ; 0004 0058         // Port K initialization
                 ; 0004 0059         // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 005A         // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 005B         PORTK=0x80;
003f9a e8e0      	LDI  R30,LOW(128)
003f9b 93e0 0108 	STS  264,R30
                 ; 0004 005C         DDRK=0x00;
003f9d e0e0      	LDI  R30,LOW(0)
                 _0x8003D:
003f9e 93e0 0107 	STS  263,R30
                 ; 0004 005D     }
                 ; 0004 005E 
                 ; 0004 005F     // Port L initialization
                 ; 0004 0060     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0061     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0062     PORTL=0x00;
                 _0x80008:
003fa0 e0e0      	LDI  R30,LOW(0)
003fa1 93e0 010b 	STS  267,R30
                 ; 0004 0063     DDRL=0x00;
003fa3 93e0 010a 	STS  266,R30
                 ; 0004 0064 
                 ; 0004 0065 }
003fa5 9508      	RET
                 ;/*============================================================*/
                 ;void IO_dout(int ch, char state)
                 ; 0004 0068 {
                 _IO_dout:
                 ; 0004 0069 //    /*bongkot edit output is actived high(1)*/
                 ; 0004 006A //    //triger state input function
                 ; 0004 006B //    state = !state;
                 ; 0004 006C //    /* end edit*/
                 ; 0004 006D 
                 ; 0004 006E     switch(ch){
003fa6 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
003fa7 81e9      	LDD  R30,Y+1
003fa8 81fa      	LDD  R31,Y+1+1
                 ; 0004 006F         case 0  :   DOUT1       =   !state;
003fa9 9730      	SBIW R30,0
003faa f451      	BRNE _0x8000E
003fab 81e8      	LD   R30,Y
003fac 30e0      	CPI  R30,0
003fad f011      	BREQ _0x8000F
003fae 9873      	CBI  0xE,3
003faf c001      	RJMP _0x80010
                 _0x8000F:
003fb0 9a73      	SBI  0xE,3
                 _0x80010:
                 ; 0004 0070                     d_out[0]    =   state;
003fb1 81e8      	LD   R30,Y
003fb2 93e0 143c 	STS  _d_out,R30
                 ; 0004 0071                     //printDebug("<IO_dout> dout0 %d\r\n",d_out[0]);
                 ; 0004 0072                     break;
003fb4 c00d      	RJMP _0x8000D
                 ; 0004 0073         case 1  :   DOUT2       =   !state;
                 _0x8000E:
003fb5 30e1      	CPI  R30,LOW(0x1)
003fb6 e0a0      	LDI  R26,HIGH(0x1)
003fb7 07fa      	CPC  R31,R26
003fb8 f449      	BRNE _0x80014
003fb9 81e8      	LD   R30,Y
003fba 30e0      	CPI  R30,0
003fbb f011      	BREQ _0x80012
003fbc 9874      	CBI  0xE,4
003fbd c001      	RJMP _0x80013
                 _0x80012:
003fbe 9a74      	SBI  0xE,4
                 _0x80013:
                 ; 0004 0074                     d_out[1]    =   state;
003fbf 81e8      	LD   R30,Y
                +
003fc0 93e0 143d+STS _d_out + ( 1 ) , R30
                 	__PUTB1MN _d_out,1
                 ; 0004 0075                     //printDebug("<IO_dout> dout1 %d\r\n",d_out[1]);
                 ; 0004 0076                     break;
                 ; 0004 0077         default :   break;
                 _0x80014:
                 ; 0004 0078     }
                 _0x8000D:
                 ; 0004 0079 }
003fc2 c04a      	RJMP _0x20E0082
                 ;/*============================================================*/
                 ;char IO_keyCheck(void)
                 ; 0004 007C {
                 ; 0004 007D     static char flag_hold_MODE   = 0;
                 ; 0004 007E     static char flag_hold_UP     = 0;
                 ; 0004 007F     static char flag_hold_DOWN   = 0;
                 ; 0004 0080     static char flag_hold_OK     = 0;
                 ; 0004 0081 
                 ; 0004 0082     if( KEY_PRESS_CHK_MODE && !flag_hold_MODE )
                 ; 0004 0083     {
                 ; 0004 0084         delay_ms(KEY_DELAY);
                 ; 0004 0085 
                 ; 0004 0086         if( KEY_PRESS_CHK_MODE && !flag_hold_MODE )
                 ; 0004 0087         {
                 ; 0004 0088             flag_hold_MODE = 1;
                 ; 0004 0089             return 0;
                 ; 0004 008A         }
                 ; 0004 008B     }
                 ; 0004 008C     else if( KEY_RELEASE_CHK_MODE && flag_hold_MODE)
                 ; 0004 008D     {
                 ; 0004 008E         printDebug("<IO_keyCheck> key MODE\r\n");
                 ; 0004 008F         flag_hold_MODE = 0;
                 ; 0004 0090         return KEY_MODE;
                 ; 0004 0091     }
                 ; 0004 0092 
                 ; 0004 0093     if( KEY_PRESS_CHK_UP && !flag_hold_UP )
                 ; 0004 0094     {
                 ; 0004 0095         delay_ms(KEY_DELAY);
                 ; 0004 0096 
                 ; 0004 0097         if( KEY_PRESS_CHK_UP && !flag_hold_UP )
                 ; 0004 0098         {
                 ; 0004 0099             flag_hold_UP = 1;
                 ; 0004 009A             return 0;
                 ; 0004 009B         }
                 ; 0004 009C     }
                 ; 0004 009D     else if( KEY_RELEASE_CHK_UP && flag_hold_UP)
                 ; 0004 009E     {
                 ; 0004 009F         printDebug("<IO_keyCheck> key UP\r\n");
                 ; 0004 00A0         flag_hold_UP = 0;
                 ; 0004 00A1         return KEY_UP;
                 ; 0004 00A2     }
                 ; 0004 00A3 
                 ; 0004 00A4     if( KEY_PRESS_CHK_DOWN && !flag_hold_DOWN )
                 ; 0004 00A5     {
                 ; 0004 00A6         delay_ms(KEY_DELAY);
                 ; 0004 00A7 
                 ; 0004 00A8         if( KEY_PRESS_CHK_DOWN && !flag_hold_DOWN )
                 ; 0004 00A9         {
                 ; 0004 00AA             flag_hold_DOWN = 1;
                 ; 0004 00AB             return 0;
                 ; 0004 00AC         }
                 ; 0004 00AD     }
                 ; 0004 00AE     else if( KEY_RELEASE_CHK_DOWN && flag_hold_DOWN)
                 ; 0004 00AF     {
                 ; 0004 00B0         printDebug("<IO_keyCheck> key DOWN\r\n");
                 ; 0004 00B1         flag_hold_DOWN = 0;
                 ; 0004 00B2         return KEY_DOWN;
                 ; 0004 00B3     }
                 ; 0004 00B4 
                 ; 0004 00B5     if( KEY_PRESS_CHK_OK && !flag_hold_OK )
                 ; 0004 00B6     {
                 ; 0004 00B7         delay_ms(KEY_DELAY);
                 ; 0004 00B8 
                 ; 0004 00B9         if( KEY_PRESS_CHK_OK && !flag_hold_OK )
                 ; 0004 00BA         {
                 ; 0004 00BB             flag_hold_OK = 1;
                 ; 0004 00BC             return 0;
                 ; 0004 00BD         }
                 ; 0004 00BE     }
                 ; 0004 00BF     else if( KEY_RELEASE_CHK_OK && flag_hold_OK)
                 ; 0004 00C0     {
                 ; 0004 00C1         printDebug("<IO_keyCheck> key OK\r\n");
                 ; 0004 00C2         flag_hold_OK = 0;
                 ; 0004 00C3         return KEY_OK;
                 ; 0004 00C4     }
                 ; 0004 00C5 
                 ; 0004 00C6     return 0;
                 ; 0004 00C7 }
                 ;
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "adc.h"
                 ;#include "debug.h"
                 ;
                 ;float           adcData[5];
                 ;float           adcBatt;
                 ;
                 ;eeprom float    eep_vref_val = 2.56;
                 ;
                 ;/*============================================================*/
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0005 0010 {
                 
                 	.CSEG
                 _read_adc:
                 ; 0005 0011     unsigned int adc_data = 0x0000;
                 ; 0005 0012 
                 ; 0005 0013     ADMUX  &= ADC_VREF_TYPE;
003fc3 93aa      	ST   -Y,R26
003fc4 940e a325 	CALL SUBOPT_0x86
                 ;	adc_input -> Y+2
                 ;	adc_data -> R16,R17
003fc6 91e0 007c 	LDS  R30,124
003fc8 74e0      	ANDI R30,LOW(0x40)
003fc9 93e0 007c 	STS  124,R30
                 ; 0005 0014     ADCSRB &= 0xf7;
003fcb 91e0 007b 	LDS  R30,123
003fcd 7fe7      	ANDI R30,0XF7
003fce 93e0 007b 	STS  123,R30
                 ; 0005 0015 
                 ; 0005 0016     ADMUX  |= (adc_input & 0x07) | (ADC_VREF_TYPE & 0xff);
003fd0 e7ac      	LDI  R26,LOW(124)
003fd1 e0b0      	LDI  R27,HIGH(124)
003fd2 2e0a      	MOV  R0,R26
003fd3 91ac      	LD   R26,X
003fd4 81ea      	LDD  R30,Y+2
003fd5 70e7      	ANDI R30,LOW(0x7)
003fd6 64e0      	ORI  R30,0x40
003fd7 2bea      	OR   R30,R26
003fd8 2da0      	MOV  R26,R0
003fd9 93ec      	ST   X,R30
                 ; 0005 0017 
                 ; 0005 0018     if(adc_input > 7)
003fda 81aa      	LDD  R26,Y+2
003fdb 30a8      	CPI  R26,LOW(0x8)
003fdc f020      	BRLO _0xA0003
                 ; 0005 0019     {
                 ; 0005 001A         ADCSRB |= 0x08;
003fdd 91e0 007b 	LDS  R30,123
003fdf 60e8      	ORI  R30,8
003fe0 c003      	RJMP _0xA0020
                 ; 0005 001B     }
                 ; 0005 001C     else
                 _0xA0003:
                 ; 0005 001D     {
                 ; 0005 001E         ADCSRB &= 0xf7;
003fe1 91e0 007b 	LDS  R30,123
003fe3 7fe7      	ANDI R30,0XF7
                 _0xA0020:
003fe4 93e0 007b 	STS  123,R30
                 ; 0005 001F     }
                 ; 0005 0020 
                 ; 0005 0021     // Delay needed for the stabilization of the ADC input voltage
                 ; 0005 0022     delay_us(20);
                +
003fe6 e385     +LDI R24 , LOW ( 53 )
                +__DELAY_USB_LOOP :
003fe7 958a     +DEC R24
003fe8 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 53
                 ; 0005 0023 
                 ; 0005 0024     // Start the AD conversion
                 ; 0005 0025     ADCSRA  |= 0x80; //ENABLE ADC
003fe9 91e0 007a 	LDS  R30,122
003feb 68e0      	ORI  R30,0x80
003fec 93e0 007a 	STS  122,R30
                 ; 0005 0026     ADCSRA  |= 0x40;
003fee 91e0 007a 	LDS  R30,122
003ff0 64e0      	ORI  R30,0x40
003ff1 93e0 007a 	STS  122,R30
                 ; 0005 0027 
                 ; 0005 0028     // Wait for the AD conversion to complete
                 ; 0005 0029     //while ( ((ADCSRA & 0x10)==0) || ((ADCSRA & 0x40) == 0x40));
                 ; 0005 002A     while ( (ADCSRA & 0x10)==0);
                 _0xA0005:
003ff3 91e0 007a 	LDS  R30,122
003ff5 71e0      	ANDI R30,LOW(0x10)
003ff6 f3e1      	BREQ _0xA0005
                 ; 0005 002B     adc_data = ADCL;
003ff7 9100 0078 	LDS  R16,120
003ff9 2711      	CLR  R17
                 ; 0005 002C     adc_data |= (ADCH & 0x00ff) << 8;
003ffa 91e0 0079 	LDS  R30,121
003ffc 940e a32a 	CALL SUBOPT_0x87
003ffe 2ffe      	MOV  R31,R30
003fff e0e0      	LDI  R30,0
                +
004000 2b0e     +OR R16 , R30
004001 2b1f     +OR R17 , R31
                 	__ORWRR 16,17,30,31
                 ; 0005 002D 
                 ; 0005 002E     ADCSRA  |=0x10;
004002 91e0 007a 	LDS  R30,122
004004 61e0      	ORI  R30,0x10
004005 93e0 007a 	STS  122,R30
                 ; 0005 002F 
                 ; 0005 0030     delay_us(50);
                +
004007 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
004008 958a     +DEC R24
004009 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
                 ; 0005 0031 
                 ; 0005 0032     return adc_data;
00400a 01f8      	MOVW R30,R16
00400b 8119      	LDD  R17,Y+1
00400c 8108      	LDD  R16,Y+0
                 _0x20E0082:
00400d 9623      	ADIW R28,3
00400e 9508      	RET
                 ; 0005 0033 }
                 ;/*============================================================*/
                 ;unsigned char adc_sampling(void)
                 ; 0005 0036 {
                 ; 0005 0037     static int      i = 0;
                 ; 0005 0038     static char     batt_read_flag = 0;
                 ; 0005 0039 
                 ; 0005 003A     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 ; 0005 003B         /*
                 ; 0005 003C         printDebug("<%d>",i);
                 ; 0005 003D         SENSOR_SELECT(i);
                 ; 0005 003E         delay_ms(20);
                 ; 0005 003F         adcData[i] = (float)((adcData[i] * 9.0) + (float)(read_adc(8) * 1.0))/10;           // Temp Sensor Low-Pass Filter
                 ; 0005 0040         if(++i >= 5){   i = 0;  }
                 ; 0005 0041         */
                 ; 0005 0042     }
                 ; 0005 0043     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 ; 0005 0044 //        for( i=0 ; i<5 ; i++ ){
                 ; 0005 0045 //            adcData[i] = (float)((adcData[i] * 9.9) + (float)(read_adc(8+i) * 0.1))/10;     // Temp Sensor Low-Pass Filter
                 ; 0005 0046 //        }
                 ; 0005 0047     }
                 ; 0005 0048 
                 ; 0005 0049 //    if(++batt_read_flag > 25){
                 ; 0005 004A //        adcBatt = (float)((adcBatt * 9.9) + (float)(read_adc(14) * 0.1))/10;                // Battery Read
                 ; 0005 004B //        batt_read_flag = 0;
                 ; 0005 004C //    }
                 ; 0005 004D 
                 ; 0005 004E     return 0;
                 ; 0005 004F }
                 ;/*============================================================*/
                 ;float readBattery(void)
                 ; 0005 0052 {
                 _readBattery:
                 ; 0005 0053     float   vBATT;
                 ; 0005 0054 
                 ; 0005 0055     adcBatt = (float)((adcBatt * 9.9) + (float)(read_adc(14) * 0.1))/10;                // Battery Read
00400f 9724      	SBIW R28,4
                 ;	vBATT -> Y+0
004010 940e a32d 	CALL SUBOPT_0x88
                +
004012 e6e6     +LDI R30 , LOW ( 0x411E6666 )
004013 e6f6     +LDI R31 , HIGH ( 0x411E6666 )
004014 e16e     +LDI R22 , BYTE3 ( 0x411E6666 )
004015 e471     +LDI R23 , BYTE4 ( 0x411E6666 )
                 	__GETD1N 0x411E6666
004016 940e b3e6 	CALL __MULF12
004018 937f      	PUSH R23
004019 936f      	PUSH R22
00401a 93ff      	PUSH R31
00401b 93ef      	PUSH R30
00401c e0ae      	LDI  R26,LOW(14)
00401d dfa5      	RCALL _read_adc
00401e 940e a336 	CALL SUBOPT_0x89
                +
004020 ecad     +LDI R26 , LOW ( 0x3DCCCCCD )
004021 ecbc     +LDI R27 , HIGH ( 0x3DCCCCCD )
004022 ec8c     +LDI R24 , BYTE3 ( 0x3DCCCCCD )
004023 e39d     +LDI R25 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD2N 0x3DCCCCCD
004024 940e b3e6 	CALL __MULF12
004026 91af      	POP  R26
004027 91bf      	POP  R27
004028 918f      	POP  R24
004029 919f      	POP  R25
00402a 940e a33b 	CALL SUBOPT_0x8A
00402c 940e a340 	CALL SUBOPT_0x8B
00402e 940e b434 	CALL __DIVF21
004030 93e0 14e3 	STS  _adcBatt,R30
004032 93f0 14e4 	STS  _adcBatt+1,R31
004034 9360 14e5 	STS  _adcBatt+2,R22
004036 9370 14e6 	STS  _adcBatt+3,R23
                 ; 0005 0056 
                 ; 0005 0057     vBATT   = adcBatt*ADC_CONV_FAC*1.8;                                // from voltage divider 120k & 150k
004038 e8a9      	LDI  R26,LOW(_eep_vref_val)
004039 e0b5      	LDI  R27,HIGH(_eep_vref_val)
00403a 940e b649 	CALL __EEPROMRDD
00403c 01df      	MOVW R26,R30
00403d 01cb      	MOVW R24,R22
00403e 940e a345 	CALL SUBOPT_0x8C
004040 940e a32d 	CALL SUBOPT_0x88
004042 940e b3e6 	CALL __MULF12
                +
004044 e6a6     +LDI R26 , LOW ( 0x3FE66666 )
004045 e6b6     +LDI R27 , HIGH ( 0x3FE66666 )
004046 ee86     +LDI R24 , BYTE3 ( 0x3FE66666 )
004047 e39f     +LDI R25 , BYTE4 ( 0x3FE66666 )
                 	__GETD2N 0x3FE66666
004048 940e b3e6 	CALL __MULF12
00404a 940e a34c 	CALL SUBOPT_0x8D
                 ; 0005 0058     //printDebug("                                                     -- volt[%f]\r\n", vBATT);    // padding line
                 ; 0005 0059 
                 ; 0005 005A     return vBATT;
00404c 940e a2a0 	CALL SUBOPT_0x75
                 _0x20E0081:
00404e 9624      	ADIW R28,4
00404f 9508      	RET
                 ; 0005 005B }
                 ;/*============================================================*/
                 ;void adc_init_read(void)
                 ; 0005 005E {
                 _adc_init_read:
                 ; 0005 005F     int i;
                 ; 0005 0060     printDebug("Initializing ADC.. ");
004050 931a      	ST   -Y,R17
004051 930a      	ST   -Y,R16
                 ;	i -> R16,R17
                +
004052 ebe4     +LDI R30 , LOW ( 2 * _0xA0000 + ( 0 ) )
004053 e0ff     +LDI R31 , HIGH ( 2 * _0xA0000 + ( 0 ) )
004054 e060     +LDI R22 , BYTE3 ( 2 * _0xA0000 + ( 0 ) )
004055 e070     +LDI R23 , BYTE4 ( 2 * _0xA0000 + ( 0 ) )
                 	__POINTD1FN _0xA0000,0
004056 940e 9f66 	CALL SUBOPT_0x2
                 ; 0005 0061 
                 ; 0005 0062     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
004058 940e a30d 	CALL SUBOPT_0x84
00405a f021      	BREQ _0xA0010
00405b 940e a30d 	CALL SUBOPT_0x84
00405d 30e3      	CPI  R30,LOW(0x3)
00405e f501      	BRNE _0xA000F
                 _0xA0010:
                 ; 0005 0063         for(i=0;i<5;i++){ \
                 ; 0005 0064             SENSOR_SELECT(i);
                +
00405f e000     +LDI R16 , LOW ( 0 )
004060 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xA0013:
                +
004061 3005     +CPI R16 , LOW ( 5 )
004062 e0e0     +LDI R30 , HIGH ( 5 )
004063 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004064 f4cc      	BRGE _0xA0014
004065 940e a34f 	CALL SUBOPT_0x8E
004067 2fe0      	MOV  R30,R16
004068 0fee      	LSL  R30
004069 2bea      	OR   R30,R26
00406a 2da0      	MOV  R26,R0
00406b 93ec      	ST   X,R30
                 ; 0005 0065             delay_ms(20);
00406c 940e a359 	CALL SUBOPT_0x8F
                 ; 0005 0066             adcData[i] = read_adc(8);
00406e 01f8      	MOVW R30,R16
00406f 940e a35d 	CALL SUBOPT_0x90
004071 0fea      	ADD  R30,R26
004072 1ffb      	ADC  R31,R27
004073 93ff      	PUSH R31
004074 93ef      	PUSH R30
004075 e0a8      	LDI  R26,LOW(8)
004076 df4c      	RCALL _read_adc
004077 91af      	POP  R26
004078 91bf      	POP  R27
004079 940e a362 	CALL SUBOPT_0x91
                 ; 0005 0067         }
                +
00407b 5f0f     +SUBI R16 , LOW ( - 1 )
00407c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00407d cfe3      	RJMP _0xA0013
                 _0xA0014:
                 ; 0005 0068     }
                 ; 0005 0069     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
00407e c025      	RJMP _0xA0015
                 _0xA000F:
00407f 940e a318 	CALL SUBOPT_0x85
004081 f021      	BREQ _0xA0017
004082 940e a30d 	CALL SUBOPT_0x84
004084 30e2      	CPI  R30,LOW(0x2)
004085 f4f1      	BRNE _0xA0016
                 _0xA0017:
                 ; 0005 006A         adcData[0] = read_adc(8);
004086 e0a8      	LDI  R26,LOW(8)
004087 df3b      	RCALL _read_adc
004088 e3ae      	LDI  R26,LOW(_adcData)
004089 e1b4      	LDI  R27,HIGH(_adcData)
00408a 940e a362 	CALL SUBOPT_0x91
                 ; 0005 006B         adcData[1] = read_adc(9);
00408c e0a9      	LDI  R26,LOW(9)
00408d df35      	RCALL _read_adc
                +
00408e e4a2     +LDI R26 , LOW ( _adcData + ( 4 ) )
00408f e1b4     +LDI R27 , HIGH ( _adcData + ( 4 ) )
                 	__POINTW2MN _adcData,4
004090 940e a362 	CALL SUBOPT_0x91
                 ; 0005 006C         adcData[2] = read_adc(10);
004092 e0aa      	LDI  R26,LOW(10)
004093 df2f      	RCALL _read_adc
                +
004094 e4a6     +LDI R26 , LOW ( _adcData + ( 8 ) )
004095 e1b4     +LDI R27 , HIGH ( _adcData + ( 8 ) )
                 	__POINTW2MN _adcData,8
004096 940e a362 	CALL SUBOPT_0x91
                 ; 0005 006D         adcData[3] = read_adc(11);
004098 e0ab      	LDI  R26,LOW(11)
004099 df29      	RCALL _read_adc
                +
00409a e4aa     +LDI R26 , LOW ( _adcData + ( 12 ) )
00409b e1b4     +LDI R27 , HIGH ( _adcData + ( 12 ) )
                 	__POINTW2MN _adcData,12
00409c 940e a362 	CALL SUBOPT_0x91
                 ; 0005 006E         adcData[4] = read_adc(12);
00409e e0ac      	LDI  R26,LOW(12)
00409f df23      	RCALL _read_adc
                +
0040a0 e4ae     +LDI R26 , LOW ( _adcData + ( 16 ) )
0040a1 e1b4     +LDI R27 , HIGH ( _adcData + ( 16 ) )
                 	__POINTW2MN _adcData,16
0040a2 940e a362 	CALL SUBOPT_0x91
                 ; 0005 006F     }
                 ; 0005 0070 
                 ; 0005 0071     adcBatt = read_adc(14);
                 _0xA0016:
                 _0xA0015:
0040a4 e0ae      	LDI  R26,LOW(14)
0040a5 df1d      	RCALL _read_adc
0040a6 eea3      	LDI  R26,LOW(_adcBatt)
0040a7 e1b4      	LDI  R27,HIGH(_adcBatt)
0040a8 940e a362 	CALL SUBOPT_0x91
                 ; 0005 0072 
                 ; 0005 0073     printDebug("OK\r\n");
                +
0040aa ece8     +LDI R30 , LOW ( 2 * _0xA0000 + ( 20 ) )
0040ab e0ff     +LDI R31 , HIGH ( 2 * _0xA0000 + ( 20 ) )
0040ac e060     +LDI R22 , BYTE3 ( 2 * _0xA0000 + ( 20 ) )
0040ad e070     +LDI R23 , BYTE4 ( 2 * _0xA0000 + ( 20 ) )
                 	__POINTD1FN _0xA0000,20
0040ae 940e 9f66 	CALL SUBOPT_0x2
                 ; 0005 0074 }
                 _0x20E0080:
0040b0 9109      	LD   R16,Y+
0040b1 9119      	LD   R17,Y+
0040b2 9508      	RET
                 ;/*============================================================*/
                 ;void init_adc(void)
                 ; 0005 0077 {
                 _init_adc:
                 ; 0005 0078     // ADC initialization
                 ; 0005 0079     // ADC Clock frequency: 1000.000 kHz
                 ; 0005 007A     // ADC Voltage Reference: 2.56V, cap. on AREF
                 ; 0005 007B     // ADC Auto Trigger Source: Free Running
                 ; 0005 007C     // Digital input buffers on ADC0: On, ADC1: On, ADC2: On, ADC3: On
                 ; 0005 007D     // ADC4: On, ADC5: On, ADC6: On, ADC7: On
                 ; 0005 007E     DIDR0=0x00;
0040b3 e0e0      	LDI  R30,LOW(0)
0040b4 93e0 007e 	STS  126,R30
                 ; 0005 007F 
                 ; 0005 0080 
                 ; 0005 0081     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
0040b6 940e a30d 	CALL SUBOPT_0x84
0040b8 f021      	BREQ _0xA001A
0040b9 940e a30d 	CALL SUBOPT_0x84
0040bb 30e3      	CPI  R30,LOW(0x3)
0040bc f411      	BRNE _0xA0019
                 _0xA001A:
                 ; 0005 0082         // Digital input buffers on ADC8: Off, ADC9: On, ADC10: On, ADC11: On
                 ; 0005 0083         // ADC12: On, ADC13: Off, ADC14: Off, ADC15: On
                 ; 0005 0084         DIDR2=0x61;
0040bd e6e1      	LDI  R30,LOW(97)
0040be c008      	RJMP _0xA0021
                 ; 0005 0085     }
                 ; 0005 0086     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 _0xA0019:
0040bf 940e a318 	CALL SUBOPT_0x85
0040c1 f021      	BREQ _0xA001E
0040c2 940e a30d 	CALL SUBOPT_0x84
0040c4 30e2      	CPI  R30,LOW(0x2)
0040c5 f419      	BRNE _0xA001D
                 _0xA001E:
                 ; 0005 0087         // Digital input buffers on ADC8: Off, ADC9: Off, ADC10: Off, ADC11: Off
                 ; 0005 0088         // ADC12: Off, ADC13: Off, ADC14: Off, ADC15: On
                 ; 0005 0089         DIDR2=0x7F;
0040c6 e7ef      	LDI  R30,LOW(127)
                 _0xA0021:
0040c7 93e0 007d 	STS  125,R30
                 ; 0005 008A     }
                 ; 0005 008B 
                 ; 0005 008C     ADMUX   = ADC_VREF_TYPE;
                 _0xA001D:
0040c9 e4e0      	LDI  R30,LOW(64)
0040ca 93e0 007c 	STS  124,R30
                 ; 0005 008D     ADCSRA  = (1<<7) |          // ADEN:    ADC enable
                 ; 0005 008E               (0<<6) |          // ADSC:    ADC Start Conversion
                 ; 0005 008F               (0<<5) |          // ADATE:   ADC Auto Trigger Enable
                 ; 0005 0090               (0<<4) |          // ADIF:    ADC Interrupt Flag
                 ; 0005 0091               (0<<3) |          // ADIE:    ADC Interrupt
                 ; 0005 0092               (1<<2) |          //-----
                 ; 0005 0093               (1<<1) |          //- ADPS2-0: ADC Prescaler Select Bits      (011 = clk/8) (110 = clk/64)
                 ; 0005 0094               (0<<0);           //-----
0040cc e8e6      	LDI  R30,LOW(134)
0040cd 93e0 007a 	STS  122,R30
                 ; 0005 0095 
                 ; 0005 0096     ADCSRB  = 0;
0040cf e0e0      	LDI  R30,LOW(0)
0040d0 93e0 007b 	STS  123,R30
                 ; 0005 0097 
                 ; 0005 0098     //adc_init_read();
                 ; 0005 0099 }
0040d2 9508      	RET
                 ;/*============================================================*/
                 ;#include <i2c.h>
                 ;#include <delay.h>
                 ;#include <string.h>
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "ds1672.h"
                 ;
                 ;/*============================================================*/
                 ;unsigned long raw_rtc;
                 ;/*============================================================*/
                 ;int DS1672_trickerChargeEnable(void) /* ----- enable the trickle-charger ------ */
                 ; 0006 000C {
                 
                 	.CSEG
                 _DS1672_trickerChargeEnable:
                 ; 0006 000D     #asm("cli")
0040d3 94f8      	cli
                 ; 0006 000E     i2c_start();
0040d4 940e a366 	CALL SUBOPT_0x92
                 ; 0006 000F     i2c_write(ADDRTC);
                 ; 0006 0010     i2c_write(5);
0040d6 e0a5      	LDI  R26,LOW(5)
0040d7 940e b2ce 	CALL _i2c_write
                 ; 0006 0011     i2c_write(0xA6);            /* enable the trickle-charger : No diode, 2k ohm resistor */
0040d9 eaa6      	LDI  R26,LOW(166)
0040da 940e a36b 	CALL SUBOPT_0x93
                 ; 0006 0012     i2c_stop();
                 ; 0006 0013     #asm("sei")
0040dc 9478      	sei
                 ; 0006 0014 
                 ; 0006 0015     /* 10ms delay to complete the write operation */
                 ; 0006 0016     delay_ms(10);
0040dd 940e a36f 	CALL SUBOPT_0x94
                 ; 0006 0017 
                 ; 0006 0018     return 0;
0040df 9508      	RET
                 ; 0006 0019 }
                 ;/*============================================================*/
                 ;unsigned long int DS1672_read(void)
                 ; 0006 001C {
                 _DS1672_read:
                 ; 0006 001D     unsigned long int z;
                 ; 0006 001E     unsigned char rtc_reg1, rtc_reg2, rtc_reg3, rtc_reg4;
                 ; 0006 001F 
                 ; 0006 0020     #asm("cli")
0040e0 9724      	SBIW R28,4
0040e1 940e b69c 	CALL __SAVELOCR4
                 ;	z -> Y+4
                 ;	rtc_reg1 -> R17
                 ;	rtc_reg2 -> R16
                 ;	rtc_reg3 -> R19
                 ;	rtc_reg4 -> R18
0040e3 94f8      	cli
                 ; 0006 0021     i2c_start();
0040e4 940e a366 	CALL SUBOPT_0x92
                 ; 0006 0022     i2c_write(ADDRTC);                      /* write slave address, write 1672 */
                 ; 0006 0023     i2c_write(0x00);                        /* write register address, 1st clock register */
0040e6 e0a0      	LDI  R26,LOW(0)
0040e7 940e b2ce 	CALL _i2c_write
                 ; 0006 0024     i2c_start();
0040e9 940e b29a 	CALL _i2c_start
                 ; 0006 0025     i2c_write(ADDRTC | 1);                  /* write slave address, read 1672 */
0040eb eda1      	LDI  R26,LOW(209)
0040ec 940e b2ce 	CALL _i2c_write
                 ; 0006 0026     rtc_reg1 = i2c_read(ACK);                 /* starts w/last address stored in register pointer */
0040ee e0a1      	LDI  R26,LOW(1)
0040ef 940e b2b3 	CALL _i2c_read
0040f1 2f1e      	MOV  R17,R30
                 ; 0006 0027     rtc_reg2 = i2c_read(ACK);
0040f2 e0a1      	LDI  R26,LOW(1)
0040f3 940e b2b3 	CALL _i2c_read
0040f5 2f0e      	MOV  R16,R30
                 ; 0006 0028     rtc_reg3 = i2c_read(ACK);
0040f6 e0a1      	LDI  R26,LOW(1)
0040f7 940e b2b3 	CALL _i2c_read
0040f9 2f3e      	MOV  R19,R30
                 ; 0006 0029     rtc_reg4 = i2c_read(NACK);
0040fa e0a0      	LDI  R26,LOW(0)
0040fb 940e b2b3 	CALL _i2c_read
0040fd 2f2e      	MOV  R18,R30
                 ; 0006 002A     i2c_stop();
0040fe 940e b2a9 	CALL _i2c_stop
                 ; 0006 002B     #asm("sei")
004100 9478      	sei
                 ; 0006 002C 
                 ; 0006 002D     z = rtc_reg4;
004101 2fe2      	MOV  R30,R18
004102 27ff      	CLR  R31
004103 2766      	CLR  R22
004104 2777      	CLR  R23
004105 940e a376 	CALL SUBOPT_0x95
                 ; 0006 002E     z <<= 8;
004107 940e a37b 	CALL SUBOPT_0x96
004109 940e a380 	CALL SUBOPT_0x97
                 ; 0006 002F     z += rtc_reg3;
00410b 2fe3      	MOV  R30,R19
00410c 940e a384 	CALL SUBOPT_0x98
                 ; 0006 0030     z <<= 8;
                 ; 0006 0031     z += rtc_reg2;
00410e 2fe0      	MOV  R30,R16
00410f 940e a384 	CALL SUBOPT_0x98
                 ; 0006 0032     z <<= 8;
                 ; 0006 0033     z += rtc_reg1;
004111 940e a38d 	CALL SUBOPT_0x99
004113 940e a37b 	CALL SUBOPT_0x96
004115 940e a390 	CALL SUBOPT_0x9A
004117 940e a395 	CALL SUBOPT_0x9B
                 ; 0006 0034 
                 ; 0006 0035     //printDebug("\r\nDS1672_read -> 0x%02X%02X%02X%02X\r\n",rtc_reg4,rtc_reg3,rtc_reg2,rtc_reg1);
                 ; 0006 0036     //printDebug("rawtime [%ld]\r\n", z);
                 ; 0006 0037 
                 ; 0006 0038     return z;
004119 940e b6a3 	CALL __LOADLOCR4
00411b 9628      	ADIW R28,8
00411c 9508      	RET
                 ; 0006 0039 }
                 ;/*============================================================*/
                 ;int binary_to_date(unsigned long x, struct rtc_structure *rtcCov) /* ------ convert binary time to date format ------ */
                 ; 0006 003C {
                 _binary_to_date:
                 ; 0006 003D     unsigned long yrs = 99, mon = 99, day = 99, tmp, jday, hrs, min, sec;
                 ; 0006 003E     unsigned long j, n;
                 ; 0006 003F     unsigned int dow;     // day of week
                 ; 0006 0040 
                 ; 0006 0041     j = x / 60;                             /* whole minutes since 1/1/70 */
00411d 93ba      	ST   -Y,R27
00411e 93aa      	ST   -Y,R26
00411f 97a8      	SBIW R28,40
004120 e08c      	LDI  R24,12
004121 e1ac      	LDI  R26,LOW(28)
004122 e0b0      	LDI  R27,HIGH(28)
004123 ecee      	LDI  R30,LOW(_0xC0003*2)
004124 e0ff      	LDI  R31,HIGH(_0xC0003*2)
004125 e060      	LDI  R22,BYTE3(_0xC0003*2)
004126 940e b6a8 	CALL __INITLOCB
004128 931a      	ST   -Y,R17
004129 930a      	ST   -Y,R16
                 ;	x -> Y+44
                 ;	*rtcCov -> Y+42
                 ;	yrs -> Y+38
                 ;	mon -> Y+34
                 ;	day -> Y+30
                 ;	tmp -> Y+26
                 ;	jday -> Y+22
                 ;	hrs -> Y+18
                 ;	min -> Y+14
                 ;	sec -> Y+10
                 ;	j -> Y+6
                 ;	n -> Y+2
                 ;	dow -> R16,R17
                +
00412a a5ac     +LDD R26 , Y + 44
00412b a5bd     +LDD R27 , Y + 44 + 1
00412c a58e     +LDD R24 , Y + 44 + 2
00412d a59f     +LDD R25 , Y + 44 + 3
                 	__GETD2S 44
00412e 940e a397 	CALL SUBOPT_0x9C
004130 940e a39e 	CALL SUBOPT_0x9D
                 ; 0006 0042     sec = x - (60 * j);                     /* leftover seconds */
004132 940e a3a3 	CALL SUBOPT_0x9E
                +
004134 a5ac     +LDD R26 , Y + 44
004135 a5bd     +LDD R27 , Y + 44 + 1
004136 a58e     +LDD R24 , Y + 44 + 2
004137 a59f     +LDD R25 , Y + 44 + 3
                 	__GETD2S 44
004138 940e b4ac 	CALL __SUBD21
                +
00413a 87aa     +STD Y + 10 , R26
00413b 87bb     +STD Y + 10 + 1 , R27
00413c 878c     +STD Y + 10 + 2 , R24
00413d 879d     +STD Y + 10 + 3 , R25
                 	__PUTD2S 10
                 ; 0006 0043     n = j / 60;
00413e 940e a16e 	CALL SUBOPT_0x49
004140 940e a397 	CALL SUBOPT_0x9C
004142 940e a3aa 	CALL SUBOPT_0x9F
                 ; 0006 0044     min = j - (60 * n);
004144 940e a3af 	CALL SUBOPT_0xA0
004146 940e a3a3 	CALL SUBOPT_0x9E
004148 940e a16e 	CALL SUBOPT_0x49
00414a 940e b4ac 	CALL __SUBD21
                +
00414c 87ae     +STD Y + 14 , R26
00414d 87bf     +STD Y + 14 + 1 , R27
00414e 8b88     +STD Y + 14 + 2 , R24
00414f 8b99     +STD Y + 14 + 3 , R25
                 	__PUTD2S 14
                 ; 0006 0045     j = n / 24;
004150 940e a3b4 	CALL SUBOPT_0xA1
                +
004152 e1e8     +LDI R30 , LOW ( 0x18 )
004153 e0f0     +LDI R31 , HIGH ( 0x18 )
004154 e060     +LDI R22 , BYTE3 ( 0x18 )
004155 e070     +LDI R23 , BYTE4 ( 0x18 )
                 	__GETD1N 0x18
004156 940e b599 	CALL __DIVD21U
004158 940e a39e 	CALL SUBOPT_0x9D
                 ; 0006 0046     hrs = n - (24 * j);
                +
00415a e1a8     +LDI R26 , LOW ( 0x18 )
00415b e0b0     +LDI R27 , HIGH ( 0x18 )
00415c e080     +LDI R24 , BYTE3 ( 0x18 )
00415d e090     +LDI R25 , BYTE4 ( 0x18 )
                 	__GETD2N 0x18
00415e 940e b543 	CALL __MULD12U
004160 940e a3b4 	CALL SUBOPT_0xA1
004162 940e b4ac 	CALL __SUBD21
                +
004164 8baa     +STD Y + 18 , R26
004165 8bbb     +STD Y + 18 + 1 , R27
004166 8b8c     +STD Y + 18 + 2 , R24
004167 8b9d     +STD Y + 18 + 3 , R25
                 	__PUTD2S 18
                 ; 0006 0047     j = j + (365 + 366);                    /* whole days since 1/1/68 */
004168 940e a3b9 	CALL SUBOPT_0xA2
                +
00416a 52e5     +SUBI R30 , LOW ( - 731 )
00416b 4ffd     +SBCI R31 , HIGH ( - 731 )
00416c 4f6f     +SBCI R22 , BYTE3 ( - 731 )
00416d 4f7f     +SBCI R23 , BYTE4 ( - 731 )
                 	__ADDD1N 731
00416e 940e a3be 	CALL SUBOPT_0xA3
                 ; 0006 0048 
                 ; 0006 0049     dow = (j % 7)+1;                        /* since 1/1/68 is Monday */
004170 940e a16e 	CALL SUBOPT_0x49
                +
004172 e0e7     +LDI R30 , LOW ( 0x7 )
004173 e0f0     +LDI R31 , HIGH ( 0x7 )
004174 e060     +LDI R22 , BYTE3 ( 0x7 )
004175 e070     +LDI R23 , BYTE4 ( 0x7 )
                 	__GETD1N 0x7
004176 940e b5d8 	CALL __MODD21U
004178 9631      	ADIW R30,1
004179 018f      	MOVW R16,R30
                 ; 0006 004A                                             /* 1-7 => Sun - Sat */
                 ; 0006 004B     day = j / ((4 * 365) + 1);
00417a 940e a3c3 	CALL SUBOPT_0xA4
00417c 940e b599 	CALL __DIVD21U
00417e 940e a3c9 	CALL SUBOPT_0xA5
                 ; 0006 004C     tmp = j % ((4 * 365) + 1);
004180 940e a3c3 	CALL SUBOPT_0xA4
004182 940e b5d8 	CALL __MODD21U
                +
004184 8fea     +STD Y + 26 , R30
004185 8ffb     +STD Y + 26 + 1 , R31
004186 8f6c     +STD Y + 26 + 2 , R22
004187 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 004D     if(tmp >= (31 + 29))                    /* if past 2/29 */
004188 940e a3ce 	CALL SUBOPT_0xA6
00418a 940e a3d3 	CALL SUBOPT_0xA7
00418c f030      	BRLO _0xC0004
                 ; 0006 004E     day++;                                  /* add a leap day */
00418d 940e a3db 	CALL SUBOPT_0xA8
00418f 940e a3e0 	CALL SUBOPT_0xA9
004191 940e a3c9 	CALL SUBOPT_0xA5
                 ; 0006 004F     yrs = (j - day) / 365;                  /* whole years since 1968 */
                 _0xC0004:
004193 940e a3e5 	CALL SUBOPT_0xAA
004195 940e a3b9 	CALL SUBOPT_0xA2
004197 940e b4a7 	CALL __SUBD12
004199 01df      	MOVW R26,R30
00419a 01cb      	MOVW R24,R22
                +
00419b e6ed     +LDI R30 , LOW ( 0x16D )
00419c e0f1     +LDI R31 , HIGH ( 0x16D )
00419d e060     +LDI R22 , BYTE3 ( 0x16D )
00419e e070     +LDI R23 , BYTE4 ( 0x16D )
                 	__GETD1N 0x16D
00419f 940e b599 	CALL __DIVD21U
                +
0041a1 a3ee     +STD Y + 38 , R30
0041a2 a3ff     +STD Y + 38 + 1 , R31
0041a3 a768     +STD Y + 38 + 2 , R22
0041a4 a779     +STD Y + 38 + 3 , R23
                 	__PUTD1S 38
                 ; 0006 0050     jday = j - (yrs * 365) - day;           /* days since 1/1 of current year */
0041a5 940e a3ea 	CALL SUBOPT_0xAB
0041a7 940e a3ef 	CALL SUBOPT_0xAC
0041a9 940e a16e 	CALL SUBOPT_0x49
0041ab 940e a3f6 	CALL SUBOPT_0xAD
0041ad 940e a3e5 	CALL SUBOPT_0xAA
0041af 940e b4a7 	CALL __SUBD12
0041b1 940e a3fb 	CALL SUBOPT_0xAE
                 ; 0006 0051     if(tmp <= 365 && tmp >= 60)             /* if past 2/29 and a leap year then */
0041b3 940e a3ce 	CALL SUBOPT_0xA6
                +
0041b5 36ae     +CPI R26 , LOW ( 0x16E )
0041b6 e0e1     +LDI R30 , HIGH ( 0x16E )
0041b7 07be     +CPC R27 , R30
0041b8 e0e0     +LDI R30 , BYTE3 ( 0x16E )
0041b9 078e     +CPC R24 , R30
0041ba e0e0     +LDI R30 , BYTE4 ( 0x16E )
0041bb 079e     +CPC R25 , R30
                 	__CPD2N 0x16E
0041bc f428      	BRSH _0xC0006
0041bd 940e a3ce 	CALL SUBOPT_0xA6
0041bf 940e a3d3 	CALL SUBOPT_0xA7
0041c1 f408      	BRSH _0xC0007
                 _0xC0006:
0041c2 c006      	RJMP _0xC0005
                 _0xC0007:
                 ; 0006 0052     jday++;                                 /* add a leap day */
0041c3 940e a400 	CALL SUBOPT_0xAF
0041c5 940e a3e0 	CALL SUBOPT_0xA9
0041c7 940e a3fb 	CALL SUBOPT_0xAE
                 ; 0006 0053     yrs += 1968;                            /* calculate year */
                 _0xC0005:
0041c9 940e a3ea 	CALL SUBOPT_0xAB
                +
0041cb 55e0     +SUBI R30 , LOW ( - 1968 )
0041cc 4ff8     +SBCI R31 , HIGH ( - 1968 )
0041cd 4f6f     +SBCI R22 , BYTE3 ( - 1968 )
0041ce 4f7f     +SBCI R23 , BYTE4 ( - 1968 )
                 	__ADDD1N 1968
                +
0041cf a3ee     +STD Y + 38 , R30
0041d0 a3ff     +STD Y + 38 + 1 , R31
0041d1 a768     +STD Y + 38 + 2 , R22
0041d2 a779     +STD Y + 38 + 3 , R23
                 	__PUTD1S 38
                 ; 0006 0054     for(mon = 12; mon > 0; mon--)
                +
0041d3 e0ec     +LDI R30 , LOW ( 0xC )
0041d4 e0f0     +LDI R31 , HIGH ( 0xC )
0041d5 e060     +LDI R22 , BYTE3 ( 0xC )
0041d6 e070     +LDI R23 , BYTE4 ( 0xC )
                 	__GETD1N 0xC
                +
0041d7 a3ea     +STD Y + 34 , R30
0041d8 a3fb     +STD Y + 34 + 1 , R31
0041d9 a36c     +STD Y + 34 + 2 , R22
0041da a37d     +STD Y + 34 + 3 , R23
                 	__PUTD1S 34
                 _0xC0009:
                +
0041db a1aa     +LDD R26 , Y + 34
0041dc a1bb     +LDD R27 , Y + 34 + 1
0041dd a18c     +LDD R24 , Y + 34 + 2
0041de a19d     +LDD R25 , Y + 34 + 3
                 	__GETD2S 34
0041df 940e b68a 	CALL __CPD02
0041e1 f010      	BRLO PC+3
0041e2 940c 426f 	JMP _0xC000A
                 ; 0006 0055     {
                 ; 0006 0056         switch(mon)
0041e4 940e a405 	CALL SUBOPT_0xB0
                 ; 0006 0057         {
                 ; 0006 0058             case 1:     tmp = 0;
0041e6 940e a40a 	CALL SUBOPT_0xB1
0041e8 f431      	BRNE _0xC000E
0041e9 e0e0      	LDI  R30,LOW(0)
                +
0041ea 8fea     +STD Y + 26 , R30
0041eb 8feb     +STD Y + 26 + 1 , R30
0041ec 8fec     +STD Y + 26 + 2 , R30
0041ed 8fed     +STD Y + 26 + 3 , R30
                 	__CLRD1S 26
                 ; 0006 0059                         break;
0041ee c05b      	RJMP _0xC000D
                 ; 0006 005A             case 2:     tmp = 31;
                 _0xC000E:
0041ef 940e a412 	CALL SUBOPT_0xB2
0041f1 f429      	BRNE _0xC000F
                +
0041f2 e1ef     +LDI R30 , LOW ( 0x1F )
0041f3 e0f0     +LDI R31 , HIGH ( 0x1F )
0041f4 e060     +LDI R22 , BYTE3 ( 0x1F )
0041f5 e070     +LDI R23 , BYTE4 ( 0x1F )
                 	__GETD1N 0x1F
0041f6 c04f      	RJMP _0xC004D
                 ; 0006 005B                         break;
                 ; 0006 005C             case 3:     tmp = 59;
                 _0xC000F:
0041f7 940e a41a 	CALL SUBOPT_0xB3
0041f9 f429      	BRNE _0xC0010
                +
0041fa e3eb     +LDI R30 , LOW ( 0x3B )
0041fb e0f0     +LDI R31 , HIGH ( 0x3B )
0041fc e060     +LDI R22 , BYTE3 ( 0x3B )
0041fd e070     +LDI R23 , BYTE4 ( 0x3B )
                 	__GETD1N 0x3B
0041fe c047      	RJMP _0xC004D
                 ; 0006 005D                         break;
                 ; 0006 005E             case 4:     tmp = 90;
                 _0xC0010:
0041ff 940e a422 	CALL SUBOPT_0xB4
004201 f429      	BRNE _0xC0011
                +
004202 e5ea     +LDI R30 , LOW ( 0x5A )
004203 e0f0     +LDI R31 , HIGH ( 0x5A )
004204 e060     +LDI R22 , BYTE3 ( 0x5A )
004205 e070     +LDI R23 , BYTE4 ( 0x5A )
                 	__GETD1N 0x5A
004206 c03f      	RJMP _0xC004D
                 ; 0006 005F                         break;
                 ; 0006 0060             case 5:     tmp = 120;
                 _0xC0011:
004207 940e a42a 	CALL SUBOPT_0xB5
004209 f429      	BRNE _0xC0012
                +
00420a e7e8     +LDI R30 , LOW ( 0x78 )
00420b e0f0     +LDI R31 , HIGH ( 0x78 )
00420c e060     +LDI R22 , BYTE3 ( 0x78 )
00420d e070     +LDI R23 , BYTE4 ( 0x78 )
                 	__GETD1N 0x78
00420e c037      	RJMP _0xC004D
                 ; 0006 0061                         break;
                 ; 0006 0062             case 6:     tmp = 151;
                 _0xC0012:
00420f 940e a432 	CALL SUBOPT_0xB6
004211 f429      	BRNE _0xC0013
                +
004212 e9e7     +LDI R30 , LOW ( 0x97 )
004213 e0f0     +LDI R31 , HIGH ( 0x97 )
004214 e060     +LDI R22 , BYTE3 ( 0x97 )
004215 e070     +LDI R23 , BYTE4 ( 0x97 )
                 	__GETD1N 0x97
004216 c02f      	RJMP _0xC004D
                 ; 0006 0063                         break;
                 ; 0006 0064             case 7:     tmp = 181;
                 _0xC0013:
004217 940e a43a 	CALL SUBOPT_0xB7
004219 f429      	BRNE _0xC0014
                +
00421a ebe5     +LDI R30 , LOW ( 0xB5 )
00421b e0f0     +LDI R31 , HIGH ( 0xB5 )
00421c e060     +LDI R22 , BYTE3 ( 0xB5 )
00421d e070     +LDI R23 , BYTE4 ( 0xB5 )
                 	__GETD1N 0xB5
00421e c027      	RJMP _0xC004D
                 ; 0006 0065                         break;
                 ; 0006 0066             case 8:     tmp = 212;
                 _0xC0014:
00421f 940e a442 	CALL SUBOPT_0xB8
004221 f429      	BRNE _0xC0015
                +
004222 ede4     +LDI R30 , LOW ( 0xD4 )
004223 e0f0     +LDI R31 , HIGH ( 0xD4 )
004224 e060     +LDI R22 , BYTE3 ( 0xD4 )
004225 e070     +LDI R23 , BYTE4 ( 0xD4 )
                 	__GETD1N 0xD4
004226 c01f      	RJMP _0xC004D
                 ; 0006 0067                         break;
                 ; 0006 0068             case 9:     tmp = 243;
                 _0xC0015:
004227 940e a44a 	CALL SUBOPT_0xB9
004229 f429      	BRNE _0xC0016
                +
00422a efe3     +LDI R30 , LOW ( 0xF3 )
00422b e0f0     +LDI R31 , HIGH ( 0xF3 )
00422c e060     +LDI R22 , BYTE3 ( 0xF3 )
00422d e070     +LDI R23 , BYTE4 ( 0xF3 )
                 	__GETD1N 0xF3
00422e c017      	RJMP _0xC004D
                 ; 0006 0069                         break;
                 ; 0006 006A             case 10:    tmp = 273;
                 _0xC0016:
00422f 940e a452 	CALL SUBOPT_0xBA
004231 f429      	BRNE _0xC0017
                +
004232 e1e1     +LDI R30 , LOW ( 0x111 )
004233 e0f1     +LDI R31 , HIGH ( 0x111 )
004234 e060     +LDI R22 , BYTE3 ( 0x111 )
004235 e070     +LDI R23 , BYTE4 ( 0x111 )
                 	__GETD1N 0x111
004236 c00f      	RJMP _0xC004D
                 ; 0006 006B                         break;
                 ; 0006 006C             case 11:    tmp = 304;
                 _0xC0017:
004237 940e a45a 	CALL SUBOPT_0xBB
004239 f429      	BRNE _0xC0018
                +
00423a e3e0     +LDI R30 , LOW ( 0x130 )
00423b e0f1     +LDI R31 , HIGH ( 0x130 )
00423c e060     +LDI R22 , BYTE3 ( 0x130 )
00423d e070     +LDI R23 , BYTE4 ( 0x130 )
                 	__GETD1N 0x130
00423e c007      	RJMP _0xC004D
                 ; 0006 006D                         break;
                 ; 0006 006E             case 12:    tmp = 334;
                 _0xC0018:
00423f 940e a462 	CALL SUBOPT_0xBC
004241 f441      	BRNE _0xC000D
                +
004242 e4ee     +LDI R30 , LOW ( 0x14E )
004243 e0f1     +LDI R31 , HIGH ( 0x14E )
004244 e060     +LDI R22 , BYTE3 ( 0x14E )
004245 e070     +LDI R23 , BYTE4 ( 0x14E )
                 	__GETD1N 0x14E
                 _0xC004D:
                +
004246 8fea     +STD Y + 26 , R30
004247 8ffb     +STD Y + 26 + 1 , R31
004248 8f6c     +STD Y + 26 + 2 , R22
004249 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 006F                         break;
                 ; 0006 0070         }
                 _0xC000D:
                 ; 0006 0071         if((mon > 2) && !(yrs % 4))         /* adjust for leap year */
                +
00424a a1aa     +LDD R26 , Y + 34
00424b a1bb     +LDD R27 , Y + 34 + 1
00424c a18c     +LDD R24 , Y + 34 + 2
00424d a19d     +LDD R25 , Y + 34 + 3
                 	__GETD2S 34
00424e 940e a46a 	CALL SUBOPT_0xBD
004250 f020      	BRLO _0xC001B
004251 940e a3ea 	CALL SUBOPT_0xAB
004253 70e3      	ANDI R30,LOW(0x3)
004254 f009      	BREQ _0xC001C
                 _0xC001B:
004255 c008      	RJMP _0xC001A
                 _0xC001C:
                 ; 0006 0072         tmp++;
004256 940e a472 	CALL SUBOPT_0xBE
004258 940e a3e0 	CALL SUBOPT_0xA9
                +
00425a 8fea     +STD Y + 26 , R30
00425b 8ffb     +STD Y + 26 + 1 , R31
00425c 8f6c     +STD Y + 26 + 2 , R22
00425d 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 0073         if(jday >= tmp) break;
                 _0xC001A:
00425e 940e a472 	CALL SUBOPT_0xBE
004260 940e a477 	CALL SUBOPT_0xBF
004262 940e b695 	CALL __CPD21
004264 f450      	BRSH _0xC000A
                 ; 0006 0074     }
004265 940e a405 	CALL SUBOPT_0xB0
004267 9731      	SBIW R30,1
004268 4060      	SBCI R22,0
004269 4070      	SBCI R23,0
                +
00426a a3ea     +STD Y + 34 , R30
00426b a3fb     +STD Y + 34 + 1 , R31
00426c a36c     +STD Y + 34 + 2 , R22
00426d a37d     +STD Y + 34 + 3 , R23
                 	__PUTD1S 34
00426e cf6c      	RJMP _0xC0009
                 _0xC000A:
                 ; 0006 0075     day = jday - tmp + 1;                   /* calculate day in month */
00426f 940e a3ce 	CALL SUBOPT_0xA6
004271 940e a400 	CALL SUBOPT_0xAF
004273 940e b4a7 	CALL __SUBD12
004275 940e a47c 	CALL SUBOPT_0xC0
004277 940e a3c9 	CALL SUBOPT_0xA5
                 ; 0006 0076 
                 ; 0006 0077     rtcCov->year    = yrs;
004279 940e a3ea 	CALL SUBOPT_0xAB
00427b a5aa      	LDD  R26,Y+42
00427c a5bb      	LDD  R27,Y+42+1
00427d 940e b605 	CALL __PUTDP1
                 ; 0006 0078     rtcCov->month   = mon;
00427f 940e a405 	CALL SUBOPT_0xB0
                +
004281 a5aa     +LDD R26 , Y + 42
004282 a5bb     +LDD R27 , Y + 42 + 1
004283 9614     +ADIW R26 , 4
004284 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 42,4
                 ; 0006 0079     rtcCov->date    = day;
004286 940e a3db 	CALL SUBOPT_0xA8
                +
004288 a5aa     +LDD R26 , Y + 42
004289 a5bb     +LDD R27 , Y + 42 + 1
00428a 9618     +ADIW R26 , 8
00428b 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 42,8
                 ; 0006 007A     rtcCov->hour    = hrs;
00428d 940e a481 	CALL SUBOPT_0xC1
                +
00428f a5aa     +LDD R26 , Y + 42
004290 a5bb     +LDD R27 , Y + 42 + 1
004291 961c     +ADIW R26 , 12
004292 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 42,12
                 ; 0006 007B     rtcCov->min     = min;
004294 940e a199 	CALL SUBOPT_0x50
                +
004296 a5aa     +LDD R26 , Y + 42
004297 a5bb     +LDD R27 , Y + 42 + 1
004298 9650     +ADIW R26 , 16
004299 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 42,16
                 ; 0006 007C     rtcCov->sec     = sec;
00429b 940e a486 	CALL SUBOPT_0xC2
                +
00429d a5aa     +LDD R26 , Y + 42
00429e a5bb     +LDD R27 , Y + 42 + 1
00429f 9654     +ADIW R26 , 20
0042a0 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 42,20
                 ; 0006 007D     rtcCov->day     = dow;
0042a2 01f8      	MOVW R30,R16
                +
0042a3 a5aa     +LDD R26 , Y + 42
0042a4 a5bb     +LDD R27 , Y + 42 + 1
0042a5 9658     +ADIW R26 , 24
0042a6 93ed     +ST X + , R30
0042a7 93fc     +ST X , R31
                 	__PUTW1SNS 42,24
                 ; 0006 007E 
                 ; 0006 007F     return 0;
0042a8 940e a48b 	CALL SUBOPT_0xC3
0042aa 96e0      	ADIW R28,48
0042ab 9508      	RET
                 ; 0006 0080 }
                 ;/*============================================================*/
                 ;unsigned long int date_to_binary(struct rtc_structure rtcSrc)
                 ; 0006 0083 {
                 _date_to_binary:
                 ; 0006 0084     /* ---- convert date to elapsed days in binary ---- */
                 ; 0006 0085     unsigned long x;                                        // total second
                 ; 0006 0086 
                 ; 0006 0087     /* the following is broken down for clarity */
                 ; 0006 0088     x = (unsigned long)365 * (rtcSrc.year - 1970);          /* calculate number of days for previous years */
0042ac 9724      	SBIW R28,4
                 ;	rtcSrc -> Y+4
                 ;	x -> Y+0
0042ad 940e a2ac 	CALL SUBOPT_0x77
                +
0042af 5be2     +SUBI R30 , LOW ( 1970 )
0042b0 40f7     +SBCI R31 , HIGH ( 1970 )
0042b1 4060     +SBCI R22 , BYTE3 ( 1970 )
0042b2 4070     +SBCI R23 , BYTE4 ( 1970 )
                 	__SUBD1N 1970
0042b3 940e a3ef 	CALL SUBOPT_0xAC
0042b5 940e a34c 	CALL SUBOPT_0x8D
                 ; 0006 0089     x += ((rtcSrc.year - 1969) >> 2);                       /* add a day for each leap year */
0042b7 940e a2ac 	CALL SUBOPT_0x77
                +
0042b9 5be1     +SUBI R30 , LOW ( 1969 )
0042ba 40f7     +SBCI R31 , HIGH ( 1969 )
0042bb 4060     +SBCI R22 , BYTE3 ( 1969 )
0042bc 4070     +SBCI R23 , BYTE4 ( 1969 )
                 	__SUBD1N 1969
0042bd 940e b503 	CALL __LSRD1
0042bf 940e b503 	CALL __LSRD1
0042c1 940e a490 	CALL SUBOPT_0xC4
                 ; 0006 008A     if((rtcSrc.month > 2) && (rtcSrc.year % 4 == 0))        /* add a day if current year is leap and past Feb 29th */
0042c3 940e a492 	CALL SUBOPT_0xC5
0042c5 940e a46a 	CALL SUBOPT_0xBD
0042c7 f018      	BRLO _0xC001F
0042c8 81ec      	LDD  R30,Y+4
0042c9 70e3      	ANDI R30,LOW(0x3)
0042ca f009      	BREQ _0xC0020
                 _0xC001F:
0042cb c006      	RJMP _0xC001E
                 _0xC0020:
                 ; 0006 008B         x++;
0042cc 940e a2a0 	CALL SUBOPT_0x75
0042ce 940e a3e0 	CALL SUBOPT_0xA9
0042d0 940e a34c 	CALL SUBOPT_0x8D
                 ; 0006 008C 
                 ; 0006 008D     switch(rtcSrc.month)
                 _0xC001E:
0042d2 940e a118 	CALL SUBOPT_0x3E
                 ; 0006 008E     {
                 ; 0006 008F         case 1:     x += 0;
0042d4 940e a40a 	CALL SUBOPT_0xB1
0042d6 f419      	BRNE _0xC0024
0042d7 940e a2a0 	CALL SUBOPT_0x75
0042d9 c06d      	RJMP _0xC004E
                 ; 0006 0090                     break;
                 ; 0006 0091         case 2:     x += 31;
                 _0xC0024:
0042da 940e a412 	CALL SUBOPT_0xB2
0042dc f439      	BRNE _0xC0025
0042dd 940e a2a0 	CALL SUBOPT_0x75
                +
0042df 5ee1     +SUBI R30 , LOW ( - 31 )
0042e0 4fff     +SBCI R31 , HIGH ( - 31 )
0042e1 4f6f     +SBCI R22 , BYTE3 ( - 31 )
0042e2 4f7f     +SBCI R23 , BYTE4 ( - 31 )
                 	__ADDD1N 31
0042e3 c063      	RJMP _0xC004E
                 ; 0006 0092                     break;
                 ; 0006 0093         case 3:     x += 59;
                 _0xC0025:
0042e4 940e a41a 	CALL SUBOPT_0xB3
0042e6 f439      	BRNE _0xC0026
0042e7 940e a2a0 	CALL SUBOPT_0x75
                +
0042e9 5ce5     +SUBI R30 , LOW ( - 59 )
0042ea 4fff     +SBCI R31 , HIGH ( - 59 )
0042eb 4f6f     +SBCI R22 , BYTE3 ( - 59 )
0042ec 4f7f     +SBCI R23 , BYTE4 ( - 59 )
                 	__ADDD1N 59
0042ed c059      	RJMP _0xC004E
                 ; 0006 0094                     break;
                 ; 0006 0095         case 4:     x += 90;
                 _0xC0026:
0042ee 940e a422 	CALL SUBOPT_0xB4
0042f0 f439      	BRNE _0xC0027
0042f1 940e a2a0 	CALL SUBOPT_0x75
                +
0042f3 5ae6     +SUBI R30 , LOW ( - 90 )
0042f4 4fff     +SBCI R31 , HIGH ( - 90 )
0042f5 4f6f     +SBCI R22 , BYTE3 ( - 90 )
0042f6 4f7f     +SBCI R23 , BYTE4 ( - 90 )
                 	__ADDD1N 90
0042f7 c04f      	RJMP _0xC004E
                 ; 0006 0096                     break;
                 ; 0006 0097         case 5:     x += 120;
                 _0xC0027:
0042f8 940e a42a 	CALL SUBOPT_0xB5
0042fa f439      	BRNE _0xC0028
0042fb 940e a2a0 	CALL SUBOPT_0x75
                +
0042fd 58e8     +SUBI R30 , LOW ( - 120 )
0042fe 4fff     +SBCI R31 , HIGH ( - 120 )
0042ff 4f6f     +SBCI R22 , BYTE3 ( - 120 )
004300 4f7f     +SBCI R23 , BYTE4 ( - 120 )
                 	__ADDD1N 120
004301 c045      	RJMP _0xC004E
                 ; 0006 0098                     break;
                 ; 0006 0099         case 6:     x += 151;
                 _0xC0028:
004302 940e a432 	CALL SUBOPT_0xB6
004304 f439      	BRNE _0xC0029
004305 940e a2a0 	CALL SUBOPT_0x75
                +
004307 56e9     +SUBI R30 , LOW ( - 151 )
004308 4fff     +SBCI R31 , HIGH ( - 151 )
004309 4f6f     +SBCI R22 , BYTE3 ( - 151 )
00430a 4f7f     +SBCI R23 , BYTE4 ( - 151 )
                 	__ADDD1N 151
00430b c03b      	RJMP _0xC004E
                 ; 0006 009A                     break;
                 ; 0006 009B         case 7:     x += 181;
                 _0xC0029:
00430c 940e a43a 	CALL SUBOPT_0xB7
00430e f439      	BRNE _0xC002A
00430f 940e a2a0 	CALL SUBOPT_0x75
                +
004311 54eb     +SUBI R30 , LOW ( - 181 )
004312 4fff     +SBCI R31 , HIGH ( - 181 )
004313 4f6f     +SBCI R22 , BYTE3 ( - 181 )
004314 4f7f     +SBCI R23 , BYTE4 ( - 181 )
                 	__ADDD1N 181
004315 c031      	RJMP _0xC004E
                 ; 0006 009C                     break;
                 ; 0006 009D         case 8:     x += 212;
                 _0xC002A:
004316 940e a442 	CALL SUBOPT_0xB8
004318 f439      	BRNE _0xC002B
004319 940e a2a0 	CALL SUBOPT_0x75
                +
00431b 52ec     +SUBI R30 , LOW ( - 212 )
00431c 4fff     +SBCI R31 , HIGH ( - 212 )
00431d 4f6f     +SBCI R22 , BYTE3 ( - 212 )
00431e 4f7f     +SBCI R23 , BYTE4 ( - 212 )
                 	__ADDD1N 212
00431f c027      	RJMP _0xC004E
                 ; 0006 009E                     break;
                 ; 0006 009F         case 9:     x += 243;
                 _0xC002B:
004320 940e a44a 	CALL SUBOPT_0xB9
004322 f439      	BRNE _0xC002C
004323 940e a2a0 	CALL SUBOPT_0x75
                +
004325 50ed     +SUBI R30 , LOW ( - 243 )
004326 4fff     +SBCI R31 , HIGH ( - 243 )
004327 4f6f     +SBCI R22 , BYTE3 ( - 243 )
004328 4f7f     +SBCI R23 , BYTE4 ( - 243 )
                 	__ADDD1N 243
004329 c01d      	RJMP _0xC004E
                 ; 0006 00A0                     break;
                 ; 0006 00A1         case 10:    x += 273;
                 _0xC002C:
00432a 940e a452 	CALL SUBOPT_0xBA
00432c f439      	BRNE _0xC002D
00432d 940e a2a0 	CALL SUBOPT_0x75
                +
00432f 5eef     +SUBI R30 , LOW ( - 273 )
004330 4ffe     +SBCI R31 , HIGH ( - 273 )
004331 4f6f     +SBCI R22 , BYTE3 ( - 273 )
004332 4f7f     +SBCI R23 , BYTE4 ( - 273 )
                 	__ADDD1N 273
004333 c013      	RJMP _0xC004E
                 ; 0006 00A2                     break;
                 ; 0006 00A3         case 11:    x += 304;
                 _0xC002D:
004334 940e a45a 	CALL SUBOPT_0xBB
004336 f439      	BRNE _0xC002E
004337 940e a2a0 	CALL SUBOPT_0x75
                +
004339 5de0     +SUBI R30 , LOW ( - 304 )
00433a 4ffe     +SBCI R31 , HIGH ( - 304 )
00433b 4f6f     +SBCI R22 , BYTE3 ( - 304 )
00433c 4f7f     +SBCI R23 , BYTE4 ( - 304 )
                 	__ADDD1N 304
00433d c009      	RJMP _0xC004E
                 ; 0006 00A4                     break;
                 ; 0006 00A5         case 12:    x += 334;
                 _0xC002E:
00433e 940e a462 	CALL SUBOPT_0xBC
004340 f441      	BRNE _0xC0023
004341 940e a2a0 	CALL SUBOPT_0x75
                +
004343 5be2     +SUBI R30 , LOW ( - 334 )
004344 4ffe     +SBCI R31 , HIGH ( - 334 )
004345 4f6f     +SBCI R22 , BYTE3 ( - 334 )
004346 4f7f     +SBCI R23 , BYTE4 ( - 334 )
                 	__ADDD1N 334
                 _0xC004E:
004347 940e b620 	CALL __PUTD1S0
                 ; 0006 00A6                     break;
                 ; 0006 00A7     }
                 _0xC0023:
                 ; 0006 00A8 
                 ; 0006 00A9     x += rtcSrc.date - 1;                       /* finally, add the days into the current month */
004349 940e a497 	CALL SUBOPT_0xC6
00434b 940e a49c 	CALL SUBOPT_0xC7
00434d 940e a490 	CALL SUBOPT_0xC4
                 ; 0006 00AA     x = x * 86400;                              /* and calculate the number of seconds in all those days (1 day = 86400 second)*/
00434f 940e a2a0 	CALL SUBOPT_0x75
                +
004351 e8a0     +LDI R26 , LOW ( 0x15180 )
004352 e5b1     +LDI R27 , HIGH ( 0x15180 )
004353 e081     +LDI R24 , BYTE3 ( 0x15180 )
004354 e090     +LDI R25 , BYTE4 ( 0x15180 )
                 	__GETD2N 0x15180
004355 940e b543 	CALL __MULD12U
004357 940e a34c 	CALL SUBOPT_0x8D
                 ; 0006 00AB     x += (unsigned long)rtcSrc.hour * 1800;     /* add the number of seconds in the hours */
004359 940e a4a1 	CALL SUBOPT_0xC8
                 ; 0006 00AC     x += (unsigned long)rtcSrc.hour * 1800;     /* add the number of seconds in the hours */
00435b 940e a4a1 	CALL SUBOPT_0xC8
                 ; 0006 00AD     x += (unsigned long)rtcSrc.min * 60;        /* ditto the minutes */
00435d 940e a4a9 	CALL SUBOPT_0xC9
00435f 940e a3a3 	CALL SUBOPT_0x9E
004361 940e a490 	CALL SUBOPT_0xC4
                 ; 0006 00AE     x += rtcSrc.sec;                            /* finally, the seconds */
004363 940e a4ae 	CALL SUBOPT_0xCA
004365 940e a490 	CALL SUBOPT_0xC4
                 ; 0006 00AF 
                 ; 0006 00B0     return(x);
004367 940e a2a0 	CALL SUBOPT_0x75
004369 966e      	ADIW R28,30
00436a 9508      	RET
                 ; 0006 00B1 }
                 ;/*============================================================*/
                 ;int RTC_setBinary(unsigned long int rtc_bin)
                 ; 0006 00B4 {
                 _RTC_setBinary:
                 ; 0006 00B5     unsigned long int rtc_current;
                 ; 0006 00B6     unsigned long int rtc_diff;
                 ; 0006 00B7     unsigned char a, b, c, d;
                 ; 0006 00B8 
                 ; 0006 00B9     rtc_current = DS1672_read();
00436b 940e b62f 	CALL __PUTPARD2
00436d 9728      	SBIW R28,8
00436e 940e b69c 	CALL __SAVELOCR4
                 ;	rtc_bin -> Y+12
                 ;	rtc_current -> Y+8
                 ;	rtc_diff -> Y+4
                 ;	a -> R17
                 ;	b -> R16
                 ;	c -> R19
                 ;	d -> R18
004370 940e a111 	CALL SUBOPT_0x3D
                 ; 0006 00BA 
                 ; 0006 00BB     if(rtc_current > rtc_bin){
004372 940e a4b3 	CALL SUBOPT_0xCB
004374 f418      	BRSH _0xC0030
                 ; 0006 00BC         rtc_diff = (unsigned long int) (rtc_current - rtc_bin);
004375 940e a4b8 	CALL SUBOPT_0xCC
                 ; 0006 00BD     }
                 ; 0006 00BE     else if(rtc_bin > rtc_current){
004377 c00b      	RJMP _0xC0031
                 _0xC0030:
004378 940e a4bd 	CALL SUBOPT_0xCD
00437a f418      	BRSH _0xC0032
                 ; 0006 00BF         rtc_diff = (unsigned long int) (rtc_bin - rtc_current);
00437b 940e a4c2 	CALL SUBOPT_0xCE
                 ; 0006 00C0     }
                 ; 0006 00C1     else{
00437d c005      	RJMP _0xC0033
                 _0xC0032:
                 ; 0006 00C2         // set value and current value are equal
                 ; 0006 00C3         //printDebug("\r\nset time and current time are equal\r\n");
                 ; 0006 00C4         rtc_diff = 0;
00437e e0e0      	LDI  R30,LOW(0)
                +
00437f 83ec     +STD Y + 4 , R30
004380 83ed     +STD Y + 4 + 1 , R30
004381 83ee     +STD Y + 4 + 2 , R30
004382 83ef     +STD Y + 4 + 3 , R30
                 	__CLRD1S 4
                 ; 0006 00C5     }
                 _0xC0033:
                 _0xC0031:
                 ; 0006 00C6 
                 ; 0006 00C7     if((rtc_diff >= 0) && (rtc_diff < 10)){
004383 940e a37b 	CALL SUBOPT_0x96
004385 940e b686 	CALL __CPD20
004387 f018      	BRLO _0xC0035
004388 940e a4c7 	CALL SUBOPT_0xCF
00438a f008      	BRLO _0xC0036
                 _0xC0035:
00438b c003      	RJMP _0xC0034
                 _0xC0036:
                 ; 0006 00C8         //printDebug("\r\nset time is too close to current time, not set!!!\r\n");
                 ; 0006 00C9         //printDebug("\r\nset time is too close to current time, not set!!! c[%ld] s[%ld]\r\n", rtc_current, rtc_bin);
                 ; 0006 00CA         return -1;
00438c efef      	LDI  R30,LOW(65535)
00438d efff      	LDI  R31,HIGH(65535)
00438e c016      	RJMP _0x20E007F
                 ; 0006 00CB     }
                 ; 0006 00CC 
                 ; 0006 00CD     printDebug("c_time[%ld] & s_time[%ld] => diff[%ld]\r\n",rtc_current,rtc_bin,rtc_diff);
                 _0xC0034:
00438f 940e a4d0 	CALL SUBOPT_0xD0
004391 940e a4d5 	CALL SUBOPT_0xD1
004393 940e a1c1 	CALL SUBOPT_0x56
                 ; 0006 00CE 
                 ; 0006 00CF     a = (rtc_bin & 0xff);
004395 940e a4d9 	CALL SUBOPT_0xD2
                 ; 0006 00D0     b = ((rtc_bin >> 8) & 0xff);
                 ; 0006 00D1     c = ((rtc_bin >> 16) & 0xff);
                 ; 0006 00D2     d = ((rtc_bin >> 24) & 0xff);
                 ; 0006 00D3 
                 ; 0006 00D4     #asm("cli")
004397 94f8      	cli
                 ; 0006 00D5     i2c_start();
004398 940e a366 	CALL SUBOPT_0x92
                 ; 0006 00D6     i2c_write(ADDRTC);          /* write slave address, write 1672 */
                 ; 0006 00D7     i2c_write(0x00);            /* write register address, 1st clock register */
00439a 940e a4ea 	CALL SUBOPT_0xD3
                 ; 0006 00D8     i2c_write(a);
                 ; 0006 00D9     i2c_write(b);
                 ; 0006 00DA     i2c_write(c);
                 ; 0006 00DB     i2c_write(d);
                 ; 0006 00DC     i2c_stop();
                 ; 0006 00DD     #asm("sei")
00439c 9478      	sei
                 ; 0006 00DE 
                 ; 0006 00DF     printDebug(">> RTC_setBinary RTC Sync.\r\n");
                +
00439d e0e3     +LDI R30 , LOW ( 2 * _0xC0000 + ( 41 ) )
00439e e1f0     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 41 ) )
00439f e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 41 ) )
0043a0 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 41 ) )
                 	__POINTD1FN _0xC0000,41
0043a1 940e 9f66 	CALL SUBOPT_0x2
                 ; 0006 00E0 
                 ; 0006 00E1     /* 10ms delay to complete the write operation */
                 ; 0006 00E2     delay_ms(10);
0043a3 940e a36f 	CALL SUBOPT_0x94
                 ; 0006 00E3 
                 ; 0006 00E4     return 0;
                 _0x20E007F:
0043a5 940e b6a3 	CALL __LOADLOCR4
0043a7 9660      	ADIW R28,16
0043a8 9508      	RET
                 ; 0006 00E5 }
                 ;/*============================================================*/
                 ;int RTC_setDateTime(struct rtc_structure rtcSrc,int timezone)
                 ; 0006 00E8 {
                 _RTC_setDateTime:
                 ; 0006 00E9     unsigned long int rtc_bin;
                 ; 0006 00EA     unsigned long int rtc_current;
                 ; 0006 00EB     unsigned long int rtc_diff;
                 ; 0006 00EC     unsigned char a, b, c, d;
                 ; 0006 00ED 
                 ; 0006 00EE     if((timezone > 14) || (timezone < -12)){
0043a9 940e a4f8 	CALL SUBOPT_0xD4
                 ;	rtcSrc -> Y+18
                 ;	timezone -> Y+16
                 ;	rtc_bin -> Y+12
                 ;	rtc_current -> Y+8
                 ;	rtc_diff -> Y+4
                 ;	a -> R17
                 ;	b -> R16
                 ;	c -> R19
                 ;	d -> R18
0043ab 89a8      	LDD  R26,Y+16
0043ac 89b9      	LDD  R27,Y+16+1
0043ad 971f      	SBIW R26,15
0043ae f434      	BRGE _0xC0038
0043af 89a8      	LDD  R26,Y+16
0043b0 89b9      	LDD  R27,Y+16+1
0043b1 3fa4      	CPI  R26,LOW(0xFFF4)
0043b2 efef      	LDI  R30,HIGH(0xFFF4)
0043b3 07be      	CPC  R27,R30
0043b4 f46c      	BRGE _0xC0037
                 _0xC0038:
                 ; 0006 00EF         printDebug("<RTC_setDateTime> Timezone out of range (%+d)\r\n",timezone);
                +
0043b5 e2e0     +LDI R30 , LOW ( 2 * _0xC0000 + ( 70 ) )
0043b6 e1f0     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 70 ) )
0043b7 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 70 ) )
0043b8 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 70 ) )
                 	__POINTD1FN _0xC0000,70
0043b9 940e b62a 	CALL __PUTPARD1
0043bb 89ec      	LDD  R30,Y+20
0043bc 89fd      	LDD  R31,Y+20+1
0043bd 940e a4fe 	CALL SUBOPT_0xD5
                 ; 0006 00F0         return -2;
0043bf efee      	LDI  R30,LOW(65534)
0043c0 efff      	LDI  R31,HIGH(65534)
0043c1 c049      	RJMP _0x20E007E
                 ; 0006 00F1     }
                 ; 0006 00F2 
                 ; 0006 00F3     rtc_bin = date_to_binary(rtcSrc);
                 _0xC0037:
0043c2 01fe      	MOVW R30,R28
0043c3 9672      	ADIW R30,18
0043c4 e1aa      	LDI  R26,26
0043c5 940e b634 	CALL __PUTPARL
0043c7 dee4      	RCALL _date_to_binary
0043c8 940e a503 	CALL SUBOPT_0xD6
                 ; 0006 00F4 
                 ; 0006 00F5     rtc_bin = rtc_bin + (int)(timezone * 60 * 60 * -1);
0043ca 89e8      	LDD  R30,Y+16
0043cb 89f9      	LDD  R31,Y+16+1
0043cc 940e a508 	CALL SUBOPT_0xD7
0043ce 940e a508 	CALL SUBOPT_0xD7
0043d0 efaf      	LDI  R26,LOW(65535)
0043d1 efbf      	LDI  R27,HIGH(65535)
0043d2 940e b569 	CALL __MULW12
0043d4 940e 9fa5 	CALL SUBOPT_0x9
0043d6 940e a390 	CALL SUBOPT_0x9A
0043d8 940e a50d 	CALL SUBOPT_0xD8
                 ; 0006 00F6 
                 ; 0006 00F7     raw_rtc = rtc_bin;
0043da 940e a50f 	CALL SUBOPT_0xD9
                 ; 0006 00F8 
                 ; 0006 00F9     rtc_current = DS1672_read();
0043dc 940e a111 	CALL SUBOPT_0x3D
                 ; 0006 00FA 
                 ; 0006 00FB     if(rtc_current > rtc_bin){
0043de 940e a4b3 	CALL SUBOPT_0xCB
0043e0 f418      	BRSH _0xC003A
                 ; 0006 00FC         rtc_diff = (unsigned long int) (rtc_current - rtc_bin);
0043e1 940e a4b8 	CALL SUBOPT_0xCC
                 ; 0006 00FD     }
                 ; 0006 00FE     else if(rtc_bin > rtc_current){
0043e3 c00b      	RJMP _0xC003B
                 _0xC003A:
0043e4 940e a4bd 	CALL SUBOPT_0xCD
0043e6 f418      	BRSH _0xC003C
                 ; 0006 00FF         rtc_diff = (unsigned long int) (rtc_bin - rtc_current);
0043e7 940e a4c2 	CALL SUBOPT_0xCE
                 ; 0006 0100     }
                 ; 0006 0101     else{
0043e9 c005      	RJMP _0xC003D
                 _0xC003C:
                 ; 0006 0102         // set value and current value are equal
                 ; 0006 0103         rtc_diff = 0;
0043ea e0e0      	LDI  R30,LOW(0)
                +
0043eb 83ec     +STD Y + 4 , R30
0043ec 83ed     +STD Y + 4 + 1 , R30
0043ed 83ee     +STD Y + 4 + 2 , R30
0043ee 83ef     +STD Y + 4 + 3 , R30
                 	__CLRD1S 4
                 ; 0006 0104     }
                 _0xC003D:
                 _0xC003B:
                 ; 0006 0105 
                 ; 0006 0106     if((rtc_diff >= 0) && (rtc_diff < 10)){
0043ef 940e a37b 	CALL SUBOPT_0x96
0043f1 940e b686 	CALL __CPD20
0043f3 f018      	BRLO _0xC003F
0043f4 940e a4c7 	CALL SUBOPT_0xCF
0043f6 f008      	BRLO _0xC0040
                 _0xC003F:
0043f7 c003      	RJMP _0xC003E
                 _0xC0040:
                 ; 0006 0107         //printDebug("\r\nset time is too close to current time, not set!!! c[%ld] s[%ld]\r\n", rtc_current, rtc_bin);
                 ; 0006 0108         return -1;
0043f8 efef      	LDI  R30,LOW(65535)
0043f9 efff      	LDI  R31,HIGH(65535)
0043fa c010      	RJMP _0x20E007E
                 ; 0006 0109     }
                 ; 0006 010A 
                 ; 0006 010B     printDebug("c_time[%ld] & s_time[%ld] => diff[%ld]\r\n",rtc_current,rtc_bin,rtc_diff);
                 _0xC003E:
0043fb 940e a4d0 	CALL SUBOPT_0xD0
0043fd 940e a4d5 	CALL SUBOPT_0xD1
0043ff 940e a1c1 	CALL SUBOPT_0x56
                 ; 0006 010C 
                 ; 0006 010D     a = (rtc_bin & 0xff);
004401 940e a4d9 	CALL SUBOPT_0xD2
                 ; 0006 010E     b = ((rtc_bin >> 8) & 0xff);
                 ; 0006 010F     c = ((rtc_bin >> 16) & 0xff);
                 ; 0006 0110     d = ((rtc_bin >> 24) & 0xff);
                 ; 0006 0111 
                 ; 0006 0112     #asm("cli")
004403 94f8      	cli
                 ; 0006 0113     i2c_start();
004404 940e a366 	CALL SUBOPT_0x92
                 ; 0006 0114     i2c_write(ADDRTC);          /* write slave address, write 1672 */
                 ; 0006 0115     i2c_write(0x00);            /* write register address, 1st clock register */
004406 940e a4ea 	CALL SUBOPT_0xD3
                 ; 0006 0116     i2c_write(a);
                 ; 0006 0117     i2c_write(b);
                 ; 0006 0118     i2c_write(c);
                 ; 0006 0119     i2c_write(d);
                 ; 0006 011A     i2c_stop();
                 ; 0006 011B     #asm("sei")
004408 9478      	sei
                 ; 0006 011C 
                 ; 0006 011D     /* 10ms delay to complete the write operation */
                 ; 0006 011E     delay_ms(10);
004409 940e a36f 	CALL SUBOPT_0x94
                 ; 0006 011F 
                 ; 0006 0120     return 0;
                 _0x20E007E:
00440b 940e b6a3 	CALL __LOADLOCR4
00440d 96ac      	ADIW R28,44
00440e 9508      	RET
                 ; 0006 0121 }
                 ;/*============================================================*/
                 ;int RTC_getDateTime(struct rtc_structure *rtcPtr, int timezone)
                 ; 0006 0124 {
                 _RTC_getDateTime:
                 ; 0006 0125     unsigned long r_rtc;
                 ; 0006 0126     int flag;
                 ; 0006 0127 
                 ; 0006 0128     r_rtc = DS1672_read();
00440f 940e a518 	CALL SUBOPT_0xDA
004411 930a      	ST   -Y,R16
                 ;	*rtcPtr -> Y+8
                 ;	timezone -> Y+6
                 ;	r_rtc -> Y+2
                 ;	flag -> R16,R17
004412 dccd      	RCALL _DS1672_read
004413 940e a51d 	CALL SUBOPT_0xDB
                 ; 0006 0129     if(r_rtc == 0xFFFFFFFF){
004415 940e a091 	CALL SUBOPT_0x2B
004417 f469      	BRNE _0xC0041
                 ; 0006 012A         flag    = RTC_BACKUP;
                +
004418 e001     +LDI R16 , LOW ( 1 )
004419 e010     +LDI R17 , HIGH ( 1 )
                 	__GETWRN 16,17,1
                 ; 0006 012B         r_rtc   = raw_rtc;
00441a 91e0 1430 	LDS  R30,_raw_rtc
00441c 91f0 1431 	LDS  R31,_raw_rtc+1
00441e 9160 1432 	LDS  R22,_raw_rtc+2
004420 9170 1433 	LDS  R23,_raw_rtc+3
004422 940e a3aa 	CALL SUBOPT_0x9F
                 ; 0006 012C     }
                 ; 0006 012D     else{
004424 c006      	RJMP _0xC0042
                 _0xC0041:
                 ; 0006 012E         flag    = RTC_REAL;
                +
004425 e000     +LDI R16 , LOW ( 0 )
004426 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 ; 0006 012F         raw_rtc = r_rtc;
004427 940e a3af 	CALL SUBOPT_0xA0
004429 940e a50f 	CALL SUBOPT_0xD9
                 ; 0006 0130     }
                 _0xC0042:
                 ; 0006 0131 
                 ; 0006 0132     r_rtc = r_rtc + (int)(timezone * 60 * 60);
00442b 81ee      	LDD  R30,Y+6
00442c 81ff      	LDD  R31,Y+6+1
00442d 940e a508 	CALL SUBOPT_0xD7
00442f 940e a508 	CALL SUBOPT_0xD7
004431 940e a3b4 	CALL SUBOPT_0xA1
004433 940e a390 	CALL SUBOPT_0x9A
004435 940e a3aa 	CALL SUBOPT_0x9F
                 ; 0006 0133 
                 ; 0006 0134     binary_to_date(r_rtc,rtcPtr);
004437 940e a3af 	CALL SUBOPT_0xA0
004439 940e b62a 	CALL __PUTPARD1
00443b 85ac      	LDD  R26,Y+12
00443c 85bd      	LDD  R27,Y+12+1
00443d dcdf      	RCALL _binary_to_date
                 ; 0006 0135 
                 ; 0006 0136     return flag;
00443e 01f8      	MOVW R30,R16
00443f 8119      	LDD  R17,Y+1
004440 8108      	LDD  R16,Y+0
004441 962a      	ADIW R28,10
004442 9508      	RET
                 ; 0006 0137 }
                 ;/*============================================================*/
                 ;void printRTC(struct rtc_structure time)
                 ; 0006 013A {
                 _printRTC:
                 ; 0006 013B     switch(time.day){
                 ;	time -> Y+0
004443 8de8      	LDD  R30,Y+24
004444 8df9      	LDD  R31,Y+24+1
                 ; 0006 013C         case DAY_MON: printDebug("Mon. "); break;
004445 30e1      	CPI  R30,LOW(0x1)
004446 e0a0      	LDI  R26,HIGH(0x1)
004447 07fa      	CPC  R31,R26
004448 f429      	BRNE _0xC0046
                +
004449 e5e0     +LDI R30 , LOW ( 2 * _0xC0000 + ( 118 ) )
00444a e1f0     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 118 ) )
00444b e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 118 ) )
00444c e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 118 ) )
                 	__POINTD1FN _0xC0000,118
00444d c035      	RJMP _0xC004F
                 ; 0006 013D         case DAY_TUE: printDebug("Tue. "); break;
                 _0xC0046:
00444e 30e2      	CPI  R30,LOW(0x2)
00444f e0a0      	LDI  R26,HIGH(0x2)
004450 07fa      	CPC  R31,R26
004451 f429      	BRNE _0xC0047
                +
004452 e5e6     +LDI R30 , LOW ( 2 * _0xC0000 + ( 124 ) )
004453 e1f0     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 124 ) )
004454 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 124 ) )
004455 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 124 ) )
                 	__POINTD1FN _0xC0000,124
004456 c02c      	RJMP _0xC004F
                 ; 0006 013E         case DAY_WED: printDebug("Wed. "); break;
                 _0xC0047:
004457 30e3      	CPI  R30,LOW(0x3)
004458 e0a0      	LDI  R26,HIGH(0x3)
004459 07fa      	CPC  R31,R26
00445a f429      	BRNE _0xC0048
                +
00445b e5ec     +LDI R30 , LOW ( 2 * _0xC0000 + ( 130 ) )
00445c e1f0     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 130 ) )
00445d e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 130 ) )
00445e e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 130 ) )
                 	__POINTD1FN _0xC0000,130
00445f c023      	RJMP _0xC004F
                 ; 0006 013F         case DAY_THU: printDebug("Thu. "); break;
                 _0xC0048:
004460 30e4      	CPI  R30,LOW(0x4)
004461 e0a0      	LDI  R26,HIGH(0x4)
004462 07fa      	CPC  R31,R26
004463 f429      	BRNE _0xC0049
                +
004464 e6e2     +LDI R30 , LOW ( 2 * _0xC0000 + ( 136 ) )
004465 e1f0     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 136 ) )
004466 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 136 ) )
004467 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 136 ) )
                 	__POINTD1FN _0xC0000,136
004468 c01a      	RJMP _0xC004F
                 ; 0006 0140         case DAY_FRI: printDebug("Fri. "); break;
                 _0xC0049:
004469 30e5      	CPI  R30,LOW(0x5)
00446a e0a0      	LDI  R26,HIGH(0x5)
00446b 07fa      	CPC  R31,R26
00446c f429      	BRNE _0xC004A
                +
00446d e6e8     +LDI R30 , LOW ( 2 * _0xC0000 + ( 142 ) )
00446e e1f0     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 142 ) )
00446f e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 142 ) )
004470 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 142 ) )
                 	__POINTD1FN _0xC0000,142
004471 c011      	RJMP _0xC004F
                 ; 0006 0141         case DAY_SAT: printDebug("Sat. "); break;
                 _0xC004A:
004472 30e6      	CPI  R30,LOW(0x6)
004473 e0a0      	LDI  R26,HIGH(0x6)
004474 07fa      	CPC  R31,R26
004475 f429      	BRNE _0xC004B
                +
004476 e6ee     +LDI R30 , LOW ( 2 * _0xC0000 + ( 148 ) )
004477 e1f0     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 148 ) )
004478 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 148 ) )
004479 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 148 ) )
                 	__POINTD1FN _0xC0000,148
00447a c008      	RJMP _0xC004F
                 ; 0006 0142         case DAY_SUN: printDebug("Sun. "); break;
                 _0xC004B:
00447b 30e7      	CPI  R30,LOW(0x7)
00447c e0a0      	LDI  R26,HIGH(0x7)
00447d 07fa      	CPC  R31,R26
00447e f441      	BRNE _0xC0045
                +
00447f e7e4     +LDI R30 , LOW ( 2 * _0xC0000 + ( 154 ) )
004480 e1f0     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 154 ) )
004481 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 154 ) )
004482 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 154 ) )
                 	__POINTD1FN _0xC0000,154
                 _0xC004F:
004483 940e b62a 	CALL __PUTPARD1
004485 940e a0c5 	CALL SUBOPT_0x30
                 ; 0006 0143     }
                 _0xC0045:
                 ; 0006 0144 
                 ; 0006 0145     printDebug(
                 ; 0006 0146         "[%d]%04d-%02d-%02d %02d:%02d:%02d\r\n",
                 ; 0006 0147         time.day,
                 ; 0006 0148         time.year,
                 ; 0006 0149         time.month,
                 ; 0006 014A         time.date,
                 ; 0006 014B         time.hour,
                 ; 0006 014C         time.min,
                 ; 0006 014D         time.sec
                 ; 0006 014E     );
                +
004487 e7ea     +LDI R30 , LOW ( 2 * _0xC0000 + ( 160 ) )
004488 e1f0     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 160 ) )
004489 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 160 ) )
00448a e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 160 ) )
                 	__POINTD1FN _0xC0000,160
00448b 940e a51f 	CALL SUBOPT_0xDC
00448d 940e a524 	CALL SUBOPT_0xDD
00448f 940e a118 	CALL SUBOPT_0x3E
004491 940e a178 	CALL SUBOPT_0x4B
004493 940e a4ae 	CALL SUBOPT_0xCA
004495 940e b62a 	CALL __PUTPARD1
                +
004497 a1e8     +LDD R30 , Y + 32
004498 a1f9     +LDD R31 , Y + 32 + 1
004499 a16a     +LDD R22 , Y + 32 + 2
00449a a17b     +LDD R23 , Y + 32 + 3
                 	__GETD1S 32
00449b 940e a529 	CALL SUBOPT_0xDE
                +
00449d a9e8     +LDD R30 , Y + 48
00449e a9f9     +LDD R31 , Y + 48 + 1
00449f a96a     +LDD R22 , Y + 48 + 2
0044a0 a97b     +LDD R23 , Y + 48 + 3
                 	__GETD1S 48
0044a1 940e b62a 	CALL __PUTPARD1
0044a3 e18c      	LDI  R24,28
0044a4 940e 7ca0 	CALL _printDebug
0044a6 96a0      	ADIW R28,32
                 ; 0006 014F     return;
0044a7 c024      	RJMP _0x20E007D
                 ; 0006 0150 }
                 ;/*============================================================*/
                 ;void init_RTC(void)
                 ; 0006 0153 {
                 _init_RTC:
                 ; 0006 0154     struct rtc_structure rtcTest;
                 ; 0006 0155 
                 ; 0006 0156     raw_rtc = 0;            /* initial default time_value in RAM */
0044a8 976a      	SBIW R28,26
                 ;	rtcTest -> Y+0
0044a9 e0e0      	LDI  R30,LOW(0)
0044aa 93e0 1430 	STS  _raw_rtc,R30
0044ac 93e0 1431 	STS  _raw_rtc+1,R30
0044ae 93e0 1432 	STS  _raw_rtc+2,R30
0044b0 93e0 1433 	STS  _raw_rtc+3,R30
                 ; 0006 0157 
                 ; 0006 0158     #asm("cli")
0044b2 94f8      	cli
                 ; 0006 0159     i2c_start();
0044b3 940e a366 	CALL SUBOPT_0x92
                 ; 0006 015A     i2c_write(ADDRTC);
                 ; 0006 015B     i2c_write(0x04);
0044b5 e0a4      	LDI  R26,LOW(4)
0044b6 940e b2ce 	CALL _i2c_write
                 ; 0006 015C     i2c_write(0x00);         /* enable the oscillator */
0044b8 e0a0      	LDI  R26,LOW(0)
0044b9 940e a36b 	CALL SUBOPT_0x93
                 ; 0006 015D     i2c_stop();
                 ; 0006 015E     #asm("sei")
0044bb 9478      	sei
                 ; 0006 015F 
                 ; 0006 0160     DS1672_trickerChargeEnable();
0044bc dc16      	RCALL _DS1672_trickerChargeEnable
                 ; 0006 0161 
                 ; 0006 0162     RTC_getDateTime(&rtcTest,0);
0044bd 01fe      	MOVW R30,R28
0044be 940e a532 	CALL SUBOPT_0xDF
0044c0 df4e      	RCALL _RTC_getDateTime
                 ; 0006 0163 
                 ; 0006 0164     printDebug("Running with System Clock @ ");
                +
0044c1 e9ee     +LDI R30 , LOW ( 2 * _0xC0000 + ( 196 ) )
0044c2 e1f0     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 196 ) )
0044c3 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 196 ) )
0044c4 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 196 ) )
                 	__POINTD1FN _0xC0000,196
0044c5 940e 9f66 	CALL SUBOPT_0x2
                 ; 0006 0165 
                 ; 0006 0166     printRTC(rtcTest);
0044c7 01fe      	MOVW R30,R28
0044c8 e1aa      	LDI  R26,26
0044c9 940e b634 	CALL __PUTPARL
0044cb df77      	RCALL _printRTC
                 ; 0006 0167 }
                 _0x20E007D:
0044cc 966a      	ADIW R28,26
0044cd 9508      	RET
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;char is_properties_config_update                = 1;
                 
                 	.DSEG
                 ;char is_operating_config_update                 = 1;
                 ;char is_sensor_config_update[MAX_SENS_CHANNEL]  = {1,1,1,1,1};
                 ;char is_din_config_update[MAX_DI_CHANNEL]       = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
                 ;char is_dout_config_update[MAX_DO_CHANNEL]      = {1,1,1,1,1};//,1,1,1,1,1,1,1,1,1,1,1};
                 ;char is_buzzer_config_update                    = 1;
                 ;char is_status_config_update                    = 1;
                 ;char is_env_config_update                       = 1;
                 ;
                 ;struct prop_cnfg_st properties_config;
                 ;struct oper_cnfg_st operating_config;
                 ;struct oper_cnfg_st operating_config;
                 ;struct sens_cnfg_st sensor_config[MAX_SENS_CHANNEL];
                 ;struct din_cnfg_st  din_config[MAX_DI_CHANNEL];
                 ;struct dout_cnfg_st dout_config[MAX_DO_CHANNEL];
                 ;struct buzz_cnfg_st buzz_config;
                 ;struct stat_cnfg_st status_config;
                 ;struct alm_cnfg_st  env_config;
                 ;
                 ;//flash char FIRMWARE_VERSION[] = "iNT-ETH-0.24b";
                 ;//iNT-ETH-DC-0.01a
                 ;flash char FIRMWARE_VERSION[] = "iNT-ETH-DC-0.01a";
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*************** Read Configuration from EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int getPropertiesConfig(struct prop_cnfg_st *readConfig)
                 ; 0007 0024 {
                 
                 	.CSEG
                 _getPropertiesConfig:
                 ; 0007 0025     int i;
                 ; 0007 0026 
                 ; 0007 0027     //printDebug("<getPropertiesConfig>..\r\n");
                 ; 0007 0028 
                 ; 0007 0029     if( config_prop_flag != 0x01){
0044ce 940e a285 	CALL SUBOPT_0x71
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
0044d0 e4a2      	LDI  R26,LOW(_config_prop_flag)
0044d1 e0b5      	LDI  R27,HIGH(_config_prop_flag)
0044d2 940e b651 	CALL __EEPROMRDB
0044d4 30e1      	CPI  R30,LOW(0x1)
0044d5 f0a9      	BREQ _0xE000B
                 ; 0007 002A         printDebug("<getPropertiesConfig> no configuration, use default\r\n");
                +
0044d6 eee2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 0 ) )
0044d7 e1f0     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 0 ) )
0044d8 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 0 ) )
0044d9 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 0 ) )
                 	__POINTD1FN _0xE0000,0
0044da 940e 9f66 	CALL SUBOPT_0x2
                 ; 0007 002B         memset(readConfig,0x00,sizeof(struct prop_cnfg_st));
0044dc 81ea      	LDD  R30,Y+2
0044dd 81fb      	LDD  R31,Y+2+1
0044de 940e a537 	CALL SUBOPT_0xE0
0044e0 940e a53c 	CALL SUBOPT_0xE1
0044e2 940e 84d4 	CALL _memset
                 ; 0007 002C         readConfig->timeZone   = 7;
0044e4 81aa      	LDD  R26,Y+2
0044e5 81bb      	LDD  R27,Y+2+1
0044e6 56a0      	SUBI R26,LOW(-160)
0044e7 4fbf      	SBCI R27,HIGH(-160)
0044e8 e0e7      	LDI  R30,LOW(7)
0044e9 93ec      	ST   X,R30
                 ; 0007 002D     }
                 ; 0007 002E     else{
0044ea c074      	RJMP _0xE000C
                 _0xE000B:
                 ; 0007 002F 
                 ; 0007 0030         for(i=0;i<DEVTYPE_LENGTH;i++)
                +
0044eb e000     +LDI R16 , LOW ( 0 )
0044ec e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE000E:
                +
0044ed 3104     +CPI R16 , LOW ( 20 )
0044ee e0e0     +LDI R30 , HIGH ( 20 )
0044ef 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
0044f0 f47c      	BRGE _0xE000F
                 ; 0007 0031         {
                 ; 0007 0032             readConfig->deviceType[i]   = config_prop.deviceType[i];
0044f1 01f8      	MOVW R30,R16
0044f2 81aa      	LDD  R26,Y+2
0044f3 81bb      	LDD  R27,Y+2+1
0044f4 0fea      	ADD  R30,R26
0044f5 1ffb      	ADC  R31,R27
0044f6 010f      	MOVW R0,R30
0044f7 e0a0      	LDI  R26,LOW(_config_prop)
0044f8 e0b0      	LDI  R27,HIGH(_config_prop)
0044f9 940e a53f 	CALL SUBOPT_0xE2
0044fb 01d0      	MOVW R26,R0
0044fc 93ec      	ST   X,R30
                 ; 0007 0033         }
                +
0044fd 5f0f     +SUBI R16 , LOW ( - 1 )
0044fe 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0044ff cfed      	RJMP _0xE000E
                 _0xE000F:
                 ; 0007 0034 
                 ; 0007 0035         /*
                 ; 0007 0036         for(i=0;i<FW_LENGTH;i++)
                 ; 0007 0037         {
                 ; 0007 0038             //printDebug("%c",config_prop.firmwareVersion[i]);
                 ; 0007 0039             readConfig->firmwareVersion[i]   = config_prop.firmwareVersion[i];
                 ; 0007 003A         }
                 ; 0007 003B         */
                 ; 0007 003C         memcpyf(readConfig->firmwareVersion,FIRMWARE_VERSION,strlenf(FIRMWARE_VERSION));
004500 81ea      	LDD  R30,Y+2
004501 81fb      	LDD  R31,Y+2+1
004502 9674      	ADIW R30,20
004503 93fa      	ST   -Y,R31
004504 93ea      	ST   -Y,R30
                +
004505 eee4     +LDI R30 , LOW ( 2 * _FIRMWARE_VERSION + ( 0 ) )
004506 e0f0     +LDI R31 , HIGH ( 2 * _FIRMWARE_VERSION + ( 0 ) )
004507 e060     +LDI R22 , BYTE3 ( 2 * _FIRMWARE_VERSION + ( 0 ) )
004508 e070     +LDI R23 , BYTE4 ( 2 * _FIRMWARE_VERSION + ( 0 ) )
                 	__POINTD1FN _FIRMWARE_VERSION,0
004509 940e b62a 	CALL __PUTPARD1
00450b eea4      	LDI  R26,LOW(_FIRMWARE_VERSION*2)
00450c e0b0      	LDI  R27,HIGH(_FIRMWARE_VERSION*2)
00450d e080      	LDI  R24,BYTE3(_FIRMWARE_VERSION*2)
00450e 940e 8516 	CALL _strlenf
004510 01df      	MOVW R26,R30
004511 940e 84a1 	CALL _memcpyf
                 ; 0007 003D 
                 ; 0007 003E         for(i=0;i<NAME_LENGTH;i++)
                +
004513 e000     +LDI R16 , LOW ( 0 )
004514 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0011:
                +
004515 3208     +CPI R16 , LOW ( 40 )
004516 e0e0     +LDI R30 , HIGH ( 40 )
004517 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
004518 f46c      	BRGE _0xE0012
                 ; 0007 003F         {
                 ; 0007 0040             readConfig->deviceName[i]   = config_prop.deviceName[i];
004519 81ea      	LDD  R30,Y+2
00451a 81fb      	LDD  R31,Y+2+1
00451b 96b8      	ADIW R30,40
00451c 0fe0      	ADD  R30,R16
00451d 1ff1      	ADC  R31,R17
00451e 010f      	MOVW R0,R30
                +
00451f e2e8     +LDI R30 , LOW ( _config_prop + ( 40 ) )
004520 e0f0     +LDI R31 , HIGH ( _config_prop + ( 40 ) )
                 	__POINTW1MN _config_prop,40
004521 940e a544 	CALL SUBOPT_0xE3
                 ; 0007 0041         }
                +
004523 5f0f     +SUBI R16 , LOW ( - 1 )
004524 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004525 cfef      	RJMP _0xE0011
                 _0xE0012:
                 ; 0007 0042 
                 ; 0007 0043         for(i=0;i<ID_LENGTH;i++)
                +
004526 e000     +LDI R16 , LOW ( 0 )
004527 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0014:
                +
004528 3104     +CPI R16 , LOW ( 20 )
004529 e0e0     +LDI R30 , HIGH ( 20 )
00452a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
00452b f454      	BRGE _0xE0015
                 ; 0007 0044         {
                 ; 0007 0045             readConfig->deviceID[i]   = config_prop.deviceID[i];
00452c 940e a54c 	CALL SUBOPT_0xE4
00452e 010f      	MOVW R0,R30
                +
00452f e5e0     +LDI R30 , LOW ( _config_prop + ( 80 ) )
004530 e0f0     +LDI R31 , HIGH ( _config_prop + ( 80 ) )
                 	__POINTW1MN _config_prop,80
004531 940e a544 	CALL SUBOPT_0xE3
                 ; 0007 0046         }
                +
004533 5f0f     +SUBI R16 , LOW ( - 1 )
004534 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004535 cff2      	RJMP _0xE0014
                 _0xE0015:
                 ; 0007 0047 
                 ; 0007 0048         for(i=0;i<NAME_LENGTH;i++)
                +
004536 e000     +LDI R16 , LOW ( 0 )
004537 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0017:
                +
004538 3208     +CPI R16 , LOW ( 40 )
004539 e0e0     +LDI R30 , HIGH ( 40 )
00453a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
00453b f454      	BRGE _0xE0018
                 ; 0007 0049         {
                 ; 0007 004A             readConfig->hostName[i]   = config_prop.hostName[i];
00453c 940e a553 	CALL SUBOPT_0xE5
00453e 010f      	MOVW R0,R30
                +
00453f e6e4     +LDI R30 , LOW ( _config_prop + ( 100 ) )
004540 e0f0     +LDI R31 , HIGH ( _config_prop + ( 100 ) )
                 	__POINTW1MN _config_prop,100
004541 940e a544 	CALL SUBOPT_0xE3
                 ; 0007 004B         }
                +
004543 5f0f     +SUBI R16 , LOW ( - 1 )
004544 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004545 cff2      	RJMP _0xE0017
                 _0xE0018:
                 ; 0007 004C 
                 ; 0007 004D         for(i=0;i<ID_LENGTH;i++)
                +
004546 e000     +LDI R16 , LOW ( 0 )
004547 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE001A:
                +
004548 3104     +CPI R16 , LOW ( 20 )
004549 e0e0     +LDI R30 , HIGH ( 20 )
00454a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
00454b f454      	BRGE _0xE001B
                 ; 0007 004E         {
                 ; 0007 004F             readConfig->hostID[i]   = config_prop.hostID[i];
00454c 940e a55a 	CALL SUBOPT_0xE6
00454e 010f      	MOVW R0,R30
                +
00454f e8ec     +LDI R30 , LOW ( _config_prop + ( 140 ) )
004550 e0f0     +LDI R31 , HIGH ( _config_prop + ( 140 ) )
                 	__POINTW1MN _config_prop,140
004551 940e a544 	CALL SUBOPT_0xE3
                 ; 0007 0050         }
                +
004553 5f0f     +SUBI R16 , LOW ( - 1 )
004554 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004555 cff2      	RJMP _0xE001A
                 _0xE001B:
                 ; 0007 0051 
                 ; 0007 0052         readConfig->timeZone   = config_prop.timeZone;
                +
004556 eaa0     +LDI R26 , LOW ( _config_prop + ( 160 ) )
004557 e0b0     +LDI R27 , HIGH ( _config_prop + ( 160 ) )
                 	__POINTW2MN _config_prop,160
004558 940e b651 	CALL __EEPROMRDB
                +
00455a 81aa     +LDD R26 , Y + 2
00455b 81bb     +LDD R27 , Y + 2 + 1
00455c 56a0     +SUBI R26 , LOW ( - 160 )
00455d 4fbf     +SBCI R27 , HIGH ( - 160 )
00455e 93ec     +ST X , R30
                 	__PUTB1SN 2,160
                 ; 0007 0053     }
                 _0xE000C:
                 ; 0007 0054     return 0;
00455f 940e a48b 	CALL SUBOPT_0xC3
004561 9624      	ADIW R28,4
004562 9508      	RET
                 ; 0007 0055 }
                 ;/*============================================================*/
                 ;int getOperatingConfig(struct oper_cnfg_st *readConfig)
                 ; 0007 0058 {
                 _getOperatingConfig:
                 ; 0007 0059     int i;
                 ; 0007 005A 
                 ; 0007 005B     if( config_oper_flag != 0x01){
004563 940e a285 	CALL SUBOPT_0x71
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
004565 e4a3      	LDI  R26,LOW(_config_oper_flag)
004566 e0b5      	LDI  R27,HIGH(_config_oper_flag)
004567 940e b651 	CALL __EEPROMRDB
004569 30e1      	CPI  R30,LOW(0x1)
00456a f0d1      	BREQ _0xE001C
                 ; 0007 005C         printDebug("<getOperatingConfig> no configuration, use default\r\n");
                +
00456b e1e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 54 ) )
00456c e1f1     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 54 ) )
00456d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 54 ) )
00456e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 54 ) )
                 	__POINTD1FN _0xE0000,54
00456f 940e 9f66 	CALL SUBOPT_0x2
                 ; 0007 005D 
                 ; 0007 005E         readConfig->mode                    =   MODE_DATALOGGER;
004571 81aa      	LDD  R26,Y+2
004572 81bb      	LDD  R27,Y+2+1
004573 e2e0      	LDI  R30,LOW(32)
004574 940e a561 	CALL SUBOPT_0xE7
                 ; 0007 005F         readConfig->deviceEnable            =   0x00;
004576 e0e0      	LDI  R30,LOW(0)
004577 940e a566 	CALL SUBOPT_0xE8
                 ; 0007 0060         readConfig->alarmEnable             =   0x00;
                 ; 0007 0061 
                 ; 0007 0062         for(i=0;i<MAX_SENS_CHANNEL;i++)
                 _0xE001E:
                +
004579 3005     +CPI R16 , LOW ( 5 )
00457a e0e0     +LDI R30 , HIGH ( 5 )
00457b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
00457c f43c      	BRGE _0xE001F
                 ; 0007 0063         {
                 ; 0007 0064             readConfig->sensorEnable[i]     =   0x00;
00457d 940e a56f 	CALL SUBOPT_0xE9
00457f e0a0      	LDI  R26,LOW(0)
004580 83a0      	STD  Z+0,R26
                 ; 0007 0065         }
                +
004581 5f0f     +SUBI R16 , LOW ( - 1 )
004582 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004583 cff5      	RJMP _0xE001E
                 _0xE001F:
                 ; 0007 0066 
                 ; 0007 0067         /* // -- for test -- //
                 ; 0007 0068         readConfig->mode                    =   MODE_REALTIME;
                 ; 0007 0069         readConfig->deviceEnable            =   0x01;
                 ; 0007 006A         readConfig->alarmEnable             =   0x01;
                 ; 0007 006B 
                 ; 0007 006C         for(i=0;i<MAX_SENS_CHANNEL;i++)
                 ; 0007 006D         {
                 ; 0007 006E             if(i==0){
                 ; 0007 006F                 readConfig->sensorEnable[i]     =   0x01;
                 ; 0007 0070             }
                 ; 0007 0071             else{
                 ; 0007 0072                 readConfig->sensorEnable[i]     =   0x00;
                 ; 0007 0073             }
                 ; 0007 0074         }
                 ; 0007 0075         */
                 ; 0007 0076     }
                 ; 0007 0077     else{
004584 c01c      	RJMP _0xE0020
                 _0xE001C:
                 ; 0007 0078         readConfig->mode                    =   config_oper.mode;
004585 eaa1      	LDI  R26,LOW(_config_oper)
004586 e0b0      	LDI  R27,HIGH(_config_oper)
004587 940e a575 	CALL SUBOPT_0xEA
                 ; 0007 0079         readConfig->deviceEnable            =   config_oper.deviceEnable;
                +
004589 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
00458a e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
00458b 940e a57b 	CALL SUBOPT_0xEB
                 ; 0007 007A         readConfig->alarmEnable             =   config_oper.alarmEnable;
                +
00458d eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
00458e e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
00458f 940e a582 	CALL SUBOPT_0xEC
                 ; 0007 007B 
                 ; 0007 007C         for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
004591 e000     +LDI R16 , LOW ( 0 )
004592 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0022:
                +
004593 3005     +CPI R16 , LOW ( 5 )
004594 e0e0     +LDI R30 , HIGH ( 5 )
004595 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004596 f454      	BRGE _0xE0023
                 ; 0007 007D         {
                 ; 0007 007E             readConfig->sensorEnable[i]     =   config_oper.sensorEnable[i];
004597 940e a56f 	CALL SUBOPT_0xE9
004599 010f      	MOVW R0,R30
                +
00459a eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
00459b e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
00459c 940e a544 	CALL SUBOPT_0xE3
                 ; 0007 007F         }
                +
00459e 5f0f     +SUBI R16 , LOW ( - 1 )
00459f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0045a0 cff2      	RJMP _0xE0022
                 _0xE0023:
                 ; 0007 0080     }
                 _0xE0020:
                 ; 0007 0081 
                 ; 0007 0082 
                 ; 0007 0083     printDebug("<getOperatingConfig> mode            >> 0x%02X\r\n",readConfig->mode);
                +
0045a1 e4ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 107 ) )
0045a2 e1f1     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 107 ) )
0045a3 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 107 ) )
0045a4 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 107 ) )
                 	__POINTD1FN _0xE0000,107
0045a5 940e a589 	CALL SUBOPT_0xED
                 ; 0007 0084     printDebug("<getOperatingConfig> deviceEnable    >> 0x%02X\r\n",readConfig->deviceEnable);
                +
0045a7 e7ee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 156 ) )
0045a8 e1f1     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 156 ) )
0045a9 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 156 ) )
0045aa e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 156 ) )
                 	__POINTD1FN _0xE0000,156
0045ab 940e a58f 	CALL SUBOPT_0xEE
0045ad 81e1      	LDD  R30,Z+1
0045ae 940e a073 	CALL SUBOPT_0x27
                 ; 0007 0085     printDebug("<getOperatingConfig> alarmEnable     >> 0x%02X\r\n",readConfig->alarmEnable);
                +
0045b0 eaef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 205 ) )
0045b1 e1f1     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 205 ) )
0045b2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 205 ) )
0045b3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 205 ) )
                 	__POINTD1FN _0xE0000,205
0045b4 940e a58f 	CALL SUBOPT_0xEE
0045b6 81e2      	LDD  R30,Z+2
0045b7 940e a073 	CALL SUBOPT_0x27
                 ; 0007 0086     printDebug("<getOperatingConfig> sensorEnable    >> ");
                +
0045b9 eee0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 254 ) )
0045ba e1f1     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 254 ) )
0045bb e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 254 ) )
0045bc e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 254 ) )
                 	__POINTD1FN _0xE0000,254
0045bd 940e 9f66 	CALL SUBOPT_0x2
                 ; 0007 0087 
                 ; 0007 0088     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
0045bf e000     +LDI R16 , LOW ( 0 )
0045c0 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0025:
                +
0045c1 3005     +CPI R16 , LOW ( 5 )
0045c2 e0e0     +LDI R30 , HIGH ( 5 )
0045c3 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0045c4 f43c      	BRGE _0xE0026
                 ; 0007 0089     {
                 ; 0007 008A         printDebug("[0x%02X]",readConfig->sensorEnable[i]);
0045c5 940e a594 	CALL SUBOPT_0xEF
0045c7 940e a599 	CALL SUBOPT_0xF0
                 ; 0007 008B     }
                +
0045c9 5f0f     +SUBI R16 , LOW ( - 1 )
0045ca 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0045cb cff5      	RJMP _0xE0025
                 _0xE0026:
                 ; 0007 008C     printDebug("\r\n");
0045cc 940e a59e 	CALL SUBOPT_0xF1
                 ; 0007 008D 
                 ; 0007 008E     return 0;
0045ce 940e a48b 	CALL SUBOPT_0xC3
0045d0 c4e6      	RJMP _0x20E0078
                 ; 0007 008F }
                 ;/*============================================================*/
                 ;int getSensorConfig(int ch, struct sens_cnfg_st *readConfig)
                 ; 0007 0092 {
                 _getSensorConfig:
                 ; 0007 0093     if((ch < 0) || (ch >= MAX_SENS_CHANNEL)){
0045d1 940e a5a3 	CALL SUBOPT_0xF2
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
0045d3 f022      	BRMI _0xE0028
0045d4 81aa      	LDD  R26,Y+2
0045d5 81bb      	LDD  R27,Y+2+1
0045d6 9715      	SBIW R26,5
0045d7 f04c      	BRLT _0xE0027
                 _0xE0028:
                 ; 0007 0094         printDebug("<getSensorConfig> sensor channel out of range (%d)\r\n",ch);
                +
0045d8 e1e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 304 ) )
0045d9 e1f2     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 304 ) )
0045da e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 304 ) )
0045db e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 304 ) )
                 	__POINTD1FN _0xE0000,304
0045dc 940e a58f 	CALL SUBOPT_0xEE
0045de 940e a4fe 	CALL SUBOPT_0xD5
                 ; 0007 0095         return -1;
0045e0 c4d4      	RJMP _0x20E0079
                 ; 0007 0096     }
                 ; 0007 0097 
                 ; 0007 0098     if( config_sens_flag[ch] != 0x01){
                 _0xE0027:
0045e1 81aa      	LDD  R26,Y+2
0045e2 81bb      	LDD  R27,Y+2+1
0045e3 5bac      	SUBI R26,LOW(-_config_sens_flag)
0045e4 4fba      	SBCI R27,HIGH(-_config_sens_flag)
0045e5 940e b651 	CALL __EEPROMRDB
0045e7 30e1      	CPI  R30,LOW(0x1)
0045e8 f411      	BRNE PC+3
0045e9 940c 4632 	JMP _0xE002A
                 ; 0007 0099         printDebug("<getSensorConfig> no configuration, use default\r\n");
                +
0045eb e4e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 357 ) )
0045ec e1f2     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 357 ) )
0045ed e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 357 ) )
0045ee e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 357 ) )
                 	__POINTD1FN _0xE0000,357
0045ef 940e 9f66 	CALL SUBOPT_0x2
                 ; 0007 009A         readConfig->samplingRate        =   300;
0045f1 81a8      	LD   R26,Y
0045f2 81b9      	LDD  R27,Y+1
0045f3 e2ec      	LDI  R30,LOW(300)
0045f4 e0f1      	LDI  R31,HIGH(300)
0045f5 940e a5a8 	CALL SUBOPT_0xF3
                 ; 0007 009B         readConfig->reOccurrence        =   0x8000;
0045f7 9612      	ADIW R26,2
0045f8 e0e0      	LDI  R30,LOW(32768)
0045f9 e8f0      	LDI  R31,HIGH(32768)
0045fa 940e a5a8 	CALL SUBOPT_0xF3
                 ; 0007 009C         readConfig->timeStartHour       =   0;
0045fc 9614      	ADIW R26,4
0045fd 940e a5ad 	CALL SUBOPT_0xF4
                 ; 0007 009D         readConfig->timeStartMin        =   0;
0045ff 9615      	ADIW R26,5
004600 940e a5ad 	CALL SUBOPT_0xF4
                 ; 0007 009E         readConfig->timeStopHour        =   0;
004602 9616      	ADIW R26,6
004603 940e a5ad 	CALL SUBOPT_0xF4
                 ; 0007 009F         readConfig->timeStopMin         =   0;
004605 9617      	ADIW R26,7
004606 940e a5ad 	CALL SUBOPT_0xF4
                 ; 0007 00A0 
                 ; 0007 00A1         readConfig->alarmEnable         =   0x00;
004608 9618      	ADIW R26,8
004609 940e a5ad 	CALL SUBOPT_0xF4
                 ; 0007 00A2         readConfig->lowerLimit          =   10.0;
00460b 9619      	ADIW R26,9
00460c 940e a340 	CALL SUBOPT_0x8B
00460e 940e b605 	CALL __PUTDP1
                 ; 0007 00A3         readConfig->lowerDelay          =   20;
004610 81a8      	LD   R26,Y
004611 81b9      	LDD  R27,Y+1
004612 961d      	ADIW R26,13
004613 e1e4      	LDI  R30,LOW(20)
004614 e0f0      	LDI  R31,HIGH(20)
004615 940e a5a8 	CALL SUBOPT_0xF3
                 ; 0007 00A4         readConfig->lowerExtreme        =   0.0;
004617 961f      	ADIW R26,15
004618 940e a2c9 	CALL SUBOPT_0x7C
                 ; 0007 00A5         readConfig->upperLimit          =   180.0;
00461a 81a8      	LD   R26,Y
00461b 81b9      	LDD  R27,Y+1
00461c 9653      	ADIW R26,19
                +
00461d e0e0     +LDI R30 , LOW ( 0x43340000 )
00461e e0f0     +LDI R31 , HIGH ( 0x43340000 )
00461f e364     +LDI R22 , BYTE3 ( 0x43340000 )
004620 e473     +LDI R23 , BYTE4 ( 0x43340000 )
                 	__GETD1N 0x43340000
004621 940e b605 	CALL __PUTDP1
                 ; 0007 00A6         readConfig->upperDelay          =   20;
004623 81a8      	LD   R26,Y
004624 81b9      	LDD  R27,Y+1
004625 9657      	ADIW R26,23
004626 e1e4      	LDI  R30,LOW(20)
004627 e0f0      	LDI  R31,HIGH(20)
004628 940e a5a8 	CALL SUBOPT_0xF3
                 ; 0007 00A7         readConfig->upperExtreme        =   200.0;
00462a 9659      	ADIW R26,25
                +
00462b e0e0     +LDI R30 , LOW ( 0x43480000 )
00462c e0f0     +LDI R31 , HIGH ( 0x43480000 )
00462d e468     +LDI R22 , BYTE3 ( 0x43480000 )
00462e e473     +LDI R23 , BYTE4 ( 0x43480000 )
                 	__GETD1N 0x43480000
00462f 940e b605 	CALL __PUTDP1
                 ; 0007 00A8         /*
                 ; 0007 00A9         readConfig->alarmEnable         =   0x00;
                 ; 0007 00AA         readConfig->lowerLimit          =   0.0;
                 ; 0007 00AB         readConfig->lowerDelay          =   10;
                 ; 0007 00AC         readConfig->lowerExtreme        =   0.0;
                 ; 0007 00AD         readConfig->upperLimit          =   0.0;
                 ; 0007 00AE         readConfig->upperDelay          =   10;
                 ; 0007 00AF         readConfig->upperExtreme        =   0.0;
                 ; 0007 00B0         */
                 ; 0007 00B1     }
                 ; 0007 00B2     else{
004631 c084      	RJMP _0xE002B
                 _0xE002A:
                 ; 0007 00B3         readConfig->samplingRate        =   config_sens[ch].samplingRate;
004632 940e a5b2 	CALL SUBOPT_0xF5
004634 55e7      	SUBI R30,LOW(-_config_sens)
004635 4fff      	SBCI R31,HIGH(-_config_sens)
004636 01df      	MOVW R26,R30
004637 940e b64d 	CALL __EEPROMRDW
004639 81a8      	LD   R26,Y
00463a 81b9      	LDD  R27,Y+1
00463b 93ed      	ST   X+,R30
00463c 93fc      	ST   X,R31
                 ; 0007 00B4         readConfig->reOccurrence        =   config_sens[ch].reOccurrence;
00463d 940e a5b2 	CALL SUBOPT_0xF5
                +
00463f 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004640 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004641 01df      	MOVW R26,R30
004642 940e b64d 	CALL __EEPROMRDW
                +
004644 81a8     +LDD R26 , Y + 0
004645 81b9     +LDD R27 , Y + 0 + 1
004646 9612     +ADIW R26 , 2
004647 93ed     +ST X + , R30
004648 93fc     +ST X , R31
                 	__PUTW1SNS 0,2
                 ; 0007 00B5         readConfig->timeStartHour       =   config_sens[ch].timeStartHour;
004649 940e a5b2 	CALL SUBOPT_0xF5
                +
00464b 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
00464c 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
00464d 01df      	MOVW R26,R30
00464e 940e b651 	CALL __EEPROMRDB
                +
004650 81a8     +LDD R26 , Y + 0
004651 81b9     +LDD R27 , Y + 0 + 1
004652 9614     +ADIW R26 , 4
004653 93ec     +ST X , R30
                 	__PUTB1SNS 0,4
                 ; 0007 00B6         readConfig->timeStartMin        =   config_sens[ch].timeStartMin;
004654 940e a5b2 	CALL SUBOPT_0xF5
                +
004656 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004657 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004658 01df      	MOVW R26,R30
004659 940e b651 	CALL __EEPROMRDB
                +
00465b 81a8     +LDD R26 , Y + 0
00465c 81b9     +LDD R27 , Y + 0 + 1
00465d 9615     +ADIW R26 , 5
00465e 93ec     +ST X , R30
                 	__PUTB1SNS 0,5
                 ; 0007 00B7         readConfig->timeStopHour        =   config_sens[ch].timeStopHour;
00465f 940e a5b2 	CALL SUBOPT_0xF5
                +
004661 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004662 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004663 01df      	MOVW R26,R30
004664 940e b651 	CALL __EEPROMRDB
                +
004666 81a8     +LDD R26 , Y + 0
004667 81b9     +LDD R27 , Y + 0 + 1
004668 9616     +ADIW R26 , 6
004669 93ec     +ST X , R30
                 	__PUTB1SNS 0,6
                 ; 0007 00B8         readConfig->timeStopMin         =   config_sens[ch].timeStopMin;
00466a 940e a5b2 	CALL SUBOPT_0xF5
                +
00466c 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
00466d 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
00466e 01df      	MOVW R26,R30
00466f 940e b651 	CALL __EEPROMRDB
                +
004671 81a8     +LDD R26 , Y + 0
004672 81b9     +LDD R27 , Y + 0 + 1
004673 9617     +ADIW R26 , 7
004674 93ec     +ST X , R30
                 	__PUTB1SNS 0,7
                 ; 0007 00B9 
                 ; 0007 00BA         readConfig->alarmEnable         =   config_sens[ch].alarmEnable;
004675 940e a5b2 	CALL SUBOPT_0xF5
                +
004677 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004678 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004679 01df      	MOVW R26,R30
00467a 940e b651 	CALL __EEPROMRDB
                +
00467c 81a8     +LDD R26 , Y + 0
00467d 81b9     +LDD R27 , Y + 0 + 1
00467e 9618     +ADIW R26 , 8
00467f 93ec     +ST X , R30
                 	__PUTB1SNS 0,8
                 ; 0007 00BB         readConfig->lowerLimit          =   config_sens[ch].lowerLimit;
004680 940e a5b2 	CALL SUBOPT_0xF5
004682 940e a5b8 	CALL SUBOPT_0xF6
                +
004684 81a8     +LDD R26 , Y + 0
004685 81b9     +LDD R27 , Y + 0 + 1
004686 9619     +ADIW R26 , 9
004687 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 0,9
                 ; 0007 00BC         readConfig->lowerDelay          =   config_sens[ch].lowerDelay;
004689 940e a5b2 	CALL SUBOPT_0xF5
00468b 940e a5be 	CALL SUBOPT_0xF7
                +
00468d 81a8     +LDD R26 , Y + 0
00468e 81b9     +LDD R27 , Y + 0 + 1
00468f 961d     +ADIW R26 , 13
004690 93ed     +ST X + , R30
004691 93fc     +ST X , R31
                 	__PUTW1SNS 0,13
                 ; 0007 00BD         readConfig->lowerExtreme        =   config_sens[ch].lowerExtreme;
004692 940e a5b2 	CALL SUBOPT_0xF5
004694 940e a5c4 	CALL SUBOPT_0xF8
                +
004696 81a8     +LDD R26 , Y + 0
004697 81b9     +LDD R27 , Y + 0 + 1
004698 961f     +ADIW R26 , 15
004699 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 0,15
                 ; 0007 00BE         readConfig->upperLimit          =   config_sens[ch].upperLimit;
00469b 940e a5b2 	CALL SUBOPT_0xF5
00469d 940e a5ca 	CALL SUBOPT_0xF9
                +
00469f 81a8     +LDD R26 , Y + 0
0046a0 81b9     +LDD R27 , Y + 0 + 1
0046a1 9653     +ADIW R26 , 19
0046a2 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 0,19
                 ; 0007 00BF         readConfig->upperDelay          =   config_sens[ch].upperDelay;
0046a4 940e a5b2 	CALL SUBOPT_0xF5
0046a6 940e a5d0 	CALL SUBOPT_0xFA
                +
0046a8 81a8     +LDD R26 , Y + 0
0046a9 81b9     +LDD R27 , Y + 0 + 1
0046aa 9657     +ADIW R26 , 23
0046ab 93ed     +ST X + , R30
0046ac 93fc     +ST X , R31
                 	__PUTW1SNS 0,23
                 ; 0007 00C0         readConfig->upperExtreme        =   config_sens[ch].upperExtreme;
0046ad 940e a5b2 	CALL SUBOPT_0xF5
0046af 940e a5d6 	CALL SUBOPT_0xFB
                +
0046b1 81a8     +LDD R26 , Y + 0
0046b2 81b9     +LDD R27 , Y + 0 + 1
0046b3 9659     +ADIW R26 , 25
0046b4 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 0,25
                 ; 0007 00C1     }
                 _0xE002B:
                 ; 0007 00C2     return 0;
0046b6 e0e0      	LDI  R30,LOW(0)
0046b7 e0f0      	LDI  R31,HIGH(0)
0046b8 c3fe      	RJMP _0x20E0078
                 ; 0007 00C3 }
                 ;/*============================================================*/
                 ;int getAuxDinConfig(int ch, struct din_cnfg_st *readConfig)
                 ; 0007 00C6 {
                 _getAuxDinConfig:
                 ; 0007 00C7     if((ch < 0) || (ch >= MAX_DI_CHANNEL)){
0046b9 940e a5a3 	CALL SUBOPT_0xF2
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
0046bb f022      	BRMI _0xE002D
0046bc 81aa      	LDD  R26,Y+2
0046bd 81bb      	LDD  R27,Y+2+1
0046be 9750      	SBIW R26,16
0046bf f04c      	BRLT _0xE002C
                 _0xE002D:
                 ; 0007 00C8         printDebug("<getAuxDinConfig> digital input channel out of range (%d)\r\n",ch);
                +
0046c0 e7e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 407 ) )
0046c1 e1f2     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 407 ) )
0046c2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 407 ) )
0046c3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 407 ) )
                 	__POINTD1FN _0xE0000,407
0046c4 940e a58f 	CALL SUBOPT_0xEE
0046c6 940e a4fe 	CALL SUBOPT_0xD5
                 ; 0007 00C9         return -1;
0046c8 c3ec      	RJMP _0x20E0079
                 ; 0007 00CA     }
                 ; 0007 00CB 
                 ; 0007 00CC     if( config_din_flag[ch] != 0x01){
                 _0xE002C:
0046c9 81aa      	LDD  R26,Y+2
0046ca 81bb      	LDD  R27,Y+2+1
0046cb 5ba7      	SUBI R26,LOW(-_config_din_flag)
0046cc 4fba      	SBCI R27,HIGH(-_config_din_flag)
0046cd 940e b651 	CALL __EEPROMRDB
0046cf 30e1      	CPI  R30,LOW(0x1)
0046d0 f071      	BREQ _0xE002F
                 ; 0007 00CD         printDebug("<getAuxDinConfig> no configuration, use default\r\n");
                +
0046d1 ebe5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 467 ) )
0046d2 e1f2     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 467 ) )
0046d3 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 467 ) )
0046d4 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 467 ) )
                 	__POINTD1FN _0xE0000,467
0046d5 940e 9f66 	CALL SUBOPT_0x2
                 ; 0007 00CE 
                 ; 0007 00CF         readConfig->channelEnable       =   0x00;
0046d7 81a8      	LD   R26,Y
0046d8 81b9      	LDD  R27,Y+1
0046d9 940e a5ad 	CALL SUBOPT_0xF4
                 ; 0007 00D0         readConfig->alarmDelay          =   0;
0046db 9611      	ADIW R26,1
0046dc 940e a5dc 	CALL SUBOPT_0xFC
                 ; 0007 00D1 
                 ; 0007 00D2         /* // -- for test -- //
                 ; 0007 00D3         if(ch < 2)  readConfig->channelEnable       =   0x01;
                 ; 0007 00D4         else        readConfig->channelEnable       =   0x00;
                 ; 0007 00D5 
                 ; 0007 00D6         readConfig->alarmDelay          =   0;
                 ; 0007 00D7         */
                 ; 0007 00D8     }
                 ; 0007 00D9     else{
0046de c00d      	RJMP _0xE0030
                 _0xE002F:
                 ; 0007 00DA         readConfig->channelEnable       =   config_din[ch].channelEnable;
0046df 940e a5e1 	CALL SUBOPT_0xFD
0046e1 5ce6      	SUBI R30,LOW(-_config_din)
0046e2 4ffe      	SBCI R31,HIGH(-_config_din)
0046e3 940e a5e7 	CALL SUBOPT_0xFE
                 ; 0007 00DB         readConfig->alarmDelay          =   config_din[ch].alarmDelay;
0046e5 940e a5e1 	CALL SUBOPT_0xFD
                +
0046e7 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
0046e8 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
0046e9 01df      	MOVW R26,R30
0046ea 940e a5ee 	CALL SUBOPT_0xFF
                 ; 0007 00DC     }
                 _0xE0030:
                 ; 0007 00DD     return 0;
0046ec e0e0      	LDI  R30,LOW(0)
0046ed e0f0      	LDI  R31,HIGH(0)
0046ee c3c8      	RJMP _0x20E0078
                 ; 0007 00DE }
                 ;/*============================================================*/
                 ;int getAuxDoutConfig(int ch, struct dout_cnfg_st *readConfig)
                 ; 0007 00E1 {
                 _getAuxDoutConfig:
                 ; 0007 00E2     int i;
                 ; 0007 00E3 
                 ; 0007 00E4     if((ch < 0) || (ch >= MAX_DO_CHANNEL)){
0046ef 940e a285 	CALL SUBOPT_0x71
                 ;	ch -> Y+4
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
0046f1 81ad      	LDD  R26,Y+5
0046f2 23aa      	TST  R26
0046f3 f022      	BRMI _0xE0032
0046f4 81ac      	LDD  R26,Y+4
0046f5 81bd      	LDD  R27,Y+4+1
0046f6 9715      	SBIW R26,5
0046f7 f04c      	BRLT _0xE0031
                 _0xE0032:
                 ; 0007 00E5         printDebug("<getAuxDoutConfig> digital output channel out of range (%d)\r\n",ch);
                +
0046f8 eee7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 517 ) )
0046f9 e1f2     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 517 ) )
0046fa e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 517 ) )
0046fb e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 517 ) )
                 	__POINTD1FN _0xE0000,517
0046fc 940e a5f6 	CALL SUBOPT_0x100
                 ; 0007 00E6         return -1;
0046fe efef      	LDI  R30,LOW(65535)
0046ff efff      	LDI  R31,HIGH(65535)
004700 c144      	RJMP _0x20E007B
                 ; 0007 00E7     }
                 ; 0007 00E8 
                 ; 0007 00E9     if( config_dout_flag[ch] != 0x01){
                 _0xE0031:
004701 81ac      	LDD  R26,Y+4
004702 81bd      	LDD  R27,Y+4+1
004703 5aa7      	SUBI R26,LOW(-_config_dout_flag)
004704 4fba      	SBCI R27,HIGH(-_config_dout_flag)
004705 940e b651 	CALL __EEPROMRDB
004707 30e1      	CPI  R30,LOW(0x1)
004708 f0d1      	BREQ _0xE0034
                 ; 0007 00EA         printDebug("<getAuxDoutConfig> no configuration, use default\r\n");
                +
004709 e2e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 579 ) )
00470a e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 579 ) )
00470b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 579 ) )
00470c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 579 ) )
                 	__POINTD1FN _0xE0000,579
00470d 940e 9f66 	CALL SUBOPT_0x2
                 ; 0007 00EB         readConfig->channelEnable       =   0x00;
00470f 81aa      	LDD  R26,Y+2
004710 81bb      	LDD  R27,Y+2+1
004711 e0e0      	LDI  R30,LOW(0)
004712 940e a561 	CALL SUBOPT_0xE7
                 ; 0007 00EC         readConfig->stateOnEvent        =   0x01;
004714 e0e1      	LDI  R30,LOW(1)
004715 940e a566 	CALL SUBOPT_0xE8
                 ; 0007 00ED         readConfig->eventSourceNumber   =   0;
                 ; 0007 00EE 
                 ; 0007 00EF         for(i=0;i<MAX_EVENT_SOURCE;i++){
                 _0xE0036:
                +
004717 3203     +CPI R16 , LOW ( 35 )
004718 e0e0     +LDI R30 , HIGH ( 35 )
004719 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
00471a f43c      	BRGE _0xE0037
                 ; 0007 00F0             readConfig->eventSource[i]  =   0x00;
00471b 940e a56f 	CALL SUBOPT_0xE9
00471d e0a0      	LDI  R26,LOW(0)
00471e 83a0      	STD  Z+0,R26
                 ; 0007 00F1         }
                +
00471f 5f0f     +SUBI R16 , LOW ( - 1 )
004720 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004721 cff5      	RJMP _0xE0036
                 _0xE0037:
                 ; 0007 00F2     }
                 ; 0007 00F3     else{
004722 c065      	RJMP _0xE0038
                 _0xE0034:
                 ; 0007 00F4         readConfig->channelEnable       =   config_dout[ch].channelEnable;
004723 940e a5fb 	CALL SUBOPT_0x101
004725 59e6      	SUBI R30,LOW(-_config_dout)
004726 4ffe      	SBCI R31,HIGH(-_config_dout)
004727 01df      	MOVW R26,R30
004728 940e a575 	CALL SUBOPT_0xEA
                 ; 0007 00F5         readConfig->stateOnEvent        =   config_dout[ch].stateOnEvent;
00472a 940e a5fb 	CALL SUBOPT_0x101
                +
00472c 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
00472d 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
00472e 01df      	MOVW R26,R30
00472f 940e a57b 	CALL SUBOPT_0xEB
                 ; 0007 00F6         readConfig->eventSourceNumber   =   config_dout[ch].eventSourceNumber;
004731 940e a5fb 	CALL SUBOPT_0x101
                +
004733 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
004734 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
004735 01df      	MOVW R26,R30
004736 940e a582 	CALL SUBOPT_0xEC
                 ; 0007 00F7 
                 ; 0007 00F8         printDebug("<getAuxDoutConfig> -- CH %d -- \r\n",ch);
                +
004738 e5e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 630 ) )
004739 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 630 ) )
00473a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 630 ) )
00473b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 630 ) )
                 	__POINTD1FN _0xE0000,630
00473c 940e a5f6 	CALL SUBOPT_0x100
                 ; 0007 00F9         printDebug("<getAuxDoutConfig> enable         [0x%02X]\r\n",config_dout[ch].channelEnable);
                +
00473e e7ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 664 ) )
00473f e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 664 ) )
004740 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 664 ) )
004741 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 664 ) )
                 	__POINTD1FN _0xE0000,664
004742 940e a601 	CALL SUBOPT_0x102
004744 940e a609 	CALL SUBOPT_0x103
                 ; 0007 00FA         printDebug("<getAuxDoutConfig> stateOnEvent   [0x%02X]\r\n",config_dout[ch].stateOnEvent);
                +
004746 eae7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 709 ) )
004747 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 709 ) )
004748 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 709 ) )
004749 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 709 ) )
                 	__POINTD1FN _0xE0000,709
00474a 940e a601 	CALL SUBOPT_0x102
00474c 940e a60f 	CALL SUBOPT_0x104
                 ; 0007 00FB         printDebug("<getAuxDoutConfig> numberEvSrc    [%d]->",config_dout[ch].eventSourceNumber);
                +
00474e ede4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 754 ) )
00474f e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 754 ) )
004750 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 754 ) )
004751 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 754 ) )
                 	__POINTD1FN _0xE0000,754
004752 940e a601 	CALL SUBOPT_0x102
004754 940e a615 	CALL SUBOPT_0x105
004756 940e a073 	CALL SUBOPT_0x27
                 ; 0007 00FC         for(i=0;i<config_dout[ch].eventSourceNumber;i++){
                +
004758 e000     +LDI R16 , LOW ( 0 )
004759 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE003A:
00475a 940e a5fb 	CALL SUBOPT_0x101
00475c 940e a615 	CALL SUBOPT_0x105
00475e 940e a61b 	CALL SUBOPT_0x106
004760 f4a4      	BRGE _0xE003B
                 ; 0007 00FD             readConfig->eventSource[i]  =   config_dout[ch].eventSource[i];
004761 940e a56f 	CALL SUBOPT_0xE9
                +
004763 2f7e     +MOV R23 , R30
004764 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
004765 940e a5fb 	CALL SUBOPT_0x101
004767 940e a620 	CALL SUBOPT_0x107
004769 940e b651 	CALL __EEPROMRDB
                +
00476b 2fa7     +MOV R26 , R23
00476c 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
00476d 93ec      	ST   X,R30
                 ; 0007 00FE             printDebug("[0x%02X]",readConfig->eventSource[i]);
00476e 940e a594 	CALL SUBOPT_0xEF
004770 940e a599 	CALL SUBOPT_0xF0
                 ; 0007 00FF         }
                +
004772 5f0f     +SUBI R16 , LOW ( - 1 )
004773 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004774 cfe5      	RJMP _0xE003A
                 _0xE003B:
                 ; 0007 0100         for(i=config_dout[ch].eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004775 940e a5fb 	CALL SUBOPT_0x101
004777 940e a615 	CALL SUBOPT_0x105
004779 2f0e      	MOV  R16,R30
00477a 2711      	CLR  R17
                 _0xE003D:
                +
00477b 3203     +CPI R16 , LOW ( 35 )
00477c e0e0     +LDI R30 , HIGH ( 35 )
00477d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
00477e f43c      	BRGE _0xE003E
                 ; 0007 0101             readConfig->eventSource[i]  =   0x00;
00477f 940e a56f 	CALL SUBOPT_0xE9
004781 e0a0      	LDI  R26,LOW(0)
004782 83a0      	STD  Z+0,R26
                 ; 0007 0102             //printDebug("[0x%02X]",readConfig->eventSource[i]);
                 ; 0007 0103         }
                +
004783 5f0f     +SUBI R16 , LOW ( - 1 )
004784 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004785 cff5      	RJMP _0xE003D
                 _0xE003E:
                 ; 0007 0104         printDebug("\r\n");
004786 940e a59e 	CALL SUBOPT_0xF1
                 ; 0007 0105 
                 ; 0007 0106     }
                 _0xE0038:
                 ; 0007 0107     return 0;
004788 c0ba      	RJMP _0x20E007C
                 ; 0007 0108 }
                 ;/*============================================================*/
                 ;int getAuxAinConfig(int ch, struct ain_cnfg_st *readConfig)
                 ; 0007 010B {
                 _getAuxAinConfig:
                 ; 0007 010C     if((ch < 0) || (ch >= MAX_AI_CHANNEL)){
004789 940e a5a3 	CALL SUBOPT_0xF2
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
00478b f022      	BRMI _0xE0040
00478c 81aa      	LDD  R26,Y+2
00478d 81bb      	LDD  R27,Y+2+1
00478e 9750      	SBIW R26,16
00478f f04c      	BRLT _0xE003F
                 _0xE0040:
                 ; 0007 010D         printDebug("<getAuxAinConfig> analog input channel out of range (%d)\r\n",ch);
                +
004790 efed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 795 ) )
004791 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 795 ) )
004792 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 795 ) )
004793 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 795 ) )
                 	__POINTD1FN _0xE0000,795
004794 940e a58f 	CALL SUBOPT_0xEE
004796 940e a4fe 	CALL SUBOPT_0xD5
                 ; 0007 010E         return -1;
004798 c31c      	RJMP _0x20E0079
                 ; 0007 010F     }
                 ; 0007 0110 
                 ; 0007 0111     if( config_ain_flag[ch] != 0x01){
                 _0xE003F:
004799 81aa      	LDD  R26,Y+2
00479a 81bb      	LDD  R27,Y+2+1
00479b 5aa2      	SUBI R26,LOW(-_config_ain_flag)
00479c 4fba      	SBCI R27,HIGH(-_config_ain_flag)
00479d 940e b651 	CALL __EEPROMRDB
00479f 30e1      	CPI  R30,LOW(0x1)
0047a0 f071      	BREQ _0xE0042
                 ; 0007 0112         printDebug("<getAuxAinConfig> no configuration, use default\r\n");
                +
0047a1 e3e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 854 ) )
0047a2 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 854 ) )
0047a3 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 854 ) )
0047a4 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 854 ) )
                 	__POINTD1FN _0xE0000,854
0047a5 940e 9f66 	CALL SUBOPT_0x2
                 ; 0007 0113         readConfig->channelEnable       =   0x00;
0047a7 81a8      	LD   R26,Y
0047a8 81b9      	LDD  R27,Y+1
0047a9 940e a5ad 	CALL SUBOPT_0xF4
                 ; 0007 0114         readConfig->alarmLevel          =   0;
0047ab 9611      	ADIW R26,1
0047ac 940e a2c9 	CALL SUBOPT_0x7C
                 ; 0007 0115     }
                 ; 0007 0116     else{
0047ae c012      	RJMP _0xE0043
                 _0xE0042:
                 ; 0007 0117         readConfig->channelEnable       =   config_ain[ch].channelEnable;
0047af 940e a626 	CALL SUBOPT_0x108
0047b1 5de8      	SUBI R30,LOW(-_config_ain)
0047b2 4ffd      	SBCI R31,HIGH(-_config_ain)
0047b3 940e a5e7 	CALL SUBOPT_0xFE
                 ; 0007 0118         readConfig->alarmLevel          =   config_ain[ch].alarmLevel;
0047b5 940e a626 	CALL SUBOPT_0x108
                +
0047b7 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
0047b8 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
0047b9 01df      	MOVW R26,R30
0047ba 940e b649 	CALL __EEPROMRDD
                +
0047bc 81a8     +LDD R26 , Y + 0
0047bd 81b9     +LDD R27 , Y + 0 + 1
0047be 9611     +ADIW R26 , 1
0047bf 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 0,1
                 ; 0007 0119     }
                 _0xE0043:
                 ; 0007 011A     return 0;
0047c1 e0e0      	LDI  R30,LOW(0)
0047c2 e0f0      	LDI  R31,HIGH(0)
0047c3 c2f3      	RJMP _0x20E0078
                 ; 0007 011B }
                 ;/*============================================================*/
                 ;int getAuxAoutConfig(int ch, struct aout_cnfg_st *readConfig)
                 ; 0007 011E {
                 _getAuxAoutConfig:
                 ; 0007 011F     int i;
                 ; 0007 0120 
                 ; 0007 0121     if((ch < 0) || (ch >= MAX_AO_CHANNEL)){
0047c4 940e a285 	CALL SUBOPT_0x71
                 ;	ch -> Y+4
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
0047c6 81ad      	LDD  R26,Y+5
0047c7 23aa      	TST  R26
0047c8 f022      	BRMI _0xE0045
0047c9 81ac      	LDD  R26,Y+4
0047ca 81bd      	LDD  R27,Y+4+1
0047cb 9750      	SBIW R26,16
0047cc f04c      	BRLT _0xE0044
                 _0xE0045:
                 ; 0007 0122         printDebug("<getAuxAoutConfig> analog output channel out of range (%d)\r\n",ch);
                +
0047cd e6ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 904 ) )
0047ce e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 904 ) )
0047cf e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 904 ) )
0047d0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 904 ) )
                 	__POINTD1FN _0xE0000,904
0047d1 940e a5f6 	CALL SUBOPT_0x100
                 ; 0007 0123         return -1;
0047d3 efef      	LDI  R30,LOW(65535)
0047d4 efff      	LDI  R31,HIGH(65535)
0047d5 c06f      	RJMP _0x20E007B
                 ; 0007 0124     }
                 ; 0007 0125 
                 ; 0007 0126     if( config_aout_flag[ch] != 0x01){
                 _0xE0044:
0047d6 81ac      	LDD  R26,Y+4
0047d7 81bd      	LDD  R27,Y+4+1
0047d8 59a2      	SUBI R26,LOW(-_config_aout_flag)
0047d9 4fba      	SBCI R27,HIGH(-_config_aout_flag)
0047da 940e b651 	CALL __EEPROMRDB
0047dc 30e1      	CPI  R30,LOW(0x1)
0047dd f101      	BREQ _0xE0047
                 ; 0007 0127         printDebug("<getAuxAoutConfig> no configuration, use default\r\n");
                +
0047de eae7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 965 ) )
0047df e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 965 ) )
0047e0 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 965 ) )
0047e1 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 965 ) )
                 	__POINTD1FN _0xE0000,965
0047e2 940e 9f66 	CALL SUBOPT_0x2
                 ; 0007 0128         readConfig->channelEnable       =   0x00;
0047e4 81aa      	LDD  R26,Y+2
0047e5 81bb      	LDD  R27,Y+2+1
0047e6 e0e0      	LDI  R30,LOW(0)
0047e7 940e a561 	CALL SUBOPT_0xE7
                 ; 0007 0129         readConfig->levelOnEvent        =   0.0;
0047e9 940e a2c9 	CALL SUBOPT_0x7C
                 ; 0007 012A         readConfig->eventSourceNumber   =   0;
0047eb 81aa      	LDD  R26,Y+2
0047ec 81bb      	LDD  R27,Y+2+1
0047ed 9615      	ADIW R26,5
0047ee e0e0      	LDI  R30,LOW(0)
0047ef 93ec      	ST   X,R30
                 ; 0007 012B 
                 ; 0007 012C         for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
0047f0 e000     +LDI R16 , LOW ( 0 )
0047f1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0049:
                +
0047f2 3203     +CPI R16 , LOW ( 35 )
0047f3 e0e0     +LDI R30 , HIGH ( 35 )
0047f4 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
0047f5 f43c      	BRGE _0xE004A
                 ; 0007 012D             readConfig->eventSource[i]  =   0x00;
0047f6 940e a62c 	CALL SUBOPT_0x109
0047f8 e0a0      	LDI  R26,LOW(0)
0047f9 83a0      	STD  Z+0,R26
                 ; 0007 012E         }
                +
0047fa 5f0f     +SUBI R16 , LOW ( - 1 )
0047fb 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0047fc cff5      	RJMP _0xE0049
                 _0xE004A:
                 ; 0007 012F     }
                 ; 0007 0130     else{
0047fd c045      	RJMP _0xE004B
                 _0xE0047:
                 ; 0007 0131         readConfig->channelEnable       =   config_aout[ch].channelEnable;
0047fe 940e a632 	CALL SUBOPT_0x10A
004800 58e8      	SUBI R30,LOW(-_config_aout)
004801 4ffd      	SBCI R31,HIGH(-_config_aout)
004802 01df      	MOVW R26,R30
004803 940e a575 	CALL SUBOPT_0xEA
                 ; 0007 0132         readConfig->levelOnEvent        =   config_aout[ch].levelOnEvent;
004805 940e a632 	CALL SUBOPT_0x10A
                +
004807 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
004808 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
004809 01df      	MOVW R26,R30
00480a 940e b649 	CALL __EEPROMRDD
                +
00480c 81aa     +LDD R26 , Y + 2
00480d 81bb     +LDD R27 , Y + 2 + 1
00480e 9611     +ADIW R26 , 1
00480f 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 2,1
                 ; 0007 0133         readConfig->eventSourceNumber   =   config_aout[ch].eventSourceNumber;
004811 940e a632 	CALL SUBOPT_0x10A
004813 940e a638 	CALL SUBOPT_0x10B
                +
004815 81aa     +LDD R26 , Y + 2
004816 81bb     +LDD R27 , Y + 2 + 1
004817 9615     +ADIW R26 , 5
004818 93ec     +ST X , R30
                 	__PUTB1SNS 2,5
                 ; 0007 0134 
                 ; 0007 0135         for(i=0;i<config_aout[ch].eventSourceNumber;i++){
                +
004819 e000     +LDI R16 , LOW ( 0 )
00481a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE004D:
00481b 940e a632 	CALL SUBOPT_0x10A
00481d 940e a638 	CALL SUBOPT_0x10B
00481f 940e a61b 	CALL SUBOPT_0x106
004821 f484      	BRGE _0xE004E
                 ; 0007 0136             readConfig->eventSource[i]  =   config_aout[ch].eventSource[i];
004822 940e a62c 	CALL SUBOPT_0x109
                +
004824 2f7e     +MOV R23 , R30
004825 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
004826 940e a632 	CALL SUBOPT_0x10A
004828 940e a63e 	CALL SUBOPT_0x10C
00482a 940e b651 	CALL __EEPROMRDB
                +
00482c 2fa7     +MOV R26 , R23
00482d 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
00482e 93ec      	ST   X,R30
                 ; 0007 0137         }
                +
00482f 5f0f     +SUBI R16 , LOW ( - 1 )
004830 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004831 cfe9      	RJMP _0xE004D
                 _0xE004E:
                 ; 0007 0138         for(i=config_aout[ch].eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004832 940e a632 	CALL SUBOPT_0x10A
004834 940e a638 	CALL SUBOPT_0x10B
004836 2f0e      	MOV  R16,R30
004837 2711      	CLR  R17
                 _0xE0050:
                +
004838 3203     +CPI R16 , LOW ( 35 )
004839 e0e0     +LDI R30 , HIGH ( 35 )
00483a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
00483b f43c      	BRGE _0xE0051
                 ; 0007 0139             readConfig->eventSource[i]  =   0x00;
00483c 940e a62c 	CALL SUBOPT_0x109
00483e e0a0      	LDI  R26,LOW(0)
00483f 83a0      	STD  Z+0,R26
                 ; 0007 013A         }
                +
004840 5f0f     +SUBI R16 , LOW ( - 1 )
004841 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004842 cff5      	RJMP _0xE0050
                 _0xE0051:
                 ; 0007 013B     }
                 _0xE004B:
                 ; 0007 013C     return 0;
                 _0x20E007C:
004843 e0e0      	LDI  R30,LOW(0)
004844 e0f0      	LDI  R31,HIGH(0)
                 _0x20E007B:
004845 8119      	LDD  R17,Y+1
004846 8108      	LDD  R16,Y+0
004847 9626      	ADIW R28,6
004848 9508      	RET
                 ; 0007 013D }
                 ;/*============================================================*/
                 ;int getBuzzerConfig(struct buzz_cnfg_st *readConfig)
                 ; 0007 0140 {
                 _getBuzzerConfig:
                 ; 0007 0141     char errSrc[4] = {0xC7,0xCF,0xD7,0xDF};
                 ; 0007 0142     int i;
                 ; 0007 0143 
                 ; 0007 0144     if( config_buzz_flag != 0x01){
004849 93ba      	ST   -Y,R27
00484a 93aa      	ST   -Y,R26
00484b 9724      	SBIW R28,4
00484c ece7      	LDI  R30,LOW(199)
00484d 83e8      	ST   Y,R30
00484e ecef      	LDI  R30,LOW(207)
00484f 83e9      	STD  Y+1,R30
004850 ede7      	LDI  R30,LOW(215)
004851 83ea      	STD  Y+2,R30
004852 edef      	LDI  R30,LOW(223)
004853 83eb      	STD  Y+3,R30
004854 931a      	ST   -Y,R17
004855 930a      	ST   -Y,R16
                 ;	*readConfig -> Y+6
                 ;	errSrc -> Y+2
                 ;	i -> R16,R17
004856 e7ae      	LDI  R26,LOW(_config_buzz_flag)
004857 e0b5      	LDI  R27,HIGH(_config_buzz_flag)
004858 940e b651 	CALL __EEPROMRDB
00485a 30e1      	CPI  R30,LOW(0x1)
00485b f151      	BREQ _0xE0052
                 ; 0007 0145         printDebug("<getBuzzerConfig> no configuration, use default\r\n");
                +
00485c edea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1016 ) )
00485d e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1016 ) )
00485e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1016 ) )
00485f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1016 ) )
                 	__POINTD1FN _0xE0000,1016
004860 940e 9f66 	CALL SUBOPT_0x2
                 ; 0007 0146         readConfig->enable              =   0x01;
004862 81ae      	LDD  R26,Y+6
004863 81bf      	LDD  R27,Y+6+1
004864 e0e1      	LDI  R30,LOW(1)
004865 93ec      	ST   X,R30
                 ; 0007 0147         readConfig->eventSourceNumber   =   sizeof(errSrc);
004866 9611      	ADIW R26,1
004867 e0e4      	LDI  R30,LOW(4)
004868 93ec      	ST   X,R30
                 ; 0007 0148 
                 ; 0007 0149         //printDebug("<getBuzzerConfig> eventSourceNumber = %d ->",readConfig->eventSourceNumber);
                 ; 0007 014A         for(i=0;i<sizeof(errSrc);i++){
                +
004869 e000     +LDI R16 , LOW ( 0 )
00486a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0054:
                +
00486b 3004     +CPI R16 , LOW ( 4 )
00486c e0e0     +LDI R30 , HIGH ( 4 )
00486d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
00486e f4b4      	BRGE _0xE0055
                 ; 0007 014B             if(i<sizeof(errSrc)){
                +
00486f 3004     +CPI R16 , LOW ( 4 )
004870 e0e0     +LDI R30 , HIGH ( 4 )
004871 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
004872 f45c      	BRGE _0xE0056
                 ; 0007 014C                 readConfig->eventSource[i]  =   errSrc[i];
004873 940e a644 	CALL SUBOPT_0x10D
004875 010f      	MOVW R0,R30
004876 01de      	MOVW R26,R28
004877 9612      	ADIW R26,2
004878 0fa0      	ADD  R26,R16
004879 1fb1      	ADC  R27,R17
00487a 91ec      	LD   R30,X
00487b 01d0      	MOVW R26,R0
00487c 93ec      	ST   X,R30
                 ; 0007 014D                 //printDebug("[0x%02X]",readConfig->eventSource[i]);
                 ; 0007 014E             }
                 ; 0007 014F             else{
00487d c004      	RJMP _0xE0057
                 _0xE0056:
                 ; 0007 0150                 readConfig->eventSource[i]  =   0x00;
00487e 940e a644 	CALL SUBOPT_0x10D
004880 e0a0      	LDI  R26,LOW(0)
004881 83a0      	STD  Z+0,R26
                 ; 0007 0151             }
                 _0xE0057:
                 ; 0007 0152         }
                +
004882 5f0f     +SUBI R16 , LOW ( - 1 )
004883 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004884 cfe6      	RJMP _0xE0054
                 _0xE0055:
                 ; 0007 0153         //printDebug("\r\n");
                 ; 0007 0154     }
                 ; 0007 0155     else{
004885 c02d      	RJMP _0xE0058
                 _0xE0052:
                 ; 0007 0156         readConfig->enable              =   config_buzz.enable;
004886 e0a8      	LDI  R26,LOW(_config_buzz)
004887 e0b5      	LDI  R27,HIGH(_config_buzz)
004888 940e b651 	CALL __EEPROMRDB
00488a 81ae      	LDD  R26,Y+6
00488b 81bf      	LDD  R27,Y+6+1
00488c 93ec      	ST   X,R30
                 ; 0007 0157         readConfig->eventSourceNumber   =   config_buzz.eventSourceNumber;
00488d 940e a64a 	CALL SUBOPT_0x10E
                +
00488f 81ae     +LDD R26 , Y + 6
004890 81bf     +LDD R27 , Y + 6 + 1
004891 9611     +ADIW R26 , 1
004892 93ec     +ST X , R30
                 	__PUTB1SNS 6,1
                 ; 0007 0158 
                 ; 0007 0159         for(i=0;i<config_buzz.eventSourceNumber;i++){
                +
004893 e000     +LDI R16 , LOW ( 0 )
004894 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE005A:
004895 940e a64a 	CALL SUBOPT_0x10E
004897 940e a61b 	CALL SUBOPT_0x106
004899 f454      	BRGE _0xE005B
                 ; 0007 015A             readConfig->eventSource[i]  =   config_buzz.eventSource[i];
00489a 940e a644 	CALL SUBOPT_0x10D
00489c 010f      	MOVW R0,R30
                +
00489d e0ea     +LDI R30 , LOW ( _config_buzz + ( 2 ) )
00489e e0f5     +LDI R31 , HIGH ( _config_buzz + ( 2 ) )
                 	__POINTW1MN _config_buzz,2
00489f 940e a544 	CALL SUBOPT_0xE3
                 ; 0007 015B         }
                +
0048a1 5f0f     +SUBI R16 , LOW ( - 1 )
0048a2 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0048a3 cff1      	RJMP _0xE005A
                 _0xE005B:
                 ; 0007 015C         for(i=config_buzz.eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
0048a4 940e a64a 	CALL SUBOPT_0x10E
0048a6 2f0e      	MOV  R16,R30
0048a7 2711      	CLR  R17
                 _0xE005D:
                +
0048a8 3203     +CPI R16 , LOW ( 35 )
0048a9 e0e0     +LDI R30 , HIGH ( 35 )
0048aa 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
0048ab f43c      	BRGE _0xE005E
                 ; 0007 015D             readConfig->eventSource[i]  =   0x00;
0048ac 940e a644 	CALL SUBOPT_0x10D
0048ae e0a0      	LDI  R26,LOW(0)
0048af 83a0      	STD  Z+0,R26
                 ; 0007 015E         }
                +
0048b0 5f0f     +SUBI R16 , LOW ( - 1 )
0048b1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0048b2 cff5      	RJMP _0xE005D
                 _0xE005E:
                 ; 0007 015F     }
                 _0xE0058:
                 ; 0007 0160 
                 ; 0007 0161     printDebug("<getBuzzerConfig> enable            >>[0x%02X]\r\n",    readConfig->enable);
                +
0048b3 e0ec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1066 ) )
0048b4 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1066 ) )
0048b5 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1066 ) )
0048b6 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1066 ) )
                 	__POINTD1FN _0xE0000,1066
0048b7 940e a64f 	CALL SUBOPT_0x10F
0048b9 91ec      	LD   R30,X
0048ba 940e a073 	CALL SUBOPT_0x27
                 ; 0007 0162     printDebug("<getBuzzerConfig> eventSourceNumber >>[%d]\r\n",         readConfig->eventSourceNumber);
                +
0048bc e3ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1115 ) )
0048bd e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1115 ) )
0048be e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1115 ) )
0048bf e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1115 ) )
                 	__POINTD1FN _0xE0000,1115
0048c0 940e a654 	CALL SUBOPT_0x110
0048c2 81e1      	LDD  R30,Z+1
0048c3 940e a073 	CALL SUBOPT_0x27
                 ; 0007 0163     printDebug("<getBuzzerConfig> eventSource       >>");
                +
0048c5 e6ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1160 ) )
0048c6 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1160 ) )
0048c7 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1160 ) )
0048c8 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1160 ) )
                 	__POINTD1FN _0xE0000,1160
0048c9 940e 9f66 	CALL SUBOPT_0x2
                 ; 0007 0164     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
0048cb e000     +LDI R16 , LOW ( 0 )
0048cc e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0060:
                +
0048cd 3203     +CPI R16 , LOW ( 35 )
0048ce e0e0     +LDI R30 , HIGH ( 35 )
0048cf 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
0048d0 f45c      	BRGE _0xE0061
                 ; 0007 0165         printDebug("[0x%02X]",readConfig->eventSource[i]);
0048d1 940e a659 	CALL SUBOPT_0x111
0048d3 940e a654 	CALL SUBOPT_0x110
0048d5 940e a65e 	CALL SUBOPT_0x112
0048d7 940e a073 	CALL SUBOPT_0x27
                 ; 0007 0166     }
                +
0048d9 5f0f     +SUBI R16 , LOW ( - 1 )
0048da 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0048db cff1      	RJMP _0xE0060
                 _0xE0061:
                 ; 0007 0167     printDebug("\r\n");
0048dc 940e a59e 	CALL SUBOPT_0xF1
                 ; 0007 0168 
                 ; 0007 0169     return 0;
0048de 940e a48b 	CALL SUBOPT_0xC3
0048e0 9628      	ADIW R28,8
0048e1 9508      	RET
                 ; 0007 016A }
                 ;/*============================================================*/
                 ;int getEnvAlarmConfig(struct alm_cnfg_st *readConfig)
                 ; 0007 016D {
                 _getEnvAlarmConfig:
                 ; 0007 016E     if( config_alm_flag != 0x01 ){
0048e2 93ba      	ST   -Y,R27
0048e3 93aa      	ST   -Y,R26
                 ;	*readConfig -> Y+0
0048e4 e7af      	LDI  R26,LOW(_config_alm_flag)
0048e5 e0b5      	LDI  R27,HIGH(_config_alm_flag)
0048e6 940e b651 	CALL __EEPROMRDB
0048e8 30e1      	CPI  R30,LOW(0x1)
0048e9 f121      	BREQ _0xE0062
                 ; 0007 016F         printDebug("<getEnvAlarmConfig> no configuration, use default\r\n");
                +
0048ea e9e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1199 ) )
0048eb e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1199 ) )
0048ec e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1199 ) )
0048ed e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1199 ) )
                 	__POINTD1FN _0xE0000,1199
0048ee 940e 9f66 	CALL SUBOPT_0x2
                 ; 0007 0170         readConfig->gsmRSSILevel         =   0;
0048f0 81a8      	LD   R26,Y
0048f1 81b9      	LDD  R27,Y+1
0048f2 940e a2c9 	CALL SUBOPT_0x7C
                 ; 0007 0171         readConfig->gsmCreditBalance     =   0;
0048f4 81a8      	LD   R26,Y
0048f5 81b9      	LDD  R27,Y+1
0048f6 9614      	ADIW R26,4
0048f7 e0e0      	LDI  R30,LOW(0)
0048f8 e0f0      	LDI  R31,HIGH(0)
0048f9 940e a5a8 	CALL SUBOPT_0xF3
                 ; 0007 0172         readConfig->batteryLevel         =   0;
0048fb 9616      	ADIW R26,6
0048fc 940e a2c9 	CALL SUBOPT_0x7C
                 ; 0007 0173         readConfig->commSignalLevel      =   0;
0048fe 81a8      	LD   R26,Y
0048ff 81b9      	LDD  R27,Y+1
004900 961a      	ADIW R26,10
004901 940e a2c9 	CALL SUBOPT_0x7C
                 ; 0007 0174         readConfig->commLostDelay        =   0;
004903 81a8      	LD   R26,Y
004904 81b9      	LDD  R27,Y+1
004905 961e      	ADIW R26,14
004906 e0e0      	LDI  R30,LOW(0)
004907 e0f0      	LDI  R31,HIGH(0)
004908 940e a5a8 	CALL SUBOPT_0xF3
                 ; 0007 0175         readConfig->memoryMin            =   0;
00490a 9650      	ADIW R26,16
00490b 940e a5dc 	CALL SUBOPT_0xFC
                 ; 0007 0176     }
                 ; 0007 0177     else{
00490d c035      	RJMP _0xE0063
                 _0xE0062:
                 ; 0007 0178         readConfig->gsmRSSILevel         =   config_alm.gsmRSSILevel;
00490e e2ad      	LDI  R26,LOW(_config_alm)
00490f e0b5      	LDI  R27,HIGH(_config_alm)
004910 940e b649 	CALL __EEPROMRDD
004912 81a8      	LD   R26,Y
004913 81b9      	LDD  R27,Y+1
004914 940e b605 	CALL __PUTDP1
                 ; 0007 0179         readConfig->gsmCreditBalance     =   config_alm.gsmCreditBalance;
                +
004916 e3a1     +LDI R26 , LOW ( _config_alm + ( 4 ) )
004917 e0b5     +LDI R27 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW2MN _config_alm,4
004918 940e b64d 	CALL __EEPROMRDW
                +
00491a 81a8     +LDD R26 , Y + 0
00491b 81b9     +LDD R27 , Y + 0 + 1
00491c 9614     +ADIW R26 , 4
00491d 93ed     +ST X + , R30
00491e 93fc     +ST X , R31
                 	__PUTW1SNS 0,4
                 ; 0007 017A         readConfig->batteryLevel         =   config_alm.batteryLevel;
                +
00491f e3a3     +LDI R26 , LOW ( _config_alm + ( 6 ) )
004920 e0b5     +LDI R27 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW2MN _config_alm,6
004921 940e b649 	CALL __EEPROMRDD
                +
004923 81a8     +LDD R26 , Y + 0
004924 81b9     +LDD R27 , Y + 0 + 1
004925 9616     +ADIW R26 , 6
004926 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 0,6
                 ; 0007 017B         readConfig->commSignalLevel      =   config_alm.commSignalLevel;
                +
004928 e3a7     +LDI R26 , LOW ( _config_alm + ( 10 ) )
004929 e0b5     +LDI R27 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW2MN _config_alm,10
00492a 940e b649 	CALL __EEPROMRDD
                +
00492c 81a8     +LDD R26 , Y + 0
00492d 81b9     +LDD R27 , Y + 0 + 1
00492e 961a     +ADIW R26 , 10
00492f 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 0,10
                 ; 0007 017C         readConfig->commLostDelay        =   config_alm.commLostDelay;
                +
004931 e3ab     +LDI R26 , LOW ( _config_alm + ( 14 ) )
004932 e0b5     +LDI R27 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW2MN _config_alm,14
004933 940e b64d 	CALL __EEPROMRDW
                +
004935 81a8     +LDD R26 , Y + 0
004936 81b9     +LDD R27 , Y + 0 + 1
004937 961e     +ADIW R26 , 14
004938 93ed     +ST X + , R30
004939 93fc     +ST X , R31
                 	__PUTW1SNS 0,14
                 ; 0007 017D         readConfig->memoryMin            =   config_alm.memoryMin;
                +
00493a e3ad     +LDI R26 , LOW ( _config_alm + ( 16 ) )
00493b e0b5     +LDI R27 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW2MN _config_alm,16
00493c 940e b64d 	CALL __EEPROMRDW
                +
00493e 81a8     +LDD R26 , Y + 0
00493f 81b9     +LDD R27 , Y + 0 + 1
004940 9650     +ADIW R26 , 16
004941 93ed     +ST X + , R30
004942 93fc     +ST X , R31
                 	__PUTW1SNS 0,16
                 ; 0007 017E     }
                 _0xE0063:
                 ; 0007 017F 
                 ; 0007 0180     printDebug("<getEnvAlarmConfig> gsmRSSILevel         [%f]\r\n",readConfig->gsmRSSILevel);
                +
004943 ece5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1251 ) )
004944 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1251 ) )
004945 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1251 ) )
004946 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1251 ) )
                 	__POINTD1FN _0xE0000,1251
004947 940e a663 	CALL SUBOPT_0x113
004949 940e a668 	CALL SUBOPT_0x114
                 ; 0007 0181     printDebug("<getEnvAlarmConfig> gsmCreditBalance     [%d]\r\n",readConfig->gsmCreditBalance);
                +
00494b efe5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1299 ) )
00494c e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1299 ) )
00494d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1299 ) )
00494e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1299 ) )
                 	__POINTD1FN _0xE0000,1299
00494f 940e a663 	CALL SUBOPT_0x113
004951 9614      	ADIW R26,4
004952 940e a66d 	CALL SUBOPT_0x115
                 ; 0007 0182     printDebug("<getEnvAlarmConfig> batteryLevel         [%f]\r\n",readConfig->batteryLevel);
                +
004954 e2e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1347 ) )
004955 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1347 ) )
004956 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1347 ) )
004957 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1347 ) )
                 	__POINTD1FN _0xE0000,1347
004958 940e a670 	CALL SUBOPT_0x116
00495a 940e a675 	CALL SUBOPT_0x117
                 ; 0007 0183     printDebug("<getEnvAlarmConfig> commSignalLevel      [%f]\r\n",readConfig->commSignalLevel);
                +
00495c e5e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1395 ) )
00495d e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1395 ) )
00495e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1395 ) )
00495f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1395 ) )
                 	__POINTD1FN _0xE0000,1395
004960 940e a670 	CALL SUBOPT_0x116
004962 940e a67c 	CALL SUBOPT_0x118
                 ; 0007 0184     printDebug("<getEnvAlarmConfig> commLostDelay        [%d]\r\n",readConfig->commLostDelay);
                +
004964 e8e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1443 ) )
004965 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1443 ) )
004966 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1443 ) )
004967 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1443 ) )
                 	__POINTD1FN _0xE0000,1443
004968 940e a663 	CALL SUBOPT_0x113
00496a 961e      	ADIW R26,14
00496b 940e a66d 	CALL SUBOPT_0x115
                 ; 0007 0185     printDebug("<getEnvAlarmConfig> memoryMin            [%u]\r\n",readConfig->memoryMin,);
                +
00496d ebe5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1491 ) )
00496e e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1491 ) )
00496f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1491 ) )
004970 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1491 ) )
                 	__POINTD1FN _0xE0000,1491
004971 940e a663 	CALL SUBOPT_0x113
004973 9650      	ADIW R26,16
004974 c033      	RJMP _0x20E007A
                 ; 0007 0186 
                 ; 0007 0187     return 0;
                 ; 0007 0188 }
                 ;/*============================================================*/
                 ;int getStatusReportConfig(struct stat_cnfg_st *readConfig)
                 ; 0007 018B {
                 _getStatusReportConfig:
                 ; 0007 018C     if( config_stat_flag != 0x01 ){
004975 93ba      	ST   -Y,R27
004976 93aa      	ST   -Y,R26
                 ;	*readConfig -> Y+0
004977 e8a0      	LDI  R26,LOW(_config_stat_flag)
004978 e0b5      	LDI  R27,HIGH(_config_stat_flag)
004979 940e b651 	CALL __EEPROMRDB
00497b 30e1      	CPI  R30,LOW(0x1)
00497c f081      	BREQ _0xE0064
                 ; 0007 018D         printDebug("<getStatusReportConfig> no configuration, use default\r\n");
                +
00497d eee5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1539 ) )
00497e e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1539 ) )
00497f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1539 ) )
004980 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1539 ) )
                 	__POINTD1FN _0xE0000,1539
004981 940e 9f66 	CALL SUBOPT_0x2
                 ; 0007 018E         readConfig->accm                =   0x30;
004983 81a8      	LD   R26,Y
004984 81b9      	LDD  R27,Y+1
004985 e3e0      	LDI  R30,LOW(48)
004986 93ec      	ST   X,R30
                 ; 0007 018F         readConfig->intv                =   60;
004987 9611      	ADIW R26,1
004988 e3ec      	LDI  R30,LOW(60)
004989 e0f0      	LDI  R31,HIGH(60)
00498a 93ed      	ST   X+,R30
00498b 93fc      	ST   X,R31
                 ; 0007 0190     }
                 ; 0007 0191     else{
00498c c00b      	RJMP _0xE0065
                 _0xE0064:
                 ; 0007 0192         readConfig->accm                =   config_stat.accm;
00498d e3af      	LDI  R26,LOW(_config_stat)
00498e e0b5      	LDI  R27,HIGH(_config_stat)
00498f 940e b651 	CALL __EEPROMRDB
004991 81a8      	LD   R26,Y
004992 81b9      	LDD  R27,Y+1
004993 93ec      	ST   X,R30
                 ; 0007 0193         readConfig->intv                =   config_stat.intv;
                +
004994 e4a0     +LDI R26 , LOW ( _config_stat + ( 1 ) )
004995 e0b5     +LDI R27 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW2MN _config_stat,1
004996 940e a5ee 	CALL SUBOPT_0xFF
                 ; 0007 0194     }
                 _0xE0065:
                 ; 0007 0195 
                 ; 0007 0196     printDebug("<getStatusReportConfig> accm        [0x%02X]\r\n",readConfig->accm);
                +
004998 e1ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1595 ) )
004999 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1595 ) )
00499a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1595 ) )
00499b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1595 ) )
                 	__POINTD1FN _0xE0000,1595
00499c 940e a663 	CALL SUBOPT_0x113
00499e 91ec      	LD   R30,X
00499f 940e a073 	CALL SUBOPT_0x27
                 ; 0007 0197     printDebug("<getStatusReportConfig> intv        [%d]\r\n",readConfig->intv);
                +
0049a1 e4ec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1642 ) )
0049a2 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1642 ) )
0049a3 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1642 ) )
0049a4 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1642 ) )
                 	__POINTD1FN _0xE0000,1642
0049a5 940e a663 	CALL SUBOPT_0x113
0049a7 9611      	ADIW R26,1
                 _0x20E007A:
0049a8 940e b5f6 	CALL __GETW1P
0049aa 940e a524 	CALL SUBOPT_0xDD
0049ac 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0007 0198 
                 ; 0007 0199     return 0;
0049ae e0e0      	LDI  R30,LOW(0)
0049af e0f0      	LDI  R31,HIGH(0)
0049b0 9622      	ADIW R28,2
0049b1 9508      	RET
                 ; 0007 019A }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/**************** Write Configuration to EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int setPropertiesConfig(struct prop_cnfg_st *newConfig)
                 ; 0007 01A2 {
                 _setPropertiesConfig:
                 ; 0007 01A3     int i;
                 ; 0007 01A4 
                 ; 0007 01A5     for(i=0;i<DEVTYPE_LENGTH;i++)
0049b2 940e a285 	CALL SUBOPT_0x71
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
                +
0049b4 e000     +LDI R16 , LOW ( 0 )
0049b5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0067:
                +
0049b6 3104     +CPI R16 , LOW ( 20 )
0049b7 e0e0     +LDI R30 , HIGH ( 20 )
0049b8 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
0049b9 f474      	BRGE _0xE0068
                 ; 0007 01A6     {
                 ; 0007 01A7         config_prop.deviceType[i]       = newConfig->deviceType[i];
0049ba 01f8      	MOVW R30,R16
0049bb 50e0      	SUBI R30,LOW(-_config_prop)
0049bc 40f0      	SBCI R31,HIGH(-_config_prop)
0049bd 010f      	MOVW R0,R30
0049be 01f8      	MOVW R30,R16
0049bf 81aa      	LDD  R26,Y+2
0049c0 81bb      	LDD  R27,Y+2+1
0049c1 940e a683 	CALL SUBOPT_0x119
0049c3 940e b66d 	CALL __EEPROMWRB
                 ; 0007 01A8     }
                +
0049c5 5f0f     +SUBI R16 , LOW ( - 1 )
0049c6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0049c7 cfee      	RJMP _0xE0067
                 _0xE0068:
                 ; 0007 01A9 
                 ; 0007 01AA     /*
                 ; 0007 01AB     for(i=0;i<FW_LENGTH;i++)
                 ; 0007 01AC     {
                 ; 0007 01AD         config_prop.firmwareVersion[i]  = newConfig->firmwareVersion[i];    //printDebug("%c",config_prop.firmwareVersion[i]);
                 ; 0007 01AE     }
                 ; 0007 01AF     */
                 ; 0007 01B0 
                 ; 0007 01B1     for(i=0;i<NAME_LENGTH;i++)
                +
0049c8 e000     +LDI R16 , LOW ( 0 )
0049c9 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE006A:
                +
0049ca 3208     +CPI R16 , LOW ( 40 )
0049cb e0e0     +LDI R30 , HIGH ( 40 )
0049cc 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
0049cd f484      	BRGE _0xE006B
                 ; 0007 01B2     {
                 ; 0007 01B3         config_prop.deviceName[i]       = newConfig->deviceName[i];
                +
0049ce e2e8     +LDI R30 , LOW ( _config_prop + ( 40 ) )
0049cf e0f0     +LDI R31 , HIGH ( _config_prop + ( 40 ) )
                 	__POINTW1MN _config_prop,40
0049d0 0fe0      	ADD  R30,R16
0049d1 1ff1      	ADC  R31,R17
0049d2 01df      	MOVW R26,R30
0049d3 81ea      	LDD  R30,Y+2
0049d4 81fb      	LDD  R31,Y+2+1
0049d5 96b8      	ADIW R30,40
0049d6 0fe0      	ADD  R30,R16
0049d7 1ff1      	ADC  R31,R17
0049d8 81e0      	LD   R30,Z
0049d9 940e b66d 	CALL __EEPROMWRB
                 ; 0007 01B4     }
                +
0049db 5f0f     +SUBI R16 , LOW ( - 1 )
0049dc 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0049dd cfec      	RJMP _0xE006A
                 _0xE006B:
                 ; 0007 01B5 
                 ; 0007 01B6     for(i=0;i<ID_LENGTH;i++)
                +
0049de e000     +LDI R16 , LOW ( 0 )
0049df e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE006D:
                +
0049e0 3104     +CPI R16 , LOW ( 20 )
0049e1 e0e0     +LDI R30 , HIGH ( 20 )
0049e2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
0049e3 f46c      	BRGE _0xE006E
                 ; 0007 01B7     {
                 ; 0007 01B8         config_prop.deviceID[i]         = newConfig->deviceID[i];
                +
0049e4 e5e0     +LDI R30 , LOW ( _config_prop + ( 80 ) )
0049e5 e0f0     +LDI R31 , HIGH ( _config_prop + ( 80 ) )
                 	__POINTW1MN _config_prop,80
0049e6 0fe0      	ADD  R30,R16
0049e7 1ff1      	ADC  R31,R17
0049e8 01df      	MOVW R26,R30
0049e9 940e a54c 	CALL SUBOPT_0xE4
0049eb 81e0      	LD   R30,Z
0049ec 940e b66d 	CALL __EEPROMWRB
                 ; 0007 01B9     }
                +
0049ee 5f0f     +SUBI R16 , LOW ( - 1 )
0049ef 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0049f0 cfef      	RJMP _0xE006D
                 _0xE006E:
                 ; 0007 01BA 
                 ; 0007 01BB     for(i=0;i<NAME_LENGTH;i++)
                +
0049f1 e000     +LDI R16 , LOW ( 0 )
0049f2 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0070:
                +
0049f3 3208     +CPI R16 , LOW ( 40 )
0049f4 e0e0     +LDI R30 , HIGH ( 40 )
0049f5 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
0049f6 f46c      	BRGE _0xE0071
                 ; 0007 01BC     {
                 ; 0007 01BD         config_prop.hostName[i]         = newConfig->hostName[i];
                +
0049f7 e6e4     +LDI R30 , LOW ( _config_prop + ( 100 ) )
0049f8 e0f0     +LDI R31 , HIGH ( _config_prop + ( 100 ) )
                 	__POINTW1MN _config_prop,100
0049f9 0fe0      	ADD  R30,R16
0049fa 1ff1      	ADC  R31,R17
0049fb 01df      	MOVW R26,R30
0049fc 940e a553 	CALL SUBOPT_0xE5
0049fe 81e0      	LD   R30,Z
0049ff 940e b66d 	CALL __EEPROMWRB
                 ; 0007 01BE     }
                +
004a01 5f0f     +SUBI R16 , LOW ( - 1 )
004a02 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004a03 cfef      	RJMP _0xE0070
                 _0xE0071:
                 ; 0007 01BF 
                 ; 0007 01C0     for(i=0;i<ID_LENGTH;i++)
                +
004a04 e000     +LDI R16 , LOW ( 0 )
004a05 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0073:
                +
004a06 3104     +CPI R16 , LOW ( 20 )
004a07 e0e0     +LDI R30 , HIGH ( 20 )
004a08 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004a09 f46c      	BRGE _0xE0074
                 ; 0007 01C1     {
                 ; 0007 01C2         config_prop.hostID[i]           = newConfig->hostID[i];
                +
004a0a e8ec     +LDI R30 , LOW ( _config_prop + ( 140 ) )
004a0b e0f0     +LDI R31 , HIGH ( _config_prop + ( 140 ) )
                 	__POINTW1MN _config_prop,140
004a0c 0fe0      	ADD  R30,R16
004a0d 1ff1      	ADC  R31,R17
004a0e 01df      	MOVW R26,R30
004a0f 940e a55a 	CALL SUBOPT_0xE6
004a11 81e0      	LD   R30,Z
004a12 940e b66d 	CALL __EEPROMWRB
                 ; 0007 01C3     }
                +
004a14 5f0f     +SUBI R16 , LOW ( - 1 )
004a15 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004a16 cfef      	RJMP _0xE0073
                 _0xE0074:
                 ; 0007 01C4 
                 ; 0007 01C5     config_prop.timeZone                = newConfig->timeZone;
                +
004a17 eae0     +LDI R30 , LOW ( _config_prop + ( 160 ) )
004a18 e0f0     +LDI R31 , HIGH ( _config_prop + ( 160 ) )
                 	__POINTW1MN _config_prop,160
004a19 010f      	MOVW R0,R30
004a1a 81aa      	LDD  R26,Y+2
004a1b 81bb      	LDD  R27,Y+2+1
004a1c 56a0      	SUBI R26,LOW(-160)
004a1d 4fbf      	SBCI R27,HIGH(-160)
004a1e 940e a688 	CALL SUBOPT_0x11A
                 ; 0007 01C6 
                 ; 0007 01C7     config_prop_flag                    = 0x01;
004a20 e4a2      	LDI  R26,LOW(_config_prop_flag)
004a21 e0b5      	LDI  R27,HIGH(_config_prop_flag)
004a22 940e a68d 	CALL SUBOPT_0x11B
                 ; 0007 01C8 
                 ; 0007 01C9     is_properties_config_update          = 1;
004a24 93e0 10f6 	STS  _is_properties_config_update,R30
                 ; 0007 01CA 
                 ; 0007 01CB     return 0;
004a26 940e a48b 	CALL SUBOPT_0xC3
004a28 c08e      	RJMP _0x20E0078
                 ; 0007 01CC }
                 ;/*============================================================*/
                 ;int setOperatingConfig(struct oper_cnfg_st *newConfig)
                 ; 0007 01CF {
                 _setOperatingConfig:
                 ; 0007 01D0     int i;
                 ; 0007 01D1 
                 ; 0007 01D2     if( (newConfig->mode != MODE_REALTIME) && (newConfig->mode != MODE_DATALOGGER) ){
004a29 940e a285 	CALL SUBOPT_0x71
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
004a2b 81aa      	LDD  R26,Y+2
004a2c 81bb      	LDD  R27,Y+2+1
004a2d 91ac      	LD   R26,X
004a2e 31a0      	CPI  R26,LOW(0x10)
004a2f f029      	BREQ _0xE0076
004a30 81aa      	LDD  R26,Y+2
004a31 81bb      	LDD  R27,Y+2+1
004a32 91ac      	LD   R26,X
004a33 32a0      	CPI  R26,LOW(0x20)
004a34 f409      	BRNE _0xE0077
                 _0xE0076:
004a35 c009      	RJMP _0xE0075
                 _0xE0077:
                 ; 0007 01D3         printDebug("<setOperatingConfig> Error: operating mode invalid [0x%02X]\r\n", newConfig->mode);
                +
004a36 e7e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1685 ) )
004a37 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1685 ) )
004a38 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1685 ) )
004a39 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1685 ) )
                 	__POINTD1FN _0xE0000,1685
004a3a 940e a589 	CALL SUBOPT_0xED
                 ; 0007 01D4         return -1;
004a3c 940e a691 	CALL SUBOPT_0x11C
004a3e c078      	RJMP _0x20E0078
                 ; 0007 01D5     }
                 ; 0007 01D6 
                 ; 0007 01D7     config_oper.mode                    =   newConfig->mode;
                 _0xE0075:
004a3f 81aa      	LDD  R26,Y+2
004a40 81bb      	LDD  R27,Y+2+1
004a41 91ec      	LD   R30,X
004a42 eaa1      	LDI  R26,LOW(_config_oper)
004a43 e0b0      	LDI  R27,HIGH(_config_oper)
004a44 940e b66d 	CALL __EEPROMWRB
                 ; 0007 01D8     config_oper.deviceEnable            =   newConfig->deviceEnable;
                +
004a46 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
004a47 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
004a48 81ea      	LDD  R30,Y+2
004a49 81fb      	LDD  R31,Y+2+1
004a4a 81e1      	LDD  R30,Z+1
004a4b 940e b66d 	CALL __EEPROMWRB
                 ; 0007 01D9     config_oper.alarmEnable             =   newConfig->alarmEnable;
                +
004a4d eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
004a4e e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
004a4f 81ea      	LDD  R30,Y+2
004a50 81fb      	LDD  R31,Y+2+1
004a51 81e2      	LDD  R30,Z+2
004a52 940e b66d 	CALL __EEPROMWRB
                 ; 0007 01DA 
                 ; 0007 01DB     printDebug("\r\n mode            >> 0x%02X",config_oper.mode);
                +
004a54 ebe5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1747 ) )
004a55 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1747 ) )
004a56 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1747 ) )
004a57 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1747 ) )
                 	__POINTD1FN _0xE0000,1747
004a58 940e b62a 	CALL __PUTPARD1
004a5a eaa1      	LDI  R26,LOW(_config_oper)
004a5b e0b0      	LDI  R27,HIGH(_config_oper)
004a5c 940e a696 	CALL SUBOPT_0x11D
                 ; 0007 01DC     printDebug("\r\n deviceEnable    >> 0x%02X",config_oper.deviceEnable);
                +
004a5e ede2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1776 ) )
004a5f e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1776 ) )
004a60 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1776 ) )
004a61 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1776 ) )
                 	__POINTD1FN _0xE0000,1776
004a62 940e b62a 	CALL __PUTPARD1
                +
004a64 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
004a65 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
004a66 940e a696 	CALL SUBOPT_0x11D
                 ; 0007 01DD     printDebug("\r\n alarmEnable     >> 0x%02X",config_oper.alarmEnable);
004a68 940e a699 	CALL SUBOPT_0x11E
                +
004a6a eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
004a6b e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
004a6c 940e a696 	CALL SUBOPT_0x11D
                 ; 0007 01DE     printDebug("\r\n sensorEnable    >> ");
                +
004a6e e0ec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1834 ) )
004a6f e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1834 ) )
004a70 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1834 ) )
004a71 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1834 ) )
                 	__POINTD1FN _0xE0000,1834
004a72 940e 9f66 	CALL SUBOPT_0x2
                 ; 0007 01DF 
                 ; 0007 01E0     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
004a74 e000     +LDI R16 , LOW ( 0 )
004a75 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0079:
                +
004a76 3005     +CPI R16 , LOW ( 5 )
004a77 e0e0     +LDI R30 , HIGH ( 5 )
004a78 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004a79 f4c4      	BRGE _0xE007A
                 ; 0007 01E1     {
                 ; 0007 01E2         config_oper.sensorEnable[i]     =   newConfig->sensorEnable[i];
                +
004a7a eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
004a7b e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
004a7c 0fe0      	ADD  R30,R16
004a7d 1ff1      	ADC  R31,R17
004a7e 01df      	MOVW R26,R30
004a7f 940e a56f 	CALL SUBOPT_0xE9
004a81 81e0      	LD   R30,Z
004a82 940e b66d 	CALL __EEPROMWRB
                 ; 0007 01E3         printDebug("[0x%02X]",config_oper.sensorEnable[i]);
004a84 940e a659 	CALL SUBOPT_0x111
004a86 940e b62a 	CALL __PUTPARD1
                +
004a88 eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
004a89 e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
004a8a 0fe0      	ADD  R30,R16
004a8b 1ff1      	ADC  R31,R17
004a8c 01df      	MOVW R26,R30
004a8d 940e a696 	CALL SUBOPT_0x11D
                 ; 0007 01E4     }
                +
004a8f 5f0f     +SUBI R16 , LOW ( - 1 )
004a90 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004a91 cfe4      	RJMP _0xE0079
                 _0xE007A:
                 ; 0007 01E5     printDebug("\r\n");
004a92 940e a59e 	CALL SUBOPT_0xF1
                 ; 0007 01E6 
                 ; 0007 01E7     config_oper_flag                    =   0x01;
004a94 e4a3      	LDI  R26,LOW(_config_oper_flag)
004a95 e0b5      	LDI  R27,HIGH(_config_oper_flag)
004a96 940e a68d 	CALL SUBOPT_0x11B
                 ; 0007 01E8 
                 ; 0007 01E9     is_operating_config_update          =   1;
004a98 93e0 10f7 	STS  _is_operating_config_update,R30
                 ; 0007 01EA 
                 ; 0007 01EB     return 0;
004a9a 940e a48b 	CALL SUBOPT_0xC3
004a9c c01a      	RJMP _0x20E0078
                 ; 0007 01EC }
                 ;/*============================================================*/
                 ;int setSensorConfig(int ch, struct sens_cnfg_st *newConfig)
                 ; 0007 01EF {
                 _setSensorConfig:
                 ; 0007 01F0     if((ch < 0) || (ch >= MAX_SENS_CHANNEL)){
004a9d 940e a5a3 	CALL SUBOPT_0xF2
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
004a9f f022      	BRMI _0xE007C
004aa0 81aa      	LDD  R26,Y+2
004aa1 81bb      	LDD  R27,Y+2+1
004aa2 9715      	SBIW R26,5
004aa3 f02c      	BRLT _0xE007B
                 _0xE007C:
                 ; 0007 01F1         printDebug("<setSensorConfig> ERR: channel out of range\r\n");
                +
004aa4 e2e3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1857 ) )
004aa5 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1857 ) )
004aa6 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1857 ) )
004aa7 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1857 ) )
                 	__POINTD1FN _0xE0000,1857
004aa8 c008      	RJMP _0x20E0077
                 ; 0007 01F2         return -1;
                 ; 0007 01F3     }
                 ; 0007 01F4     if(newConfig->samplingRate == 0){
                 _0xE007B:
004aa9 940e a6a0 	CALL SUBOPT_0x11F
004aab 9730      	SBIW R30,0
004aac f461      	BRNE _0xE007E
                 ; 0007 01F5         printDebug("<setSensorConfig> ERR: samplingRate couldn't be set to 0\r\n");
                +
004aad e5e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1903 ) )
004aae e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1903 ) )
004aaf e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1903 ) )
004ab0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1903 ) )
                 	__POINTD1FN _0xE0000,1903
                 _0x20E0077:
004ab1 940e b62a 	CALL __PUTPARD1
004ab3 940e a0c5 	CALL SUBOPT_0x30
                 ; 0007 01F6         return -1;
                 _0x20E0079:
004ab5 efef      	LDI  R30,LOW(65535)
004ab6 efff      	LDI  R31,HIGH(65535)
                 _0x20E0078:
004ab7 9624      	ADIW R28,4
004ab8 9508      	RET
                 ; 0007 01F7     }
                 ; 0007 01F8 
                 ; 0007 01F9     if(newConfig->samplingRate < 60){
                 _0xE007E:
004ab9 940e a6a0 	CALL SUBOPT_0x11F
004abb 97fc      	SBIW R30,60
004abc f430      	BRSH _0xE007F
                 ; 0007 01FA         newConfig->samplingRate         =   60;
004abd 81a8      	LD   R26,Y
004abe 81b9      	LDD  R27,Y+1
004abf e3ec      	LDI  R30,LOW(60)
004ac0 e0f0      	LDI  R31,HIGH(60)
004ac1 93ed      	ST   X+,R30
004ac2 93fc      	ST   X,R31
                 ; 0007 01FB     }
                 ; 0007 01FC 
                 ; 0007 01FD     config_sens[ch].samplingRate        =   newConfig->samplingRate;
                 _0xE007F:
004ac3 940e a5b2 	CALL SUBOPT_0xF5
004ac5 55e7      	SUBI R30,LOW(-_config_sens)
004ac6 4fff      	SBCI R31,HIGH(-_config_sens)
004ac7 010f      	MOVW R0,R30
004ac8 940e a6a0 	CALL SUBOPT_0x11F
004aca 940e a6a5 	CALL SUBOPT_0x120
                 ; 0007 01FE     config_sens[ch].reOccurrence        =   newConfig->reOccurrence;
                +
004acc 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004acd 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004ace 010f      	MOVW R0,R30
004acf 81a8      	LD   R26,Y
004ad0 81b9      	LDD  R27,Y+1
004ad1 9612      	ADIW R26,2
004ad2 940e a6a9 	CALL SUBOPT_0x121
                 ; 0007 01FF     config_sens[ch].timeStartHour       =   newConfig->timeStartHour;
                +
004ad4 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004ad5 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
004ad6 01df      	MOVW R26,R30
004ad7 81e8      	LD   R30,Y
004ad8 81f9      	LDD  R31,Y+1
004ad9 81e4      	LDD  R30,Z+4
004ada 940e a6ac 	CALL SUBOPT_0x122
                 ; 0007 0200     config_sens[ch].timeStartMin        =   newConfig->timeStartMin;
                +
004adc 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004add 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004ade 01df      	MOVW R26,R30
004adf 81e8      	LD   R30,Y
004ae0 81f9      	LDD  R31,Y+1
004ae1 81e5      	LDD  R30,Z+5
004ae2 940e a6ac 	CALL SUBOPT_0x122
                 ; 0007 0201     config_sens[ch].timeStopHour        =   newConfig->timeStopHour;
                +
004ae4 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004ae5 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004ae6 01df      	MOVW R26,R30
004ae7 81e8      	LD   R30,Y
004ae8 81f9      	LDD  R31,Y+1
004ae9 81e6      	LDD  R30,Z+6
004aea 940e a6ac 	CALL SUBOPT_0x122
                 ; 0007 0202     config_sens[ch].timeStopMin         =   newConfig->timeStopMin;
                +
004aec 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
004aed 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
004aee 01df      	MOVW R26,R30
004aef 81e8      	LD   R30,Y
004af0 81f9      	LDD  R31,Y+1
004af1 81e7      	LDD  R30,Z+7
004af2 940e a6ac 	CALL SUBOPT_0x122
                 ; 0007 0203 
                 ; 0007 0204     config_sens[ch].alarmEnable         =   newConfig->alarmEnable;
                +
004af4 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004af5 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004af6 01df      	MOVW R26,R30
004af7 81e8      	LD   R30,Y
004af8 81f9      	LDD  R31,Y+1
004af9 85e0      	LDD  R30,Z+8
004afa 940e a6ac 	CALL SUBOPT_0x122
                 ; 0007 0205     config_sens[ch].lowerLimit          =   newConfig->lowerLimit;
                +
004afc 54ee     +SUBI R30 , LOW ( - _config_sens - ( 9 ) )
004afd 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 9 ) )
                 	__ADDW1MN _config_sens,9
004afe 010f      	MOVW R0,R30
004aff 81a8      	LD   R26,Y
004b00 81b9      	LDD  R27,Y+1
004b01 9619      	ADIW R26,9
004b02 940e a6af 	CALL SUBOPT_0x123
                 ; 0007 0206     config_sens[ch].lowerDelay          =   newConfig->lowerDelay;
                +
004b04 54ea     +SUBI R30 , LOW ( - _config_sens - ( 13 ) )
004b05 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 13 ) )
                 	__ADDW1MN _config_sens,13
004b06 010f      	MOVW R0,R30
004b07 81a8      	LD   R26,Y
004b08 81b9      	LDD  R27,Y+1
004b09 961d      	ADIW R26,13
004b0a 940e a6a9 	CALL SUBOPT_0x121
                 ; 0007 0207     config_sens[ch].lowerExtreme        =   newConfig->lowerExtreme;
                +
004b0c 54e8     +SUBI R30 , LOW ( - _config_sens - ( 15 ) )
004b0d 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 15 ) )
                 	__ADDW1MN _config_sens,15
004b0e 010f      	MOVW R0,R30
004b0f 81a8      	LD   R26,Y
004b10 81b9      	LDD  R27,Y+1
004b11 961f      	ADIW R26,15
004b12 940e a6af 	CALL SUBOPT_0x123
                 ; 0007 0208     config_sens[ch].upperLimit          =   newConfig->upperLimit;
                +
004b14 54e4     +SUBI R30 , LOW ( - _config_sens - ( 19 ) )
004b15 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 19 ) )
                 	__ADDW1MN _config_sens,19
004b16 010f      	MOVW R0,R30
004b17 81a8      	LD   R26,Y
004b18 81b9      	LDD  R27,Y+1
004b19 9653      	ADIW R26,19
004b1a 940e a6af 	CALL SUBOPT_0x123
                 ; 0007 0209     config_sens[ch].upperDelay          =   newConfig->upperDelay;
                +
004b1c 54e0     +SUBI R30 , LOW ( - _config_sens - ( 23 ) )
004b1d 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 23 ) )
                 	__ADDW1MN _config_sens,23
004b1e 010f      	MOVW R0,R30
004b1f 81a8      	LD   R26,Y
004b20 81b9      	LDD  R27,Y+1
004b21 9657      	ADIW R26,23
004b22 940e a6a9 	CALL SUBOPT_0x121
                 ; 0007 020A     config_sens[ch].upperExtreme        =   newConfig->upperExtreme;
                +
004b24 53ee     +SUBI R30 , LOW ( - _config_sens - ( 25 ) )
004b25 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 25 ) )
                 	__ADDW1MN _config_sens,25
004b26 010f      	MOVW R0,R30
004b27 81a8      	LD   R26,Y
004b28 81b9      	LDD  R27,Y+1
004b29 9659      	ADIW R26,25
004b2a 940e a6b5 	CALL SUBOPT_0x124
                 ; 0007 020B 
                 ; 0007 020C     printDebug("\r\n samplingRate    >> 0x%04X",config_sens[ch].samplingRate);
                +
004b2c e8ec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1962 ) )
004b2d e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1962 ) )
004b2e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1962 ) )
004b2f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1962 ) )
                 	__POINTD1FN _0xE0000,1962
004b30 940e a6bb 	CALL SUBOPT_0x125
004b32 55e7      	SUBI R30,LOW(-_config_sens)
004b33 4fff      	SBCI R31,HIGH(-_config_sens)
004b34 940e a6c3 	CALL SUBOPT_0x126
004b36 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0007 020D     printDebug("\r\n reOccurrence    >> 0x%04X",config_sens[ch].reOccurrence);
                +
004b38 eae9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1991 ) )
004b39 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1991 ) )
004b3a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1991 ) )
004b3b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1991 ) )
                 	__POINTD1FN _0xE0000,1991
004b3c 940e a6bb 	CALL SUBOPT_0x125
                +
004b3e 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004b3f 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004b40 940e a6c3 	CALL SUBOPT_0x126
004b42 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0007 020E     printDebug("\r\n timeStartHour   >> 0x%02X",config_sens[ch].timeStartHour);
                +
004b44 ece6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2020 ) )
004b45 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2020 ) )
004b46 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2020 ) )
004b47 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2020 ) )
                 	__POINTD1FN _0xE0000,2020
004b48 940e a6bb 	CALL SUBOPT_0x125
                +
004b4a 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004b4b 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
004b4c 01df      	MOVW R26,R30
004b4d 940e a696 	CALL SUBOPT_0x11D
                 ; 0007 020F     printDebug("\r\n timeStartMin    >> 0x%02X",config_sens[ch].timeStartMin);
                +
004b4f eee3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2049 ) )
004b50 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2049 ) )
004b51 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2049 ) )
004b52 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2049 ) )
                 	__POINTD1FN _0xE0000,2049
004b53 940e a6bb 	CALL SUBOPT_0x125
                +
004b55 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004b56 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004b57 01df      	MOVW R26,R30
004b58 940e a696 	CALL SUBOPT_0x11D
                 ; 0007 0210     printDebug("\r\n timeStopHour    >> 0x%02X",config_sens[ch].timeStopHour);
                +
004b5a e0e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2078 ) )
004b5b e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2078 ) )
004b5c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2078 ) )
004b5d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2078 ) )
                 	__POINTD1FN _0xE0000,2078
004b5e 940e a6bb 	CALL SUBOPT_0x125
                +
004b60 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004b61 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004b62 01df      	MOVW R26,R30
004b63 940e a696 	CALL SUBOPT_0x11D
                 ; 0007 0211     printDebug("\r\n timeStopMin     >> 0x%02X",config_sens[ch].timeStopMin);
                +
004b65 e1ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2107 ) )
004b66 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2107 ) )
004b67 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2107 ) )
004b68 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2107 ) )
                 	__POINTD1FN _0xE0000,2107
004b69 940e a6bb 	CALL SUBOPT_0x125
                +
004b6b 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
004b6c 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
004b6d 01df      	MOVW R26,R30
004b6e 940e a696 	CALL SUBOPT_0x11D
                 ; 0007 0212 
                 ; 0007 0213     printDebug("\r\n alarmEnable     >> 0x%02X",        config_sens[ch].alarmEnable);
004b70 940e a699 	CALL SUBOPT_0x11E
004b72 81ae      	LDD  R26,Y+6
004b73 81bf      	LDD  R27,Y+6+1
004b74 e1ed      	LDI  R30,LOW(29)
004b75 940e b563 	CALL __MULB1W2U
                +
004b77 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004b78 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004b79 01df      	MOVW R26,R30
004b7a 940e a696 	CALL SUBOPT_0x11D
                 ; 0007 0214     printDebug("\r\n lowerLimit      >> %f [%04lX]",     config_sens[ch].lowerLimit,config_sens[ch].lowerLimit);
                +
004b7c e3ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2136 ) )
004b7d e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2136 ) )
004b7e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2136 ) )
004b7f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2136 ) )
                 	__POINTD1FN _0xE0000,2136
004b80 940e a6bb 	CALL SUBOPT_0x125
004b82 940e a5b8 	CALL SUBOPT_0xF6
004b84 940e a64f 	CALL SUBOPT_0x10F
004b86 e1ed      	LDI  R30,LOW(29)
004b87 940e b563 	CALL __MULB1W2U
004b89 940e a5b8 	CALL SUBOPT_0xF6
004b8b 940e a038 	CALL SUBOPT_0x1F
                 ; 0007 0215     printDebug("\r\n lowerDelay      >> %d [%02X]",     config_sens[ch].lowerDelay,config_sens[ch].lowerDelay);
                +
004b8d e5eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2169 ) )
004b8e e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2169 ) )
004b8f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2169 ) )
004b90 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2169 ) )
                 	__POINTD1FN _0xE0000,2169
004b91 940e a6bb 	CALL SUBOPT_0x125
004b93 940e a5be 	CALL SUBOPT_0xF7
004b95 940e a524 	CALL SUBOPT_0xDD
004b97 85aa      	LDD  R26,Y+10
004b98 85bb      	LDD  R27,Y+10+1
004b99 e1ed      	LDI  R30,LOW(29)
004b9a 940e b563 	CALL __MULB1W2U
004b9c 940e a5be 	CALL SUBOPT_0xF7
004b9e 940e a6c7 	CALL SUBOPT_0x127
                 ; 0007 0216     printDebug("\r\n lowerExtreme    >> %f [%04lX]",     config_sens[ch].lowerExtreme,config_sens[ch].lowerExtreme);
                +
004ba0 e7eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2201 ) )
004ba1 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2201 ) )
004ba2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2201 ) )
004ba3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2201 ) )
                 	__POINTD1FN _0xE0000,2201
004ba4 940e a6bb 	CALL SUBOPT_0x125
004ba6 940e a5c4 	CALL SUBOPT_0xF8
004ba8 940e a64f 	CALL SUBOPT_0x10F
004baa e1ed      	LDI  R30,LOW(29)
004bab 940e b563 	CALL __MULB1W2U
004bad 940e a5c4 	CALL SUBOPT_0xF8
004baf 940e a038 	CALL SUBOPT_0x1F
                 ; 0007 0217     printDebug("\r\n upperLimit      >> %f [%04lX]",     config_sens[ch].upperLimit,config_sens[ch].upperLimit);
                +
004bb1 e9ec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2234 ) )
004bb2 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2234 ) )
004bb3 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2234 ) )
004bb4 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2234 ) )
                 	__POINTD1FN _0xE0000,2234
004bb5 940e a6bb 	CALL SUBOPT_0x125
004bb7 940e a5ca 	CALL SUBOPT_0xF9
004bb9 940e a64f 	CALL SUBOPT_0x10F
004bbb e1ed      	LDI  R30,LOW(29)
004bbc 940e b563 	CALL __MULB1W2U
004bbe 940e a5ca 	CALL SUBOPT_0xF9
004bc0 940e a038 	CALL SUBOPT_0x1F
                 ; 0007 0218     printDebug("\r\n upperDelay      >> %d [%02X]",     config_sens[ch].upperDelay,config_sens[ch].upperDelay);
                +
004bc2 ebed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2267 ) )
004bc3 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2267 ) )
004bc4 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2267 ) )
004bc5 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2267 ) )
                 	__POINTD1FN _0xE0000,2267
004bc6 940e a6bb 	CALL SUBOPT_0x125
004bc8 940e a5d0 	CALL SUBOPT_0xFA
004bca 940e a524 	CALL SUBOPT_0xDD
004bcc 85aa      	LDD  R26,Y+10
004bcd 85bb      	LDD  R27,Y+10+1
004bce e1ed      	LDI  R30,LOW(29)
004bcf 940e b563 	CALL __MULB1W2U
004bd1 940e a5d0 	CALL SUBOPT_0xFA
004bd3 940e a6c7 	CALL SUBOPT_0x127
                 ; 0007 0219     printDebug("\r\n upperExtreme    >> %f [%04lX]",     config_sens[ch].upperExtreme,config_sens[ch].upperExtreme);
                +
004bd5 eded     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2299 ) )
004bd6 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2299 ) )
004bd7 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2299 ) )
004bd8 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2299 ) )
                 	__POINTD1FN _0xE0000,2299
004bd9 940e a6bb 	CALL SUBOPT_0x125
004bdb 940e a5d6 	CALL SUBOPT_0xFB
004bdd 940e a64f 	CALL SUBOPT_0x10F
004bdf e1ed      	LDI  R30,LOW(29)
004be0 940e b563 	CALL __MULB1W2U
004be2 940e a5d6 	CALL SUBOPT_0xFB
004be4 940e a038 	CALL SUBOPT_0x1F
                 ; 0007 021A     printDebug("\r\n");
004be6 940e a59e 	CALL SUBOPT_0xF1
                 ; 0007 021B 
                 ; 0007 021C     config_sens_flag[ch]                = 0x01;
004be8 81aa      	LDD  R26,Y+2
004be9 81bb      	LDD  R27,Y+2+1
004bea 5bac      	SUBI R26,LOW(-_config_sens_flag)
004beb 4fba      	SBCI R27,HIGH(-_config_sens_flag)
004bec e0e1      	LDI  R30,LOW(1)
004bed 940e b66d 	CALL __EEPROMWRB
                 ; 0007 021D     is_sensor_config_update[ch]          = 1;
004bef 81ea      	LDD  R30,Y+2
004bf0 81fb      	LDD  R31,Y+2+1
004bf1 50e8      	SUBI R30,LOW(-_is_sensor_config_update)
004bf2 4eff      	SBCI R31,HIGH(-_is_sensor_config_update)
004bf3 e0a1      	LDI  R26,LOW(1)
004bf4 83a0      	STD  Z+0,R26
                 ; 0007 021E 
                 ; 0007 021F     return 0;
004bf5 e0e0      	LDI  R30,LOW(0)
004bf6 e0f0      	LDI  R31,HIGH(0)
004bf7 c372      	RJMP _0x20E0072
                 ; 0007 0220 }
                 ;/*============================================================*/
                 ;int setAuxDinConfig(int ch, struct din_cnfg_st *newConfig)
                 ; 0007 0223 {
                 _setAuxDinConfig:
                 ; 0007 0224     if((ch < 0) || (ch > MAX_DI_CHANNEL)){
004bf8 940e a5a3 	CALL SUBOPT_0xF2
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
004bfa f022      	BRMI _0xE0081
004bfb 81aa      	LDD  R26,Y+2
004bfc 81bb      	LDD  R27,Y+2+1
004bfd 9751      	SBIW R26,17
004bfe f01c      	BRLT _0xE0080
                 _0xE0081:
                 ; 0007 0225         return -1;
004bff efef      	LDI  R30,LOW(65535)
004c00 efff      	LDI  R31,HIGH(65535)
004c01 c368      	RJMP _0x20E0072
                 ; 0007 0226     }
                 ; 0007 0227 
                 ; 0007 0228     config_din[ch].channelEnable        =   newConfig->channelEnable;
                 _0xE0080:
004c02 940e a5e1 	CALL SUBOPT_0xFD
004c04 5ce6      	SUBI R30,LOW(-_config_din)
004c05 4ffe      	SBCI R31,HIGH(-_config_din)
004c06 010f      	MOVW R0,R30
004c07 81a8      	LD   R26,Y
004c08 81b9      	LDD  R27,Y+1
004c09 940e a688 	CALL SUBOPT_0x11A
                 ; 0007 0229     config_din[ch].alarmDelay           =   newConfig->alarmDelay;
004c0b 940e a5e1 	CALL SUBOPT_0xFD
                +
004c0d 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
004c0e 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
004c0f 940e a6ca 	CALL SUBOPT_0x128
004c11 940e a6cf 	CALL SUBOPT_0x129
                 ; 0007 022A 
                 ; 0007 022B     printDebug("\r\n channel         >> [%d]",      ch);
004c13 940e a6d5 	CALL SUBOPT_0x12A
004c15 940e a4fe 	CALL SUBOPT_0xD5
                 ; 0007 022C     printDebug("\r\n channelEnable   >> 0x%02X",    config_din[ch].channelEnable);
004c17 940e a6da 	CALL SUBOPT_0x12B
004c19 e0e3      	LDI  R30,LOW(3)
004c1a 940e b563 	CALL __MULB1W2U
004c1c 5ce6      	SUBI R30,LOW(-_config_din)
004c1d 4ffe      	SBCI R31,HIGH(-_config_din)
004c1e 01df      	MOVW R26,R30
004c1f 940e a696 	CALL SUBOPT_0x11D
                 ; 0007 022D     printDebug("\r\n alarmDelay      >> %d",        config_din[ch].alarmDelay);
                +
004c21 e3e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2388 ) )
004c22 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2388 ) )
004c23 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2388 ) )
004c24 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2388 ) )
                 	__POINTD1FN _0xE0000,2388
004c25 940e a6e3 	CALL SUBOPT_0x12C
004c27 e0e3      	LDI  R30,LOW(3)
004c28 940e b563 	CALL __MULB1W2U
                +
004c2a 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
004c2b 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
004c2c 940e a6c3 	CALL SUBOPT_0x126
004c2e 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0007 022E 
                 ; 0007 022F     config_din_flag[ch]                 =   0x01;
004c30 81aa      	LDD  R26,Y+2
004c31 81bb      	LDD  R27,Y+2+1
004c32 5ba7      	SUBI R26,LOW(-_config_din_flag)
004c33 4fba      	SBCI R27,HIGH(-_config_din_flag)
004c34 e0e1      	LDI  R30,LOW(1)
004c35 940e b66d 	CALL __EEPROMWRB
                 ; 0007 0230     is_din_config_update[ch]            =   1;
004c37 81ea      	LDD  R30,Y+2
004c38 81fb      	LDD  R31,Y+2+1
004c39 50e3      	SUBI R30,LOW(-_is_din_config_update)
004c3a 4eff      	SBCI R31,HIGH(-_is_din_config_update)
004c3b e0a1      	LDI  R26,LOW(1)
004c3c 83a0      	STD  Z+0,R26
                 ; 0007 0231     return 0;
004c3d e0e0      	LDI  R30,LOW(0)
004c3e e0f0      	LDI  R31,HIGH(0)
004c3f c32a      	RJMP _0x20E0072
                 ; 0007 0232 }
                 ;/*============================================================*/
                 ;int setAuxDoutConfig(int ch, struct dout_cnfg_st *newConfig)
                 ; 0007 0235 {
                 _setAuxDoutConfig:
                 ; 0007 0236     int i;
                 ; 0007 0237 
                 ; 0007 0238     if((ch < 0) || (ch > MAX_DO_CHANNEL)){
004c40 940e a285 	CALL SUBOPT_0x71
                 ;	ch -> Y+4
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
004c42 81ad      	LDD  R26,Y+5
004c43 23aa      	TST  R26
004c44 f022      	BRMI _0xE0084
004c45 81ac      	LDD  R26,Y+4
004c46 81bd      	LDD  R27,Y+4+1
004c47 9716      	SBIW R26,6
004c48 f04c      	BRLT _0xE0083
                 _0xE0084:
                 ; 0007 0239         printDebug("\r\n<setAuxDoutConfig> Channel Error!!\r\n");
                +
004c49 e4ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2413 ) )
004c4a e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2413 ) )
004c4b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2413 ) )
004c4c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2413 ) )
                 	__POINTD1FN _0xE0000,2413
004c4d 940e 9f66 	CALL SUBOPT_0x2
                 ; 0007 023A         return -1;
004c4f efef      	LDI  R30,LOW(65535)
004c50 efff      	LDI  R31,HIGH(65535)
004c51 c143      	RJMP _0x20E0075
                 ; 0007 023B     }
                 ; 0007 023C 
                 ; 0007 023D     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
                 _0xE0083:
004c52 81ea      	LDD  R30,Y+2
004c53 81fb      	LDD  R31,Y+2+1
004c54 81a2      	LDD  R26,Z+2
004c55 32a4      	CPI  R26,LOW(0x24)
004c56 f060      	BRLO _0xE0086
                 ; 0007 023E         printDebug("\r\n<setAuxDoutConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
004c57 e7e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2452 ) )
004c58 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2452 ) )
004c59 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2452 ) )
004c5a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2452 ) )
                 	__POINTD1FN _0xE0000,2452
004c5b 940e a58f 	CALL SUBOPT_0xEE
004c5d 81e2      	LDD  R30,Z+2
004c5e 940e a073 	CALL SUBOPT_0x27
                 ; 0007 023F         return -1;
004c60 efef      	LDI  R30,LOW(65535)
004c61 efff      	LDI  R31,HIGH(65535)
004c62 c132      	RJMP _0x20E0075
                 ; 0007 0240     }
                 ; 0007 0241 
                 ; 0007 0242     config_dout[ch].channelEnable       =   0x01; //newConfig->channelEnable;      // Edit bug from software
                 _0xE0086:
004c63 940e a5fb 	CALL SUBOPT_0x101
004c65 59e6      	SUBI R30,LOW(-_config_dout)
004c66 4ffe      	SBCI R31,HIGH(-_config_dout)
004c67 01df      	MOVW R26,R30
004c68 e0e1      	LDI  R30,LOW(1)
004c69 940e a6e8 	CALL SUBOPT_0x12D
                 ; 0007 0243     config_dout[ch].stateOnEvent        =   0x00; //newConfig->stateOnEvent;
                +
004c6b 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
004c6c 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
004c6d 01df      	MOVW R26,R30
004c6e e0e0      	LDI  R30,LOW(0)
004c6f 940e a6e8 	CALL SUBOPT_0x12D
                 ; 0007 0244     config_dout[ch].eventSourceNumber   =   newConfig->eventSourceNumber;
                +
004c71 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
004c72 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
004c73 01df      	MOVW R26,R30
004c74 81ea      	LDD  R30,Y+2
004c75 81fb      	LDD  R31,Y+2+1
004c76 81e2      	LDD  R30,Z+2
004c77 940e a6eb 	CALL SUBOPT_0x12E
                 ; 0007 0245 
                 ; 0007 0246     printDebug("\r\n channel           >> [%d]",    ch);
                 ; 0007 0247     printDebug("\r\n channelEnable     >> 0x%02X",  config_dout[ch].channelEnable);
                +
004c79 ecef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2541 ) )
004c7a e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2541 ) )
004c7b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2541 ) )
004c7c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2541 ) )
                 	__POINTD1FN _0xE0000,2541
004c7d 940e a601 	CALL SUBOPT_0x102
004c7f 940e a609 	CALL SUBOPT_0x103
                 ; 0007 0248     printDebug("\r\n stateOnEvent      >> 0x%02X",  config_dout[ch].stateOnEvent);
                +
004c81 eeee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2572 ) )
004c82 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2572 ) )
004c83 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2572 ) )
004c84 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2572 ) )
                 	__POINTD1FN _0xE0000,2572
004c85 940e a601 	CALL SUBOPT_0x102
004c87 940e a60f 	CALL SUBOPT_0x104
                 ; 0007 0249     printDebug("\r\n eventSourceNumber >> %d",      config_dout[ch].eventSourceNumber);
004c89 940e a6f2 	CALL SUBOPT_0x12F
004c8b 940e a601 	CALL SUBOPT_0x102
004c8d 940e a615 	CALL SUBOPT_0x105
004c8f 940e a073 	CALL SUBOPT_0x27
                 ; 0007 024A     printDebug("\r\n eventSource       >> ");
004c91 940e a6f7 	CALL SUBOPT_0x130
                 ; 0007 024B 
                 ; 0007 024C     for(i=0;i<config_dout[ch].eventSourceNumber;i++){
                +
004c93 e000     +LDI R16 , LOW ( 0 )
004c94 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0088:
004c95 940e a5fb 	CALL SUBOPT_0x101
004c97 940e a615 	CALL SUBOPT_0x105
004c99 940e a61b 	CALL SUBOPT_0x106
004c9b f4d4      	BRGE _0xE0089
                 ; 0007 024D 
                 ; 0007 024E         config_dout[ch].eventSource[i]  =   newConfig->eventSource[i];
004c9c 940e a5fb 	CALL SUBOPT_0x101
004c9e 940e a620 	CALL SUBOPT_0x107
004ca0 940e a56f 	CALL SUBOPT_0xE9
004ca2 81e0      	LD   R30,Z
004ca3 940e a6e8 	CALL SUBOPT_0x12D
                 ; 0007 024F 
                 ; 0007 0250         if( config_dout[ch].eventSource[i] != 0x00 ){
004ca5 940e a620 	CALL SUBOPT_0x107
004ca7 940e b651 	CALL __EEPROMRDB
004ca9 30e0      	CPI  R30,0
004caa f041      	BREQ _0xE008A
                 ; 0007 0251             printDebug("[0x%02X]",config_dout[ch].eventSource[i]);
004cab 940e a659 	CALL SUBOPT_0x111
004cad 940e a601 	CALL SUBOPT_0x102
004caf 940e a620 	CALL SUBOPT_0x107
004cb1 940e a696 	CALL SUBOPT_0x11D
                 ; 0007 0252         }
                 ; 0007 0253     }
                 _0xE008A:
                +
004cb3 5f0f     +SUBI R16 , LOW ( - 1 )
004cb4 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004cb5 cfdf      	RJMP _0xE0088
                 _0xE0089:
                 ; 0007 0254     printDebug("\r\n");
004cb6 940e a59e 	CALL SUBOPT_0xF1
                 ; 0007 0255 
                 ; 0007 0256     config_dout_flag[ch]                =   0x01;
004cb8 81ac      	LDD  R26,Y+4
004cb9 81bd      	LDD  R27,Y+4+1
004cba 5aa7      	SUBI R26,LOW(-_config_dout_flag)
004cbb 4fba      	SBCI R27,HIGH(-_config_dout_flag)
004cbc e0e1      	LDI  R30,LOW(1)
004cbd 940e b66d 	CALL __EEPROMWRB
                 ; 0007 0257     is_dout_config_update[ch]           =   1;
004cbf 81ec      	LDD  R30,Y+4
004cc0 81fd      	LDD  R31,Y+4+1
004cc1 5fe3      	SUBI R30,LOW(-_is_dout_config_update)
004cc2 4efe      	SBCI R31,HIGH(-_is_dout_config_update)
004cc3 e0a1      	LDI  R26,LOW(1)
004cc4 83a0      	STD  Z+0,R26
                 ; 0007 0258 
                 ; 0007 0259     return 0;
004cc5 c0cd      	RJMP _0x20E0076
                 ; 0007 025A }
                 ;/*============================================================*/
                 ;int setAuxAinConfig(int ch, struct ain_cnfg_st *newConfig)
                 ; 0007 025D {
                 _setAuxAinConfig:
                 ; 0007 025E     if((ch < 0) || (ch > MAX_AI_CHANNEL)){
004cc6 940e a5a3 	CALL SUBOPT_0xF2
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
004cc8 f022      	BRMI _0xE008C
004cc9 81aa      	LDD  R26,Y+2
004cca 81bb      	LDD  R27,Y+2+1
004ccb 9751      	SBIW R26,17
004ccc f01c      	BRLT _0xE008B
                 _0xE008C:
                 ; 0007 025F         return -1;
004ccd efef      	LDI  R30,LOW(65535)
004cce efff      	LDI  R31,HIGH(65535)
004ccf c29a      	RJMP _0x20E0072
                 ; 0007 0260     }
                 ; 0007 0261 
                 ; 0007 0262     config_ain[ch].channelEnable        =   newConfig->channelEnable;
                 _0xE008B:
004cd0 940e a626 	CALL SUBOPT_0x108
004cd2 5de8      	SUBI R30,LOW(-_config_ain)
004cd3 4ffd      	SBCI R31,HIGH(-_config_ain)
004cd4 010f      	MOVW R0,R30
004cd5 81a8      	LD   R26,Y
004cd6 81b9      	LDD  R27,Y+1
004cd7 940e a688 	CALL SUBOPT_0x11A
                 ; 0007 0263     config_ain[ch].alarmLevel           =   newConfig->alarmLevel;
004cd9 940e a626 	CALL SUBOPT_0x108
                +
004cdb 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
004cdc 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
004cdd 940e a6ca 	CALL SUBOPT_0x128
004cdf 940e a6b5 	CALL SUBOPT_0x124
                 ; 0007 0264 
                 ; 0007 0265     printDebug("\r\n channel         >> [%d]",      ch);
004ce1 940e a6d5 	CALL SUBOPT_0x12A
004ce3 940e a4fe 	CALL SUBOPT_0xD5
                 ; 0007 0266     printDebug("\r\n channelEnable   >> 0x%02X",    config_ain[ch].channelEnable);
004ce5 940e a6da 	CALL SUBOPT_0x12B
004ce7 e0e5      	LDI  R30,LOW(5)
004ce8 940e b563 	CALL __MULB1W2U
004cea 5de8      	SUBI R30,LOW(-_config_ain)
004ceb 4ffd      	SBCI R31,HIGH(-_config_ain)
004cec 01df      	MOVW R26,R30
004ced 940e a696 	CALL SUBOPT_0x11D
                 ; 0007 0267     printDebug("\r\n alarmLevel      >> %d",        config_ain[ch].alarmLevel);
                +
004cef e4e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2655 ) )
004cf0 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2655 ) )
004cf1 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2655 ) )
004cf2 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2655 ) )
                 	__POINTD1FN _0xE0000,2655
004cf3 940e a6e3 	CALL SUBOPT_0x12C
004cf5 e0e5      	LDI  R30,LOW(5)
004cf6 940e b563 	CALL __MULB1W2U
                +
004cf8 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
004cf9 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
004cfa 940e a6fc 	CALL SUBOPT_0x131
                 ; 0007 0268 
                 ; 0007 0269     config_ain_flag[ch]                 = 0x01;
004cfc 81aa      	LDD  R26,Y+2
004cfd 81bb      	LDD  R27,Y+2+1
004cfe 5aa2      	SUBI R26,LOW(-_config_ain_flag)
004cff 4fba      	SBCI R27,HIGH(-_config_ain_flag)
004d00 e0e1      	LDI  R30,LOW(1)
004d01 940e b66d 	CALL __EEPROMWRB
                 ; 0007 026A 
                 ; 0007 026B     return 0;
004d03 e0e0      	LDI  R30,LOW(0)
004d04 e0f0      	LDI  R31,HIGH(0)
004d05 c264      	RJMP _0x20E0072
                 ; 0007 026C }
                 ;/*============================================================*/
                 ;int setAuxAoutConfig(int ch, struct aout_cnfg_st *newConfig)
                 ; 0007 026F {
                 _setAuxAoutConfig:
                 ; 0007 0270     int i;
                 ; 0007 0271 
                 ; 0007 0272     if((ch < 0) || (ch > MAX_AO_CHANNEL)){
004d06 940e a285 	CALL SUBOPT_0x71
                 ;	ch -> Y+4
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
004d08 81ad      	LDD  R26,Y+5
004d09 23aa      	TST  R26
004d0a f022      	BRMI _0xE008F
004d0b 81ac      	LDD  R26,Y+4
004d0c 81bd      	LDD  R27,Y+4+1
004d0d 9751      	SBIW R26,17
004d0e f04c      	BRLT _0xE008E
                 _0xE008F:
                 ; 0007 0273         printDebug("\r\n<setAuxAoutConfig> Channel Error!!\r\n");
                +
004d0f e5ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2680 ) )
004d10 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2680 ) )
004d11 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2680 ) )
004d12 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2680 ) )
                 	__POINTD1FN _0xE0000,2680
004d13 940e 9f66 	CALL SUBOPT_0x2
                 ; 0007 0274         return -1;
004d15 efef      	LDI  R30,LOW(65535)
004d16 efff      	LDI  R31,HIGH(65535)
004d17 c07d      	RJMP _0x20E0075
                 ; 0007 0275     }
                 ; 0007 0276 
                 ; 0007 0277     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
                 _0xE008E:
004d18 81ea      	LDD  R30,Y+2
004d19 81fb      	LDD  R31,Y+2+1
004d1a 81a5      	LDD  R26,Z+5
004d1b 32a4      	CPI  R26,LOW(0x24)
004d1c f060      	BRLO _0xE0091
                 ; 0007 0278         printDebug("\r\n<setAuxAoutConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
004d1d e8e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2719 ) )
004d1e e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2719 ) )
004d1f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2719 ) )
004d20 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2719 ) )
                 	__POINTD1FN _0xE0000,2719
004d21 940e a58f 	CALL SUBOPT_0xEE
004d23 81e5      	LDD  R30,Z+5
004d24 940e a073 	CALL SUBOPT_0x27
                 ; 0007 0279         return -1;
004d26 efef      	LDI  R30,LOW(65535)
004d27 efff      	LDI  R31,HIGH(65535)
004d28 c06c      	RJMP _0x20E0075
                 ; 0007 027A     }
                 ; 0007 027B 
                 ; 0007 027C     config_aout[ch].channelEnable       =   newConfig->channelEnable;
                 _0xE0091:
004d29 940e a632 	CALL SUBOPT_0x10A
004d2b 58e8      	SUBI R30,LOW(-_config_aout)
004d2c 4ffd      	SBCI R31,HIGH(-_config_aout)
004d2d 010f      	MOVW R0,R30
004d2e 81aa      	LDD  R26,Y+2
004d2f 81bb      	LDD  R27,Y+2+1
004d30 940e a688 	CALL SUBOPT_0x11A
                 ; 0007 027D     config_aout[ch].levelOnEvent        =   newConfig->levelOnEvent;
004d32 940e a632 	CALL SUBOPT_0x10A
                +
004d34 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
004d35 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
004d36 010f      	MOVW R0,R30
004d37 81aa      	LDD  R26,Y+2
004d38 81bb      	LDD  R27,Y+2+1
004d39 9611      	ADIW R26,1
004d3a 940e a6b5 	CALL SUBOPT_0x124
                 ; 0007 027E     config_aout[ch].eventSourceNumber   =   newConfig->eventSourceNumber;
004d3c 940e a632 	CALL SUBOPT_0x10A
                +
004d3e 58e3     +SUBI R30 , LOW ( - _config_aout - ( 5 ) )
004d3f 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 5 ) )
                 	__ADDW1MN _config_aout,5
004d40 01df      	MOVW R26,R30
004d41 81ea      	LDD  R30,Y+2
004d42 81fb      	LDD  R31,Y+2+1
004d43 81e5      	LDD  R30,Z+5
004d44 940e a6eb 	CALL SUBOPT_0x12E
                 ; 0007 027F 
                 ; 0007 0280     printDebug("\r\n channel           >> [%d]",    ch);
                 ; 0007 0281     printDebug("\r\n channelEnable     >> 0x%02X",  config_aout[ch].channelEnable);
                +
004d46 ecef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2541 ) )
004d47 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2541 ) )
004d48 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2541 ) )
004d49 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2541 ) )
                 	__POINTD1FN _0xE0000,2541
004d4a 940e a702 	CALL SUBOPT_0x132
004d4c 58e8      	SUBI R30,LOW(-_config_aout)
004d4d 4ffd      	SBCI R31,HIGH(-_config_aout)
004d4e 01df      	MOVW R26,R30
004d4f 940e a696 	CALL SUBOPT_0x11D
                 ; 0007 0282     printDebug("\r\n levelOnEvent      >> %f",      config_aout[ch].levelOnEvent);
                +
004d51 ebed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2779 ) )
004d52 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2779 ) )
004d53 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2779 ) )
004d54 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2779 ) )
                 	__POINTD1FN _0xE0000,2779
004d55 940e a702 	CALL SUBOPT_0x132
                +
004d57 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
004d58 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
004d59 940e a6fc 	CALL SUBOPT_0x131
                 ; 0007 0283     printDebug("\r\n eventSourceNumber >> %d",      config_aout[ch].eventSourceNumber);
004d5b 940e a6f2 	CALL SUBOPT_0x12F
004d5d 940e a702 	CALL SUBOPT_0x132
004d5f 940e a638 	CALL SUBOPT_0x10B
004d61 940e a073 	CALL SUBOPT_0x27
                 ; 0007 0284     printDebug("\r\n eventSource       >> ");
004d63 940e a6f7 	CALL SUBOPT_0x130
                 ; 0007 0285 
                 ; 0007 0286     for(i=0;i<config_aout[ch].eventSourceNumber;i++){
                +
004d65 e000     +LDI R16 , LOW ( 0 )
004d66 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0093:
004d67 940e a632 	CALL SUBOPT_0x10A
004d69 940e a638 	CALL SUBOPT_0x10B
004d6b 940e a61b 	CALL SUBOPT_0x106
004d6d f4e4      	BRGE _0xE0094
                 ; 0007 0287 
                 ; 0007 0288         config_aout[ch].eventSource[i]  =   newConfig->eventSource[i];
004d6e 940e a632 	CALL SUBOPT_0x10A
004d70 940e a63e 	CALL SUBOPT_0x10C
004d72 940e a62c 	CALL SUBOPT_0x109
004d74 81e0      	LD   R30,Z
004d75 940e b66d 	CALL __EEPROMWRB
                 ; 0007 0289 
                 ; 0007 028A         if( config_aout[ch].eventSource[i] != 0x00 ){
004d77 940e a632 	CALL SUBOPT_0x10A
004d79 940e a63e 	CALL SUBOPT_0x10C
004d7b 940e b651 	CALL __EEPROMRDB
004d7d 30e0      	CPI  R30,0
004d7e f041      	BREQ _0xE0095
                 ; 0007 028B             printDebug("[0x%02X]",config_aout[ch].eventSource[i]);
004d7f 940e a659 	CALL SUBOPT_0x111
004d81 940e a702 	CALL SUBOPT_0x132
004d83 940e a63e 	CALL SUBOPT_0x10C
004d85 940e a696 	CALL SUBOPT_0x11D
                 ; 0007 028C         }
                 ; 0007 028D     }
                 _0xE0095:
                +
004d87 5f0f     +SUBI R16 , LOW ( - 1 )
004d88 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004d89 cfdd      	RJMP _0xE0093
                 _0xE0094:
                 ; 0007 028E     printDebug("\r\n");
004d8a 940e a59e 	CALL SUBOPT_0xF1
                 ; 0007 028F 
                 ; 0007 0290     config_aout_flag[ch]                =   0x01;
004d8c 81ac      	LDD  R26,Y+4
004d8d 81bd      	LDD  R27,Y+4+1
004d8e 59a2      	SUBI R26,LOW(-_config_aout_flag)
004d8f 4fba      	SBCI R27,HIGH(-_config_aout_flag)
004d90 e0e1      	LDI  R30,LOW(1)
004d91 940e b66d 	CALL __EEPROMWRB
                 ; 0007 0291 
                 ; 0007 0292     return 0;
                 _0x20E0076:
004d93 e0e0      	LDI  R30,LOW(0)
004d94 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0075:
004d95 8119      	LDD  R17,Y+1
004d96 8108      	LDD  R16,Y+0
004d97 9626      	ADIW R28,6
004d98 9508      	RET
                 ; 0007 0293 }
                 ;/*============================================================*/
                 ;int setBuzzerConfig(struct buzz_cnfg_st *newConfig)
                 ; 0007 0296 {
                 _setBuzzerConfig:
                 ; 0007 0297     int i;
                 ; 0007 0298 
                 ; 0007 0299     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
004d99 940e a285 	CALL SUBOPT_0x71
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
004d9b 81ea      	LDD  R30,Y+2
004d9c 81fb      	LDD  R31,Y+2+1
004d9d 81a1      	LDD  R26,Z+1
004d9e 32a4      	CPI  R26,LOW(0x24)
004d9f f060      	BRLO _0xE0096
                 ; 0007 029A         printDebug("\r\n<setBuzzerConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
004da0 ede8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2806 ) )
004da1 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2806 ) )
004da2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2806 ) )
004da3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2806 ) )
                 	__POINTD1FN _0xE0000,2806
004da4 940e a58f 	CALL SUBOPT_0xEE
004da6 81e1      	LDD  R30,Z+1
004da7 940e a073 	CALL SUBOPT_0x27
                 ; 0007 029B         return -1;
004da9 940e a691 	CALL SUBOPT_0x11C
004dab c1be      	RJMP _0x20E0072
                 ; 0007 029C     }
                 ; 0007 029D 
                 ; 0007 029E     config_buzz.enable                  =   newConfig->enable;
                 _0xE0096:
004dac 81aa      	LDD  R26,Y+2
004dad 81bb      	LDD  R27,Y+2+1
004dae 91ec      	LD   R30,X
004daf e0a8      	LDI  R26,LOW(_config_buzz)
004db0 e0b5      	LDI  R27,HIGH(_config_buzz)
004db1 940e b66d 	CALL __EEPROMWRB
                 ; 0007 029F     config_buzz.eventSourceNumber       =   newConfig->eventSourceNumber;
                +
004db3 e0a9     +LDI R26 , LOW ( _config_buzz + ( 1 ) )
004db4 e0b5     +LDI R27 , HIGH ( _config_buzz + ( 1 ) )
                 	__POINTW2MN _config_buzz,1
004db5 81ea      	LDD  R30,Y+2
004db6 81fb      	LDD  R31,Y+2+1
004db7 81e1      	LDD  R30,Z+1
004db8 940e b66d 	CALL __EEPROMWRB
                 ; 0007 02A0 
                 ; 0007 02A1     printDebug("\r\n enable            >> 0x%02X",  config_buzz.enable);
                +
004dba e1e3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2865 ) )
004dbb e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2865 ) )
004dbc e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2865 ) )
004dbd e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2865 ) )
                 	__POINTD1FN _0xE0000,2865
004dbe 940e b62a 	CALL __PUTPARD1
004dc0 e0a8      	LDI  R26,LOW(_config_buzz)
004dc1 e0b5      	LDI  R27,HIGH(_config_buzz)
004dc2 940e a696 	CALL SUBOPT_0x11D
                 ; 0007 02A2     printDebug("\r\n eventSourceNumber >> %d",      config_buzz.eventSourceNumber);
004dc4 940e a6f2 	CALL SUBOPT_0x12F
004dc6 940e b62a 	CALL __PUTPARD1
004dc8 940e a64a 	CALL SUBOPT_0x10E
004dca 940e a073 	CALL SUBOPT_0x27
                 ; 0007 02A3     printDebug("\r\n eventSource       >>");
                +
004dcc e3e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2896 ) )
004dcd e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2896 ) )
004dce e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2896 ) )
004dcf e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2896 ) )
                 	__POINTD1FN _0xE0000,2896
004dd0 940e 9f66 	CALL SUBOPT_0x2
                 ; 0007 02A4 
                 ; 0007 02A5     for(i=0;i<config_buzz.eventSourceNumber;i++){
                +
004dd2 e000     +LDI R16 , LOW ( 0 )
004dd3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0098:
004dd4 940e a64a 	CALL SUBOPT_0x10E
004dd6 940e a61b 	CALL SUBOPT_0x106
004dd8 f4cc      	BRGE _0xE0099
                 ; 0007 02A6 
                 ; 0007 02A7         config_buzz.eventSource[i]      =   newConfig->eventSource[i];
004dd9 940e a70a 	CALL SUBOPT_0x133
004ddb 81ea      	LDD  R30,Y+2
004ddc 81fb      	LDD  R31,Y+2+1
004ddd 940e a65e 	CALL SUBOPT_0x112
004ddf 940e b66d 	CALL __EEPROMWRB
                 ; 0007 02A8 
                 ; 0007 02A9         if( config_buzz.eventSource[i] != 0x00 ){
004de1 940e a70a 	CALL SUBOPT_0x133
004de3 940e b651 	CALL __EEPROMRDB
004de5 30e0      	CPI  R30,0
004de6 f041      	BREQ _0xE009A
                 ; 0007 02AA             printDebug("[0x%02X]",config_buzz.eventSource[i]);
004de7 940e a659 	CALL SUBOPT_0x111
004de9 940e b62a 	CALL __PUTPARD1
004deb 940e a70a 	CALL SUBOPT_0x133
004ded 940e a696 	CALL SUBOPT_0x11D
                 ; 0007 02AB         }
                 ; 0007 02AC 
                 ; 0007 02AD     }
                 _0xE009A:
                +
004def 5f0f     +SUBI R16 , LOW ( - 1 )
004df0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004df1 cfe2      	RJMP _0xE0098
                 _0xE0099:
                 ; 0007 02AE     printDebug("\r\n");
004df2 940e a59e 	CALL SUBOPT_0xF1
                 ; 0007 02AF 
                 ; 0007 02B0     config_buzz_flag                    =   0x01;
004df4 e7ae      	LDI  R26,LOW(_config_buzz_flag)
004df5 e0b5      	LDI  R27,HIGH(_config_buzz_flag)
004df6 940e a68d 	CALL SUBOPT_0x11B
                 ; 0007 02B1 
                 ; 0007 02B2     is_buzzer_config_update             =   1;
004df8 93e0 1112 	STS  _is_buzzer_config_update,R30
                 ; 0007 02B3 
                 ; 0007 02B4     return 0;
004dfa 940e a48b 	CALL SUBOPT_0xC3
004dfc c16d      	RJMP _0x20E0072
                 ; 0007 02B5 }
                 ;/*============================================================*/
                 ;int setEnvAlarmConfig(struct alm_cnfg_st *newConfig)
                 ; 0007 02B8 {
                 _setEnvAlarmConfig:
                 ; 0007 02B9     config_alm.gsmRSSILevel             =   newConfig->gsmRSSILevel;
004dfd 93ba      	ST   -Y,R27
004dfe 93aa      	ST   -Y,R26
                 ;	*newConfig -> Y+0
004dff 81a8      	LD   R26,Y
004e00 81b9      	LDD  R27,Y+1
004e01 940e b5fa 	CALL __GETD1P
004e03 e2ad      	LDI  R26,LOW(_config_alm)
004e04 e0b5      	LDI  R27,HIGH(_config_alm)
004e05 940e b65d 	CALL __EEPROMWRD
                 ; 0007 02BA     config_alm.gsmCreditBalance         =   newConfig->gsmCreditBalance;
                +
004e07 e3e1     +LDI R30 , LOW ( _config_alm + ( 4 ) )
004e08 e0f5     +LDI R31 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW1MN _config_alm,4
004e09 010f      	MOVW R0,R30
004e0a 81a8      	LD   R26,Y
004e0b 81b9      	LDD  R27,Y+1
004e0c 9614      	ADIW R26,4
004e0d 940e a6cf 	CALL SUBOPT_0x129
                 ; 0007 02BB     config_alm.batteryLevel             =   newConfig->batteryLevel;
                +
004e0f e3e3     +LDI R30 , LOW ( _config_alm + ( 6 ) )
004e10 e0f5     +LDI R31 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW1MN _config_alm,6
004e11 010f      	MOVW R0,R30
004e12 81a8      	LD   R26,Y
004e13 81b9      	LDD  R27,Y+1
004e14 9616      	ADIW R26,6
004e15 940e a6b5 	CALL SUBOPT_0x124
                 ; 0007 02BC     config_alm.commSignalLevel          =   newConfig->commSignalLevel;
                +
004e17 e3e7     +LDI R30 , LOW ( _config_alm + ( 10 ) )
004e18 e0f5     +LDI R31 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW1MN _config_alm,10
004e19 010f      	MOVW R0,R30
004e1a 81a8      	LD   R26,Y
004e1b 81b9      	LDD  R27,Y+1
004e1c 961a      	ADIW R26,10
004e1d 940e a6b5 	CALL SUBOPT_0x124
                 ; 0007 02BD     config_alm.commLostDelay            =   newConfig->commLostDelay;
                +
004e1f e3eb     +LDI R30 , LOW ( _config_alm + ( 14 ) )
004e20 e0f5     +LDI R31 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW1MN _config_alm,14
004e21 010f      	MOVW R0,R30
004e22 81a8      	LD   R26,Y
004e23 81b9      	LDD  R27,Y+1
004e24 961e      	ADIW R26,14
004e25 940e a6cf 	CALL SUBOPT_0x129
                 ; 0007 02BE     config_alm.memoryMin                =   newConfig->memoryMin;
                +
004e27 e3ed     +LDI R30 , LOW ( _config_alm + ( 16 ) )
004e28 e0f5     +LDI R31 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW1MN _config_alm,16
004e29 010f      	MOVW R0,R30
004e2a 81a8      	LD   R26,Y
004e2b 81b9      	LDD  R27,Y+1
004e2c 9650      	ADIW R26,16
004e2d 940e a6cf 	CALL SUBOPT_0x129
                 ; 0007 02BF 
                 ; 0007 02C0     printDebug("\r\n gsmRSSILevel     >> %f dB",    config_alm.gsmRSSILevel);
                +
004e2f e4ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2920 ) )
004e30 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2920 ) )
004e31 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2920 ) )
004e32 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2920 ) )
                 	__POINTD1FN _0xE0000,2920
004e33 940e b62a 	CALL __PUTPARD1
004e35 e2ad      	LDI  R26,LOW(_config_alm)
004e36 e0b5      	LDI  R27,HIGH(_config_alm)
004e37 940e a710 	CALL SUBOPT_0x134
                 ; 0007 02C1     printDebug("\r\n gsmCreditBalance >> %d Baht",  config_alm.gsmCreditBalance);
                +
004e39 e6e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2949 ) )
004e3a e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2949 ) )
004e3b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2949 ) )
004e3c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2949 ) )
                 	__POINTD1FN _0xE0000,2949
004e3d 940e b62a 	CALL __PUTPARD1
                +
004e3f e3a1     +LDI R26 , LOW ( _config_alm + ( 4 ) )
004e40 e0b5     +LDI R27 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW2MN _config_alm,4
004e41 940e b64d 	CALL __EEPROMRDW
004e43 940e a4fe 	CALL SUBOPT_0xD5
                 ; 0007 02C2     printDebug("\r\n batteryLevel     >> %f Volts", config_alm.batteryLevel);
                +
004e45 e8e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2980 ) )
004e46 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2980 ) )
004e47 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2980 ) )
004e48 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2980 ) )
                 	__POINTD1FN _0xE0000,2980
004e49 940e b62a 	CALL __PUTPARD1
                +
004e4b e3a3     +LDI R26 , LOW ( _config_alm + ( 6 ) )
004e4c e0b5     +LDI R27 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW2MN _config_alm,6
004e4d 940e a710 	CALL SUBOPT_0x134
                 ; 0007 02C3     printDebug("\r\n commSignalLevel  >> %f dB",    config_alm.commSignalLevel);
                +
004e4f eae6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3012 ) )
004e50 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3012 ) )
004e51 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3012 ) )
004e52 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3012 ) )
                 	__POINTD1FN _0xE0000,3012
004e53 940e b62a 	CALL __PUTPARD1
                +
004e55 e3a7     +LDI R26 , LOW ( _config_alm + ( 10 ) )
004e56 e0b5     +LDI R27 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW2MN _config_alm,10
004e57 940e a710 	CALL SUBOPT_0x134
                 ; 0007 02C4     printDebug("\r\n commLostDelay    >> %d sec",   config_alm.commLostDelay);
                +
004e59 ece3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3041 ) )
004e5a e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3041 ) )
004e5b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3041 ) )
004e5c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3041 ) )
                 	__POINTD1FN _0xE0000,3041
004e5d 940e b62a 	CALL __PUTPARD1
                +
004e5f e3ab     +LDI R26 , LOW ( _config_alm + ( 14 ) )
004e60 e0b5     +LDI R27 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW2MN _config_alm,14
004e61 940e b64d 	CALL __EEPROMRDW
004e63 940e a4fe 	CALL SUBOPT_0xD5
                 ; 0007 02C5     printDebug("\r\n memoryMin        >> %d MB.",   config_alm.memoryMin);
                +
004e65 eee1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3071 ) )
004e66 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3071 ) )
004e67 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3071 ) )
004e68 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3071 ) )
                 	__POINTD1FN _0xE0000,3071
004e69 940e b62a 	CALL __PUTPARD1
                +
004e6b e3ad     +LDI R26 , LOW ( _config_alm + ( 16 ) )
004e6c e0b5     +LDI R27 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW2MN _config_alm,16
004e6d 940e b64d 	CALL __EEPROMRDW
004e6f 940e a524 	CALL SUBOPT_0xDD
004e71 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0007 02C6 
                 ; 0007 02C7     config_alm_flag                 = 0x01;
004e73 e7af      	LDI  R26,LOW(_config_alm_flag)
004e74 e0b5      	LDI  R27,HIGH(_config_alm_flag)
004e75 940e a68d 	CALL SUBOPT_0x11B
                 ; 0007 02C8     is_env_config_update            = 1;
004e77 93e0 1114 	STS  _is_env_config_update,R30
                 ; 0007 02C9     return 0;
004e79 c02d      	RJMP _0x20E0074
                 ; 0007 02CA }
                 ;/*============================================================*/
                 ;int setStatusReportConfig(struct stat_cnfg_st *newConfig)
                 ; 0007 02CD {
                 _setStatusReportConfig:
                 ; 0007 02CE     config_stat.accm                    =   newConfig->accm;
004e7a 93ba      	ST   -Y,R27
004e7b 93aa      	ST   -Y,R26
                 ;	*newConfig -> Y+0
004e7c 81a8      	LD   R26,Y
004e7d 81b9      	LDD  R27,Y+1
004e7e 91ec      	LD   R30,X
004e7f e3af      	LDI  R26,LOW(_config_stat)
004e80 e0b5      	LDI  R27,HIGH(_config_stat)
004e81 940e b66d 	CALL __EEPROMWRB
                 ; 0007 02CF     config_stat.intv                    =   newConfig->intv;
                +
004e83 e4e0     +LDI R30 , LOW ( _config_stat + ( 1 ) )
004e84 e0f5     +LDI R31 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW1MN _config_stat,1
004e85 940e a6ca 	CALL SUBOPT_0x128
004e87 940e a6cf 	CALL SUBOPT_0x129
                 ; 0007 02D0 
                 ; 0007 02D1     printDebug("\r\n accm     >> %f dB",    config_stat.accm);
                +
004e89 efef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3101 ) )
004e8a e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3101 ) )
004e8b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3101 ) )
004e8c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3101 ) )
                 	__POINTD1FN _0xE0000,3101
004e8d 940e b62a 	CALL __PUTPARD1
004e8f e3af      	LDI  R26,LOW(_config_stat)
004e90 e0b5      	LDI  R27,HIGH(_config_stat)
004e91 940e a696 	CALL SUBOPT_0x11D
                 ; 0007 02D2     printDebug("\r\n intv     >> %d Baht",  config_stat.intv);
                +
004e93 e1e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3122 ) )
004e94 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3122 ) )
004e95 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3122 ) )
004e96 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3122 ) )
                 	__POINTD1FN _0xE0000,3122
004e97 940e b62a 	CALL __PUTPARD1
                +
004e99 e4a0     +LDI R26 , LOW ( _config_stat + ( 1 ) )
004e9a e0b5     +LDI R27 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW2MN _config_stat,1
004e9b 940e b64d 	CALL __EEPROMRDW
004e9d 940e a524 	CALL SUBOPT_0xDD
004e9f 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0007 02D3 
                 ; 0007 02D4     config_stat_flag                    = 0x01;
004ea1 e8a0      	LDI  R26,LOW(_config_stat_flag)
004ea2 e0b5      	LDI  R27,HIGH(_config_stat_flag)
004ea3 940e a68d 	CALL SUBOPT_0x11B
                 ; 0007 02D5     is_status_config_update             = 1;
004ea5 93e0 1113 	STS  _is_status_config_update,R30
                 ; 0007 02D6     return 0;
                 _0x20E0074:
004ea7 e0e0      	LDI  R30,LOW(0)
004ea8 e0f0      	LDI  R31,HIGH(0)
004ea9 9622      	ADIW R28,2
004eaa 9508      	RET
                 ; 0007 02D7 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********* Service Configuration Management Function **********/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int setDefaultConfig(void)
                 ; 0007 02DF {
                 ; 0007 02E0     int i;
                 ; 0007 02E1 
                 ; 0007 02E2     config_prop_flag            = 0x00;
                 ;	i -> R16,R17
                 ; 0007 02E3     config_oper_flag            = 0x00;
                 ; 0007 02E4 
                 ; 0007 02E5     for(i=0;i<MAX_SENS_CHANNEL;i++){
                 ; 0007 02E6         config_sens_flag[i]     = 0x00;
                 ; 0007 02E7     }
                 ; 0007 02E8 
                 ; 0007 02E9     for(i=0;i<MAX_DI_CHANNEL;i++){
                 ; 0007 02EA         config_din_flag[i]      = 0x00;
                 ; 0007 02EB     }
                 ; 0007 02EC 
                 ; 0007 02ED     for(i=0;i<MAX_DO_CHANNEL;i++){
                 ; 0007 02EE         config_dout_flag[i]     = 0x00;
                 ; 0007 02EF     }
                 ; 0007 02F0 
                 ; 0007 02F1     for(i=0;i<MAX_AI_CHANNEL;i++){
                 ; 0007 02F2         config_ain_flag[i]      = 0x00;
                 ; 0007 02F3     }
                 ; 0007 02F4 
                 ; 0007 02F5     for(i=0;i<MAX_AO_CHANNEL;i++){
                 ; 0007 02F6         config_aout_flag[i]     = 0x00;
                 ; 0007 02F7     }
                 ; 0007 02F8 
                 ; 0007 02F9     config_buzz_flag            = 0x00;
                 ; 0007 02FA     config_alm_flag             = 0x00;
                 ; 0007 02FB     config_stat_flag            = 0x00;
                 ; 0007 02FC 
                 ; 0007 02FD     return 0;
                 ; 0007 02FE }
                 ;/*============================================================*/
                 ;int isDeviceConfig(void)
                 ; 0007 0301 {
                 _isDeviceConfig:
                 ; 0007 0302     int i   = 0;
                 ; 0007 0303 
                 ; 0007 0304     if( config_prop_flag || config_oper_flag || config_buzz_flag || config_alm_flag || config_stat_flag ){
004eab 940e a325 	CALL SUBOPT_0x86
                 ;	i -> R16,R17
004ead e4a2      	LDI  R26,LOW(_config_prop_flag)
004eae e0b5      	LDI  R27,HIGH(_config_prop_flag)
004eaf 940e b651 	CALL __EEPROMRDB
004eb1 30e0      	CPI  R30,0
004eb2 f4c1      	BRNE _0xE00AB
004eb3 e4a3      	LDI  R26,LOW(_config_oper_flag)
004eb4 e0b5      	LDI  R27,HIGH(_config_oper_flag)
004eb5 940e b651 	CALL __EEPROMRDB
004eb7 30e0      	CPI  R30,0
004eb8 f491      	BRNE _0xE00AB
004eb9 e7ae      	LDI  R26,LOW(_config_buzz_flag)
004eba e0b5      	LDI  R27,HIGH(_config_buzz_flag)
004ebb 940e b651 	CALL __EEPROMRDB
004ebd 30e0      	CPI  R30,0
004ebe f461      	BRNE _0xE00AB
004ebf e7af      	LDI  R26,LOW(_config_alm_flag)
004ec0 e0b5      	LDI  R27,HIGH(_config_alm_flag)
004ec1 940e b651 	CALL __EEPROMRDB
004ec3 30e0      	CPI  R30,0
004ec4 f431      	BRNE _0xE00AB
004ec5 e8a0      	LDI  R26,LOW(_config_stat_flag)
004ec6 e0b5      	LDI  R27,HIGH(_config_stat_flag)
004ec7 940e b651 	CALL __EEPROMRDB
004ec9 30e0      	CPI  R30,0
004eca f019      	BREQ _0xE00AA
                 _0xE00AB:
                 ; 0007 0305         return 1;
004ecb e0e1      	LDI  R30,LOW(1)
004ecc e0f0      	LDI  R31,HIGH(1)
004ecd c038      	RJMP _0x20E0073
                 ; 0007 0306     }
                 ; 0007 0307 
                 ; 0007 0308     for(i=0;i<MAX_SENS_CHANNEL;i++){
                 _0xE00AA:
                +
004ece e000     +LDI R16 , LOW ( 0 )
004ecf e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00AE:
                +
004ed0 3005     +CPI R16 , LOW ( 5 )
004ed1 e0e0     +LDI R30 , HIGH ( 5 )
004ed2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004ed3 f464      	BRGE _0xE00AF
                 ; 0007 0309         if(config_sens_flag[i]){
004ed4 e4a4      	LDI  R26,LOW(_config_sens_flag)
004ed5 e0b5      	LDI  R27,HIGH(_config_sens_flag)
004ed6 940e a53f 	CALL SUBOPT_0xE2
004ed8 30e0      	CPI  R30,0
004ed9 f019      	BREQ _0xE00B0
                 ; 0007 030A             return 1;
004eda e0e1      	LDI  R30,LOW(1)
004edb e0f0      	LDI  R31,HIGH(1)
004edc c029      	RJMP _0x20E0073
                 ; 0007 030B         }
                 ; 0007 030C     }
                 _0xE00B0:
                +
004edd 5f0f     +SUBI R16 , LOW ( - 1 )
004ede 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004edf cff0      	RJMP _0xE00AE
                 _0xE00AF:
                 ; 0007 030D 
                 ; 0007 030E     //for(i=0;i<MAX_DI_CHANNEL;i++){
                 ; 0007 030F     for(i=0;i<2;i++){
                +
004ee0 e000     +LDI R16 , LOW ( 0 )
004ee1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00B2:
                +
004ee2 3002     +CPI R16 , LOW ( 2 )
004ee3 e0e0     +LDI R30 , HIGH ( 2 )
004ee4 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
004ee5 f464      	BRGE _0xE00B3
                 ; 0007 0310         if(config_din_flag[i]){
004ee6 e4a9      	LDI  R26,LOW(_config_din_flag)
004ee7 e0b5      	LDI  R27,HIGH(_config_din_flag)
004ee8 940e a53f 	CALL SUBOPT_0xE2
004eea 30e0      	CPI  R30,0
004eeb f019      	BREQ _0xE00B4
                 ; 0007 0311             return 1;
004eec e0e1      	LDI  R30,LOW(1)
004eed e0f0      	LDI  R31,HIGH(1)
004eee c017      	RJMP _0x20E0073
                 ; 0007 0312         }
                 ; 0007 0313     }
                 _0xE00B4:
                +
004eef 5f0f     +SUBI R16 , LOW ( - 1 )
004ef0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004ef1 cff0      	RJMP _0xE00B2
                 _0xE00B3:
                 ; 0007 0314 
                 ; 0007 0315     //for(i=0;i<MAX_DO_CHANNEL;i++){
                 ; 0007 0316     for(i=0;i<2;i++){
                +
004ef2 e000     +LDI R16 , LOW ( 0 )
004ef3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00B6:
                +
004ef4 3002     +CPI R16 , LOW ( 2 )
004ef5 e0e0     +LDI R30 , HIGH ( 2 )
004ef6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
004ef7 f464      	BRGE _0xE00B7
                 ; 0007 0317         if(config_dout_flag[i]){
004ef8 e5a9      	LDI  R26,LOW(_config_dout_flag)
004ef9 e0b5      	LDI  R27,HIGH(_config_dout_flag)
004efa 940e a53f 	CALL SUBOPT_0xE2
004efc 30e0      	CPI  R30,0
004efd f019      	BREQ _0xE00B8
                 ; 0007 0318             return 1;
004efe e0e1      	LDI  R30,LOW(1)
004eff e0f0      	LDI  R31,HIGH(1)
004f00 c005      	RJMP _0x20E0073
                 ; 0007 0319         }
                 ; 0007 031A     }
                 _0xE00B8:
                +
004f01 5f0f     +SUBI R16 , LOW ( - 1 )
004f02 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004f03 cff0      	RJMP _0xE00B6
                 _0xE00B7:
                 ; 0007 031B     return 0;
004f04 e0e0      	LDI  R30,LOW(0)
004f05 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0073:
004f06 9109      	LD   R16,Y+
004f07 9119      	LD   R17,Y+
004f08 9508      	RET
                 ; 0007 031C }
                 ;/*============================================================*/
                 ;int getAllConfig(void)
                 ; 0007 031F {
                 _getAllConfig:
                 ; 0007 0320     int i,err;
                 ; 0007 0321 
                 ; 0007 0322     // -- load configuration -- //
                 ; 0007 0323     getPropertiesConfig(&properties_config);
004f09 940e b69c 	CALL __SAVELOCR4
                 ;	i -> R16,R17
                 ;	err -> R18,R19
004f0b 940e 9faf 	CALL SUBOPT_0xB
                 ; 0007 0324     is_properties_config_update = 0;
                 ; 0007 0325 
                 ; 0007 0326     getOperatingConfig(&operating_config);
004f0d 940e 9fb7 	CALL SUBOPT_0xC
                 ; 0007 0327     is_operating_config_update = 0;
                 ; 0007 0328 
                 ; 0007 0329     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
004f0f e000     +LDI R16 , LOW ( 0 )
004f10 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00BA:
                +
004f11 3005     +CPI R16 , LOW ( 5 )
004f12 e0e0     +LDI R30 , HIGH ( 5 )
004f13 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004f14 f504      	BRGE _0xE00BB
                 ; 0007 032A         err = getSensorConfig(i,&sensor_config[i]);
004f15 931a      	ST   -Y,R17
004f16 930a      	ST   -Y,R16
                +
004f17 e1ad     +LDI R26 , 29
004f18 9fa0     +MUL R26 , R16
004f19 01f0     +MOVW R30 , R0
004f1a 9fa1     +MUL R26 , R17
004f1b 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,29
004f1c 54e2      	SUBI R30,LOW(-_sensor_config)
004f1d 4efe      	SBCI R31,HIGH(-_sensor_config)
004f1e 01df      	MOVW R26,R30
004f1f 940e 45d1 	CALL _getSensorConfig
004f21 019f      	MOVW R18,R30
                 ; 0007 032B         if(err < 0){
004f22 2333      	TST  R19
004f23 f452      	BRPL _0xE00BC
                 ; 0007 032C             printDebug("<main> getSensorConfig(%d) error\r\n",i);
                +
004f24 e2eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3145 ) )
004f25 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3145 ) )
004f26 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3145 ) )
004f27 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3145 ) )
                 	__POINTD1FN _0xE0000,3145
004f28 940e b62a 	CALL __PUTPARD1
004f2a 01f8      	MOVW R30,R16
004f2b 940e a4fe 	CALL SUBOPT_0xD5
                 ; 0007 032D             continue;
004f2d c004      	RJMP _0xE00B9
                 ; 0007 032E         }
                 ; 0007 032F         is_sensor_config_update[i] = 0;
                 _0xE00BC:
004f2e efa8      	LDI  R26,LOW(_is_sensor_config_update)
004f2f e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
004f30 940e a715 	CALL SUBOPT_0x135
                 ; 0007 0330     }
                 _0xE00B9:
                +
004f32 5f0f     +SUBI R16 , LOW ( - 1 )
004f33 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004f34 cfdc      	RJMP _0xE00BA
                 _0xE00BB:
                 ; 0007 0331 
                 ; 0007 0332     getBuzzerConfig(&buzz_config);
004f35 940e 9fdf 	CALL SUBOPT_0x12
                 ; 0007 0333     is_buzzer_config_update = 0;
                 ; 0007 0334 
                 ; 0007 0335     for(i=0;i<USE_DIN;i++){
                +
004f37 e000     +LDI R16 , LOW ( 0 )
004f38 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00BE:
                +
004f39 3002     +CPI R16 , LOW ( 2 )
004f3a e0e0     +LDI R30 , HIGH ( 2 )
004f3b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
004f3c f49c      	BRGE _0xE00BF
                 ; 0007 0336         getAuxDinConfig(i,&din_config[i]);
004f3d 931a      	ST   -Y,R17
004f3e 930a      	ST   -Y,R16
                +
004f3f e0a3     +LDI R26 , 3
004f40 9fa0     +MUL R26 , R16
004f41 01f0     +MOVW R30 , R0
004f42 9fa1     +MUL R26 , R17
004f43 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,3
004f44 5be1      	SUBI R30,LOW(-_din_config)
004f45 4efd      	SBCI R31,HIGH(-_din_config)
004f46 01df      	MOVW R26,R30
004f47 940e 46b9 	CALL _getAuxDinConfig
                 ; 0007 0337         is_din_config_update[i] = 0;
004f49 efad      	LDI  R26,LOW(_is_din_config_update)
004f4a e1b0      	LDI  R27,HIGH(_is_din_config_update)
004f4b 940e a715 	CALL SUBOPT_0x135
                 ; 0007 0338     }
                +
004f4d 5f0f     +SUBI R16 , LOW ( - 1 )
004f4e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004f4f cfe9      	RJMP _0xE00BE
                 _0xE00BF:
                 ; 0007 0339 
                 ; 0007 033A     for(i=0;i<USE_DOUT;i++){
                +
004f50 e000     +LDI R16 , LOW ( 0 )
004f51 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00C1:
                +
004f52 3002     +CPI R16 , LOW ( 2 )
004f53 e0e0     +LDI R30 , HIGH ( 2 )
004f54 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
004f55 f474      	BRGE _0xE00C2
                 ; 0007 033B         getAuxDoutConfig(i,&dout_config[i]);
004f56 931a      	ST   -Y,R17
004f57 930a      	ST   -Y,R16
                +
004f58 e2a6     +LDI R26 , 38
004f59 9fa0     +MUL R26 , R16
004f5a 01f0     +MOVW R30 , R0
004f5b 9fa1     +MUL R26 , R17
004f5c 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,38
004f5d 940e 9fef 	CALL SUBOPT_0x14
                 ; 0007 033C         is_dout_config_update[i] = 0;
004f5f 940e a715 	CALL SUBOPT_0x135
                 ; 0007 033D     }
                +
004f61 5f0f     +SUBI R16 , LOW ( - 1 )
004f62 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004f63 cfee      	RJMP _0xE00C1
                 _0xE00C2:
                 ; 0007 033E 
                 ; 0007 033F     getStatusReportConfig(&status_config);
004f64 940e 9ff7 	CALL SUBOPT_0x15
                 ; 0007 0340     is_status_config_update = 0;
                 ; 0007 0341 
                 ; 0007 0342     getEnvAlarmConfig(&env_config);
004f66 940e 9fff 	CALL SUBOPT_0x16
                 ; 0007 0343     is_env_config_update = 0;
                 ; 0007 0344 
                 ; 0007 0345     return 0;
004f68 940e a71a 	CALL SUBOPT_0x136
                 _0x20E0072:
004f6a 9624      	ADIW R28,4
004f6b 9508      	RET
                 ; 0007 0346 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include "configstructure.h"
                 ;
                 ;/**************************************************************/
                 ;/**************** Configuration saved in EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;eeprom struct prop_cnfg_st  config_prop                     =   {   "EndPoint",
                 ;                                                                    "COMM-ETH-0.01a",
                 ;                                                                    "TestEndPoint01",
                 ;                                                                    "00000000001",
                 ;                                                                    "iNTELENICs Company",
                 ;                                                                    "STRI-703",
                 ;                                                                    7
                 ;                                                                };
                 ;eeprom struct oper_cnfg_st  config_oper                     =   {   0x20,
                 ;                                                                    0x00,
                 ;                                                                    0x00,
                 ;                                                                    {0x00,0x00,0x00,0x00,0x00}
                 ;                                                                };
                 ;eeprom struct sens_cnfg_st  config_sens[MAX_SENS_CHANNEL]   =   {   {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   }
                 ;                                                                };
                 ;eeprom struct din_cnfg_st   config_din[MAX_DI_CHANNEL]      =   {   {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15}
                 ;                                                                };
                 ;eeprom struct dout_cnfg_st  config_dout[MAX_DO_CHANNEL]     =   {   {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    }
                 ;                                                                };
                 ;//                                                                    ,{0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    }
                 ;//                                                                };
                 ;eeprom struct ain_cnfg_st   config_ain[MAX_AI_CHANNEL]      =   {   {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5}
                 ;                                                                };
                 ;eeprom struct aout_cnfg_st  config_aout[MAX_AO_CHANNEL]     =   {   {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;
                 ;                                                                };
                 ;eeprom struct buzz_cnfg_st  config_buzz                     =   {   0x00,
                 ;                                                                    0x00,
                 ;                                                                    {   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                        0x00,0x00,0x00,0x00,0x00
                 ;                                                                    }
                 ;                                                                };
                 ;eeprom struct alm_cnfg_st   config_alm                      =   {   0x00000000,
                 ;                                                                    0x0000,
                 ;                                                                    0x00000000,
                 ;                                                                    0x00000000,
                 ;                                                                    0x0000,
                 ;                                                                    0x0000
                 ;                                                                };
                 ;eeprom struct stat_cnfg_st  config_stat                     =   {0x30,60};
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** EEPROM Configured indicator ****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;eeprom char config_prop_flag                    =   0x00;
                 ;eeprom char config_oper_flag                    =   0x00;
                 ;eeprom char config_sens_flag[MAX_SENS_CHANNEL]  =   {0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_din_flag[MAX_DI_CHANNEL]     =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_dout_flag[MAX_DO_CHANNEL]    =   {0x00,0x00,0x00,0x00,0x00};//,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_ain_flag[MAX_AI_CHANNEL]     =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_aout_flag[MAX_AO_CHANNEL]    =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_buzz_flag                    =   0x00;
                 ;eeprom char config_alm_flag                     =   0x00;
                 ;eeprom char config_stat_flag                    =   0x00;
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "ethcomm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "log.h"
                 ;#include "logqueue.h"
                 ;#include "debug.h"
                 ;
                 ;//eeprom char     DEVICE_SERIAL[8]    = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01};
                 ;eeprom char     DEVICE_SERIAL[8]    = {0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x22};
                 ;/*bongkot edit default of serial number*/
                 ;
                 ;TIMER           commLostTimer       = 0;
                 ;unsigned char   duplicateListClear  = 0;
                 ;
                 ;struct log_wait_st    logDataWait   = {0x00,0x00};
                 ;struct log_wait_st    logEventWait  = {0x00,0x00};
                 ;
                 ;/**************************************************************/
                 ;/***** Higher Level Communication Management (IMS_Protocol)****/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int ETH_sendNack(char frameID,char errCode)
                 ; 0009 001A {
                 
                 	.CSEG
                 _ETH_sendNack:
                 ; 0009 001B     int     i=0,k=0;
                 ; 0009 001C     char    frameData[2+sizeof(DEVICE_SERIAL)];
                 ; 0009 001D 
                 ; 0009 001E     frameData[i++]      = PROTOERROR;
004f6c 93aa      	ST   -Y,R26
004f6d 940e a71f 	CALL SUBOPT_0x137
                 ;	frameID -> Y+15
                 ;	errCode -> Y+14
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
004f6f eeeb      	LDI  R30,LOW(235)
004f70 93ec      	ST   X,R30
                 ; 0009 001F 
                 ; 0009 0020     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
004f71 e020     +LDI R18 , LOW ( 0 )
004f72 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120004:
                +
004f73 3028     +CPI R18 , LOW ( 8 )
004f74 e0e0     +LDI R30 , HIGH ( 8 )
004f75 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
004f76 f43c      	BRGE _0x120005
                 ; 0009 0021         frameData[i++]  = DEVICE_SERIAL[k];
004f77 940e a72e 	CALL SUBOPT_0x138
004f79 940e a736 	CALL SUBOPT_0x139
                 ; 0009 0022     }
                +
004f7b 5f2f     +SUBI R18 , LOW ( - 1 )
004f7c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
004f7d cff5      	RJMP _0x120004
                 _0x120005:
                 ; 0009 0023 
                 ; 0009 0024     frameData[i++]      = errCode;
004f7e 940e a72e 	CALL SUBOPT_0x138
004f80 85ae      	LDD  R26,Y+14
004f81 83a0      	STD  Z+0,R26
                 ; 0009 0025 
                 ; 0009 0026     printDebug("<ETH_sendNack> sending..\r\n");
                +
004f82 e4ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 0 ) )
004f83 e1fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 0 ) )
004f84 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 0 ) )
004f85 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 0 ) )
                 	__POINTD1FN _0x120000,0
004f86 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0027     //print_payload(frameData,i);
                 ; 0009 0028     ETH_send(frameData,i,frameID,0);
004f88 940e a740 	CALL SUBOPT_0x13A
004f8a 940e a747 	CALL SUBOPT_0x13B
                 ; 0009 0029 
                 ; 0009 002A     return 0;
004f8c 940e a71a 	CALL SUBOPT_0x136
004f8e c197      	RJMP _0x20E006F
                 ; 0009 002B }
                 ;/*============================================================*/
                 ;int ETH_sendStatusRequestAck(char frameID,char accm,char status)
                 ; 0009 002E {
                 _ETH_sendStatusRequestAck:
                 ; 0009 002F     int     i=0,k=0;
                 ; 0009 0030     char    frameData[7+sizeof(DEVICE_SERIAL)];
                 ; 0009 0031 
                 ; 0009 0032     frameData[i++]      = STATREQA;
004f8f 93aa      	ST   -Y,R26
004f90 972f      	SBIW R28,15
004f91 940e a74d 	CALL SUBOPT_0x13C
                 ;	frameID -> Y+21
                 ;	accm -> Y+20
                 ;	status -> Y+19
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
004f93 e1eb      	LDI  R30,LOW(27)
004f94 93ec      	ST   X,R30
                 ; 0009 0033 
                 ; 0009 0034     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
004f95 e020     +LDI R18 , LOW ( 0 )
004f96 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120007:
                +
004f97 3028     +CPI R18 , LOW ( 8 )
004f98 e0e0     +LDI R30 , HIGH ( 8 )
004f99 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
004f9a f43c      	BRGE _0x120008
                 ; 0009 0035         frameData[i++]  = DEVICE_SERIAL[k];
004f9b 940e a72e 	CALL SUBOPT_0x138
004f9d 940e a736 	CALL SUBOPT_0x139
                 ; 0009 0036     }
                +
004f9f 5f2f     +SUBI R18 , LOW ( - 1 )
004fa0 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
004fa1 cff5      	RJMP _0x120007
                 _0x120008:
                 ; 0009 0037 
                 ; 0009 0038     frameData[i++]      = accm;
004fa2 940e a72e 	CALL SUBOPT_0x138
004fa4 89ac      	LDD  R26,Y+20
004fa5 83a0      	STD  Z+0,R26
                 ; 0009 0039     frameData[i++]      = status;
004fa6 940e a72e 	CALL SUBOPT_0x138
004fa8 89ab      	LDD  R26,Y+19
004fa9 83a0      	STD  Z+0,R26
                 ; 0009 003A 
                 ; 0009 003B     printDebug("<ETH_sendStatusRequestAck> sending..\r\n");
                +
004faa e6e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 27 ) )
004fab e1fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 27 ) )
004fac e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 27 ) )
004fad e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 27 ) )
                 	__POINTD1FN _0x120000,27
004fae 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 003C     //print_payload(frameData,i);
                 ; 0009 003D 
                 ; 0009 003E     ETH_send(frameData,i,frameID,0);
004fb0 940e a740 	CALL SUBOPT_0x13A
004fb2 8de9      	LDD  R30,Y+25
004fb3 940e a75b 	CALL SUBOPT_0x13D
                 ; 0009 003F 
                 ; 0009 0040     return 0;
004fb5 9666      	ADIW R28,22
004fb6 9508      	RET
                 ; 0009 0041 
                 ; 0009 0042 }
                 ;/*============================================================*/
                 ;int ETH_sendStatusReportCmd(unsigned long int timestamp, unsigned char accm, unsigned char *paraResp, int paraLen)
                 ; 0009 0045 {
                 _ETH_sendStatusReportCmd:
                 ; 0009 0046     int     i=0,k=0;
                 ; 0009 0047     int     frameLen    = 0;
                 ; 0009 0048     char    *frameData;
                 ; 0009 0049 
                 ; 0009 004A     frameLen            = 1 + sizeof(DEVICE_SERIAL) + sizeof(timestamp) + sizeof(accm) + paraLen;
004fb7 93ba      	ST   -Y,R27
004fb8 93aa      	ST   -Y,R26
004fb9 9722      	SBIW R28,2
004fba 940e a079 	CALL SUBOPT_0x28
                 ;	timestamp -> Y+13
                 ;	accm -> Y+12
                 ;	*paraResp -> Y+10
                 ;	paraLen -> Y+8
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameLen -> R20,R21
                 ;	*frameData -> Y+6
004fbc 940e a761 	CALL SUBOPT_0x13E
                 ; 0009 004B     if(frameLen > 250){
004fbe f04c      	BRLT _0x120009
                 ; 0009 004C         printDebug("<ETH_sendStatusReportCmd> frameLen too long (%d bytes)\r\n",frameLen);
                +
004fbf e9e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 66 ) )
004fc0 e1fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 66 ) )
004fc1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 66 ) )
004fc2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 66 ) )
                 	__POINTD1FN _0x120000,66
004fc3 940e a0f6 	CALL SUBOPT_0x39
                 ; 0009 004D         return -1;
004fc5 efef      	LDI  R30,LOW(65535)
004fc6 efff      	LDI  R31,HIGH(65535)
004fc7 c03a      	RJMP _0x20E0071
                 ; 0009 004E     }
                 ; 0009 004F 
                 ; 0009 0050     frameData           = (char *) malloc (frameLen);
                 _0x120009:
004fc8 940e a769 	CALL SUBOPT_0x13F
                 ; 0009 0051     if(frameData == NULL){
004fca f449      	BRNE _0x12000A
                 ; 0009 0052         printDebug("<ETH_sendStatusReportCmd> malloc failed (%d bytes)\r\n",frameLen);
                +
004fcb ece9     +LDI R30 , LOW ( 2 * _0x120000 + ( 123 ) )
004fcc e1fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 123 ) )
004fcd e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 123 ) )
004fce e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 123 ) )
                 	__POINTD1FN _0x120000,123
004fcf 940e a0f6 	CALL SUBOPT_0x39
                 ; 0009 0053         return -1;
004fd1 efef      	LDI  R30,LOW(65535)
004fd2 efff      	LDI  R31,HIGH(65535)
004fd3 c02e      	RJMP _0x20E0071
                 ; 0009 0054     }
                 ; 0009 0055 
                 ; 0009 0056     frameData[i++]      = STATREPC;
                 _0x12000A:
004fd4 940e a770 	CALL SUBOPT_0x140
004fd6 0fae      	ADD  R26,R30
004fd7 1fbf      	ADC  R27,R31
004fd8 e2ea      	LDI  R30,LOW(42)
004fd9 93ec      	ST   X,R30
                 ; 0009 0057 
                 ; 0009 0058     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
004fda e020     +LDI R18 , LOW ( 0 )
004fdb e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x12000C:
                +
004fdc 3028     +CPI R18 , LOW ( 8 )
004fdd e0e0     +LDI R30 , HIGH ( 8 )
004fde 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
004fdf f43c      	BRGE _0x12000D
                 ; 0009 0059         frameData[i++]  = DEVICE_SERIAL[k];
004fe0 940e a770 	CALL SUBOPT_0x140
004fe2 940e a776 	CALL SUBOPT_0x141
                 ; 0009 005A     }
                +
004fe4 5f2f     +SUBI R18 , LOW ( - 1 )
004fe5 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
004fe6 cff5      	RJMP _0x12000C
                 _0x12000D:
                 ; 0009 005B 
                 ; 0009 005C     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
004fe7 940e a779 	CALL SUBOPT_0x142
004fe9 01fe      	MOVW R30,R28
004fea 963f      	ADIW R30,15
004feb 940e a10b 	CALL SUBOPT_0x3C
                 ; 0009 005D     i += sizeof(timestamp);
                +
004fed 5f0c     +SUBI R16 , LOW ( - 4 )
004fee 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 005E 
                 ; 0009 005F     frameData[i++]      = accm;
004fef 940e a770 	CALL SUBOPT_0x140
004ff1 0fea      	ADD  R30,R26
004ff2 1ffb      	ADC  R31,R27
004ff3 85ac      	LDD  R26,Y+12
004ff4 83a0      	STD  Z+0,R26
                 ; 0009 0060 
                 ; 0009 0061     memcpy(&frameData[i],paraResp,paraLen);
004ff5 940e a779 	CALL SUBOPT_0x142
004ff7 940e a77d 	CALL SUBOPT_0x143
                 ; 0009 0062     i += paraLen;
                 ; 0009 0063 
                 ; 0009 0064     ETH_send(frameData,i,0x00,CMD_TIMEOUT);
004ff9 940e a78a 	CALL SUBOPT_0x144
004ffb 931a      	ST   -Y,R17
004ffc 930a      	ST   -Y,R16
004ffd e0e0      	LDI  R30,LOW(0)
004ffe 940e a78f 	CALL SUBOPT_0x145
                 ; 0009 0065     free( frameData );
005000 940e a794 	CALL SUBOPT_0x146
                 ; 0009 0066 }
                 _0x20E0071:
005002 940e b6a1 	CALL __LOADLOCR6
005004 9661      	ADIW R28,17
005005 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendEventReportCmd(char eventType, unsigned long int timestamp, char eventID, char statusCode)
                 ; 0009 0069 {
                 _ETH_sendEventReportCmd:
                 ; 0009 006A     int     i=0,k=0,res=0;
                 ; 0009 006B     char    frameID;
                 ; 0009 006C     char    frameData[8 + sizeof(DEVICE_SERIAL)];
                 ; 0009 006D 
                 ; 0009 006E     if((eventType != TYP_RLT) && (eventType != TYP_LOG) && (eventType != TYP_SAV))
005006 93aa      	ST   -Y,R26
005007 9761      	SBIW R28,17
005008 940e a079 	CALL SUBOPT_0x28
                 ;	eventType -> Y+29
                 ;	timestamp -> Y+25
                 ;	eventID -> Y+24
                 ;	statusCode -> Y+23
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	res -> R20,R21
                 ;	frameID -> Y+22
                 ;	frameData -> Y+6
00500a 8dad      	LDD  R26,Y+29
00500b 30a0      	CPI  R26,LOW(0x0)
00500c f021      	BREQ _0x12000F
00500d 30a1      	CPI  R26,LOW(0x1)
00500e f011      	BREQ _0x12000F
00500f 30a2      	CPI  R26,LOW(0x2)
005010 f409      	BRNE _0x120010
                 _0x12000F:
005011 c00c      	RJMP _0x12000E
                 _0x120010:
                 ; 0009 006F     {
                 ; 0009 0070         printDebug("<ETH_sendEventReportCmd> Wrong eventType 0x%02X\r\n", eventType);
                +
005012 efee     +LDI R30 , LOW ( 2 * _0x120000 + ( 176 ) )
005013 e1fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 176 ) )
005014 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 176 ) )
005015 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 176 ) )
                 	__POINTD1FN _0x120000,176
005016 940e b62a 	CALL __PUTPARD1
005018 a1e9      	LDD  R30,Y+33
005019 940e a073 	CALL SUBOPT_0x27
                 ; 0009 0071         return -1;
00501b efef      	LDI  R30,LOW(65535)
00501c efff      	LDI  R31,HIGH(65535)
00501d c078      	RJMP _0x20E0070
                 ; 0009 0072     }
                 ; 0009 0073 
                 ; 0009 0074     frameData[i++]      =   EVENREPC;
                 _0x12000E:
00501e 940e a798 	CALL SUBOPT_0x147
005020 0fae      	ADD  R26,R30
005021 1fbf      	ADC  R27,R31
005022 e3ea      	LDI  R30,LOW(58)
005023 93ec      	ST   X,R30
                 ; 0009 0075 
                 ; 0009 0076     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005024 e020     +LDI R18 , LOW ( 0 )
005025 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120012:
                +
005026 3028     +CPI R18 , LOW ( 8 )
005027 e0e0     +LDI R30 , HIGH ( 8 )
005028 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005029 f43c      	BRGE _0x120013
                 ; 0009 0077         frameData[i++]  = DEVICE_SERIAL[k];
00502a 940e a798 	CALL SUBOPT_0x147
00502c 940e a776 	CALL SUBOPT_0x141
                 ; 0009 0078     }
                +
00502e 5f2f     +SUBI R18 , LOW ( - 1 )
00502f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005030 cff5      	RJMP _0x120012
                 _0x120013:
                 ; 0009 0079 
                 ; 0009 007A     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
005031 01f8      	MOVW R30,R16
005032 01de      	MOVW R26,R28
005033 9616      	ADIW R26,6
005034 940e a024 	CALL SUBOPT_0x1B
005036 01fe      	MOVW R30,R28
005037 967b      	ADIW R30,27
005038 940e a10b 	CALL SUBOPT_0x3C
                 ; 0009 007B     i += sizeof(timestamp);
                +
00503a 5f0c     +SUBI R16 , LOW ( - 4 )
00503b 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 007C 
                 ; 0009 007D     frameData[i++]      =   eventType;
00503c 940e a798 	CALL SUBOPT_0x147
00503e 0fea      	ADD  R30,R26
00503f 1ffb      	ADC  R31,R27
005040 8dad      	LDD  R26,Y+29
005041 83a0      	STD  Z+0,R26
                 ; 0009 007E     frameData[i++]      =   eventID;
005042 940e a798 	CALL SUBOPT_0x147
005044 0fea      	ADD  R30,R26
005045 1ffb      	ADC  R31,R27
005046 8da8      	LDD  R26,Y+24
005047 83a0      	STD  Z+0,R26
                 ; 0009 007F     frameData[i++]      =   statusCode;
005048 940e a798 	CALL SUBOPT_0x147
00504a 0fea      	ADD  R30,R26
00504b 1ffb      	ADC  R31,R27
00504c 89af      	LDD  R26,Y+23
00504d 83a0      	STD  Z+0,R26
                 ; 0009 0080 
                 ; 0009 0081     frameID             = ETH_generateId();
00504e 940e 63e4 	CALL _ETH_generateId
005050 8bee      	STD  Y+22,R30
                 ; 0009 0082 
                 ; 0009 0083     if(eventType == TYP_RLT)
005051 8ded      	LDD  R30,Y+29
005052 30e0      	CPI  R30,0
005053 f511      	BRNE _0x120014
                 ; 0009 0084     {
                 ; 0009 0085         res = addEventLogQueue(frameID,timestamp,eventID,statusCode);
005054 89ee      	LDD  R30,Y+22
005055 93ea      	ST   -Y,R30
005056 940e a472 	CALL SUBOPT_0xBE
005058 940e b62a 	CALL __PUTPARD1
00505a 8ded      	LDD  R30,Y+29
00505b 93ea      	ST   -Y,R30
00505c 8dad      	LDD  R26,Y+29
00505d 940e 76eb 	CALL _addEventLogQueue
00505f 01af      	MOVW R20,R30
                 ; 0009 0086         if(res < 0)
005060 2355      	TST  R21
005061 f49a      	BRPL _0x120015
                 ; 0009 0087         {
                 ; 0009 0088             printDebug("<ETH_sendEventReportCmd> addEventLogQueue(0x%02X,%ld,0x%02X,0x%02X) failed\r\n",
                 ; 0009 0089                         frameID,timestamp,eventID,statusCode);
                +
005062 e3e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 226 ) )
005063 e1fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 226 ) )
005064 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 226 ) )
005065 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 226 ) )
                 	__POINTD1FN _0x120000,226
005066 940e b62a 	CALL __PUTPARD1
005068 8dea      	LDD  R30,Y+26
005069 940e a1bb 	CALL SUBOPT_0x55
00506b 940e a79e 	CALL SUBOPT_0x148
00506d a1ec      	LDD  R30,Y+36
00506e 940e a1bb 	CALL SUBOPT_0x55
005070 a1ef      	LDD  R30,Y+39
005071 940e a1bb 	CALL SUBOPT_0x55
005073 940e a7a5 	CALL SUBOPT_0x149
                 ; 0009 008A         }
                 ; 0009 008B     }
                 _0x120015:
                 ; 0009 008C     else if(eventType == TYP_LOG)
005075 c006      	RJMP _0x120016
                 _0x120014:
005076 8dad      	LDD  R26,Y+29
005077 30a1      	CPI  R26,LOW(0x1)
005078 f419      	BRNE _0x120017
                 ; 0009 008D     {
                 ; 0009 008E         logEventWait.frameID = frameID;
005079 89ee      	LDD  R30,Y+22
00507a 93e0 142b 	STS  _logEventWait,R30
                 ; 0009 008F     }
                 ; 0009 0090 
                 ; 0009 0091     printDebug("<ETH_sendEventReportCmd> sending..\r\n");
                 _0x120017:
                 _0x120016:
                +
00507c e7ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 303 ) )
00507d e1fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 303 ) )
00507e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 303 ) )
00507f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 303 ) )
                 	__POINTD1FN _0x120000,303
005080 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0092     print_payload(frameData,i);
005082 940e a14f 	CALL SUBOPT_0x46
005084 01d8      	MOVW R26,R16
005085 940e 7d2a 	CALL _print_payload
                 ; 0009 0093 
                 ; 0009 0094     res = ETH_send(frameData,i,frameID,CMD_TIMEOUT);
005087 940e a14f 	CALL SUBOPT_0x46
005089 931a      	ST   -Y,R17
00508a 930a      	ST   -Y,R16
00508b 8dea      	LDD  R30,Y+26
00508c 940e a78f 	CALL SUBOPT_0x145
00508e 01af      	MOVW R20,R30
                 ; 0009 0095     if(res < 0){
00508f 2355      	TST  R21
005090 f41a      	BRPL _0x120018
                 ; 0009 0096         return -1;
005091 efef      	LDI  R30,LOW(65535)
005092 efff      	LDI  R31,HIGH(65535)
005093 c002      	RJMP _0x20E0070
                 ; 0009 0097     }
                 ; 0009 0098     else{
                 _0x120018:
                 ; 0009 0099         return 0;
005094 e0e0      	LDI  R30,LOW(0)
005095 e0f0      	LDI  R31,HIGH(0)
                 ; 0009 009A     }
                 ; 0009 009B }
                 _0x20E0070:
005096 940e b6a1 	CALL __LOADLOCR6
005098 966e      	ADIW R28,30
005099 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendConfigManageNack(char frameID,char accd,char cnfg,char status)
                 ; 0009 009E {
                 _ETH_sendConfigManageNack:
                 ; 0009 009F     int     i=0,k=0;
                 ; 0009 00A0     char    frameData[4 + sizeof(DEVICE_SERIAL)];
                 ; 0009 00A1 
                 ; 0009 00A2     frameData[i++]      = CONFMANA;
00509a 93aa      	ST   -Y,R26
00509b 972c      	SBIW R28,12
00509c 940e a74d 	CALL SUBOPT_0x13C
                 ;	frameID -> Y+19
                 ;	accd -> Y+18
                 ;	cnfg -> Y+17
                 ;	status -> Y+16
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
00509e e4eb      	LDI  R30,LOW(75)
00509f 93ec      	ST   X,R30
                 ; 0009 00A3 
                 ; 0009 00A4     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0050a0 e020     +LDI R18 , LOW ( 0 )
0050a1 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x12001B:
                +
0050a2 3028     +CPI R18 , LOW ( 8 )
0050a3 e0e0     +LDI R30 , HIGH ( 8 )
0050a4 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0050a5 f43c      	BRGE _0x12001C
                 ; 0009 00A5         frameData[i++]  = DEVICE_SERIAL[k];
0050a6 940e a72e 	CALL SUBOPT_0x138
0050a8 940e a736 	CALL SUBOPT_0x139
                 ; 0009 00A6     }
                +
0050aa 5f2f     +SUBI R18 , LOW ( - 1 )
0050ab 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0050ac cff5      	RJMP _0x12001B
                 _0x12001C:
                 ; 0009 00A7 
                 ; 0009 00A8     frameData[i++]      = accd;
0050ad 940e a72e 	CALL SUBOPT_0x138
0050af 89aa      	LDD  R26,Y+18
0050b0 83a0      	STD  Z+0,R26
                 ; 0009 00A9     frameData[i++]      = cnfg;
0050b1 940e a72e 	CALL SUBOPT_0x138
0050b3 89a9      	LDD  R26,Y+17
0050b4 83a0      	STD  Z+0,R26
                 ; 0009 00AA     frameData[i++]      = status;
0050b5 940e a72e 	CALL SUBOPT_0x138
0050b7 89a8      	LDD  R26,Y+16
0050b8 83a0      	STD  Z+0,R26
                 ; 0009 00AB 
                 ; 0009 00AC     printDebug("<ETH_sendConfigManageNack> sending..\r\n");
                +
0050b9 eae2     +LDI R30 , LOW ( 2 * _0x120000 + ( 340 ) )
0050ba e1fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 340 ) )
0050bb e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 340 ) )
0050bc e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 340 ) )
                 	__POINTD1FN _0x120000,340
0050bd 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 00AD     //print_payload(frameData,i);
                 ; 0009 00AE 
                 ; 0009 00AF     ETH_send(frameData,i,frameID,0);
0050bf 940e a740 	CALL SUBOPT_0x13A
0050c1 89ef      	LDD  R30,Y+23
0050c2 940e a75b 	CALL SUBOPT_0x13D
                 ; 0009 00B0 
                 ; 0009 00B1     return 0;
0050c4 9664      	ADIW R28,20
0050c5 9508      	RET
                 ; 0009 00B2 }
                 ;/*============================================================*/
                 ;int ETH_sendConfigManageAck(char frameID,char accd,char cnfg,char status,char *cnfgData, int cnfgLen)
                 ; 0009 00B5 {
                 _ETH_sendConfigManageAck:
                 ; 0009 00B6     int     i=0,k=0;
                 ; 0009 00B7     int     frameLen    = 0;
                 ; 0009 00B8     char    *frameData;
                 ; 0009 00B9 
                 ; 0009 00BA 
                 ; 0009 00BB     frameLen            = 1 + sizeof(DEVICE_SERIAL) + sizeof(accd) + sizeof(cnfg) + sizeof(status) + cnfgLen;
0050c6 93ba      	ST   -Y,R27
0050c7 93aa      	ST   -Y,R26
0050c8 9722      	SBIW R28,2
0050c9 940e a079 	CALL SUBOPT_0x28
                 ;	frameID -> Y+15
                 ;	accd -> Y+14
                 ;	cnfg -> Y+13
                 ;	status -> Y+12
                 ;	*cnfgData -> Y+10
                 ;	cnfgLen -> Y+8
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameLen -> R20,R21
                 ;	*frameData -> Y+6
0050cb 940e a761 	CALL SUBOPT_0x13E
                 ; 0009 00BC     if(frameLen > 250){
0050cd f04c      	BRLT _0x12001D
                 ; 0009 00BD         printDebug("<ETH_sendConfigManageAck> frameLen too long (%d bytes)\r\n",frameLen);
                +
0050ce ece9     +LDI R30 , LOW ( 2 * _0x120000 + ( 379 ) )
0050cf e1fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 379 ) )
0050d0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 379 ) )
0050d1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 379 ) )
                 	__POINTD1FN _0x120000,379
0050d2 940e a0f6 	CALL SUBOPT_0x39
                 ; 0009 00BE         ETH_sendConfigManageNack(frameID,accd,cnfg,ERROR);
0050d4 940e a7aa 	CALL SUBOPT_0x14A
                 ; 0009 00BF         return -1;
0050d6 c04d      	RJMP _0x20E006E
                 ; 0009 00C0     }
                 ; 0009 00C1 
                 ; 0009 00C2     frameData           = (char *) malloc (frameLen);
                 _0x12001D:
0050d7 940e a769 	CALL SUBOPT_0x13F
                 ; 0009 00C3     if(frameData == NULL){
0050d9 f449      	BRNE _0x12001E
                 ; 0009 00C4         printDebug("<ETH_sendConfigManageAck> malloc failed (%d bytes)\r\n",frameLen);
                +
0050da e0e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 436 ) )
0050db e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 436 ) )
0050dc e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 436 ) )
0050dd e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 436 ) )
                 	__POINTD1FN _0x120000,436
0050de 940e a0f6 	CALL SUBOPT_0x39
                 ; 0009 00C5         ETH_sendConfigManageNack(frameID,accd,cnfg,ERROR);
0050e0 940e a7aa 	CALL SUBOPT_0x14A
                 ; 0009 00C6         return -1;
0050e2 c041      	RJMP _0x20E006E
                 ; 0009 00C7     }
                 ; 0009 00C8 
                 ; 0009 00C9     frameData[i++]      = CONFMANA;
                 _0x12001E:
0050e3 940e a770 	CALL SUBOPT_0x140
0050e5 0fae      	ADD  R26,R30
0050e6 1fbf      	ADC  R27,R31
0050e7 e4eb      	LDI  R30,LOW(75)
0050e8 93ec      	ST   X,R30
                 ; 0009 00CA 
                 ; 0009 00CB     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0050e9 e020     +LDI R18 , LOW ( 0 )
0050ea e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120020:
                +
0050eb 3028     +CPI R18 , LOW ( 8 )
0050ec e0e0     +LDI R30 , HIGH ( 8 )
0050ed 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0050ee f43c      	BRGE _0x120021
                 ; 0009 00CC         frameData[i++]  = DEVICE_SERIAL[k];
0050ef 940e a770 	CALL SUBOPT_0x140
0050f1 940e a776 	CALL SUBOPT_0x141
                 ; 0009 00CD     }
                +
0050f3 5f2f     +SUBI R18 , LOW ( - 1 )
0050f4 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0050f5 cff5      	RJMP _0x120020
                 _0x120021:
                 ; 0009 00CE 
                 ; 0009 00CF     frameData[i++]      = accd;
0050f6 940e a770 	CALL SUBOPT_0x140
0050f8 0fea      	ADD  R30,R26
0050f9 1ffb      	ADC  R31,R27
0050fa 85ae      	LDD  R26,Y+14
0050fb 83a0      	STD  Z+0,R26
                 ; 0009 00D0     frameData[i++]      = cnfg;
0050fc 940e a770 	CALL SUBOPT_0x140
0050fe 0fea      	ADD  R30,R26
0050ff 1ffb      	ADC  R31,R27
005100 85ad      	LDD  R26,Y+13
005101 83a0      	STD  Z+0,R26
                 ; 0009 00D1     frameData[i++]      = status;
005102 940e a770 	CALL SUBOPT_0x140
005104 0fea      	ADD  R30,R26
005105 1ffb      	ADC  R31,R27
005106 85ac      	LDD  R26,Y+12
005107 83a0      	STD  Z+0,R26
                 ; 0009 00D2     if(cnfgLen > 0){
005108 85a8      	LDD  R26,Y+8
005109 85b9      	LDD  R27,Y+8+1
00510a 940e b682 	CALL __CPW02
00510c f424      	BRGE _0x120022
                 ; 0009 00D3         memcpy(&frameData[i],cnfgData,cnfgLen);
00510d 940e a779 	CALL SUBOPT_0x142
00510f 940e a77d 	CALL SUBOPT_0x143
                 ; 0009 00D4         i += cnfgLen;
                 ; 0009 00D5     }
                 ; 0009 00D6 
                 ; 0009 00D7     printDebug("<ETH_sendConfigManageAck> sending..\r\n");
                 _0x120022:
                +
005111 e3e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 489 ) )
005112 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 489 ) )
005113 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 489 ) )
005114 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 489 ) )
                 	__POINTD1FN _0x120000,489
005115 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 00D8     print_payload(frameData,i);
005117 940e a78a 	CALL SUBOPT_0x144
005119 01d8      	MOVW R26,R16
00511a 940e a7b6 	CALL SUBOPT_0x14B
                 ; 0009 00D9 
                 ; 0009 00DA     ETH_send(frameData,i,frameID,0);
00511c 931a      	ST   -Y,R17
00511d 930a      	ST   -Y,R16
00511e 940e a747 	CALL SUBOPT_0x13B
                 ; 0009 00DB 
                 ; 0009 00DC     free( frameData );
005120 940e a794 	CALL SUBOPT_0x146
                 ; 0009 00DD 
                 ; 0009 00DE     return 0;
005122 e0e0      	LDI  R30,LOW(0)
005123 e0f0      	LDI  R31,HIGH(0)
                 _0x20E006E:
005124 940e b6a1 	CALL __LOADLOCR6
                 _0x20E006F:
005126 9660      	ADIW R28,16
005127 9508      	RET
                 ; 0009 00DF }
                 ;/*============================================================*/
                 ;int ETH_sendDataReportCmd(char dataType, unsigned long int timestamp, unsigned int sensorID, float value)
                 ; 0009 00E2 {
                 _ETH_sendDataReportCmd:
                 ; 0009 00E3     int     i=0,k=0,res=0;
                 ; 0009 00E4     char    frameID;
                 ; 0009 00E5     char    frameData[10 + sizeof(DEVICE_SERIAL)];
                 ; 0009 00E6     char    did = 0x00;
                 ; 0009 00E7 
                 ; 0009 00E8     if((dataType != TYP_RLT) && (dataType != TYP_LOG) && (dataType != TYP_SAV))
005128 940e b62f 	CALL __PUTPARD2
00512a 9764      	SBIW R28,20
00512b e0e0      	LDI  R30,LOW(0)
00512c 83e8      	ST   Y,R30
00512d 940e a079 	CALL SUBOPT_0x28
                 ;	dataType -> Y+36
                 ;	timestamp -> Y+32
                 ;	sensorID -> Y+30
                 ;	value -> Y+26
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	res -> R20,R21
                 ;	frameID -> Y+25
                 ;	frameData -> Y+7
                 ;	did -> Y+6
00512f a1ac      	LDD  R26,Y+36
005130 30a0      	CPI  R26,LOW(0x0)
005131 f021      	BREQ _0x120024
005132 30a1      	CPI  R26,LOW(0x1)
005133 f011      	BREQ _0x120024
005134 30a2      	CPI  R26,LOW(0x2)
005135 f409      	BRNE _0x120025
                 _0x120024:
005136 c00c      	RJMP _0x120023
                 _0x120025:
                 ; 0009 00E9     {
                 ; 0009 00EA         printDebug("<ETH_sendDataReportCmd> Wrong dataType 0x%02X\r\n", dataType);
                +
005137 e5ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 527 ) )
005138 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 527 ) )
005139 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 527 ) )
00513a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 527 ) )
                 	__POINTD1FN _0x120000,527
00513b 940e b62a 	CALL __PUTPARD1
00513d a5e8      	LDD  R30,Y+40
00513e 940e a073 	CALL SUBOPT_0x27
                 ; 0009 00EB         return -1;
005140 efef      	LDI  R30,LOW(65535)
005141 efff      	LDI  R31,HIGH(65535)
005142 c085      	RJMP _0x20E006D
                 ; 0009 00EC     }
                 ; 0009 00ED 
                 ; 0009 00EE     did     = ((sensorID+1) & 0xff) << 4;
                 _0x120023:
005143 8dae      	LDD  R26,Y+30
005144 5faf      	SUBI R26,-LOW(1)
005145 2fea      	MOV  R30,R26
005146 95e2      	SWAP R30
005147 7fe0      	ANDI R30,0xF0
005148 83ee      	STD  Y+6,R30
                 ; 0009 00EF     did    |= dataType;
005149 a1ec      	LDD  R30,Y+36
00514a 81ae      	LDD  R26,Y+6
00514b 2bea      	OR   R30,R26
00514c 83ee      	STD  Y+6,R30
                 ; 0009 00F0 
                 ; 0009 00F1     frameData[i++]      =   DATAREPC;
00514d 940e a7b9 	CALL SUBOPT_0x14C
00514f 0fae      	ADD  R26,R30
005150 1fbf      	ADC  R27,R31
005151 e5ea      	LDI  R30,LOW(90)
005152 93ec      	ST   X,R30
                 ; 0009 00F2 
                 ; 0009 00F3     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005153 e020     +LDI R18 , LOW ( 0 )
005154 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120027:
                +
005155 3028     +CPI R18 , LOW ( 8 )
005156 e0e0     +LDI R30 , HIGH ( 8 )
005157 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005158 f43c      	BRGE _0x120028
                 ; 0009 00F4         frameData[i++]  = DEVICE_SERIAL[k];
005159 940e a7b9 	CALL SUBOPT_0x14C
00515b 940e a776 	CALL SUBOPT_0x141
                 ; 0009 00F5     }
                +
00515d 5f2f     +SUBI R18 , LOW ( - 1 )
00515e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00515f cff5      	RJMP _0x120027
                 _0x120028:
                 ; 0009 00F6 
                 ; 0009 00F7     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
005160 01f8      	MOVW R30,R16
005161 01de      	MOVW R26,R28
005162 9617      	ADIW R26,7
005163 940e a024 	CALL SUBOPT_0x1B
005165 01fe      	MOVW R30,R28
005166 96b2      	ADIW R30,34
005167 940e a10b 	CALL SUBOPT_0x3C
                 ; 0009 00F8     i += sizeof(timestamp);
                +
005169 5f0c     +SUBI R16 , LOW ( - 4 )
00516a 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 00F9 
                 ; 0009 00FA     frameData[i++]      =   did;
00516b 940e a7b9 	CALL SUBOPT_0x14C
00516d 0fea      	ADD  R30,R26
00516e 1ffb      	ADC  R31,R27
00516f 81ae      	LDD  R26,Y+6
005170 83a0      	STD  Z+0,R26
                 ; 0009 00FB 
                 ; 0009 00FC     memcpy(&frameData[i],&value,sizeof(value));
005171 01f8      	MOVW R30,R16
005172 01de      	MOVW R26,R28
005173 9617      	ADIW R26,7
005174 940e a024 	CALL SUBOPT_0x1B
005176 01fe      	MOVW R30,R28
005177 967c      	ADIW R30,28
005178 940e a10b 	CALL SUBOPT_0x3C
                 ; 0009 00FD     i += sizeof(value);
                +
00517a 5f0c     +SUBI R16 , LOW ( - 4 )
00517b 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 00FE 
                 ; 0009 00FF     frameID             = ETH_generateId();
00517c 940e 63e4 	CALL _ETH_generateId
00517e 8fe9      	STD  Y+25,R30
                 ; 0009 0100 
                 ; 0009 0101     if(dataType == TYP_RLT)
00517f a1ec      	LDD  R30,Y+36
005180 30e0      	CPI  R30,0
005181 f559      	BRNE _0x120029
                 ; 0009 0102     {
                 ; 0009 0103         res = addDataLogQueue(frameID,timestamp,sensorID,value);
005182 8de9      	LDD  R30,Y+25
005183 93ea      	ST   -Y,R30
005184 940e a79e 	CALL SUBOPT_0x148
005186 a1eb      	LDD  R30,Y+35
005187 a1fc      	LDD  R31,Y+35+1
005188 93fa      	ST   -Y,R31
005189 93ea      	ST   -Y,R30
                +
00518a a1a9     +LDD R26 , Y + 33
00518b a1ba     +LDD R27 , Y + 33 + 1
00518c a18b     +LDD R24 , Y + 33 + 2
00518d a19c     +LDD R25 , Y + 33 + 3
                 	__GETD2S 33
00518e 940e 7614 	CALL _addDataLogQueue
005190 01af      	MOVW R20,R30
                 ; 0009 0104         if(res < 0)
005191 2355      	TST  R21
005192 f4ca      	BRPL _0x12002A
                 ; 0009 0105         {
                 ; 0009 0106             printDebug("<ETH_sendDataReportCmd> addDataLogQueue(0x%02X,%ld,%u,%.2f) failed\r\n",frameID,timestamp,sensorID,value);
                +
005193 e8ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 575 ) )
005194 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 575 ) )
005195 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 575 ) )
005196 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 575 ) )
                 	__POINTD1FN _0x120000,575
005197 940e b62a 	CALL __PUTPARD1
005199 8ded      	LDD  R30,Y+29
00519a 940e a1bb 	CALL SUBOPT_0x55
00519c 940e a7bf 	CALL SUBOPT_0x14D
00519e 940e b62a 	CALL __PUTPARD1
0051a0 a5ea      	LDD  R30,Y+42
0051a1 a5fb      	LDD  R31,Y+42+1
0051a2 940e a524 	CALL SUBOPT_0xDD
                +
0051a4 a5ea     +LDD R30 , Y + 42
0051a5 a5fb     +LDD R31 , Y + 42 + 1
0051a6 a56c     +LDD R22 , Y + 42 + 2
0051a7 a57d     +LDD R23 , Y + 42 + 3
                 	__GETD1S 42
0051a8 940e b62a 	CALL __PUTPARD1
0051aa 940e a7a5 	CALL SUBOPT_0x149
                 ; 0009 0107         }
                 ; 0009 0108     }
                 _0x12002A:
                 ; 0009 0109     else if(dataType == TYP_LOG)
0051ac c006      	RJMP _0x12002B
                 _0x120029:
0051ad a1ac      	LDD  R26,Y+36
0051ae 30a1      	CPI  R26,LOW(0x1)
0051af f419      	BRNE _0x12002C
                 ; 0009 010A     {
                 ; 0009 010B         logDataWait.frameID = frameID;
0051b0 8de9      	LDD  R30,Y+25
0051b1 93e0 1426 	STS  _logDataWait,R30
                 ; 0009 010C     }
                 ; 0009 010D 
                 ; 0009 010E     printDebug("<ETH_sendDataReportCmd> sending..\r\n");
                 _0x12002C:
                 _0x12002B:
                +
0051b3 ede2     +LDI R30 , LOW ( 2 * _0x120000 + ( 644 ) )
0051b4 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 644 ) )
0051b5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 644 ) )
0051b6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 644 ) )
                 	__POINTD1FN _0x120000,644
0051b7 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 010F     //print_payload(frameData,i);
                 ; 0009 0110 
                 ; 0009 0111     res = ETH_send(frameData,i,frameID,CMD_TIMEOUT);
0051b9 940e a1af 	CALL SUBOPT_0x53
0051bb 931a      	ST   -Y,R17
0051bc 930a      	ST   -Y,R16
0051bd 8ded      	LDD  R30,Y+29
0051be 940e a78f 	CALL SUBOPT_0x145
0051c0 01af      	MOVW R20,R30
                 ; 0009 0112     if(res < 0){
0051c1 2355      	TST  R21
0051c2 f41a      	BRPL _0x12002D
                 ; 0009 0113         return -1;
0051c3 efef      	LDI  R30,LOW(65535)
0051c4 efff      	LDI  R31,HIGH(65535)
0051c5 c002      	RJMP _0x20E006D
                 ; 0009 0114     }
                 ; 0009 0115     else{
                 _0x12002D:
                 ; 0009 0116         return 0;
0051c6 e0e0      	LDI  R30,LOW(0)
0051c7 e0f0      	LDI  R31,HIGH(0)
                 ; 0009 0117     }
                 ; 0009 0118 }
                 _0x20E006D:
0051c8 940e b6a1 	CALL __LOADLOCR6
0051ca 96a5      	ADIW R28,37
0051cb 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendLogManipulationAck(char frameID,char accd,char status)
                 ; 0009 011B {
                 _ETH_sendLogManipulationAck:
                 ; 0009 011C     int     i=0,k=0;
                 ; 0009 011D     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 011E 
                 ; 0009 011F     frameData[i++]      = LOGMANIA;
0051cc 940e a7c4 	CALL SUBOPT_0x14E
                 ;	frameID -> Y+17
                 ;	accd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
0051ce e6eb      	LDI  R30,LOW(107)
0051cf 93ec      	ST   X,R30
                 ; 0009 0120 
                 ; 0009 0121     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0051d0 e020     +LDI R18 , LOW ( 0 )
0051d1 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120030:
                +
0051d2 3028     +CPI R18 , LOW ( 8 )
0051d3 e0e0     +LDI R30 , HIGH ( 8 )
0051d4 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0051d5 f43c      	BRGE _0x120031
                 ; 0009 0122         frameData[i++]  = DEVICE_SERIAL[k];
0051d6 940e a72e 	CALL SUBOPT_0x138
0051d8 940e a736 	CALL SUBOPT_0x139
                 ; 0009 0123     }
                +
0051da 5f2f     +SUBI R18 , LOW ( - 1 )
0051db 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0051dc cff5      	RJMP _0x120030
                 _0x120031:
                 ; 0009 0124 
                 ; 0009 0125     frameData[i++]      = accd;
0051dd 940e a72e 	CALL SUBOPT_0x138
0051df 940e a7c7 	CALL SUBOPT_0x14F
                 ; 0009 0126     frameData[i++]      = status;
0051e1 85af      	LDD  R26,Y+15
0051e2 83a0      	STD  Z+0,R26
                 ; 0009 0127 
                 ; 0009 0128     printDebug("<ETH_sendLogManipulationAck> sending..\r\n");
                +
0051e3 efe6     +LDI R30 , LOW ( 2 * _0x120000 + ( 680 ) )
0051e4 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 680 ) )
0051e5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 680 ) )
0051e6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 680 ) )
                 	__POINTD1FN _0x120000,680
0051e7 c037      	RJMP _0x20E006C
                 ; 0009 0129     //print_payload(frameData,i);
                 ; 0009 012A     ETH_send(frameData,i,frameID,0);
                 ; 0009 012B 
                 ; 0009 012C     return 0;
                 ; 0009 012D }
                 ;/*============================================================*/
                 ;int ETH_sendNetworkMaintenanceAck(char frameID,char cmd,char status)
                 ; 0009 0130 {
                 _ETH_sendNetworkMaintenanceAck:
                 ; 0009 0131     int     i=0,k=0;
                 ; 0009 0132     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0133 
                 ; 0009 0134     frameData[i++]      = NETMAINA;
0051e8 940e a7c4 	CALL SUBOPT_0x14E
                 ;	frameID -> Y+17
                 ;	cmd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
0051ea e7eb      	LDI  R30,LOW(123)
0051eb 93ec      	ST   X,R30
                 ; 0009 0135 
                 ; 0009 0136     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0051ec e020     +LDI R18 , LOW ( 0 )
0051ed e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120033:
                +
0051ee 3028     +CPI R18 , LOW ( 8 )
0051ef e0e0     +LDI R30 , HIGH ( 8 )
0051f0 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0051f1 f43c      	BRGE _0x120034
                 ; 0009 0137         frameData[i++]  = DEVICE_SERIAL[k];
0051f2 940e a72e 	CALL SUBOPT_0x138
0051f4 940e a736 	CALL SUBOPT_0x139
                 ; 0009 0138     }
                +
0051f6 5f2f     +SUBI R18 , LOW ( - 1 )
0051f7 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0051f8 cff5      	RJMP _0x120033
                 _0x120034:
                 ; 0009 0139 
                 ; 0009 013A     frameData[i++]      = cmd;
0051f9 940e a72e 	CALL SUBOPT_0x138
0051fb 940e a7c7 	CALL SUBOPT_0x14F
                 ; 0009 013B     frameData[i++]      = status;
0051fd 85af      	LDD  R26,Y+15
0051fe 83a0      	STD  Z+0,R26
                 ; 0009 013C 
                 ; 0009 013D     printDebug("<ETH_sendNetworkMaintenanceAck> sending..\r\n");
                +
0051ff e1ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 721 ) )
005200 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 721 ) )
005201 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 721 ) )
005202 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 721 ) )
                 	__POINTD1FN _0x120000,721
005203 c01b      	RJMP _0x20E006C
                 ; 0009 013E     ETH_send(frameData,i,frameID,0);
                 ; 0009 013F 
                 ; 0009 0140     return 0;
                 ; 0009 0141 }
                 ;/*============================================================*/
                 ;int ETH_remoteDeviceControlAck(char frameID,char cmd,char status)
                 ; 0009 0144 {
                 _ETH_remoteDeviceControlAck:
                 ; 0009 0145     int     i=0,k=0;
                 ; 0009 0146     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0147 
                 ; 0009 0148     frameData[i++]      = RMDCTRLA;
005204 940e a7c4 	CALL SUBOPT_0x14E
                 ;	frameID -> Y+17
                 ;	cmd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
005206 e8eb      	LDI  R30,LOW(139)
005207 93ec      	ST   X,R30
                 ; 0009 0149 
                 ; 0009 014A     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005208 e020     +LDI R18 , LOW ( 0 )
005209 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120036:
                +
00520a 3028     +CPI R18 , LOW ( 8 )
00520b e0e0     +LDI R30 , HIGH ( 8 )
00520c 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00520d f43c      	BRGE _0x120037
                 ; 0009 014B         frameData[i++]  = DEVICE_SERIAL[k];
00520e 940e a72e 	CALL SUBOPT_0x138
005210 940e a736 	CALL SUBOPT_0x139
                 ; 0009 014C     }
                +
005212 5f2f     +SUBI R18 , LOW ( - 1 )
005213 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005214 cff5      	RJMP _0x120036
                 _0x120037:
                 ; 0009 014D 
                 ; 0009 014E     frameData[i++]      = cmd;
005215 940e a72e 	CALL SUBOPT_0x138
005217 940e a7c7 	CALL SUBOPT_0x14F
                 ; 0009 014F     frameData[i++]      = status;
005219 85af      	LDD  R26,Y+15
00521a 83a0      	STD  Z+0,R26
                 ; 0009 0150 
                 ; 0009 0151     printDebug("<ETH_remoteDeviceControlAck> sending..\r\n");
                +
00521b e4eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 765 ) )
00521c e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 765 ) )
00521d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 765 ) )
00521e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 765 ) )
                 	__POINTD1FN _0x120000,765
                 _0x20E006C:
00521f 940e b62a 	CALL __PUTPARD1
005221 940e a0c5 	CALL SUBOPT_0x30
                 ; 0009 0152     ETH_send(frameData,i,frameID,0);
005223 940e a740 	CALL SUBOPT_0x13A
005225 89ed      	LDD  R30,Y+21
005226 940e a75b 	CALL SUBOPT_0x13D
                 ; 0009 0153 
                 ; 0009 0154     return 0;
005228 9662      	ADIW R28,18
005229 9508      	RET
                 ; 0009 0155 }
                 ;/*============================================================*/
                 ;int ETH_clearDuplicateRequestCmd(void)
                 ; 0009 0158 {
                 _ETH_clearDuplicateRequestCmd:
                 ; 0009 0159     int     i=0,k=0;
                 ; 0009 015A     char    frameData[2 + sizeof(DEVICE_SERIAL)];
                 ; 0009 015B 
                 ; 0009 015C     frameData[i++]  = CLRLISTC;
00522a 940e a71f 	CALL SUBOPT_0x137
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
00522c e9ea      	LDI  R30,LOW(154)
00522d 93ec      	ST   X,R30
                 ; 0009 015D 
                 ; 0009 015E     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00522e e020     +LDI R18 , LOW ( 0 )
00522f e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120039:
                +
005230 3028     +CPI R18 , LOW ( 8 )
005231 e0e0     +LDI R30 , HIGH ( 8 )
005232 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005233 f43c      	BRGE _0x12003A
                 ; 0009 015F         frameData[i++]  = DEVICE_SERIAL[k];
005234 940e a72e 	CALL SUBOPT_0x138
005236 940e a736 	CALL SUBOPT_0x139
                 ; 0009 0160     }
                +
005238 5f2f     +SUBI R18 , LOW ( - 1 )
005239 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00523a cff5      	RJMP _0x120039
                 _0x12003A:
                 ; 0009 0161 
                 ; 0009 0162     frameData[i++]  = CLR_DUPLIST;
00523b 01f8      	MOVW R30,R16
                +
00523c 5f0f     +SUBI R16 , LOW ( - 1 )
00523d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00523e 940e a7ca 	CALL SUBOPT_0x150
005240 e0e1      	LDI  R30,LOW(1)
005241 93ec      	ST   X,R30
                 ; 0009 0163 
                 ; 0009 0164     printDebug("<ETH_clearDuplicateRequestCmd> sending..\r\n");
                +
005242 e7e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 806 ) )
005243 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 806 ) )
005244 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 806 ) )
005245 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 806 ) )
                 	__POINTD1FN _0x120000,806
005246 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0165     ETH_send(frameData,i,0xFF,0);
005248 940e a740 	CALL SUBOPT_0x13A
00524a efef      	LDI  R30,LOW(255)
00524b 940e a75b 	CALL SUBOPT_0x13D
                 ; 0009 0166 
                 ; 0009 0167     return 0;
00524d 962e      	ADIW R28,14
00524e 9508      	RET
                 ; 0009 0168 }
                 ;/*============================================================*/
                 ;void ETH_checkPushLog(unsigned char id)
                 ; 0009 016B {
                 _ETH_checkPushLog:
                 ; 0009 016C     FIL                 file;
                 ; 0009 016D     int                 res;
                 ; 0009 016E     unsigned long int   timestamp;
                 ; 0009 016F     unsigned int        channel;
                 ; 0009 0170     float               value;
                 ; 0009 0171     unsigned char       eventID;
                 ; 0009 0172     unsigned char       eventStatus;
                 ; 0009 0173 
                 ; 0009 0174     // -- check if id is in dataLogQueue -- //
                 ; 0009 0175     res = readDataLogQueue(id,&timestamp,&channel,&value);
00524f 93aa      	ST   -Y,R26
005250 97a8      	SBIW R28,40
005251 50d2      	SUBI R29,2
005252 940e b69a 	CALL __SAVELOCR6
                 ;	id -> Y+558
                 ;	file -> Y+14
                 ;	res -> R16,R17
                 ;	timestamp -> Y+10
                 ;	channel -> R18,R19
                 ;	value -> Y+6
                 ;	eventID -> R21
                 ;	eventStatus -> R20
005254 940e a7cf 	CALL SUBOPT_0x151
005256 b7ed      	IN   R30,SPL
005257 b7fe      	IN   R31,SPH
005258 9731      	SBIW R30,1
005259 93fa      	ST   -Y,R31
00525a 93ea      	ST   -Y,R30
00525b 933f      	PUSH R19
00525c 932f      	PUSH R18
00525d 01de      	MOVW R26,R28
00525e 961b      	ADIW R26,11
00525f 940e 7660 	CALL _readDataLogQueue
005261 912f      	POP  R18
005262 913f      	POP  R19
005263 018f      	MOVW R16,R30
                 ; 0009 0176     if(res != -1)
005264 efef      	LDI  R30,LOW(65535)
005265 efff      	LDI  R31,HIGH(65535)
005266 17e0      	CP   R30,R16
005267 07f1      	CPC  R31,R17
005268 f411      	BRNE PC+3
005269 940c 52b1 	JMP _0x12003B
                 ; 0009 0177     {
                 ; 0009 0178         // -- found in dataLogQueue -- //
                 ; 0009 0179         if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
00526b 940e a1ee 	CALL SUBOPT_0x5D
00526d f039      	BREQ _0x12003D
00526e 940e a13f 	CALL SUBOPT_0x43
005270 f021      	BREQ _0x12003D
                +
005271 3025     +CPI R18 , LOW ( 5 )
005272 e0e0     +LDI R30 , HIGH ( 5 )
005273 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
005274 f028      	BRLO _0x12003C
                 _0x12003D:
                 ; 0009 017A         {
                 ; 0009 017B             printDebug("\r\n<ETH_checkPushLog> === ERROR INFOMATION IN DATA LOG QUEUE ===\r\n");
                +
005275 e9ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 849 ) )
005276 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 849 ) )
005277 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 849 ) )
005278 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 849 ) )
                 	__POINTD1FN _0x120000,849
005279 c02d      	RJMP _0x120115
                 ; 0009 017C         }
                 ; 0009 017D         else
                 _0x12003C:
                 ; 0009 017E         {
                 ; 0009 017F             printDebug("<ETH_checkPushLog> DataLog time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
00527a eee1     +LDI R30 , LOW ( 2 * _0x120000 + ( 915 ) )
00527b e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 915 ) )
00527c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 915 ) )
00527d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 915 ) )
                 	__POINTD1FN _0x120000,915
00527e 940e a122 	CALL SUBOPT_0x40
005280 01f9      	MOVW R30,R18
005281 940e a12b 	CALL SUBOPT_0x41
                 ; 0009 0180             res = LOG_openFile(&file,LOGFILE_DATA);
005283 940e a7d5 	CALL SUBOPT_0x152
005285 940e a185 	CALL SUBOPT_0x4E
005287 018f      	MOVW R16,R30
                 ; 0009 0181             if(res < 0)
005288 2311      	TST  R17
005289 f43a      	BRPL _0x120040
                 ; 0009 0182             {
                 ; 0009 0183                 printDebug("<ETH_checkPushLog> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_DATA);
                +
00528a e1e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 971 ) )
00528b e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 971 ) )
00528c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 971 ) )
00528d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 971 ) )
                 	__POINTD1FN _0x120000,971
00528e 940e a190 	CALL SUBOPT_0x4F
                 ; 0009 0184             }
                 ; 0009 0185             else
005290 c01a      	RJMP _0x120041
                 _0x120040:
                 ; 0009 0186             {
                 ; 0009 0187                 res = LOG_insertData(&file,timestamp,channel,value);
005291 940e a7d5 	CALL SUBOPT_0x152
005293 940e a7da 	CALL SUBOPT_0x153
005295 933a      	ST   -Y,R19
005296 932a      	ST   -Y,R18
005297 940e a19e 	CALL SUBOPT_0x51
005299 018f      	MOVW R16,R30
                 ; 0009 0188                 if(res < 0)
00529a 2311      	TST  R17
00529b f412      	BRPL _0x120042
                 ; 0009 0189                 {
                 ; 0009 018A                     printDebug("<ETH_checkPushLog> LOG_insertData() failed\r\n");
00529c 940e a7de 	CALL SUBOPT_0x154
                 ; 0009 018B                 }
                 ; 0009 018C 
                 ; 0009 018D                 res = LOG_closeFile(&file);
                 _0x120042:
00529e 940e a7e4 	CALL SUBOPT_0x155
                 ; 0009 018E                 if(res < 0)
0052a0 f412      	BRPL _0x120043
                 ; 0009 018F                 {
                 ; 0009 0190                     printDebug("<ETH_checkPushLog> LOG_closeFile() failed\r\n");
0052a1 940e a7f1 	CALL SUBOPT_0x156
                 ; 0009 0191                 }
                 ; 0009 0192 
                 ; 0009 0193                 printDebug("<ETH_checkPushLog> Inserted Data Log\r\n");
                 _0x120043:
                +
0052a3 ebe2     +LDI R30 , LOW ( 2 * _0x120000 + ( 1124 ) )
0052a4 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1124 ) )
0052a5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1124 ) )
0052a6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1124 ) )
                 	__POINTD1FN _0x120000,1124
                 _0x120115:
0052a7 940e b62a 	CALL __PUTPARD1
0052a9 940e a0c5 	CALL SUBOPT_0x30
                 ; 0009 0194             }
                 _0x120041:
                 ; 0009 0195         }
                 ; 0009 0196 
                 ; 0009 0197         //isDataLogEmpty = 0;
                 ; 0009 0198         removeDataLogQueue(id);
                +
0052ab 01de     +MOVW R26 , R28
0052ac 5da2     +SUBI R26 , LOW ( - 558 )
0052ad 4fbd     +SBCI R27 , HIGH ( - 558 )
0052ae 91ac     +LD R26 , X
                 	__GETB2SX 558
0052af 940e 76a1 	CALL _removeDataLogQueue
                 ; 0009 0199     }
                 ; 0009 019A 
                 ; 0009 019B     // -- check if id is in eventLogQueue -- //
                 ; 0009 019C     res = readEventLogQueue(id,&timestamp,&eventID,&eventStatus);
                 _0x12003B:
0052b1 940e a7cf 	CALL SUBOPT_0x151
0052b3 b7ed      	IN   R30,SPL
0052b4 b7fe      	IN   R31,SPH
0052b5 93fa      	ST   -Y,R31
0052b6 93ea      	ST   -Y,R30
0052b7 935f      	PUSH R21
0052b8 b7ad      	IN   R26,SPL
0052b9 b7be      	IN   R27,SPH
0052ba 934f      	PUSH R20
0052bb 940e 772f 	CALL _readEventLogQueue
0052bd 914f      	POP  R20
0052be 915f      	POP  R21
0052bf 018f      	MOVW R16,R30
                 ; 0009 019D     if(res != -1)
0052c0 efef      	LDI  R30,LOW(65535)
0052c1 efff      	LDI  R31,HIGH(65535)
0052c2 17e0      	CP   R30,R16
0052c3 07f1      	CPC  R31,R17
0052c4 f411      	BRNE PC+3
0052c5 940c 5308 	JMP _0x120044
                 ; 0009 019E     {
                 ; 0009 019F         // -- found in eventLogQueue -- //
                 ; 0009 01A0         if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
0052c7 940e a1ee 	CALL SUBOPT_0x5D
0052c9 f019      	BREQ _0x120046
0052ca 940e a13f 	CALL SUBOPT_0x43
0052cc f429      	BRNE _0x120045
                 _0x120046:
                 ; 0009 01A1         {
                 ; 0009 01A2             printDebug("\r\n<ETH_checkPushLog> === ERROR INFOMATION IN EVENT LOG QUEUE ===\r\n");
                +
0052cd ede9     +LDI R30 , LOW ( 2 * _0x120000 + ( 1163 ) )
0052ce e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1163 ) )
0052cf e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1163 ) )
0052d0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1163 ) )
                 	__POINTD1FN _0x120000,1163
0052d1 c02c      	RJMP _0x120116
                 ; 0009 01A3         }
                 ; 0009 01A4         else{
                 _0x120045:
                 ; 0009 01A5 
                 ; 0009 01A6             res = LOG_openFile(&file,LOGFILE_EVENT);
0052d2 940e a7d5 	CALL SUBOPT_0x152
0052d4 940e a1d0 	CALL SUBOPT_0x59
0052d6 018f      	MOVW R16,R30
                 ; 0009 01A7             if(res < 0)
0052d7 2311      	TST  R17
0052d8 f43a      	BRPL _0x120049
                 ; 0009 01A8             {
                 ; 0009 01A9                 printDebug("<ETH_checkPushLog> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_EVENT);
                +
0052d9 e1e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 971 ) )
0052da e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 971 ) )
0052db e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 971 ) )
0052dc e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 971 ) )
                 	__POINTD1FN _0x120000,971
0052dd 940e a1db 	CALL SUBOPT_0x5A
                 ; 0009 01AA             }
                 ; 0009 01AB             else
0052df c022      	RJMP _0x12004A
                 _0x120049:
                 ; 0009 01AC             {
                 ; 0009 01AD                 printDebug("<ETH_checkPushLog> EventLog time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
0052e0 e1ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1230 ) )
0052e1 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1230 ) )
0052e2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1230 ) )
0052e3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1230 ) )
                 	__POINTD1FN _0x120000,1230
0052e4 940e a122 	CALL SUBOPT_0x40
0052e6 940e a15d 	CALL SUBOPT_0x48
                 ; 0009 01AE                 res = LOG_insertEvent(&file,timestamp,eventID,eventStatus);
0052e8 940e a7d5 	CALL SUBOPT_0x152
0052ea 940e a7da 	CALL SUBOPT_0x153
0052ec 935a      	ST   -Y,R21
0052ed 2fa4      	MOV  R26,R20
0052ee 940e 736a 	CALL _LOG_insertEvent
0052f0 018f      	MOVW R16,R30
                 ; 0009 01AF                 if(res < 0)
0052f1 2311      	TST  R17
0052f2 f412      	BRPL _0x12004B
                 ; 0009 01B0                 {
                 ; 0009 01B1                     printDebug("<ETH_checkPushLog> LOG_insertData() failed\r\n");
0052f3 940e a7de 	CALL SUBOPT_0x154
                 ; 0009 01B2                 }
                 ; 0009 01B3 
                 ; 0009 01B4                 res = LOG_closeFile(&file);
                 _0x12004B:
0052f5 940e a7e4 	CALL SUBOPT_0x155
                 ; 0009 01B5                 if(res < 0)
0052f7 f412      	BRPL _0x12004C
                 ; 0009 01B6                 {
                 ; 0009 01B7                     printDebug("<ETH_checkPushLog> LOG_closeFile() failed\r\n");
0052f8 940e a7f1 	CALL SUBOPT_0x156
                 ; 0009 01B8                 }
                 ; 0009 01B9 
                 ; 0009 01BA                 printDebug("<ETH_checkPushLog> Inserted Event Log\r\n");
                 _0x12004C:
                +
0052fa e5ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1294 ) )
0052fb e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1294 ) )
0052fc e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1294 ) )
0052fd e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1294 ) )
                 	__POINTD1FN _0x120000,1294
                 _0x120116:
0052fe 940e b62a 	CALL __PUTPARD1
005300 940e a0c5 	CALL SUBOPT_0x30
                 ; 0009 01BB             }
                 _0x12004A:
                 ; 0009 01BC 
                 ; 0009 01BD         }
                 ; 0009 01BE 
                 ; 0009 01BF         //isEventLogEmpty    = 0;
                 ; 0009 01C0         removeEventLogQueue(id);
                +
005302 01de     +MOVW R26 , R28
005303 5da2     +SUBI R26 , LOW ( - 558 )
005304 4fbd     +SBCI R27 , HIGH ( - 558 )
005305 91ac     +LD R26 , X
                 	__GETB2SX 558
005306 940e 7774 	CALL _removeEventLogQueue
                 ; 0009 01C1     }
                 ; 0009 01C2 
                 ; 0009 01C3     return;
                 _0x120044:
005308 940e b6a1 	CALL __LOADLOCR6
00530a 96af      	ADIW R28,47
00530b 5fde      	SUBI R29,-2
00530c 9508      	RET
                 ; 0009 01C4 }
                 ;/*============================================================*/
                 ;void ETH_retransmit(void)
                 ; 0009 01C7 {
                 _ETH_retransmit:
                 ; 0009 01C8     int i;
                 ; 0009 01C9 
                 ; 0009 01CA     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++)
00530d 940e a325 	CALL SUBOPT_0x86
                 ;	i -> R16,R17
                 _0x12004E:
                +
00530f 300f     +CPI R16 , LOW ( 15 )
005310 e0e0     +LDI R30 , HIGH ( 15 )
005311 071e     +CPC R17 , R30
                 	__CPWRN 16,17,15
005312 f014      	BRLT PC+3
005313 940c 53c1 	JMP _0x12004F
                 ; 0009 01CB     {
                 ; 0009 01CC         if( TIMER_checkTimerExceed(eth_waitQueue[i].retryTime) &&
                 ; 0009 01CD             (eth_waitQueue[i].packetID != 0))
005315 940e a7f7 	CALL SUBOPT_0x157
                +
005317 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
005318 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
005319 01df      	MOVW R26,R30
00531a 940e b5fa 	CALL __GETD1P
00531c 940e a01e 	CALL SUBOPT_0x1A
00531e f039      	BREQ _0x120051
00531f 940e a7f7 	CALL SUBOPT_0x157
                +
005321 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005322 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005323 81a0      	LD   R26,Z
005324 30a0      	CPI  R26,LOW(0x0)
005325 f409      	BRNE _0x120052
                 _0x120051:
005326 c097      	RJMP _0x120050
                 _0x120052:
                 ; 0009 01CE         {
                 ; 0009 01CF             if(eth_waitQueue[i].retryCount >= ETH_MAX_RETRY)
005327 940e a7f7 	CALL SUBOPT_0x157
005329 58e5      	SUBI R30,LOW(-_eth_waitQueue)
00532a 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
00532b 81a0      	LD   R26,Z
00532c 30a3      	CPI  R26,LOW(0x3)
00532d f410      	BRSH PC+3
00532e 940c 5395 	JMP _0x120053
                 ; 0009 01D0             {
                 ; 0009 01D1                 printDebug("<ETH_retransmit> packet [0x%02X] Expired\r\n",eth_waitQueue[i].packetID);
                +
005330 e8e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1334 ) )
005331 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1334 ) )
005332 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1334 ) )
005333 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1334 ) )
                 	__POINTD1FN _0x120000,1334
005334 940e b62a 	CALL __PUTPARD1
005336 940e a7f7 	CALL SUBOPT_0x157
                +
005338 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005339 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00533a 81e0      	LD   R30,Z
00533b 940e a073 	CALL SUBOPT_0x27
                 ; 0009 01D2 
                 ; 0009 01D3                 if(eth_waitQueue[i].packetID == logDataWait.frameID){
00533d 940e a7f7 	CALL SUBOPT_0x157
                +
00533f 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005340 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005341 81a0      	LD   R26,Z
005342 91e0 1426 	LDS  R30,_logDataWait
005344 17ea      	CP   R30,R26
005345 f451      	BRNE _0x120054
                 ; 0009 01D4                     printDebug("<ETH_retransmit> update logData timeout\r\n");
                +
005346 eaef     +LDI R30 , LOW ( 2 * _0x120000 + ( 1377 ) )
005347 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1377 ) )
005348 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1377 ) )
005349 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1377 ) )
                 	__POINTD1FN _0x120000,1377
00534a 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 01D5                     logDataWait.frameID = 0x00;
00534c e0e0      	LDI  R30,LOW(0)
00534d 93e0 1426 	STS  _logDataWait,R30
                 ; 0009 01D6                 }
                 ; 0009 01D7                 else if(eth_waitQueue[i].packetID == logEventWait.frameID){
00534f c019      	RJMP _0x120055
                 _0x120054:
005350 940e a7f7 	CALL SUBOPT_0x157
                +
005352 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005353 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005354 81a0      	LD   R26,Z
005355 91e0 142b 	LDS  R30,_logEventWait
005357 17ea      	CP   R30,R26
005358 f451      	BRNE _0x120056
                 ; 0009 01D8                     printDebug("<ETH_retransmit> update logEvent timeout\r\n");
                +
005359 ede9     +LDI R30 , LOW ( 2 * _0x120000 + ( 1419 ) )
00535a e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1419 ) )
00535b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1419 ) )
00535c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1419 ) )
                 	__POINTD1FN _0x120000,1419
00535d 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 01D9                     logEventWait.frameID = 0x00;
00535f e0e0      	LDI  R30,LOW(0)
005360 93e0 142b 	STS  _logEventWait,R30
                 ; 0009 01DA                 }
                 ; 0009 01DB                 else{
005362 c006      	RJMP _0x120057
                 _0x120056:
                 ; 0009 01DC                     // ---- Push in log here ---- //
                 ; 0009 01DD                     ETH_checkPushLog(eth_waitQueue[i].packetID);
005363 940e a7f7 	CALL SUBOPT_0x157
                +
005365 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005366 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005367 81a0      	LD   R26,Z
005368 dee6      	RCALL _ETH_checkPushLog
                 ; 0009 01DE                     // -------------------------- //
                 ; 0009 01DF                 }
                 _0x120057:
                 _0x120055:
                 ; 0009 01E0 
                 ; 0009 01E1                 ETH_removeWaitQueue(eth_waitQueue[i].packetID);
005369 940e a7f7 	CALL SUBOPT_0x157
                +
00536b 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00536c 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00536d 81a0      	LD   R26,Z
00536e 940e 6360 	CALL _ETH_removeWaitQueue
                 ; 0009 01E2 
                 ; 0009 01E3                 printDebug("<ETH_retransmit> commLostTimer = %ld(%lX)\r\n",commLostTimer,commLostTimer);
                +
005370 e0e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1462 ) )
005371 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1462 ) )
005372 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1462 ) )
005373 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1462 ) )
                 	__POINTD1FN _0x120000,1462
005374 940e a7fd 	CALL SUBOPT_0x158
005376 940e a7fd 	CALL SUBOPT_0x158
005378 940e a038 	CALL SUBOPT_0x1F
                 ; 0009 01E4                 if((commLostTimer == 0xFFFFFFFF) || (commLostTimer == 0)){
00537a 940e a808 	CALL SUBOPT_0x159
00537c 940e a091 	CALL SUBOPT_0x2B
00537e f029      	BREQ _0x120059
00537f 940e a808 	CALL SUBOPT_0x159
005381 940e b68a 	CALL __CPD02
005383 f481      	BRNE _0x120058
                 _0x120059:
                 ; 0009 01E5                     TIMER_setTimer(&commLostTimer,30);
005384 e2e1      	LDI  R30,LOW(_commLostTimer)
005385 e1f4      	LDI  R31,HIGH(_commLostTimer)
005386 940e a811 	CALL SUBOPT_0x15A
005388 940e 3e15 	CALL _TIMER_setTimer
                 ; 0009 01E6                     printDebug("<ETH_retransmit> LostTimer time left = %ld(%lX)\r\n",(commLostTimer-baseCounter),(commLostTimer-baseCounter));
                +
00538a e3e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 1506 ) )
00538b e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1506 ) )
00538c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1506 ) )
00538d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1506 ) )
                 	__POINTD1FN _0x120000,1506
00538e 940e a818 	CALL SUBOPT_0x15B
005390 940e a818 	CALL SUBOPT_0x15B
005392 940e a038 	CALL SUBOPT_0x1F
                 ; 0009 01E7                 }
                 ; 0009 01E8             }
                 _0x120058:
                 ; 0009 01E9             else
005394 c029      	RJMP _0x12005B
                 _0x120053:
                 ; 0009 01EA             {
                 ; 0009 01EB                 TIMER_setTimer(&(eth_waitQueue[i].retryTime), eth_waitQueue[i].timeout);
005395 940e a7f7 	CALL SUBOPT_0x157
005397 940e a826 	CALL SUBOPT_0x15C
005399 940e a82b 	CALL SUBOPT_0x15D
                 ; 0009 01EC                 eth_waitQueue[i].retryCount++;      // increase retry counter
00539b 940e a7f7 	CALL SUBOPT_0x157
00539d 58e5      	SUBI R30,LOW(-_eth_waitQueue)
00539e 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
00539f 01df      	MOVW R26,R30
0053a0 91ec      	LD   R30,X
0053a1 5fef      	SUBI R30,-LOW(1)
0053a2 93ec      	ST   X,R30
                 ; 0009 01ED 
                 ; 0009 01EE                 printDebug("\r\n<ETH_retransmit> --Retransmitting-- [0x%02X]\r\n",eth_waitQueue[i].packetID);
                +
0053a3 e6e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 1556 ) )
0053a4 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1556 ) )
0053a5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1556 ) )
0053a6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1556 ) )
                 	__POINTD1FN _0x120000,1556
0053a7 940e b62a 	CALL __PUTPARD1
0053a9 940e a7f7 	CALL SUBOPT_0x157
                +
0053ab 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
0053ac 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
0053ad 81e0      	LD   R30,Z
0053ae 940e a073 	CALL SUBOPT_0x27
                 ; 0009 01EF 
                 ; 0009 01F0                 write_uart0(    eth_waitQueue[i].packetData,
                 ; 0009 01F1                                 eth_waitQueue[i].packetLen);
0053b0 940e a7f7 	CALL SUBOPT_0x157
0053b2 940e a834 	CALL SUBOPT_0x15E
0053b4 93fa      	ST   -Y,R31
0053b5 93ea      	ST   -Y,R30
0053b6 940e a7f7 	CALL SUBOPT_0x157
                +
0053b8 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
0053b9 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
0053ba 81a0      	LD   R26,Z
0053bb e0b0      	LDI  R27,0
0053bc 940e 3d0e 	CALL _write_uart0
                 ; 0009 01F2             }
                 _0x12005B:
                 ; 0009 01F3         }
                 ; 0009 01F4     }
                 _0x120050:
                +
0053be 5f0f     +SUBI R16 , LOW ( - 1 )
0053bf 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0053c0 cf4e      	RJMP _0x12004E
                 _0x12004F:
                 ; 0009 01F5     return;
0053c1 9109      	LD   R16,Y+
0053c2 9119      	LD   R17,Y+
0053c3 9508      	RET
                 ; 0009 01F6 }
                 ;/*============================================================*/
                 ;void ETH_processPacket(unsigned char *ptr2frame,int len)
                 ; 0009 01F9 {
                 _ETH_processPacket:
                 ; 0009 01FA     FIL             file;
                 ; 0009 01FB     unsigned char   frameType;
                 ; 0009 01FC     int             res=0;
                 ; 0009 01FD     unsigned char   frameID;
                 ; 0009 01FE     int             payload;            // -- pointer to payload data extracted from a frame -- //
                 ; 0009 01FF 
                 ; 0009 0200     int             cnfgRd;             // -- for keeping read configuration -- //
                 ; 0009 0201     char            *cnfgWr;
                 ; 0009 0202 
                 ; 0009 0203     int             i;
                 ; 0009 0204 
                 ; 0009 0205 //    printDebug("\r\n\r\n****** processPacket ******\r\n");
                 ; 0009 0206 //    print_payload(ptr2frame,len);
                 ; 0009 0207 //    printDebug("\r\n******************\r\n");
                 ; 0009 0208     frameID         = ptr2frame[0];
0053c4 93ba      	ST   -Y,R27
0053c5 93aa      	ST   -Y,R26
0053c6 97a6      	SBIW R28,38
0053c7 50d2      	SUBI R29,2
0053c8 940e b69a 	CALL __SAVELOCR6
                 ;	*ptr2frame -> Y+558
                 ;	len -> Y+556
                 ;	file -> Y+12
                 ;	frameType -> R17
                 ;	res -> R18,R19
                 ;	frameID -> R16
                 ;	payload -> R20,R21
                 ;	cnfgRd -> Y+10
                 ;	*cnfgWr -> Y+8
                 ;	i -> Y+6
                +
0053ca e020     +LDI R18 , LOW ( 0 )
0053cb e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
0053cc 940e a83a 	CALL SUBOPT_0x15F
0053ce 910c      	LD   R16,X
                 ; 0009 0209     frameType       = ptr2frame[1];
0053cf 940e a83a 	CALL SUBOPT_0x15F
0053d1 9611      	ADIW R26,1
0053d2 911c      	LD   R17,X
                 ; 0009 020A 
                 ; 0009 020B     commLostTimer   = 0xFFFFFFFF;                     // -- cancel communication lost timer -- //
0053d3 940e a054 	CALL SUBOPT_0x23
0053d5 93e0 1421 	STS  _commLostTimer,R30
0053d7 93f0 1422 	STS  _commLostTimer+1,R31
0053d9 9360 1423 	STS  _commLostTimer+2,R22
0053db 9370 1424 	STS  _commLostTimer+3,R23
                 ; 0009 020C     //commLostTimer   = 0;                            // -- re-initial -- //
                 ; 0009 020D 
                 ; 0009 020E     switch(frameType){
0053dd 940e a38d 	CALL SUBOPT_0x99
                 ; 0009 020F         case STATREQC  :     // -- Status Request COMMAND
0053df 31ea      	CPI  R30,LOW(0x1A)
0053e0 e0a0      	LDI  R26,HIGH(0x1A)
0053e1 07fa      	CPC  R31,R26
0053e2 f011      	BREQ PC+3
0053e3 940c 5461 	JMP _0x12005F
                 ; 0009 0210             if( len < (2 + sizeof(struct stat_req_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) ) ){
0053e5 940e a841 	CALL SUBOPT_0x160
0053e7 971d      	SBIW R26,13
0053e8 f44c      	BRGE _0x120060
                 ; 0009 0211                 printDebug("<ETH_processPacket> status request invalid length (%d)\r\n",len);
                +
0053e9 e9e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 1605 ) )
0053ea e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1605 ) )
0053eb e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1605 ) )
0053ec e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1605 ) )
                 	__POINTD1FN _0x120000,1605
0053ed 940e a848 	CALL SUBOPT_0x161
                 ; 0009 0212                 ETH_sendNack(frameID,INVALID_LENGTH);
0053ef 940e a851 	CALL SUBOPT_0x162
                 ; 0009 0213                 return;
0053f1 c0d2      	RJMP _0x20E006B
                 ; 0009 0214             }
                 ; 0009 0215 
                 ; 0009 0216             payload = (int) malloc (len);
                 _0x120060:
0053f2 940e a841 	CALL SUBOPT_0x160
0053f4 940e a855 	CALL SUBOPT_0x163
                 ; 0009 0217             if(payload == NULL){
0053f6 f449      	BRNE _0x120061
                 ; 0009 0218                 printDebug("<ETH_processPacket> payload malloc() failed\r\n");
                +
0053f7 ecec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1662 ) )
0053f8 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1662 ) )
0053f9 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1662 ) )
0053fa e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1662 ) )
                 	__POINTD1FN _0x120000,1662
0053fb 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0219                 ETH_sendNack(frameID,NOT_READY);
0053fd 940e a85b 	CALL SUBOPT_0x164
                 ; 0009 021A                 return;
0053ff c0c4      	RJMP _0x20E006B
                 ; 0009 021B             }
                 ; 0009 021C 
                 ; 0009 021D             res = statusRequestParser(ptr2frame+2,len-2,(struct stat_req_st *)payload);
                 _0x120061:
005400 940e a85f 	CALL SUBOPT_0x165
005402 940e a866 	CALL SUBOPT_0x166
005404 d65b      	RCALL _statusRequestParser
005405 019f      	MOVW R18,R30
                 ; 0009 021E             if(res < 0){
005406 2333      	TST  R19
005407 f44a      	BRPL _0x120062
                 ; 0009 021F                 printDebug("<ETH_processPacket> statusRequestParser() failed\r\n");
                +
005408 efea     +LDI R30 , LOW ( 2 * _0x120000 + ( 1708 ) )
005409 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1708 ) )
00540a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1708 ) )
00540b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1708 ) )
                 	__POINTD1FN _0x120000,1708
00540c 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0220                 free( (void *) payload );
00540e 940e a86f 	CALL SUBOPT_0x167
                 ; 0009 0221                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0222                 return;
005410 c0b3      	RJMP _0x20E006B
                 ; 0009 0223             }
                 ; 0009 0224 
                 ; 0009 0225             printDebug("\r\n--statusRequestParser-- CMD [0x%02X]\r\n",frameID);
                 _0x120062:
                +
005411 e2ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 1759 ) )
005412 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1759 ) )
005413 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1759 ) )
005414 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1759 ) )
                 	__POINTD1FN _0x120000,1759
005415 940e a876 	CALL SUBOPT_0x168
                 ; 0009 0226             printDebug("accessMethod    [0x%02X]\r\n",      ((struct stat_req_st *)payload)->accm);
                +
005417 e5e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 1800 ) )
005418 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1800 ) )
005419 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1800 ) )
00541a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1800 ) )
                 	__POINTD1FN _0x120000,1800
00541b 940e a87b 	CALL SUBOPT_0x169
                 ; 0009 0227             printDebug("interval        [0x%04X] = %d\r\n", ((struct stat_req_st *)payload)->intv,((struct stat_req_st *)payload)->intv);
                +
00541d e7e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 1827 ) )
00541e e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1827 ) )
00541f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1827 ) )
005420 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1827 ) )
                 	__POINTD1FN _0x120000,1827
005421 940e a881 	CALL SUBOPT_0x16A
005423 940e a881 	CALL SUBOPT_0x16A
005425 940e a038 	CALL SUBOPT_0x1F
                 ; 0009 0228             printDebug("statusList      |");
                +
005427 e9e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 1859 ) )
005428 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1859 ) )
005429 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1859 ) )
00542a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1859 ) )
                 	__POINTD1FN _0x120000,1859
00542b 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0229 
                 ; 0009 022A             for( i=0 ; i<(((struct stat_req_st *)payload)->parLen) ; i++)
00542d e0e0      	LDI  R30,LOW(0)
00542e 83ee      	STD  Y+6,R30
00542f 83ef      	STD  Y+6+1,R30
                 _0x120064:
005430 01da      	MOVW R26,R20
005431 961b      	ADIW R26,11
005432 940e a887 	CALL SUBOPT_0x16B
005434 f4b8      	BRSH _0x120065
                 ; 0009 022B             {
                 ; 0009 022C                 printDebug("%02X|",(((struct stat_req_st *)payload)->parlst)[i++]);
                +
005435 eae3     +LDI R30 , LOW ( 2 * _0x120000 + ( 1877 ) )
005436 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1877 ) )
005437 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1877 ) )
005438 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1877 ) )
                 	__POINTD1FN _0x120000,1877
005439 940e b62a 	CALL __PUTPARD1
00543b 01fa      	MOVW R30,R20
00543c 85a5      	LDD  R26,Z+13
00543d 85b6      	LDD  R27,Z+14
00543e 85ea      	LDD  R30,Y+10
00543f 85fb      	LDD  R31,Y+10+1
005440 9631      	ADIW R30,1
005441 87ea      	STD  Y+10,R30
005442 87fb      	STD  Y+10+1,R31
005443 9731      	SBIW R30,1
005444 940e a88e 	CALL SUBOPT_0x16C
                 ; 0009 022D             }
005446 81ee      	LDD  R30,Y+6
005447 81ff      	LDD  R31,Y+6+1
005448 9631      	ADIW R30,1
005449 83ee      	STD  Y+6,R30
00544a 83ff      	STD  Y+6+1,R31
00544b cfe4      	RJMP _0x120064
                 _0x120065:
                 ; 0009 022E             printDebug("\r\n-- ..Done.. --\r\n");
                +
00544c eae9     +LDI R30 , LOW ( 2 * _0x120000 + ( 1883 ) )
00544d e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1883 ) )
00544e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1883 ) )
00544f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1883 ) )
                 	__POINTD1FN _0x120000,1883
005450 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 022F 
                 ; 0009 0230             ETH_sendStatusRequestAck(frameID,((struct stat_req_st *)payload)->accm,0x00);
005452 940e a893 	CALL SUBOPT_0x16D
005454 e0a0      	LDI  R26,LOW(0)
005455 db39      	RCALL _ETH_sendStatusRequestAck
                 ; 0009 0231 
                 ; 0009 0232             if( ((struct stat_req_st *)payload)->accm < 0x30){
005456 01fa      	MOVW R30,R20
005457 85a0      	LDD  R26,Z+8
005458 33a0      	CPI  R26,LOW(0x30)
005459 f418      	BRSH _0x120066
                 ; 0009 0233                 free_statusRequest((struct stat_req_st *)payload);
00545a 01da      	MOVW R26,R20
00545b 940e 5ca0 	CALL _free_statusRequest
                 ; 0009 0234             }
                 ; 0009 0235 
                 ; 0009 0236             free( (void *) payload );
                 _0x120066:
00545d 01da      	MOVW R26,R20
00545e 940e 8488 	CALL _free
                 ; 0009 0237             break;
005460 c452      	RJMP _0x12005E
                 ; 0009 0238         case STATREPA  :     // -- Status Report ACKNOWLEDGE
                 _0x12005F:
005461 32eb      	CPI  R30,LOW(0x2B)
005462 e0a0      	LDI  R26,HIGH(0x2B)
005463 07fa      	CPC  R31,R26
005464 f011      	BREQ PC+3
005465 940c 54ac 	JMP _0x120067
                 ; 0009 0239             if( len < (2 + sizeof(struct stat_rep_st)) ){
005467 940e a841 	CALL SUBOPT_0x160
005469 971e      	SBIW R26,14
00546a f42c      	BRGE _0x120068
                 ; 0009 023A                 printDebug("<ETH_processPacket> status report invalid length (%d)\r\n",len);
                +
00546b ebec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1902 ) )
00546c e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1902 ) )
00546d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1902 ) )
00546e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1902 ) )
                 	__POINTD1FN _0x120000,1902
00546f c04a      	RJMP _0x20E006A
                 ; 0009 023B                 return;
                 ; 0009 023C             }
                 ; 0009 023D 
                 ; 0009 023E             printDebug("\r\n--statusReportParser-- ACK [0x%02X]\r\n",frameID);
                 _0x120068:
                +
005470 efe4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1958 ) )
005471 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1958 ) )
005472 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1958 ) )
005473 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1958 ) )
                 	__POINTD1FN _0x120000,1958
005474 940e a876 	CALL SUBOPT_0x168
                 ; 0009 023F             printDebug("unixTime        [0x%02X][0x%02X][0x%02X][0x%02X]\r\n",
                 ; 0009 0240                                     ptr2frame[10],ptr2frame[11],ptr2frame[12],ptr2frame[13]);
                +
005476 e1ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1998 ) )
005477 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1998 ) )
005478 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1998 ) )
005479 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1998 ) )
                 	__POINTD1FN _0x120000,1998
00547a 940e b62a 	CALL __PUTPARD1
                +
00547c 01fe     +MOVW R30 , R28
00547d 5cee     +SUBI R30 , LOW ( - 562 )
00547e 4ffd     +SBCI R31 , HIGH ( - 562 )
00547f 9001     +LD R0 , Z +
005480 81f0     +LD R31 , Z
005481 2de0     +MOV R30 , R0
                 	__GETW1SX 562
005482 85e2      	LDD  R30,Z+10
005483 940e a1bb 	CALL SUBOPT_0x55
                +
005485 01fe     +MOVW R30 , R28
005486 5cea     +SUBI R30 , LOW ( - 566 )
005487 4ffd     +SBCI R31 , HIGH ( - 566 )
005488 9001     +LD R0 , Z +
005489 81f0     +LD R31 , Z
00548a 2de0     +MOV R30 , R0
                 	__GETW1SX 566
00548b 85e3      	LDD  R30,Z+11
00548c 940e a1bb 	CALL SUBOPT_0x55
                +
00548e 01fe     +MOVW R30 , R28
00548f 5ce6     +SUBI R30 , LOW ( - 570 )
005490 4ffd     +SBCI R31 , HIGH ( - 570 )
005491 9001     +LD R0 , Z +
005492 81f0     +LD R31 , Z
005493 2de0     +MOV R30 , R0
                 	__GETW1SX 570
005494 85e4      	LDD  R30,Z+12
005495 940e a1bb 	CALL SUBOPT_0x55
                +
005497 01fe     +MOVW R30 , R28
005498 5ce2     +SUBI R30 , LOW ( - 574 )
005499 4ffd     +SBCI R31 , HIGH ( - 574 )
00549a 9001     +LD R0 , Z +
00549b 81f0     +LD R31 , Z
00549c 2de0     +MOV R30 , R0
                 	__GETW1SX 574
00549d 85e5      	LDD  R30,Z+13
00549e 940e a1bb 	CALL SUBOPT_0x55
0054a0 940e a7a5 	CALL SUBOPT_0x149
                 ; 0009 0241             res = setTimeSyncSchema( &ptr2frame[10] );
0054a2 940e a83a 	CALL SUBOPT_0x15F
0054a4 961a      	ADIW R26,10
0054a5 940e 627e 	CALL _setTimeSyncSchema
0054a7 019f      	MOVW R18,R30
                 ; 0009 0242             if(res < 0){
                 ; 0009 0243                 //printDebug("<ETH_processPacket> setTimeSyncSchema() failed in STATREPA\r\n");
                 ; 0009 0244             }
                 ; 0009 0245             ETH_removeWaitQueue(frameID);
0054a8 2fa0      	MOV  R26,R16
0054a9 940e 6360 	CALL _ETH_removeWaitQueue
                 ; 0009 0246             break;
0054ab c407      	RJMP _0x12005E
                 ; 0009 0247         case EVENREPA  :     // -- Event Report ACKNOWLEDGE
                 _0x120067:
0054ac 33eb      	CPI  R30,LOW(0x3B)
0054ad e0a0      	LDI  R26,HIGH(0x3B)
0054ae 07fa      	CPC  R31,R26
0054af f011      	BREQ PC+3
0054b0 940c 5514 	JMP _0x12006A
                 ; 0009 0248             if( len < (2 + sizeof(struct event_rep_st)) ){
0054b2 940e a841 	CALL SUBOPT_0x160
0054b4 971a      	SBIW R26,10
0054b5 f49c      	BRGE _0x12006B
                 ; 0009 0249                 printDebug("<ETH_processPacket> event report invalid length (%d)\r\n",len);
                +
0054b6 e4ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 2049 ) )
0054b7 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2049 ) )
0054b8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2049 ) )
0054b9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2049 ) )
                 	__POINTD1FN _0x120000,2049
                 _0x20E006A:
0054ba 940e b62a 	CALL __PUTPARD1
                +
0054bc 01fe     +MOVW R30 , R28
0054bd 5de0     +SUBI R30 , LOW ( - 560 )
0054be 4ffd     +SBCI R31 , HIGH ( - 560 )
0054bf 9001     +LD R0 , Z +
0054c0 81f0     +LD R31 , Z
0054c1 2de0     +MOV R30 , R0
                 	__GETW1SX 560
0054c2 940e a4fe 	CALL SUBOPT_0xD5
                 ; 0009 024A                 return;
                 _0x20E006B:
0054c4 940e b6a1 	CALL __LOADLOCR6
0054c6 96e0      	ADIW R28,48
0054c7 5fde      	SUBI R29,-2
0054c8 9508      	RET
                 ; 0009 024B             }
                 ; 0009 024C 
                 ; 0009 024D             printDebug("\r\n--eventReportParser-- ACK [0x%02X]\r\n", frameID);
                 _0x12006B:
                +
0054c9 e8e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2104 ) )
0054ca e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2104 ) )
0054cb e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2104 ) )
0054cc e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2104 ) )
                 	__POINTD1FN _0x120000,2104
0054cd 940e a876 	CALL SUBOPT_0x168
                 ; 0009 024E             if( (logEventWait.frameID != 0) && (frameID == logEventWait.frameID) )
0054cf 91a0 142b 	LDS  R26,_logEventWait
0054d1 30a0      	CPI  R26,LOW(0x0)
0054d2 f021      	BREQ _0x12006D
0054d3 91e0 142b 	LDS  R30,_logEventWait
0054d5 17e0      	CP   R30,R16
0054d6 f009      	BREQ _0x12006E
                 _0x12006D:
0054d7 c035      	RJMP _0x12006C
                 _0x12006E:
                 ; 0009 024F             {
                 ; 0009 0250                 printDebug("<ETH_processPacket> got event log ack\r\n");
                +
0054d8 eaed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2143 ) )
0054d9 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2143 ) )
0054da e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2143 ) )
0054db e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2143 ) )
                 	__POINTD1FN _0x120000,2143
0054dc 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0251 
                 ; 0009 0252                 res = LOG_openFile(&file,LOGFILE_EVENT);
0054de 940e a173 	CALL SUBOPT_0x4A
0054e0 940e a1d0 	CALL SUBOPT_0x59
0054e2 019f      	MOVW R18,R30
                 ; 0009 0253                 if(res < 0){        printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_EVENT);            }
0054e3 2333      	TST  R19
0054e4 f42a      	BRPL _0x12006F
                +
0054e5 ede5     +LDI R30 , LOW ( 2 * _0x120000 + ( 2183 ) )
0054e6 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2183 ) )
0054e7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2183 ) )
0054e8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2183 ) )
                 	__POINTD1FN _0x120000,2183
0054e9 c01b      	RJMP _0x120117
                 ; 0009 0254                 else
                 _0x12006F:
                 ; 0009 0255                 {
                 ; 0009 0256                     res = LOG_setLastSend(&file,logEventWait.logID + 1);
0054ea 940e a173 	CALL SUBOPT_0x4A
0054ec 940e a228 	CALL SUBOPT_0x62
0054ee 940e a898 	CALL SUBOPT_0x16E
                 ; 0009 0257                     if(res < 0){    printDebug("<LOG_readData> LOG_setLastSend() failed\r\n");                      }
0054f0 f41a      	BRPL _0x120071
0054f1 940e a8a0 	CALL SUBOPT_0x16F
                 ; 0009 0258                     else{           printDebug("<LOG_readData> LOG_setLastSend(%s,%ld)\r\n",LOGFILE_EVENT,logEventWait.logID + 1);   }
0054f3 c00a      	RJMP _0x120072
                 _0x120071:
0054f4 940e a8a6 	CALL SUBOPT_0x170
0054f6 940e a231 	CALL SUBOPT_0x63
0054f8 940e a228 	CALL SUBOPT_0x62
0054fa 940e a47c 	CALL SUBOPT_0xC0
0054fc 940e a038 	CALL SUBOPT_0x1F
                 _0x120072:
                 ; 0009 0259 
                 ; 0009 025A                     res = LOG_closeFile(&file);
0054fe 940e a8ad 	CALL SUBOPT_0x171
                 ; 0009 025B                     if(res < 0){    printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_EVENT);           }
005500 f452      	BRPL _0x120073
                +
005501 e4ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 2304 ) )
005502 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2304 ) )
005503 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2304 ) )
005504 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2304 ) )
                 	__POINTD1FN _0x120000,2304
                 _0x120117:
005505 940e b62a 	CALL __PUTPARD1
005507 940e a231 	CALL SUBOPT_0x63
005509 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0009 025C                 }
                 _0x120073:
                 ; 0009 025D 
                 ; 0009 025E                 logEventWait.frameID    = 0;
00550b 940e a218 	CALL SUBOPT_0x61
                 ; 0009 025F                 logEventWait.logID      = 0;
                 ; 0009 0260             }
                 ; 0009 0261             removeEventLogQueue(frameID);
                 _0x12006C:
00550d 2fa0      	MOV  R26,R16
00550e 940e 7774 	CALL _removeEventLogQueue
                 ; 0009 0262             ETH_removeWaitQueue(frameID);
005510 2fa0      	MOV  R26,R16
005511 940e 6360 	CALL _ETH_removeWaitQueue
                 ; 0009 0263             break;
005513 c39f      	RJMP _0x12005E
                 ; 0009 0264         case CONFMANC  :     // -- Configuration Management COMMAND
                 _0x12006A:
005514 34ea      	CPI  R30,LOW(0x4A)
005515 e0a0      	LDI  R26,HIGH(0x4A)
005516 07fa      	CPC  R31,R26
005517 f011      	BREQ PC+3
005518 940c 5649 	JMP _0x120074
                 ; 0009 0265             printDebug("<ETH_processPacket> Config Manage\r\n");
                +
00551a e7e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 2343 ) )
00551b e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2343 ) )
00551c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2343 ) )
00551d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2343 ) )
                 	__POINTD1FN _0x120000,2343
00551e 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0266             print_payload(ptr2frame, len);
005520 940e a85f 	CALL SUBOPT_0x165
005522 93fa      	ST   -Y,R31
005523 93ea      	ST   -Y,R30
005524 940e a83a 	CALL SUBOPT_0x15F
005526 940e 7d2a 	CALL _print_payload
                 ; 0009 0267 
                 ; 0009 0268             if( len < (2 + sizeof(struct conf_man_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) ) ){
005528 940e a841 	CALL SUBOPT_0x160
00552a 971c      	SBIW R26,12
00552b f44c      	BRGE _0x120075
                 ; 0009 0269                 printDebug("<ETH_processPacket> configuration management invalid length (%d)\r\n",len);
                +
00552c e9e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 2379 ) )
00552d e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2379 ) )
00552e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2379 ) )
00552f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2379 ) )
                 	__POINTD1FN _0x120000,2379
005530 940e a848 	CALL SUBOPT_0x161
                 ; 0009 026A                 ETH_sendNack(frameID,INVALID_LENGTH);
005532 940e a851 	CALL SUBOPT_0x162
                 ; 0009 026B                 return;
005534 c37e      	RJMP _0x20E0069
                 ; 0009 026C             }
                 ; 0009 026D 
                 ; 0009 026E             payload = (int) malloc (sizeof(struct conf_man_st));
                 _0x120075:
005535 e0ae      	LDI  R26,LOW(14)
005536 940e a8ba 	CALL SUBOPT_0x172
                 ; 0009 026F             if(payload == NULL){
005538 f459      	BRNE _0x120076
                 ; 0009 0270                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct conf_man_st));
005539 940e a8bc 	CALL SUBOPT_0x173
                +
00553b e0ee     +LDI R30 , LOW ( 0xE )
00553c e0f0     +LDI R31 , HIGH ( 0xE )
00553d e060     +LDI R22 , BYTE3 ( 0xE )
00553e e070     +LDI R23 , BYTE4 ( 0xE )
                 	__GETD1N 0xE
00553f 940e a8c3 	CALL SUBOPT_0x174
                 ; 0009 0271                 ETH_sendNack(frameID,NOT_READY);
005541 940e a85b 	CALL SUBOPT_0x164
                 ; 0009 0272                 return;
005543 c36f      	RJMP _0x20E0069
                 ; 0009 0273             }
                 ; 0009 0274 
                 ; 0009 0275             res = configManageParser(ptr2frame+2,len-2,(struct conf_man_st *)payload);
                 _0x120076:
005544 940e a8c7 	CALL SUBOPT_0x175
005546 d575      	RCALL _configManageParser
005547 019f      	MOVW R18,R30
                 ; 0009 0276             if(res < 0){
005548 2333      	TST  R19
005549 f44a      	BRPL _0x120077
                 ; 0009 0277                 printDebug("<ETH_processPacket> configManageParser() failed\r\n");
                +
00554a e0ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 2494 ) )
00554b e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2494 ) )
00554c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2494 ) )
00554d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2494 ) )
                 	__POINTD1FN _0x120000,2494
00554e 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0278                 free( (void *) payload );
005550 940e a86f 	CALL SUBOPT_0x167
                 ; 0009 0279                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 027A                 return;
005552 c360      	RJMP _0x20E0069
                 ; 0009 027B             }
                 ; 0009 027C 
                 ; 0009 027D             printDebug("\r\n--configManageParser-- CMD [0x%02X]\r\n",frameID);
                 _0x120077:
                +
005553 e3ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 2544 ) )
005554 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2544 ) )
005555 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2544 ) )
005556 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2544 ) )
                 	__POINTD1FN _0x120000,2544
005557 940e a876 	CALL SUBOPT_0x168
                 ; 0009 027E             printDebug("accd            [0x%02X]\r\n",       ((struct conf_man_st *)payload)->accd);
005559 940e a8c9 	CALL SUBOPT_0x176
                 ; 0009 027F             printDebug("cnfg            [0x%02X]\r\n",       ((struct conf_man_st *)payload)->cnfg);
                +
00555b e8e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 2611 ) )
00555c e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2611 ) )
00555d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2611 ) )
00555e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2611 ) )
                 	__POINTD1FN _0x120000,2611
00555f 940e a8ce 	CALL SUBOPT_0x177
                 ; 0009 0280 
                 ; 0009 0281             switch( ((struct conf_man_st *)payload)->accd ){
005561 940e a8d4 	CALL SUBOPT_0x178
                 ; 0009 0282                 case CONF_RD_CMD    :   // -- Configration Read -- //
005563 f011      	BREQ PC+3
005564 940c 55d3 	JMP _0x12007B
                 ; 0009 0283                                         res = getConfigLen(((struct conf_man_st *)payload)->cnfg);
005566 01fa      	MOVW R30,R20
005567 85a1      	LDD  R26,Z+9
005568 940e 5cb5 	CALL _getConfigLen
00556a 019f      	MOVW R18,R30
                 ; 0009 0284                                         if(res < 0){
00556b 2333      	TST  R19
00556c f43a      	BRPL _0x12007C
                 ; 0009 0285                                             printDebug("<ETH_processPacket> getConfigLen() failed\r\n");
                +
00556d e9ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 2638 ) )
00556e e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2638 ) )
00556f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2638 ) )
005570 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2638 ) )
                 	__POINTD1FN _0x120000,2638
005571 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0286                                             ETH_sendNack(frameID,INVALID_PARAMETER);
005573 c0cc      	RJMP _0x120118
                 ; 0009 0287                                             break;
                 ; 0009 0288                                         }
                 ; 0009 0289 
                 ; 0009 028A                                         cnfgRd = (int) malloc (res);
                 _0x12007C:
005574 01d9      	MOVW R26,R18
005575 940e 846d 	CALL _malloc
005577 87ea      	STD  Y+10,R30
005578 87fb      	STD  Y+10+1,R31
                 ; 0009 028B                                         if(cnfgRd == NULL){
005579 9730      	SBIW R30,0
00557a f449      	BRNE _0x12007D
                 ; 0009 028C                                             printDebug("<ETH_processPacket> cnfgRd malloc() failed\r\n");
                +
00557b ece8     +LDI R30 , LOW ( 2 * _0x120000 + ( 2682 ) )
00557c e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2682 ) )
00557d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2682 ) )
00557e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2682 ) )
                 	__POINTD1FN _0x120000,2682
00557f 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 028D                                             ETH_sendNack(frameID,NOT_READY);
005581 930a      	ST   -Y,R16
005582 e5a0      	LDI  R26,LOW(80)
005583 c0be      	RJMP _0x120119
                 ; 0009 028E                                             break;
                 ; 0009 028F                                         }
                 ; 0009 0290 
                 ; 0009 0291                                         res = configRead(((struct conf_man_st *)payload)->cnfg,(char *) cnfgRd);
                 _0x12007D:
005584 01fa      	MOVW R30,R20
005585 85a1      	LDD  R26,Z+9
005586 93aa      	ST   -Y,R26
005587 85ab      	LDD  R26,Y+11
005588 85bc      	LDD  R27,Y+11+1
005589 940e 5d07 	CALL _configRead
00558b 019f      	MOVW R18,R30
                 ; 0009 0292                                         if(res <= 0){
00558c 2400      	CLR  R0
00558d 1602      	CP   R0,R18
00558e 0603      	CPC  R0,R19
00558f f164      	BRLT _0x12007E
                 ; 0009 0293                                             printDebug("<ETH_processPacket> configRead() failed\r\n");
                +
005590 efe5     +LDI R30 , LOW ( 2 * _0x120000 + ( 2727 ) )
005591 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2727 ) )
005592 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2727 ) )
005593 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2727 ) )
                 	__POINTD1FN _0x120000,2727
005594 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0294                                             if(res == -1){
005596 efef      	LDI  R30,LOW(65535)
005597 efff      	LDI  R31,HIGH(65535)
005598 17e2      	CP   R30,R18
005599 07f3      	CPC  R31,R19
00559a f419      	BRNE _0x12007F
                 ; 0009 0295                                                 ETH_sendNack(frameID,INVALID_PARAMETER);
00559b 930a      	ST   -Y,R16
00559c e3a0      	LDI  R26,LOW(48)
00559d c018      	RJMP _0x12011A
                 ; 0009 0296                                             }
                 ; 0009 0297                                             else if((res == -2) || (res == 0)){
                 _0x12007F:
00559e efee      	LDI  R30,LOW(65534)
00559f efff      	LDI  R31,HIGH(65534)
0055a0 17e2      	CP   R30,R18
0055a1 07f3      	CPC  R31,R19
0055a2 f021      	BREQ _0x120082
0055a3 2400      	CLR  R0
0055a4 1602      	CP   R0,R18
0055a5 0603      	CPC  R0,R19
0055a6 f419      	BRNE _0x120081
                 _0x120082:
                 ; 0009 0298                                                 ETH_sendNack(frameID,NOT_READY);
0055a7 930a      	ST   -Y,R16
0055a8 e5a0      	LDI  R26,LOW(80)
0055a9 c00c      	RJMP _0x12011A
                 ; 0009 0299                                             }
                 ; 0009 029A                                             else if(res == -3){
                 _0x120081:
0055aa efed      	LDI  R30,LOW(65533)
0055ab efff      	LDI  R31,HIGH(65533)
0055ac 17e2      	CP   R30,R18
0055ad 07f3      	CPC  R31,R19
0055ae f429      	BRNE _0x120085
                 ; 0009 029B                                                 ETH_sendConfigManageNack(   frameID,
                 ; 0009 029C                                                                             ((struct conf_man_st *)payload)->accd,
                 ; 0009 029D                                                                             ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 029E                                                                             ERROR);
0055af 940e a893 	CALL SUBOPT_0x16D
0055b1 940e a8d8 	CALL SUBOPT_0x179
                 ; 0009 029F                                             }
                 ; 0009 02A0                                             else{
0055b3 c003      	RJMP _0x120086
                 _0x120085:
                 ; 0009 02A1                                                 ETH_sendNack(frameID,UNKNOWN_ERROR);
0055b4 930a      	ST   -Y,R16
0055b5 efaf      	LDI  R26,LOW(255)
                 _0x12011A:
0055b6 d9b5      	RCALL _ETH_sendNack
                 ; 0009 02A2                                             }
                 _0x120086:
                 ; 0009 02A3 
                 ; 0009 02A4                                             free((void *) cnfgRd);
0055b7 85aa      	LDD  R26,Y+10
0055b8 85bb      	LDD  R27,Y+10+1
0055b9 940e 8488 	CALL _free
                 ; 0009 02A5                                             break;
0055bb c087      	RJMP _0x12007A
                 ; 0009 02A6                                         }
                 ; 0009 02A7 
                 ; 0009 02A8                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12007E:
                 ; 0009 02A9                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02AA                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02AB                                                                         SUCCESS,
                 ; 0009 02AC                                                                         (char *)cnfgRd,
                 ; 0009 02AD                                                                         res  );
0055bc 940e a893 	CALL SUBOPT_0x16D
0055be 940e a8de 	CALL SUBOPT_0x17A
0055c0 85ee      	LDD  R30,Y+14
0055c1 85ff      	LDD  R31,Y+14+1
0055c2 93fa      	ST   -Y,R31
0055c3 93ea      	ST   -Y,R30
0055c4 01d9      	MOVW R26,R18
0055c5 940e a8e4 	CALL SUBOPT_0x17B
                 ; 0009 02AE                                         if(res < 0){
0055c7 f432      	BRPL _0x120087
                 ; 0009 02AF                                             printDebug("<ETH_processPacket> RD_CMD : ETH_sendConfigManageAck() failed\r\n");
                +
0055c8 e1ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 2769 ) )
0055c9 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2769 ) )
0055ca e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2769 ) )
0055cb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2769 ) )
                 	__POINTD1FN _0x120000,2769
0055cc 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 02B0                                         }
                 ; 0009 02B1 
                 ; 0009 02B2                                         free( (void *) cnfgRd );
                 _0x120087:
0055ce 85aa      	LDD  R26,Y+10
0055cf 85bb      	LDD  R27,Y+10+1
0055d0 940e 8488 	CALL _free
                 ; 0009 02B3                                         break;
0055d2 c070      	RJMP _0x12007A
                 ; 0009 02B4                 case CONF_WR_CMD    :   // -- Configuration Write -- //
                 _0x12007B:
0055d3 32e0      	CPI  R30,LOW(0x20)
0055d4 e0a0      	LDI  R26,HIGH(0x20)
0055d5 07fa      	CPC  R31,R26
0055d6 f011      	BREQ PC+3
0055d7 940c 561e 	JMP _0x120088
                 ; 0009 02B5                                         cnfgWr = malloc(((struct conf_man_st *)payload)->confLen);
0055d9 01fa      	MOVW R30,R20
0055da 85a2      	LDD  R26,Z+10
0055db 85b3      	LDD  R27,Z+11
0055dc 940e 846d 	CALL _malloc
0055de 940e a8e9 	CALL SUBOPT_0x17C
                 ; 0009 02B6                                         if(cnfgWr == NULL){
0055e0 9730      	SBIW R30,0
0055e1 f449      	BRNE _0x120089
                 ; 0009 02B7                                             printDebug("<ETH_processPacket> cnfgWr malloc() failed\r\n");
                +
0055e2 e5ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 2833 ) )
0055e3 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2833 ) )
0055e4 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2833 ) )
0055e5 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2833 ) )
                 	__POINTD1FN _0x120000,2833
0055e6 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 02B8                                             ETH_sendNack(frameID,NOT_READY);
0055e8 930a      	ST   -Y,R16
0055e9 e5a0      	LDI  R26,LOW(80)
0055ea c057      	RJMP _0x120119
                 ; 0009 02B9                                             break;
                 ; 0009 02BA                                         }
                 ; 0009 02BB 
                 ; 0009 02BC                                         memcpy(cnfgWr,((struct conf_man_st *)payload)->confSpec,((struct conf_man_st *)payload)->confLen);
                 _0x120089:
0055eb 940e a8ec 	CALL SUBOPT_0x17D
0055ed 01fa      	MOVW R30,R20
0055ee 85a4      	LDD  R26,Z+12
0055ef 85b5      	LDD  R27,Z+13
0055f0 93ba      	ST   -Y,R27
0055f1 93aa      	ST   -Y,R26
0055f2 85a2      	LDD  R26,Z+10
0055f3 85b3      	LDD  R27,Z+11
0055f4 940e 848f 	CALL _memcpy
                 ; 0009 02BD 
                 ; 0009 02BE                                         res = configWrite(  (unsigned char) (((struct conf_man_st *)payload)->cnfg),
                 ; 0009 02BF                                                             cnfgWr,
                 ; 0009 02C0                                                             (int) (((struct conf_man_st *)payload)->confLen) );
0055f6 01fa      	MOVW R30,R20
0055f7 85a1      	LDD  R26,Z+9
0055f8 93aa      	ST   -Y,R26
0055f9 940e a8f1 	CALL SUBOPT_0x17E
0055fb 01fa      	MOVW R30,R20
0055fc 85a2      	LDD  R26,Z+10
0055fd 85b3      	LDD  R27,Z+11
0055fe 940e 6128 	CALL _configWrite
005600 019f      	MOVW R18,R30
                 ; 0009 02C1 
                 ; 0009 02C2                                         free(cnfgWr);
005601 85a8      	LDD  R26,Y+8
005602 85b9      	LDD  R27,Y+8+1
005603 940e 8488 	CALL _free
                 ; 0009 02C3                                         if(res < 0){
005605 2333      	TST  R19
005606 f45a      	BRPL _0x12008A
                 ; 0009 02C4                                             printDebug("<ETH_processPacket> configWrite() failed\r\n");
                +
005607 e8ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 2878 ) )
005608 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2878 ) )
005609 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2878 ) )
00560a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2878 ) )
                 	__POINTD1FN _0x120000,2878
00560b 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 02C5                                             ETH_sendConfigManageNack(   frameID,
                 ; 0009 02C6                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02C7                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02C8                                                                         ERROR);
00560d 940e a893 	CALL SUBOPT_0x16D
00560f 940e a8d8 	CALL SUBOPT_0x179
                 ; 0009 02C9                                             break;
005611 c031      	RJMP _0x12007A
                 ; 0009 02CA                                         }
                 ; 0009 02CB 
                 ; 0009 02CC 
                 ; 0009 02CD                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12008A:
                 ; 0009 02CE                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02CF                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02D0                                                                         SUCCESS,
                 ; 0009 02D1                                                                         NULL,
                 ; 0009 02D2                                                                         0  );
005612 940e a893 	CALL SUBOPT_0x16D
005614 940e a8de 	CALL SUBOPT_0x17A
005616 940e a8f6 	CALL SUBOPT_0x17F
005618 940e a8e4 	CALL SUBOPT_0x17B
                 ; 0009 02D3                                         if(res < 0){
00561a f412      	BRPL _0x12008B
                 ; 0009 02D4                                             printDebug("WARN : <ETH_processPacket> WR_CMD : ETH_sendConfigManageAck() failed\r\n");
00561b 940e a8f9 	CALL SUBOPT_0x180
                 ; 0009 02D5                                         }
                 ; 0009 02D6 
                 ; 0009 02D7                                         break;
                 _0x12008B:
00561d c025      	RJMP _0x12007A
                 ; 0009 02D8                 case CONF_CF_CMD    :   // -- Configuration Confirm -- //
                 _0x120088:
00561e 33e0      	CPI  R30,LOW(0x30)
00561f e0a0      	LDI  R26,HIGH(0x30)
005620 07fa      	CPC  R31,R26
005621 f4e1      	BRNE _0x12008F
                 ; 0009 02D9                                         res = configConfirm();
005622 940e 62f3 	CALL _configConfirm
005624 019f      	MOVW R18,R30
                 ; 0009 02DA                                         if(res < 0){
005625 2333      	TST  R19
005626 f45a      	BRPL _0x12008D
                 ; 0009 02DB                                             printDebug("<ETH_processPacket> configConfirm() failed\r\n");
                +
005627 efee     +LDI R30 , LOW ( 2 * _0x120000 + ( 2992 ) )
005628 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2992 ) )
005629 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2992 ) )
00562a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2992 ) )
                 	__POINTD1FN _0x120000,2992
00562b 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 02DC                                             ETH_sendConfigManageNack(   frameID,
                 ; 0009 02DD                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02DE                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02DF                                                                         ERROR);
00562d 940e a893 	CALL SUBOPT_0x16D
00562f 940e a8d8 	CALL SUBOPT_0x179
                 ; 0009 02E0                                             break;
005631 c011      	RJMP _0x12007A
                 ; 0009 02E1                                         }
                 ; 0009 02E2 
                 ; 0009 02E3                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12008D:
                 ; 0009 02E4                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02E5                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02E6                                                                         SUCCESS,
                 ; 0009 02E7                                                                         NULL,
                 ; 0009 02E8                                                                         0  );
005632 940e a893 	CALL SUBOPT_0x16D
005634 940e a8de 	CALL SUBOPT_0x17A
005636 940e a8f6 	CALL SUBOPT_0x17F
005638 940e a8e4 	CALL SUBOPT_0x17B
                 ; 0009 02E9                                         if(res < 0){
00563a f412      	BRPL _0x12008E
                 ; 0009 02EA                                             printDebug("WARN : <ETH_processPacket> WR_CMD : ETH_sendConfigManageAck() failed\r\n");
00563b 940e a8f9 	CALL SUBOPT_0x180
                 ; 0009 02EB                                         }
                 ; 0009 02EC 
                 ; 0009 02ED                                         break;
                 _0x12008E:
00563d c005      	RJMP _0x12007A
                 ; 0009 02EE                 default             :   // -- Shouldn't reach here -- //
                 _0x12008F:
                 ; 0009 02EF                                         printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 02F0                                                         ((struct conf_man_st *)payload)->accd );
00563e 940e a8ff 	CALL SUBOPT_0x181
                 ; 0009 02F1                                         ETH_sendNack(frameID,INVALID_PARAMETER);
                 _0x120118:
005640 930a      	ST   -Y,R16
005641 e3a0      	LDI  R26,LOW(48)
                 _0x120119:
005642 d929      	RCALL _ETH_sendNack
                 ; 0009 02F2                                         break;
                 ; 0009 02F3             }
                 _0x12007A:
                 ; 0009 02F4 
                 ; 0009 02F5             free_configManage((struct conf_man_st *)payload);
005643 01da      	MOVW R26,R20
005644 d662      	RCALL _free_configManage
                 ; 0009 02F6             free( (void *) payload );
005645 01da      	MOVW R26,R20
005646 940e 8488 	CALL _free
                 ; 0009 02F7 
                 ; 0009 02F8             break;
005648 c26a      	RJMP _0x12005E
                 ; 0009 02F9         case DATAREPA  :     // -- Data Report ACKNOWLEDGE
                 _0x120074:
005649 35eb      	CPI  R30,LOW(0x5B)
00564a e0a0      	LDI  R26,HIGH(0x5B)
00564b 07fa      	CPC  R31,R26
00564c f011      	BREQ PC+3
00564d 940c 56a9 	JMP _0x120090
                 ; 0009 02FA             if( len < (2 + sizeof(struct data_rep_st)) ){
00564f 940e a841 	CALL SUBOPT_0x160
005651 971a      	SBIW R26,10
005652 f43c      	BRGE _0x120091
                 ; 0009 02FB                 printDebug("<ETH_processPacket> Data report invalid length (%d)\r\n",len);
                +
005653 e6e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 3098 ) )
005654 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3098 ) )
005655 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3098 ) )
005656 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3098 ) )
                 	__POINTD1FN _0x120000,3098
005657 940e a848 	CALL SUBOPT_0x161
                 ; 0009 02FC                 return;
005659 c259      	RJMP _0x20E0069
                 ; 0009 02FD             }
                 ; 0009 02FE 
                 ; 0009 02FF             printDebug("\r\n--dataReportParser-- ACK [0x%02X]\r\n",frameID);
                 _0x120091:
                +
00565a e9ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 3152 ) )
00565b e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3152 ) )
00565c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3152 ) )
00565d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3152 ) )
                 	__POINTD1FN _0x120000,3152
00565e 940e a876 	CALL SUBOPT_0x168
                 ; 0009 0300             if( (logDataWait.frameID != 0) && (frameID == logDataWait.frameID) )
005660 91a0 1426 	LDS  R26,_logDataWait
005662 30a0      	CPI  R26,LOW(0x0)
005663 f021      	BREQ _0x120093
005664 91e0 1426 	LDS  R30,_logDataWait
005666 17e0      	CP   R30,R16
005667 f009      	BREQ _0x120094
                 _0x120093:
005668 c039      	RJMP _0x120092
                 _0x120094:
                 ; 0009 0301             {
                 ; 0009 0302                 printDebug("<ETH_processPacket> got data log ack\r\n");
                +
005669 ece4     +LDI R30 , LOW ( 2 * _0x120000 + ( 3190 ) )
00566a e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3190 ) )
00566b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3190 ) )
00566c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3190 ) )
                 	__POINTD1FN _0x120000,3190
00566d 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0303 
                 ; 0009 0304                 res = LOG_openFile(&file,LOGFILE_DATA);
00566f 940e a173 	CALL SUBOPT_0x4A
005671 940e a185 	CALL SUBOPT_0x4E
005673 019f      	MOVW R18,R30
                 ; 0009 0305                 if(res < 0){        printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_DATA);             }
005674 2333      	TST  R19
005675 f42a      	BRPL _0x120095
                +
005676 ede5     +LDI R30 , LOW ( 2 * _0x120000 + ( 2183 ) )
005677 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2183 ) )
005678 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2183 ) )
005679 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2183 ) )
                 	__POINTD1FN _0x120000,2183
00567a c01d      	RJMP _0x12011B
                 ; 0009 0306                 else
                 _0x120095:
                 ; 0009 0307                 {
                 ; 0009 0308                     res = LOG_setLastSend(&file,logDataWait.logID + 1);
00567b 940e a173 	CALL SUBOPT_0x4A
00567d 940e a202 	CALL SUBOPT_0x5F
00567f 940e a898 	CALL SUBOPT_0x16E
                 ; 0009 0309                     if(res < 0){    printDebug("<LOG_readData> LOG_setLastSend() failed\r\n");                      }
005681 f41a      	BRPL _0x120097
005682 940e a8a0 	CALL SUBOPT_0x16F
                 ; 0009 030A                     else{           printDebug("<LOG_readData> LOG_setLastSend(%s,%ld)\r\n",LOGFILE_DATA,logDataWait.logID + 1);    }
005684 c00c      	RJMP _0x120098
                 _0x120097:
005685 940e a8a6 	CALL SUBOPT_0x170
005687 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
005688 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
005689 940e a524 	CALL SUBOPT_0xDD
00568b 940e a202 	CALL SUBOPT_0x5F
00568d 940e a47c 	CALL SUBOPT_0xC0
00568f 940e a038 	CALL SUBOPT_0x1F
                 _0x120098:
                 ; 0009 030B 
                 ; 0009 030C                     res = LOG_closeFile(&file);
005691 940e a8ad 	CALL SUBOPT_0x171
                 ; 0009 030D                     if(res < 0){    printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_DATA);            }
005693 f462      	BRPL _0x120099
                +
005694 e4ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 2304 ) )
005695 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2304 ) )
005696 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2304 ) )
005697 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2304 ) )
                 	__POINTD1FN _0x120000,2304
                 _0x12011B:
005698 940e b62a 	CALL __PUTPARD1
00569a eae8      	LDI  R30,LOW(_LOGFILE_DATA)
00569b e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
00569c 940e a524 	CALL SUBOPT_0xDD
00569e 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0009 030E                 }
                 _0x120099:
                 ; 0009 030F 
                 ; 0009 0310                 logDataWait.frameID    = 0;
0056a0 940e a1f2 	CALL SUBOPT_0x5E
                 ; 0009 0311                 logDataWait.logID      = 0;
                 ; 0009 0312             }
                 ; 0009 0313             removeDataLogQueue(frameID);
                 _0x120092:
0056a2 2fa0      	MOV  R26,R16
0056a3 940e 76a1 	CALL _removeDataLogQueue
                 ; 0009 0314             ETH_removeWaitQueue(frameID);
0056a5 2fa0      	MOV  R26,R16
0056a6 940e 6360 	CALL _ETH_removeWaitQueue
                 ; 0009 0315             break;
0056a8 c20a      	RJMP _0x12005E
                 ; 0009 0316         case LOGMANIC  :     // -- Log Manipulation COMMAND
                 _0x120090:
0056a9 36ea      	CPI  R30,LOW(0x6A)
0056aa e0a0      	LDI  R26,HIGH(0x6A)
0056ab 07fa      	CPC  R31,R26
0056ac f011      	BREQ PC+3
0056ad 940c 5714 	JMP _0x12009A
                 ; 0009 0317             if( len < (2 + sizeof(struct log_manic_st)) ){
0056af 940e a841 	CALL SUBOPT_0x160
0056b1 9753      	SBIW R26,19
0056b2 f44c      	BRGE _0x12009B
                 ; 0009 0318                 printDebug("<ETH_processPacket> log manipulation (CMD) invalid length (%d)\r\n",len);
                +
0056b3 eeeb     +LDI R30 , LOW ( 2 * _0x120000 + ( 3229 ) )
0056b4 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3229 ) )
0056b5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3229 ) )
0056b6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3229 ) )
                 	__POINTD1FN _0x120000,3229
0056b7 940e a848 	CALL SUBOPT_0x161
                 ; 0009 0319                 ETH_sendNack(frameID,INVALID_LENGTH);
0056b9 940e a851 	CALL SUBOPT_0x162
                 ; 0009 031A                 return;
0056bb c1f7      	RJMP _0x20E0069
                 ; 0009 031B             }
                 ; 0009 031C 
                 ; 0009 031D             payload = (int) malloc (sizeof(struct log_manic_st));
                 _0x12009B:
0056bc e1a1      	LDI  R26,LOW(17)
0056bd 940e a8ba 	CALL SUBOPT_0x172
                 ; 0009 031E             if(payload == NULL){
0056bf f459      	BRNE _0x12009C
                 ; 0009 031F                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct log_manic_st));
0056c0 940e a8bc 	CALL SUBOPT_0x173
                +
0056c2 e1e1     +LDI R30 , LOW ( 0x11 )
0056c3 e0f0     +LDI R31 , HIGH ( 0x11 )
0056c4 e060     +LDI R22 , BYTE3 ( 0x11 )
0056c5 e070     +LDI R23 , BYTE4 ( 0x11 )
                 	__GETD1N 0x11
0056c6 940e a8c3 	CALL SUBOPT_0x174
                 ; 0009 0320                 ETH_sendNack(frameID,NOT_READY);
0056c8 940e a85b 	CALL SUBOPT_0x164
                 ; 0009 0321                 return;
0056ca c1e8      	RJMP _0x20E0069
                 ; 0009 0322             }
                 ; 0009 0323 
                 ; 0009 0324             res = logManipulationCmdParser(ptr2frame+2,len-2,(struct log_manic_st *)payload);
                 _0x12009C:
0056cb 940e a8c7 	CALL SUBOPT_0x175
0056cd d472      	RCALL _logManipulationCmdParser
0056ce 019f      	MOVW R18,R30
                 ; 0009 0325             if(res < 0){
0056cf 2333      	TST  R19
0056d0 f42a      	BRPL _0x12009D
                 ; 0009 0326                 printDebug("<ETH_processPacket> logManipulationCmdParser() failed\r\n");
0056d1 940e a904 	CALL SUBOPT_0x182
                 ; 0009 0327                 free( (void *) payload );
0056d3 940e a86f 	CALL SUBOPT_0x167
                 ; 0009 0328                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0329                 return;
0056d5 c1dd      	RJMP _0x20E0069
                 ; 0009 032A             }
                 ; 0009 032B 
                 ; 0009 032C             printDebug("\r\n--logManipulationCmdParser-- CMD [0x%02X]\r\n",frameID);
                 _0x12009D:
                +
0056d6 e6e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 3350 ) )
0056d7 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3350 ) )
0056d8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3350 ) )
0056d9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3350 ) )
                 	__POINTD1FN _0x120000,3350
0056da 940e a876 	CALL SUBOPT_0x168
                 ; 0009 032D             printDebug("accd            [0x%02X]\r\n",  ((struct log_manic_st *)payload)->accd);
0056dc 940e a8c9 	CALL SUBOPT_0x176
                 ; 0009 032E             printDebug("tStart          [%ld]\r\n",     ((struct log_manic_st *)payload)->tStart);
                +
0056de e9e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 3396 ) )
0056df e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3396 ) )
0056e0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3396 ) )
0056e1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3396 ) )
                 	__POINTD1FN _0x120000,3396
0056e2 940e a90a 	CALL SUBOPT_0x183
                 ; 0009 032F             printDebug("tStop           [%ld]\r\n",     ((struct log_manic_st *)payload)->tStop);
                +
0056e4 eaea     +LDI R30 , LOW ( 2 * _0x120000 + ( 3420 ) )
0056e5 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3420 ) )
0056e6 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3420 ) )
0056e7 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3420 ) )
                 	__POINTD1FN _0x120000,3420
0056e8 940e b62a 	CALL __PUTPARD1
0056ea 01fa      	MOVW R30,R20
                +
0056eb 85a5     +LDD R26 , Z + 13
0056ec 85b6     +LDD R27 , Z + 13 + 1
0056ed 8587     +LDD R24 , Z + 13 + 2
0056ee 8990     +LDD R25 , Z + 13 + 3
                 	__GETD2Z 13
0056ef 940e a915 	CALL SUBOPT_0x184
                 ; 0009 0330 
                 ; 0009 0331             res = setLogManipulateSchema(   ((struct log_manic_st *)payload)->accd,
                 ; 0009 0332                                             ((struct log_manic_st *)payload)->tStart,
                 ; 0009 0333                                             ((struct log_manic_st *)payload)->tStop);
0056f1 01fa      	MOVW R30,R20
0056f2 85a0      	LDD  R26,Z+8
0056f3 93aa      	ST   -Y,R26
0056f4 940e a919 	CALL SUBOPT_0x185
0056f6 940e b62f 	CALL __PUTPARD2
0056f8 01fa      	MOVW R30,R20
                +
0056f9 85a5     +LDD R26 , Z + 13
0056fa 85b6     +LDD R27 , Z + 13 + 1
0056fb 8587     +LDD R24 , Z + 13 + 2
0056fc 8990     +LDD R25 , Z + 13 + 3
                 	__GETD2Z 13
0056fd 940e 6265 	CALL _setLogManipulateSchema
0056ff 019f      	MOVW R18,R30
                 ; 0009 0334             if(res < 0){
005700 2333      	TST  R19
005701 f452      	BRPL _0x12009E
                 ; 0009 0335                 printDebug("<ETH_processPacket> setLogManipulateSchema() failed\r\n");
                +
005702 ece2     +LDI R30 , LOW ( 2 * _0x120000 + ( 3444 ) )
005703 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3444 ) )
005704 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3444 ) )
005705 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3444 ) )
                 	__POINTD1FN _0x120000,3444
005706 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0336                 ETH_sendLogManipulationAck(frameID,((struct log_manic_st *)payload)->accd,ERROR);
005708 940e a893 	CALL SUBOPT_0x16D
00570a e0a1      	LDI  R26,LOW(1)
00570b dac0      	RCALL _ETH_sendLogManipulationAck
                 ; 0009 0337             }
                 ; 0009 0338 
                 ; 0009 0339             ETH_sendLogManipulationAck(frameID,((struct log_manic_st *)payload)->accd,SUCCESS);
                 _0x12009E:
00570c 940e a893 	CALL SUBOPT_0x16D
00570e e0a0      	LDI  R26,LOW(0)
00570f dabc      	RCALL _ETH_sendLogManipulationAck
                 ; 0009 033A 
                 ; 0009 033B             free( (void *) payload );
005710 01da      	MOVW R26,R20
005711 940e 8488 	CALL _free
                 ; 0009 033C 
                 ; 0009 033D             break;
005713 c19f      	RJMP _0x12005E
                 ; 0009 033E         case LOGMANIA  :     // -- Log Manipulation ACKNOWLEDGE
                 _0x12009A:
005714 36eb      	CPI  R30,LOW(0x6B)
005715 e0a0      	LDI  R26,HIGH(0x6B)
005716 07fa      	CPC  R31,R26
005717 f5a9      	BRNE _0x12009F
                 ; 0009 033F             if( len < (2 + sizeof(struct log_mania_st)) ){
005718 940e a841 	CALL SUBOPT_0x160
00571a 971c      	SBIW R26,12
00571b f43c      	BRGE _0x1200A0
                 ; 0009 0340                 printDebug("<ETH_processPacket> log manipulation (ACK) invalid length (%d)\r\n",len);
                +
00571c efe8     +LDI R30 , LOW ( 2 * _0x120000 + ( 3498 ) )
00571d e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3498 ) )
00571e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3498 ) )
00571f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3498 ) )
                 	__POINTD1FN _0x120000,3498
005720 940e a848 	CALL SUBOPT_0x161
                 ; 0009 0341                 return;
005722 c190      	RJMP _0x20E0069
                 ; 0009 0342             }
                 ; 0009 0343 
                 ; 0009 0344             payload = (int) malloc (sizeof(struct log_mania_st));
                 _0x1200A0:
005723 e0aa      	LDI  R26,LOW(10)
005724 940e a8ba 	CALL SUBOPT_0x172
                 ; 0009 0345             if(payload == NULL){
005726 f429      	BRNE _0x1200A1
                 ; 0009 0346                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct log_mania_st));
005727 940e a8bc 	CALL SUBOPT_0x173
005729 940e a91e 	CALL SUBOPT_0x186
                 ; 0009 0347                 return;
00572b c187      	RJMP _0x20E0069
                 ; 0009 0348             }
                 ; 0009 0349 
                 ; 0009 034A             res = logManipulationAckParser(ptr2frame+2,(struct log_mania_st *)payload);
                 _0x1200A1:
00572c 940e a923 	CALL SUBOPT_0x187
00572e d499      	RCALL _logManipulationAckParser
00572f 019f      	MOVW R18,R30
                 ; 0009 034B             if(res < 0){
005730 2333      	TST  R19
005731 f432      	BRPL _0x1200A2
                 ; 0009 034C                 printDebug("<ETH_processPacket> logManipulationCmdParser() failed\r\n");
005732 940e a904 	CALL SUBOPT_0x182
                 ; 0009 034D                 free( (void *) payload );
005734 01da      	MOVW R26,R20
005735 940e 8488 	CALL _free
                 ; 0009 034E                 return;
005737 c17b      	RJMP _0x20E0069
                 ; 0009 034F             }
                 ; 0009 0350 
                 ; 0009 0351             printDebug("\r\n--logManipulationAckParser-- ACK [0x%02X]\r\n",frameID);
                 _0x1200A2:
                +
005738 e3e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 3563 ) )
005739 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3563 ) )
00573a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3563 ) )
00573b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3563 ) )
                 	__POINTD1FN _0x120000,3563
00573c 940e a876 	CALL SUBOPT_0x168
                 ; 0009 0352             printDebug("accd            [0x%02X]\r\n",  ((struct log_mania_st *)payload)->accd);
00573e 940e a8c9 	CALL SUBOPT_0x176
                 ; 0009 0353             printDebug("status          [%ld]\r\n",     ((struct log_mania_st *)payload)->status);
                +
005740 e6e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 3609 ) )
005741 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3609 ) )
005742 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3609 ) )
005743 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3609 ) )
                 	__POINTD1FN _0x120000,3609
005744 940e a8ce 	CALL SUBOPT_0x177
                 ; 0009 0354 
                 ; 0009 0355             free( (void *) payload );
005746 01da      	MOVW R26,R20
005747 940e 8488 	CALL _free
                 ; 0009 0356             ETH_removeWaitQueue(frameID);
005749 2fa0      	MOV  R26,R16
00574a 940e 6360 	CALL _ETH_removeWaitQueue
                 ; 0009 0357             break;
00574c c166      	RJMP _0x12005E
                 ; 0009 0358         case NETMAINC  :     // -- Network Maintenance COMMAND
                 _0x12009F:
00574d 37ea      	CPI  R30,LOW(0x7A)
00574e e0a0      	LDI  R26,HIGH(0x7A)
00574f 07fa      	CPC  R31,R26
005750 f011      	BREQ PC+3
005751 940c 57d8 	JMP _0x1200A3
                 ; 0009 0359             if( len < (2 + sizeof(struct netw_man_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) + 1 ) ){
005753 940e a841 	CALL SUBOPT_0x160
005755 971c      	SBIW R26,12
005756 f44c      	BRGE _0x1200A4
                 ; 0009 035A                 printDebug("<ETH_processPacket> network maintenance invalid length (%d)\r\n",len);
                +
005757 e7ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 3633 ) )
005758 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3633 ) )
005759 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3633 ) )
00575a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3633 ) )
                 	__POINTD1FN _0x120000,3633
00575b 940e a848 	CALL SUBOPT_0x161
                 ; 0009 035B                 ETH_sendNack(frameID,INVALID_LENGTH);
00575d 940e a851 	CALL SUBOPT_0x162
                 ; 0009 035C                 return;
00575f c153      	RJMP _0x20E0069
                 ; 0009 035D             }
                 ; 0009 035E 
                 ; 0009 035F             payload = (int) malloc (sizeof(struct netw_man_st));
                 _0x1200A4:
005760 e0ad      	LDI  R26,LOW(13)
005761 940e a8ba 	CALL SUBOPT_0x172
                 ; 0009 0360             if(payload == NULL){
005763 f439      	BRNE _0x1200A5
                 ; 0009 0361                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct netw_man_st));
005764 940e a8bc 	CALL SUBOPT_0x173
005766 940e a929 	CALL SUBOPT_0x188
                 ; 0009 0362                 ETH_sendNack(frameID,NOT_READY);
005768 940e a85b 	CALL SUBOPT_0x164
                 ; 0009 0363                 return;
00576a c148      	RJMP _0x20E0069
                 ; 0009 0364             }
                 ; 0009 0365 
                 ; 0009 0366             res = networkMaintenanceParser(ptr2frame+2,len-2,(struct netw_man_st *)payload);
                 _0x1200A5:
00576b 940e a8c7 	CALL SUBOPT_0x175
00576d d46b      	RCALL _networkMaintenanceParser
00576e 019f      	MOVW R18,R30
                 ; 0009 0367             if(res < 0){
00576f 2333      	TST  R19
005770 f44a      	BRPL _0x1200A6
                 ; 0009 0368                 printDebug("<ETH_processPacket> networkMaintenanceParser() failed\r\n");
                +
005771 ebed     +LDI R30 , LOW ( 2 * _0x120000 + ( 3695 ) )
005772 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3695 ) )
005773 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3695 ) )
005774 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3695 ) )
                 	__POINTD1FN _0x120000,3695
005775 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0369                 free( (void *) payload );
005777 940e a86f 	CALL SUBOPT_0x167
                 ; 0009 036A                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 036B                 return;
005779 c139      	RJMP _0x20E0069
                 ; 0009 036C             }
                 ; 0009 036D 
                 ; 0009 036E             printDebug("\r\n--networkMaintenanceParser-- CMD [0x%02X]\r\n",frameID);
                 _0x1200A6:
                +
00577a efe5     +LDI R30 , LOW ( 2 * _0x120000 + ( 3751 ) )
00577b e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3751 ) )
00577c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3751 ) )
00577d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3751 ) )
                 	__POINTD1FN _0x120000,3751
00577e 940e a876 	CALL SUBOPT_0x168
                 ; 0009 036F             printDebug("cmd             [0x%02X]\r\n",  ((struct netw_man_st *)payload)->cmd);
005780 940e a92e 	CALL SUBOPT_0x189
                 ; 0009 0370             printDebug("dataLen         [%d]\r\n",      ((struct netw_man_st *)payload)->dataLen);
                +
005782 e3ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 3824 ) )
005783 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3824 ) )
005784 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3824 ) )
005785 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3824 ) )
                 	__POINTD1FN _0x120000,3824
005786 940e a881 	CALL SUBOPT_0x16A
005788 940e a8c3 	CALL SUBOPT_0x174
                 ; 0009 0371             if( ((struct netw_man_st *)payload)->dataLen > 0 ){
00578a 01fa      	MOVW R30,R20
00578b 940e a933 	CALL SUBOPT_0x18A
00578d f4a8      	BRSH _0x1200A7
                 ; 0009 0372                 printDebug("data ---        \r\n");
                +
00578e e5e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 3847 ) )
00578f e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3847 ) )
005790 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3847 ) )
005791 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3847 ) )
                 	__POINTD1FN _0x120000,3847
005792 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0373                 print_payload(((struct netw_man_st *)payload)->data,((struct netw_man_st *)payload)->dataLen);
005794 01fa      	MOVW R30,R20
005795 85a3      	LDD  R26,Z+11
005796 85b4      	LDD  R27,Z+12
005797 93ba      	ST   -Y,R27
005798 93aa      	ST   -Y,R26
005799 85a1      	LDD  R26,Z+9
00579a 85b2      	LDD  R27,Z+10
00579b 940e 7d2a 	CALL _print_payload
                 ; 0009 0374                 printDebug("--------\r\n");
                +
00579d e6e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 3866 ) )
00579e e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3866 ) )
00579f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3866 ) )
0057a0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3866 ) )
                 	__POINTD1FN _0x120000,3866
0057a1 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0375             }
                 ; 0009 0376 
                 ; 0009 0377             switch(((struct netw_man_st *)payload)->cmd){
                 _0x1200A7:
0057a3 940e a8d4 	CALL SUBOPT_0x178
                 ; 0009 0378                 case NETW_TIME_SYNC :   res = setTimeSyncSchema( ((struct netw_man_st *)payload)->data );
0057a5 f521      	BRNE _0x1200AE
0057a6 01fa      	MOVW R30,R20
0057a7 85a3      	LDD  R26,Z+11
0057a8 85b4      	LDD  R27,Z+12
0057a9 940e 627e 	CALL _setTimeSyncSchema
0057ab 019f      	MOVW R18,R30
                 ; 0009 0379                                         if(res < 0){
0057ac 2333      	TST  R19
0057ad f472      	BRPL _0x1200AC
                 ; 0009 037A                                             printDebug("<ETH_processPacket> setTimeSyncSchema() failed\r\n");
                +
0057ae e7e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 3877 ) )
0057af e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3877 ) )
0057b0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3877 ) )
0057b1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3877 ) )
                 	__POINTD1FN _0x120000,3877
0057b2 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 037B                                             ETH_sendNack(frameID,INVALID_PARAMETER);
0057b4 940e a938 	CALL SUBOPT_0x18B
                 ; 0009 037C                                             free_networkMaintenance((struct netw_man_st *)payload);
0057b6 01da      	MOVW R26,R20
0057b7 d4f6      	RCALL _free_networkMaintenance
                 ; 0009 037D                                             free( (void *) payload );
0057b8 01da      	MOVW R26,R20
0057b9 940e 8488 	CALL _free
                 ; 0009 037E                                             return;
0057bb c0f7      	RJMP _0x20E0069
                 ; 0009 037F                                         }
                 ; 0009 0380 
                 ; 0009 0381                                         res = ETH_sendNetworkMaintenanceAck(frameID,((struct netw_man_st *)payload)->cmd,SUCCESS);
                 _0x1200AC:
0057bc 940e a893 	CALL SUBOPT_0x16D
0057be e0a0      	LDI  R26,LOW(0)
0057bf da28      	RCALL _ETH_sendNetworkMaintenanceAck
0057c0 019f      	MOVW R18,R30
                 ; 0009 0382 
                 ; 0009 0383                                         if(res < 0){
0057c1 2333      	TST  R19
0057c2 f432      	BRPL _0x1200AD
                 ; 0009 0384                                             printDebug("WARN : <ETH_processPacket> NETW_TIME_SYNC : ETH_sendNetworkMaintenanceAck() failed\r\n");
                +
0057c3 eae4     +LDI R30 , LOW ( 2 * _0x120000 + ( 3926 ) )
0057c4 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3926 ) )
0057c5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3926 ) )
0057c6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3926 ) )
                 	__POINTD1FN _0x120000,3926
0057c7 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0385                                         }
                 ; 0009 0386 
                 ; 0009 0387                                         break;
                 _0x1200AD:
0057c9 c004      	RJMP _0x1200AA
                 ; 0009 0388                 default :               // -- Shouldn't reach here -- //
                 _0x1200AE:
                 ; 0009 0389                                         printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 038A                                                         ((struct netw_man_st *)payload)->cmd );
0057ca 940e a8ff 	CALL SUBOPT_0x181
                 ; 0009 038B                                         ETH_sendNack(frameID,INVALID_PARAMETER);
0057cc 940e a938 	CALL SUBOPT_0x18B
                 ; 0009 038C                                         break;
                 ; 0009 038D             }
                 _0x1200AA:
                 ; 0009 038E 
                 ; 0009 038F             if( ((struct netw_man_st *)payload)->dataLen > 0 ){
0057ce 01fa      	MOVW R30,R20
0057cf 940e a933 	CALL SUBOPT_0x18A
0057d1 f410      	BRSH _0x1200AF
                 ; 0009 0390                 free_networkMaintenance((struct netw_man_st *)payload);
0057d2 01da      	MOVW R26,R20
0057d3 d4da      	RCALL _free_networkMaintenance
                 ; 0009 0391             }
                 ; 0009 0392 
                 ; 0009 0393             free( (void *) payload );
                 _0x1200AF:
0057d4 01da      	MOVW R26,R20
0057d5 940e 8488 	CALL _free
                 ; 0009 0394 
                 ; 0009 0395             break;
0057d7 c0db      	RJMP _0x12005E
                 ; 0009 0396         case RMDCTRLC  :     // -- Remote Device Control COMMAND
                 _0x1200A3:
0057d8 38ea      	CPI  R30,LOW(0x8A)
0057d9 e0a0      	LDI  R26,HIGH(0x8A)
0057da 07fa      	CPC  R31,R26
0057db f011      	BREQ PC+3
0057dc 940c 5840 	JMP _0x1200B0
                 ; 0009 0397             if( len < (2 + sizeof(struct rem_dev_ctrl_st)) ){
0057de 940e a841 	CALL SUBOPT_0x160
0057e0 971f      	SBIW R26,15
0057e1 f44c      	BRGE _0x1200B1
                 ; 0009 0398                 printDebug("<ETH_processPacket> remote device control invalid length (%d)\r\n",len);
                +
0057e2 efe9     +LDI R30 , LOW ( 2 * _0x120000 + ( 4011 ) )
0057e3 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4011 ) )
0057e4 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4011 ) )
0057e5 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4011 ) )
                 	__POINTD1FN _0x120000,4011
0057e6 940e a848 	CALL SUBOPT_0x161
                 ; 0009 0399                 ETH_sendNack(frameID,INVALID_LENGTH);
0057e8 940e a851 	CALL SUBOPT_0x162
                 ; 0009 039A                 return;
0057ea c0c8      	RJMP _0x20E0069
                 ; 0009 039B             }
                 ; 0009 039C 
                 ; 0009 039D             payload = (int) malloc (sizeof(struct rem_dev_ctrl_st));
                 _0x1200B1:
0057eb e0ad      	LDI  R26,LOW(13)
0057ec 940e a8ba 	CALL SUBOPT_0x172
                 ; 0009 039E             if(payload == NULL){
0057ee f439      	BRNE _0x1200B2
                 ; 0009 039F                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct rem_dev_ctrl_st));
0057ef 940e a8bc 	CALL SUBOPT_0x173
0057f1 940e a929 	CALL SUBOPT_0x188
                 ; 0009 03A0                 ETH_sendNack(frameID,NOT_READY);
0057f3 940e a85b 	CALL SUBOPT_0x164
                 ; 0009 03A1                 return;
0057f5 c0bd      	RJMP _0x20E0069
                 ; 0009 03A2             }
                 ; 0009 03A3 
                 ; 0009 03A4             res = remoteDeviceControlParser(ptr2frame+2,(struct rem_dev_ctrl_st *)payload);
                 _0x1200B2:
0057f6 940e a923 	CALL SUBOPT_0x187
0057f8 d43b      	RCALL _remoteDeviceControlParser
0057f9 019f      	MOVW R18,R30
                 ; 0009 03A5             if(res < 0){
0057fa 2333      	TST  R19
0057fb f44a      	BRPL _0x1200B3
                 ; 0009 03A6                 printDebug("<ETH_processPacket> remoteDeviceControlParser() failed\r\n");
                +
0057fc e3e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 4075 ) )
0057fd e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4075 ) )
0057fe e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4075 ) )
0057ff e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4075 ) )
                 	__POINTD1FN _0x120000,4075
005800 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 03A7                 free( (void *) payload );
005802 940e a86f 	CALL SUBOPT_0x167
                 ; 0009 03A8                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 03A9                 return;
005804 c0ae      	RJMP _0x20E0069
                 ; 0009 03AA             }
                 ; 0009 03AB 
                 ; 0009 03AC             printDebug("\r\n--remoteDeviceControlParser-- CMD [0x%02X]\r\n",frameID);
                 _0x1200B3:
                +
005805 e7e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 4132 ) )
005806 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4132 ) )
005807 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4132 ) )
005808 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4132 ) )
                 	__POINTD1FN _0x120000,4132
005809 940e a876 	CALL SUBOPT_0x168
                 ; 0009 03AD             printDebug("cmd             [0x%02X]\r\n",  ((struct rem_dev_ctrl_st *)payload)->cmd);
00580b 940e a92e 	CALL SUBOPT_0x189
                 ; 0009 03AE             printDebug("value           [%ld]\r\n",      ((struct rem_dev_ctrl_st *)payload)->value);
                +
00580d eae1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4179 ) )
00580e e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4179 ) )
00580f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4179 ) )
005810 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4179 ) )
                 	__POINTD1FN _0x120000,4179
005811 940e a90a 	CALL SUBOPT_0x183
                 ; 0009 03AF 
                 ; 0009 03B0             switch(((struct rem_dev_ctrl_st *)payload)->cmd){
005813 940e a8d4 	CALL SUBOPT_0x178
                 ; 0009 03B1                 case DEVCTRL_MUTE_ALARM :   res = setMuteAlarm( ((struct rem_dev_ctrl_st *)payload)->value );
005815 f511      	BRNE _0x1200BA
005816 01fa      	MOVW R30,R20
005817 940e a919 	CALL SUBOPT_0x185
005819 940e 62b0 	CALL _setMuteAlarm
00581b 019f      	MOVW R18,R30
                 ; 0009 03B2                                             if(res < 0){
00581c 2333      	TST  R19
00581d f462      	BRPL _0x1200B8
                 ; 0009 03B3                                                 printDebug("<ETH_processPacket> setTimeSyncSchema(%ld) failed\r\n",((struct rem_dev_ctrl_st *)payload)->value);
                +
00581e ebe9     +LDI R30 , LOW ( 2 * _0x120000 + ( 4203 ) )
00581f e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4203 ) )
005820 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4203 ) )
005821 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4203 ) )
                 	__POINTD1FN _0x120000,4203
005822 940e a90a 	CALL SUBOPT_0x183
                 ; 0009 03B4                                                 ETH_sendNack(frameID,INVALID_PARAMETER);
005824 940e a938 	CALL SUBOPT_0x18B
                 ; 0009 03B5                                                 free( (void *) payload );
005826 01da      	MOVW R26,R20
005827 940e 8488 	CALL _free
                 ; 0009 03B6                                                 return;
005829 c089      	RJMP _0x20E0069
                 ; 0009 03B7                                             }
                 ; 0009 03B8 
                 ; 0009 03B9                                             res = ETH_remoteDeviceControlAck(frameID,((struct rem_dev_ctrl_st *)payload)->cmd,SUCCESS);
                 _0x1200B8:
00582a 940e a893 	CALL SUBOPT_0x16D
00582c e0a0      	LDI  R26,LOW(0)
00582d d9d6      	RCALL _ETH_remoteDeviceControlAck
00582e 019f      	MOVW R18,R30
                 ; 0009 03BA 
                 ; 0009 03BB                                             if(res < 0){
00582f 2333      	TST  R19
005830 f432      	BRPL _0x1200B9
                 ; 0009 03BC                                                 printDebug("WARN : <ETH_processPacket> DEVCTRL_MUTE_ALARM : ETH_remoteDeviceControlAck() failed\r\n");
                +
005831 eeed     +LDI R30 , LOW ( 2 * _0x120000 + ( 4255 ) )
005832 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4255 ) )
005833 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4255 ) )
005834 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4255 ) )
                 	__POINTD1FN _0x120000,4255
005835 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 03BD                                             }
                 ; 0009 03BE                                             break;
                 _0x1200B9:
005837 c004      	RJMP _0x1200B6
                 ; 0009 03BF                 default :                   // -- Shouldn't reach here -- //
                 _0x1200BA:
                 ; 0009 03C0                                             printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 03C1                                                             ((struct netw_man_st *)payload)->cmd );
005838 940e a8ff 	CALL SUBOPT_0x181
                 ; 0009 03C2                                             ETH_sendNack(frameID,INVALID_PARAMETER);
00583a 940e a938 	CALL SUBOPT_0x18B
                 ; 0009 03C3                                             break;
                 ; 0009 03C4             }
                 _0x1200B6:
                 ; 0009 03C5 
                 ; 0009 03C6             free( (void *) payload );
00583c 01da      	MOVW R26,R20
00583d 940e 8488 	CALL _free
                 ; 0009 03C7             break;
00583f c073      	RJMP _0x12005E
                 ; 0009 03C8         case CLRLISTA  :     // -- Clear List ACKNOWLEDGE
                 _0x1200B0:
005840 39eb      	CPI  R30,LOW(0x9B)
005841 e0a0      	LDI  R26,HIGH(0x9B)
005842 07fa      	CPC  R31,R26
005843 f011      	BREQ PC+3
005844 940c 589f 	JMP _0x1200BB
                 ; 0009 03C9             if( len < (2 + sizeof(struct clr_lst_st)) ){
005846 940e a841 	CALL SUBOPT_0x160
005848 971c      	SBIW R26,12
005849 f43c      	BRGE _0x1200BC
                 ; 0009 03CA                 printDebug("<ETH_processPacket> clear list ACK invalid length (%d)\r\n",len);
                +
00584a e4e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 4341 ) )
00584b e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4341 ) )
00584c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4341 ) )
00584d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4341 ) )
                 	__POINTD1FN _0x120000,4341
00584e 940e a848 	CALL SUBOPT_0x161
                 ; 0009 03CB                 return;
005850 c062      	RJMP _0x20E0069
                 ; 0009 03CC             }
                 ; 0009 03CD 
                 ; 0009 03CE             payload = (int) malloc (sizeof(struct clr_lst_st));
                 _0x1200BC:
005851 e0aa      	LDI  R26,LOW(10)
005852 940e a8ba 	CALL SUBOPT_0x172
                 ; 0009 03CF             if(payload == NULL){
005854 f429      	BRNE _0x1200BD
                 ; 0009 03D0                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct clr_lst_st));
005855 940e a8bc 	CALL SUBOPT_0x173
005857 940e a91e 	CALL SUBOPT_0x186
                 ; 0009 03D1                 return;
005859 c059      	RJMP _0x20E0069
                 ; 0009 03D2             }
                 ; 0009 03D3 
                 ; 0009 03D4             res = clearListParser(ptr2frame+2,(struct clr_lst_st *)payload);
                 _0x1200BD:
00585a 940e a923 	CALL SUBOPT_0x187
00585c d420      	RCALL _clearListParser
00585d 019f      	MOVW R18,R30
                 ; 0009 03D5             if(res < 0){
00585e 2333      	TST  R19
00585f f452      	BRPL _0x1200BE
                 ; 0009 03D6                 printDebug("<ETH_processPacket> clearListParser() failed\r\n");
                +
005860 e7ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 4398 ) )
005861 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4398 ) )
005862 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4398 ) )
005863 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4398 ) )
                 	__POINTD1FN _0x120000,4398
005864 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 03D7                 free( (void *) payload );
005866 01da      	MOVW R26,R20
005867 940e 8488 	CALL _free
                 ; 0009 03D8                 return;
005869 c049      	RJMP _0x20E0069
                 ; 0009 03D9             }
                 ; 0009 03DA 
                 ; 0009 03DB             printDebug("\r\n--clearListParser-- ACK [0x%02X]\r\n",frameID);
                 _0x1200BE:
                +
00586a eaeb     +LDI R30 , LOW ( 2 * _0x120000 + ( 4445 ) )
00586b e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4445 ) )
00586c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4445 ) )
00586d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4445 ) )
                 	__POINTD1FN _0x120000,4445
00586e 940e a876 	CALL SUBOPT_0x168
                 ; 0009 03DC             printDebug("cmd             [0x%02X]\r\n",  ((struct clr_lst_st *)payload)->cmd);
005870 940e a92e 	CALL SUBOPT_0x189
                 ; 0009 03DD             printDebug("status          [0x%02X]\r\n",  ((struct clr_lst_st *)payload)->status);
                +
005872 ede0     +LDI R30 , LOW ( 2 * _0x120000 + ( 4482 ) )
005873 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4482 ) )
005874 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4482 ) )
005875 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4482 ) )
                 	__POINTD1FN _0x120000,4482
005876 940e a8ce 	CALL SUBOPT_0x177
                 ; 0009 03DE 
                 ; 0009 03DF             switch(((struct clr_lst_st *)payload)->cmd){
005878 01fa      	MOVW R30,R20
005879 85e0      	LDD  R30,Z+8
00587a 940e a93c 	CALL SUBOPT_0x18C
                 ; 0009 03E0                 case CLR_DUPLIST :  if(((struct clr_lst_st *)payload)->status == 0x00)
00587c f4c1      	BRNE _0x1200C5
00587d 01fa      	MOVW R30,R20
00587e 85e1      	LDD  R30,Z+9
00587f 30e0      	CPI  R30,0
005880 f469      	BRNE _0x1200C3
                 ; 0009 03E1                                     {
                 ; 0009 03E2                                         printDebug("<ETH_processPacket> clear duplicate request (ACK) SUCCESS!!\r\n");
                +
005881 eeeb     +LDI R30 , LOW ( 2 * _0x120000 + ( 4509 ) )
005882 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4509 ) )
005883 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4509 ) )
005884 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4509 ) )
                 	__POINTD1FN _0x120000,4509
005885 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 03E3                                         duplicateListClear = 1;
005887 e0e1      	LDI  R30,LOW(1)
005888 93e0 1425 	STS  _duplicateListClear,R30
                 ; 0009 03E4                                         free( (void *) payload );
00588a 01da      	MOVW R26,R20
00588b 940e 8488 	CALL _free
                 ; 0009 03E5                                         return;
00588d c025      	RJMP _0x20E0069
                 ; 0009 03E6                                     }
                 ; 0009 03E7                                     else
                 _0x1200C3:
                 ; 0009 03E8                                     {
                 ; 0009 03E9                                         printDebug("<ETH_processPacket> clear duplicate request (ACK) FAILED[0x%02X]!!\r\n",
                 ; 0009 03EA                                                     ((struct clr_lst_st *)payload)->status);
                +
00588e e2e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 4571 ) )
00588f e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4571 ) )
005890 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4571 ) )
005891 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4571 ) )
                 	__POINTD1FN _0x120000,4571
005892 940e a8ce 	CALL SUBOPT_0x177
                 ; 0009 03EB                                     }
                 ; 0009 03EC                                     break;
005894 c006      	RJMP _0x1200C1
                 ; 0009 03ED                 default         :   // -- Shouldn't reach here -- //
                 _0x1200C5:
                 ; 0009 03EE                                     printDebug("<ETH_processPacket> unknown type for clr_lst_st->cmd [0x%02X]\r\n",
                 ; 0009 03EF                                                     ((struct clr_lst_st *)payload)->cmd );
                +
005895 e6ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 4640 ) )
005896 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4640 ) )
005897 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4640 ) )
005898 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4640 ) )
                 	__POINTD1FN _0x120000,4640
005899 940e a87b 	CALL SUBOPT_0x169
                 ; 0009 03F0                                     break;
                 ; 0009 03F1             }
                 _0x1200C1:
                 ; 0009 03F2 
                 ; 0009 03F3             free( (void *) payload );
00589b 01da      	MOVW R26,R20
00589c 940e 8488 	CALL _free
                 ; 0009 03F4             break;
00589e c014      	RJMP _0x12005E
                 ; 0009 03F5         case FMWUPLDC  :     // -- Firmware Upload COMMAND (Reserved)
                 _0x1200BB:
00589f 3fea      	CPI  R30,LOW(0xFA)
0058a0 e0a0      	LDI  R26,HIGH(0xFA)
0058a1 07fa      	CPC  R31,R26
0058a2 f439      	BRNE _0x1200C7
                 ; 0009 03F6             printDebug("<ETH_processPacket> firmware upload hasn't supported yet\r\n");
                +
0058a3 eaee     +LDI R30 , LOW ( 2 * _0x120000 + ( 4704 ) )
0058a4 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4704 ) )
0058a5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4704 ) )
0058a6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4704 ) )
                 	__POINTD1FN _0x120000,4704
0058a7 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 03F7             break;
0058a9 c009      	RJMP _0x12005E
                 ; 0009 03F8         default:
                 _0x1200C7:
                 ; 0009 03F9             printDebug("\r\n<ETH_processPacket> invalid frame type ( %02X )!!\r\n",frameType);
                +
0058aa eee9     +LDI R30 , LOW ( 2 * _0x120000 + ( 4763 ) )
0058ab e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4763 ) )
0058ac e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4763 ) )
0058ad e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4763 ) )
                 	__POINTD1FN _0x120000,4763
0058ae 940e b62a 	CALL __PUTPARD1
0058b0 2fe1      	MOV  R30,R17
0058b1 940e a073 	CALL SUBOPT_0x27
                 ; 0009 03FA             break;
                 ; 0009 03FB     }
                 _0x12005E:
                 ; 0009 03FC 
                 ; 0009 03FD     return;
                 _0x20E0069:
0058b3 940e b6a1 	CALL __LOADLOCR6
0058b5 96e0      	ADIW R28,48
0058b6 5fde      	SUBI R29,-2
0058b7 9508      	RET
                 ; 0009 03FE }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/************* Low level Communication Management *************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void ETH_receive()
                 ; 0009 0406 {
                 _ETH_receive:
                 ; 0009 0407     unsigned char   *ptr;
                 ; 0009 0408     int             size=0;
                 ; 0009 0409 
                 ; 0009 040A     // -- for packet validation -- //
                 ; 0009 040B     int     offset=0;
                 ; 0009 040C     int     len = 0x0000;
                 ; 0009 040D     int     total=0;
                 ; 0009 040E 
                 ; 0009 040F     // --------------- Process Xbee Data ---------------- // UART0
                 ; 0009 0410     do{
0058b8 940e a941 	CALL SUBOPT_0x18D
0058ba 940e b69a 	CALL __SAVELOCR6
                 ;	*ptr -> R16,R17
                 ;	size -> R18,R19
                 ;	offset -> R20,R21
                 ;	len -> Y+8
                 ;	total -> Y+6
0058bc 940e 9f57 	CALL SUBOPT_0x0
                 _0x1200C9:
                 ; 0009 0411         ptr = (char *) malloc (RX_BUFFER_SIZE0);
0058be efa4      	LDI  R26,LOW(500)
0058bf e0b1      	LDI  R27,HIGH(500)
0058c0 940e 846d 	CALL _malloc
0058c2 018f      	MOVW R16,R30
                 ; 0009 0412         if(ptr == NULL){
0058c3 2e00      	MOV  R0,R16
0058c4 2a01      	OR   R0,R17
0058c5 f431      	BRNE _0x1200CB
                 ; 0009 0413             printDebug("<ETH_receive> malloc..FAILED..\r\n");
                +
0058c6 e1ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 4817 ) )
0058c7 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4817 ) )
0058c8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4817 ) )
0058c9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4817 ) )
                 	__POINTD1FN _0x120000,4817
0058ca 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0414         }
                 ; 0009 0415     }while(ptr == NULL);
                 _0x1200CB:
0058cc 2e00      	MOV  R0,R16
0058cd 2a01      	OR   R0,R17
0058ce f379      	BREQ _0x1200C9
                 ; 0009 0416     size = read_uart0(ptr,RX_BUFFER_SIZE0-1,10);
0058cf 931a      	ST   -Y,R17
0058d0 930a      	ST   -Y,R16
0058d1 efe3      	LDI  R30,LOW(499)
0058d2 e0f1      	LDI  R31,HIGH(499)
0058d3 940e a948 	CALL SUBOPT_0x18E
0058d5 940e 3cbd 	CALL _read_uart0
0058d7 019f      	MOVW R18,R30
                 ; 0009 0417 
                 ; 0009 0418     if(size <= 0){
0058d8 2400      	CLR  R0
0058d9 1602      	CP   R0,R18
0058da 0603      	CPC  R0,R19
0058db f034      	BRLT _0x1200CC
                 ; 0009 0419         free( ptr );
0058dc 01d8      	MOVW R26,R16
0058dd 940e 8488 	CALL _free
                 ; 0009 041A         return;
0058df 940e b6a1 	CALL __LOADLOCR6
0058e1 c350      	RJMP _0x20E0067
                 ; 0009 041B     }
                 ; 0009 041C 
                 ; 0009 041D     printDebug("\r\n\r\n+++++++ Raw buffer +++++++\r\n");
                 _0x1200CC:
                +
0058e2 e4e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 4850 ) )
0058e3 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4850 ) )
0058e4 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4850 ) )
0058e5 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4850 ) )
                 	__POINTD1FN _0x120000,4850
0058e6 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 041E     print_payload(ptr,size);
0058e8 931a      	ST   -Y,R17
0058e9 930a      	ST   -Y,R16
0058ea 01d9      	MOVW R26,R18
0058eb 940e 7d2a 	CALL _print_payload
                 ; 0009 041F 
                 ; 0009 0420     do{
                 _0x1200CE:
                 ; 0009 0421         //printDebug("<ETH_receive> ptr");
                 ; 0009 0422         offset += strcspn(&ptr[offset],"\x7e");                                   // seach for header
0058ed 01fa      	MOVW R30,R20
0058ee 940e a94d 	CALL SUBOPT_0x18F
                +
0058f0 e6ac     +LDI R26 , LOW ( _0x1200D0 + ( 0 ) )
0058f1 e0bd     +LDI R27 , HIGH ( _0x1200D0 + ( 0 ) )
                 	__POINTW2MN _0x1200D0,0
0058f2 940e 84f4 	CALL _strcspn
                +
0058f4 0f4e     +ADD R20 , R30
0058f5 1f5f     +ADC R21 , R31
                 	__ADDWRR 20,21,30,31
                 ; 0009 0423         if(offset == size){
                +
0058f6 1724     +CP R18 , R20
0058f7 0735     +CPC R19 , R21
                 	__CPWRR 18,19,20,21
0058f8 f409      	BRNE _0x1200D1
                 ; 0009 0424 //            printDebug("<ETH_receive> invalid packet 0x7E not found\r\n");    // not found Start Delimiter 0x7E
                 ; 0009 0425             break;
0058f9 c056      	RJMP _0x1200CF
                 ; 0009 0426         }
                 ; 0009 0427         len = (ptr[offset+1] & 0xffff) << 8;                                    // check packet length (MSB)
                 _0x1200D1:
0058fa 01fa      	MOVW R30,R20
0058fb 9631      	ADIW R30,1
0058fc 0fe0      	ADD  R30,R16
0058fd 1ff1      	ADC  R31,R17
0058fe 81e0      	LD   R30,Z
0058ff e0f0      	LDI  R31,0
005900 2ffe      	MOV  R31,R30
005901 e0e0      	LDI  R30,0
005902 87e8      	STD  Y+8,R30
005903 87f9      	STD  Y+8+1,R31
                 ; 0009 0428         len |= ptr[offset+2];                                                   // check packet length (LSB)
005904 01fa      	MOVW R30,R20
005905 940e a65e 	CALL SUBOPT_0x112
005907 85a8      	LDD  R26,Y+8
005908 85b9      	LDD  R27,Y+8+1
005909 940e a952 	CALL SUBOPT_0x190
00590b 940e a8e9 	CALL SUBOPT_0x17C
                 ; 0009 0429 //        printDebug("len = [0x%04X](%d)\r\n",len,len);
                 ; 0009 042A 
                 ; 0009 042B         total += len;                                                           // update total analyse
00590d 940e a956 	CALL SUBOPT_0x191
                 ; 0009 042C         if (total > size){                                                      //check length validation
00590f 81ae      	LDD  R26,Y+6
005910 81bf      	LDD  R27,Y+6+1
005911 172a      	CP   R18,R26
005912 073b      	CPC  R19,R27
005913 f45c      	BRGE _0x1200D2
                 ; 0009 042D             offset++;
                +
005914 5f4f     +SUBI R20 , LOW ( - 1 )
005915 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0009 042E             total = offset;                                                     // roll back total analyse
                +
005916 834e     +STD Y + 6 , R20
005917 835f     +STD Y + 6 + 1 , R21
                 	__PUTWSR 20,21,6
                 ; 0009 042F             printDebug("\r\ninvalid length!!\r\n");
                +
005918 e6e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 4885 ) )
005919 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4885 ) )
00591a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4885 ) )
00591b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4885 ) )
                 	__POINTD1FN _0x120000,4885
00591c 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0430             continue;
00591e c02b      	RJMP _0x1200CD
                 ; 0009 0431         }
                 ; 0009 0432 
                 ; 0009 0433 //        printDebug("\r\n****** packet checksum ******\r\n");
                 ; 0009 0434 //        print_payload(&ptr[offset+3],len);
                 ; 0009 0435         if(ETH_checksum(&ptr[offset+3],len) != ptr[offset+3+len]){              // checksum error detection
                 _0x1200D2:
00591f 01fa      	MOVW R30,R20
005920 9633      	ADIW R30,3
005921 940e a94d 	CALL SUBOPT_0x18F
005923 85aa      	LDD  R26,Y+10
005924 85bb      	LDD  R27,Y+10+1
005925 d0d8      	RCALL _ETH_checksum
005926 010f      	MOVW R0,R30
005927 01fa      	MOVW R30,R20
005928 9633      	ADIW R30,3
005929 85a8      	LDD  R26,Y+8
00592a 85b9      	LDD  R27,Y+8+1
00592b 0fea      	ADD  R30,R26
00592c 1ffb      	ADC  R31,R27
00592d 0fe0      	ADD  R30,R16
00592e 1ff1      	ADC  R31,R17
00592f 81e0      	LD   R30,Z
005930 940e a95d 	CALL SUBOPT_0x192
005932 f059      	BREQ _0x1200D3
                 ; 0009 0436             printDebug("<ETH_receive> checksum error\r\n");
                +
005933 e7e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 4906 ) )
005934 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4906 ) )
005935 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4906 ) )
005936 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4906 ) )
                 	__POINTD1FN _0x120000,4906
005937 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0437             offset++;
                +
005939 5f4f     +SUBI R20 , LOW ( - 1 )
00593a 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0009 0438             total = offset;                                                     // roll back total analyse
                +
00593b 834e     +STD Y + 6 , R20
00593c 835f     +STD Y + 6 + 1 , R21
                 	__PUTWSR 20,21,6
                 ; 0009 0439         }
                 ; 0009 043A         else{                                                                   // got a valid packet
00593d c00c      	RJMP _0x1200D4
                 _0x1200D3:
                 ; 0009 043B //            printDebug("\r\n****** checksum correct ******\r\n");
                 ; 0009 043C //            print_payload(&ptr[offset+3],len);
                 ; 0009 043D //            printDebug("\r\n******************\r\n");
                 ; 0009 043E 
                 ; 0009 043F             ETH_processPacket(&ptr[offset+3],len);                              // analyse API-specific Structure
00593e 01fa      	MOVW R30,R20
00593f 9633      	ADIW R30,3
005940 940e a94d 	CALL SUBOPT_0x18F
005942 85aa      	LDD  R26,Y+10
005943 85bb      	LDD  R27,Y+10+1
005944 da7f      	RCALL _ETH_processPacket
                 ; 0009 0440             offset += 3+len;
005945 85e8      	LDD  R30,Y+8
005946 85f9      	LDD  R31,Y+8+1
005947 9633      	ADIW R30,3
                +
005948 0f4e     +ADD R20 , R30
005949 1f5f     +ADC R21 , R31
                 	__ADDWRR 20,21,30,31
                 ; 0009 0441         }
                 _0x1200D4:
                 ; 0009 0442 	}while( total < size);						                                // loop if still unread byte
                 _0x1200CD:
00594a 81ae      	LDD  R26,Y+6
00594b 81bf      	LDD  R27,Y+6+1
00594c 17a2      	CP   R26,R18
00594d 07b3      	CPC  R27,R19
00594e f40c      	BRGE _0x1200CF
00594f cf9d      	RJMP _0x1200CE
                 _0x1200CF:
                 ; 0009 0443 
                 ; 0009 0444 
                 ; 0009 0445 
                 ; 0009 0446     free( ptr );
005950 01d8      	MOVW R26,R16
005951 940e 8488 	CALL _free
                 ; 0009 0447 }
005953 940e b6a1 	CALL __LOADLOCR6
005955 c2dc      	RJMP _0x20E0067
                 
                 	.DSEG
                 _0x1200D0:
000d6c           	.BYTE 0x2
                 ;/*============================================================*/
                 ;int ETH_send(char *frameData, int frameLen, char frameID, int timeout)
                 ; 0009 044A {
                 
                 	.CSEG
                 _ETH_send:
                 ; 0009 044B     int     res;
                 ; 0009 044C     char    *sendPacket;
                 ; 0009 044D     int     packetLen   = 0;
                 ; 0009 044E 
                 ; 0009 044F     frameLen++;     // -- + frameID (1 Byte) -- //
005956 940e a962 	CALL SUBOPT_0x193
                 ;	*frameData -> Y+11
                 ;	frameLen -> Y+9
                 ;	frameID -> Y+8
                 ;	timeout -> Y+6
                 ;	res -> R16,R17
                 ;	*sendPacket -> R18,R19
                 ;	packetLen -> R20,R21
                +
005958 e040     +LDI R20 , LOW ( 0 )
005959 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00595a 85e9      	LDD  R30,Y+9
00595b 85fa      	LDD  R31,Y+9+1
00595c 9631      	ADIW R30,1
00595d 87e9      	STD  Y+9,R30
00595e 87fa      	STD  Y+9+1,R31
                 ; 0009 0450 
                 ; 0009 0451     packetLen   = frameLen + 2 + 1 + 1;       // length(2 bytes) + frameID(1 byte) + header(1 byte) + sum(1 byte)
00595f 9634      	ADIW R30,4
005960 01af      	MOVW R20,R30
                 ; 0009 0452 
                 ; 0009 0453     if(packetLen > MAX_MTU){
                +
005961 3f45     +CPI R20 , LOW ( 501 )
005962 e0e1     +LDI R30 , HIGH ( 501 )
005963 075e     +CPC R21 , R30
                 	__CPWRN 20,21,501
005964 f04c      	BRLT _0x1200D5
                 ; 0009 0454         printDebug("<ETH_send> WARNING : Packet is too long(%d bytes)\r\n",packetLen);
                +
005965 e9e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 4937 ) )
005966 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4937 ) )
005967 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4937 ) )
005968 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4937 ) )
                 	__POINTD1FN _0x120000,4937
005969 940e a0f6 	CALL SUBOPT_0x39
                 ; 0009 0455         return -1;
00596b efef      	LDI  R30,LOW(65535)
00596c efff      	LDI  R31,HIGH(65535)
00596d c08c      	RJMP _0x20E0068
                 ; 0009 0456     }
                 ; 0009 0457 
                 ; 0009 0458     sendPacket  = (char *) malloc ( packetLen );
                 _0x1200D5:
00596e 01da      	MOVW R26,R20
00596f 940e 846d 	CALL _malloc
005971 019f      	MOVW R18,R30
                 ; 0009 0459     if(sendPacket == NULL){
005972 2e02      	MOV  R0,R18
005973 2a03      	OR   R0,R19
005974 f449      	BRNE _0x1200D6
                 ; 0009 045A         printDebug("<ETH_send> WARNING : ETH_send malloc failed (%d)\r\n",packetLen);
                +
005975 eceb     +LDI R30 , LOW ( 2 * _0x120000 + ( 4989 ) )
005976 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4989 ) )
005977 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4989 ) )
005978 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4989 ) )
                 	__POINTD1FN _0x120000,4989
005979 940e a0f6 	CALL SUBOPT_0x39
                 ; 0009 045B         return -1;
00597b efef      	LDI  R30,LOW(65535)
00597c efff      	LDI  R31,HIGH(65535)
00597d c07c      	RJMP _0x20E0068
                 ; 0009 045C     }
                 ; 0009 045D 
                 ; 0009 045E     memset(sendPacket,'\0',packetLen);
                 _0x1200D6:
00597e 933a      	ST   -Y,R19
00597f 932a      	ST   -Y,R18
005980 e0e0      	LDI  R30,LOW(0)
005981 93ea      	ST   -Y,R30
005982 01da      	MOVW R26,R20
005983 940e 84d4 	CALL _memset
                 ; 0009 045F 
                 ; 0009 0460     sendPacket[0] = 0x7E;
005985 01d9      	MOVW R26,R18
005986 e7ee      	LDI  R30,LOW(126)
005987 93ec      	ST   X,R30
                 ; 0009 0461     sendPacket[1] = (frameLen >> 8) & 0xFF;
005988 85e9      	LDD  R30,Y+9
005989 85fa      	LDD  R31,Y+9+1
00598a 940e b50d 	CALL __ASRW8
                +
00598c 01d9     +MOVW R26 , R18
00598d 9611     +ADIW R26 , 1
00598e 93ec     +ST X , R30
                 	__PUTB1RNS 18,1
                 ; 0009 0462     sendPacket[2] = frameLen & 0xFF;
00598f 85e9      	LDD  R30,Y+9
                +
005990 01d9     +MOVW R26 , R18
005991 9612     +ADIW R26 , 2
005992 93ec     +ST X , R30
                 	__PUTB1RNS 18,2
                 ; 0009 0463 
                 ; 0009 0464     if(frameID == 0x00){
005993 85e8      	LDD  R30,Y+8
005994 30e0      	CPI  R30,0
005995 f419      	BRNE _0x1200D7
                 ; 0009 0465         frameID         = ETH_generateId();
005996 940e 63e4 	CALL _ETH_generateId
005998 87e8      	STD  Y+8,R30
                 ; 0009 0466         //printDebug("<ETH_send> ETH_generateId() return 0x%02X\r\n",frameID);
                 ; 0009 0467     }
                 ; 0009 0468 
                 ; 0009 0469     sendPacket[3] = frameID;
                 _0x1200D7:
005999 85e8      	LDD  R30,Y+8
                +
00599a 01d9     +MOVW R26 , R18
00599b 9613     +ADIW R26 , 3
00599c 93ec     +ST X , R30
                 	__PUTB1RNS 18,3
                 ; 0009 046A 
                 ; 0009 046B     memcpy(&sendPacket[4],frameData,frameLen);
00599d 01f9      	MOVW R30,R18
00599e 9634      	ADIW R30,4
00599f 93fa      	ST   -Y,R31
0059a0 93ea      	ST   -Y,R30
0059a1 85ed      	LDD  R30,Y+13
0059a2 85fe      	LDD  R31,Y+13+1
0059a3 93fa      	ST   -Y,R31
0059a4 93ea      	ST   -Y,R30
0059a5 85ad      	LDD  R26,Y+13
0059a6 85be      	LDD  R27,Y+13+1
0059a7 940e 848f 	CALL _memcpy
                 ; 0009 046C     sendPacket[packetLen-1] = ETH_checksum(&sendPacket[3],frameLen);
0059a9 01fa      	MOVW R30,R20
0059aa 9731      	SBIW R30,1
0059ab 0fe2      	ADD  R30,R18
0059ac 1ff3      	ADC  R31,R19
0059ad 93ff      	PUSH R31
0059ae 93ef      	PUSH R30
0059af 01f9      	MOVW R30,R18
0059b0 9633      	ADIW R30,3
0059b1 93fa      	ST   -Y,R31
0059b2 93ea      	ST   -Y,R30
0059b3 85ab      	LDD  R26,Y+11
0059b4 85bc      	LDD  R27,Y+11+1
0059b5 d048      	RCALL _ETH_checksum
0059b6 91af      	POP  R26
0059b7 91bf      	POP  R27
0059b8 93ec      	ST   X,R30
                 ; 0009 046D 
                 ; 0009 046E     //printDebug("<ETH_send> checksum = 0x%02X\r\n",sendPacket[packetLen-1]);
                 ; 0009 046F 
                 ; 0009 0470     if((timeout > 0) && (frameID != 0xFF)){
0059b9 81ae      	LDD  R26,Y+6
0059ba 81bf      	LDD  R27,Y+6+1
0059bb 940e b682 	CALL __CPW02
0059bd f41c      	BRGE _0x1200D9
0059be 85a8      	LDD  R26,Y+8
0059bf 3faf      	CPI  R26,LOW(0xFF)
0059c0 f409      	BRNE _0x1200DA
                 _0x1200D9:
0059c1 c01c      	RJMP _0x1200D8
                 _0x1200DA:
                 ; 0009 0471         res = ETH_addWaitQueue(frameID, &sendPacket[0], packetLen, timeout);
0059c2 85e8      	LDD  R30,Y+8
0059c3 93ea      	ST   -Y,R30
0059c4 933a      	ST   -Y,R19
0059c5 932a      	ST   -Y,R18
0059c6 935a      	ST   -Y,R21
0059c7 934a      	ST   -Y,R20
0059c8 85ab      	LDD  R26,Y+11
0059c9 85bc      	LDD  R27,Y+11+1
0059ca 940e 62f6 	CALL _ETH_addWaitQueue
0059cc 018f      	MOVW R16,R30
                 ; 0009 0472         if(res < 0){
0059cd 2311      	TST  R17
0059ce f47a      	BRPL _0x1200DB
                 ; 0009 0473             printDebug("<ETH_send> ETH_addWaitQueue() failed [id:0x%02X]\r\n",frameID);
                +
0059cf efee     +LDI R30 , LOW ( 2 * _0x120000 + ( 5040 ) )
0059d0 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5040 ) )
0059d1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5040 ) )
0059d2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5040 ) )
                 	__POINTD1FN _0x120000,5040
0059d3 940e b62a 	CALL __PUTPARD1
0059d5 85ec      	LDD  R30,Y+12
0059d6 940e a073 	CALL SUBOPT_0x27
                 ; 0009 0474             free(sendPacket);
0059d8 01d9      	MOVW R26,R18
0059d9 940e 8488 	CALL _free
                 ; 0009 0475             return -1;
0059db efef      	LDI  R30,LOW(65535)
0059dc efff      	LDI  R31,HIGH(65535)
0059dd c01c      	RJMP _0x20E0068
                 ; 0009 0476         }
                 ; 0009 0477     }
                 _0x1200DB:
                 ; 0009 0478 
                 ; 0009 0479 
                 ; 0009 047A //    if((commLostTimer == 0xFFFFFFFF) || (commLostTimer == 0)){
                 ; 0009 047B //        TIMER_setTimer(&commLostTimer,30);
                 ; 0009 047C //    }
                 ; 0009 047D 
                 ; 0009 047E     printDebug("\r\n--Transmitting [0x%02X]\r\n",frameID);
                 _0x1200D8:
                +
0059de e3e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 5091 ) )
0059df e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5091 ) )
0059e0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5091 ) )
0059e1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5091 ) )
                 	__POINTD1FN _0x120000,5091
0059e2 940e b62a 	CALL __PUTPARD1
0059e4 85ec      	LDD  R30,Y+12
0059e5 940e a073 	CALL SUBOPT_0x27
                 ; 0009 047F     print_payload(sendPacket,packetLen);
0059e7 933a      	ST   -Y,R19
0059e8 932a      	ST   -Y,R18
0059e9 01da      	MOVW R26,R20
0059ea 940e 7d2a 	CALL _print_payload
                 ; 0009 0480 
                 ; 0009 0481     write_uart0(sendPacket,packetLen);
0059ec 933a      	ST   -Y,R19
0059ed 932a      	ST   -Y,R18
0059ee 01da      	MOVW R26,R20
0059ef 940e 3d0e 	CALL _write_uart0
                 ; 0009 0482     free(sendPacket);
0059f1 01d9      	MOVW R26,R18
0059f2 940e 8488 	CALL _free
                 ; 0009 0483 
                 ; 0009 0484     //printDebug("-- Completed --\r\n");
                 ; 0009 0485     delay_ms(7);
0059f4 940e 9fa2 	CALL SUBOPT_0x8
0059f6 940e b2e6 	CALL _delay_ms
                 ; 0009 0486 
                 ; 0009 0487     return 0;
0059f8 e0e0      	LDI  R30,LOW(0)
0059f9 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0068:
0059fa 940e b6a1 	CALL __LOADLOCR6
0059fc 962d      	ADIW R28,13
0059fd 9508      	RET
                 ; 0009 0488 }
                 ;/*============================================================*/
                 ;int ETH_checksum(char buf[],int len)
                 ; 0009 048B {
                 _ETH_checksum:
                 ; 0009 048C     int i;
                 ; 0009 048D     char sum = 0;
                 ; 0009 048E 
                 ; 0009 048F     //printDebug("<checksum> \r\n");
                 ; 0009 0490     for (i=0;i<len;i++){
0059fe 940e a279 	CALL SUBOPT_0x6F
                 ;	buf -> Y+6
                 ;	len -> Y+4
                 ;	i -> R16,R17
                 ;	sum -> R19
005a00 e030      	LDI  R19,0
                +
005a01 e000     +LDI R16 , LOW ( 0 )
005a02 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200DD:
005a03 81ec      	LDD  R30,Y+4
005a04 81fd      	LDD  R31,Y+4+1
005a05 170e      	CP   R16,R30
005a06 071f      	CPC  R17,R31
005a07 f43c      	BRGE _0x1200DE
                 ; 0009 0491         sum += buf[i];
005a08 01f8      	MOVW R30,R16
005a09 940e a967 	CALL SUBOPT_0x194
005a0b 0f3e      	ADD  R19,R30
                 ; 0009 0492         //printDebug("<0x%02X> -> [0x%02X]\r\n",buf[i],sum);
                 ; 0009 0493     }
                +
005a0c 5f0f     +SUBI R16 , LOW ( - 1 )
005a0d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005a0e cff4      	RJMP _0x1200DD
                 _0x1200DE:
                 ; 0009 0494     return (0xff - (sum & 0xff));
005a0f 2fe3      	MOV  R30,R19
005a10 940e a32a 	CALL SUBOPT_0x87
005a12 efaf      	LDI  R26,LOW(255)
005a13 e0b0      	LDI  R27,HIGH(255)
005a14 940e b642 	CALL __SWAPW12
005a16 1bea      	SUB  R30,R26
005a17 0bfb      	SBC  R31,R27
005a18 c283      	RJMP _0x20E0064
                 ; 0009 0495 
                 ; 0009 0496 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** Ethernet Hardare Management ****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;char ETH_current_mode;
                 ;char ETH_switchMode(char mode)
                 ; 0009 049F {
                 _ETH_switchMode:
                 ; 0009 04A0     if(mode == MODE_CONF){
005a19 93aa      	ST   -Y,R26
                 ;	mode -> Y+0
005a1a 81e8      	LD   R30,Y
005a1b 30e0      	CPI  R30,0
005a1c f451      	BRNE _0x1200DF
                 ; 0009 04A1         printDebug("<ETH_switchMode> switch to Config mode\r\n");
                +
005a1d e4ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 5119 ) )
005a1e e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5119 ) )
005a1f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5119 ) )
005a20 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5119 ) )
                 	__POINTD1FN _0x120000,5119
005a21 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 04A2         ETH_CONF;
005a23 91e0 0102 	LDS  R30,258
005a25 68e0      	ORI  R30,0x80
005a26 c009      	RJMP _0x12011C
                 ; 0009 04A3     }
                 ; 0009 04A4     else{
                 _0x1200DF:
                 ; 0009 04A5         printDebug("<ETH_switchMode> switch to Normal mode\r\n");
                +
005a27 e7e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 5160 ) )
005a28 e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5160 ) )
005a29 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5160 ) )
005a2a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5160 ) )
                 	__POINTD1FN _0x120000,5160
005a2b 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 04A6         ETH_NORM;
005a2d 91e0 0102 	LDS  R30,258
005a2f 77ef      	ANDI R30,0x7F
                 _0x12011C:
005a30 93e0 0102 	STS  258,R30
                 ; 0009 04A7     }
                 ; 0009 04A8 
                 ; 0009 04A9     delay_ms(5);
005a32 940e a96d 	CALL SUBOPT_0x195
                 ; 0009 04AA 
                 ; 0009 04AB     ETH_current_mode = mode;
005a34 81e8      	LD   R30,Y
005a35 93e0 1420 	STS  _ETH_current_mode,R30
                 ; 0009 04AC 
                 ; 0009 04AD     delay_ms(5);
005a37 940e a96d 	CALL SUBOPT_0x195
                 ; 0009 04AE     ETH_OFF;
005a39 98a4      	CBI  0x14,4
                 ; 0009 04AF     delay_ms(1500);
005a3a edac      	LDI  R26,LOW(1500)
005a3b e0b5      	LDI  R27,HIGH(1500)
005a3c 940e b2e6 	CALL _delay_ms
                 ; 0009 04B0     ETH_ON;
005a3e 9aa4      	SBI  0x14,4
                 ; 0009 04B1     #asm("wdr")
005a3f 95a8      	wdr
                 ; 0009 04B2     delay_ms(2000);
005a40 eda0      	LDI  R26,LOW(2000)
005a41 e0b7      	LDI  R27,HIGH(2000)
005a42 940e b2e6 	CALL _delay_ms
                 ; 0009 04B3 
                 ; 0009 04B4     return ETH_MODE;
005a44 91e0 0102 	LDS  R30,258
005a46 78e0      	ANDI R30,LOW(0x80)
005a47 9621      	ADIW R28,1
005a48 9508      	RET
                 ; 0009 04B5 }
                 ;/*============================================================*/
                 ;int ETH_getConfig(unsigned char *ptr, unsigned int *buflen)
                 ; 0009 04B8 {
                 ; 0009 04B9     TIMER   timeout;
                 ; 0009 04BA     char    getInfoCmd[] = ">R\r";
                 ; 0009 04BB     int     i=0;
                 ; 0009 04BC 
                 ; 0009 04BD     ETH_switchMode((unsigned char) MODE_CONF);
                 ;	*ptr -> Y+12
                 ;	*buflen -> Y+10
                 ;	timeout -> Y+6
                 ;	getInfoCmd -> Y+2
                 ;	i -> R16,R17
                 ; 0009 04BE     /*
                 ; 0009 04BF     if(mode != MODE_CONF){
                 ; 0009 04C0         printDebug("<ETH_getConfig> ETH_switchMode(MODE_CONF) failed\r\n");
                 ; 0009 04C1         return -1;
                 ; 0009 04C2     }
                 ; 0009 04C3     */
                 ; 0009 04C4 
                 ; 0009 04C5     for(i=0;i<CONF_READ_BUFFER;i++){
                 ; 0009 04C6         configRd[i] = 0x00;
                 ; 0009 04C7     }
                 ; 0009 04C8     configLen       = 0;
                 ; 0009 04C9     config_start    = 0;
                 ; 0009 04CA     config_ready    = 0;
                 ; 0009 04CB     config_end      = 0;
                 ; 0009 04CC     config_response = 0;
                 ; 0009 04CD 
                 ; 0009 04CE     printDebug("<ETH_getConfig> Write to uart 0 :");
                 ; 0009 04CF     for(i=0;i<strlen(getInfoCmd);i++){
                 ; 0009 04D0         putchar3(getInfoCmd[i]);
                 ; 0009 04D1     }
                 ; 0009 04D2     printDebug("\r\n");
                 ; 0009 04D3 
                 ; 0009 04D4     for(i=0;i<strlen(getInfoCmd);i++){
                 ; 0009 04D5         putchar0(getInfoCmd[i]);
                 ; 0009 04D6     }
                 ; 0009 04D7 
                 ; 0009 04D8     TIMER_setTimer(&timeout, 7);
                 ; 0009 04D9 
                 ; 0009 04DA     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 ; 0009 04DB        delay_ms(50);
                 ; 0009 04DC        #asm("wdr")
                 ; 0009 04DD     }
                 ; 0009 04DE 
                 ; 0009 04DF     memcpy(ptr,&configRd[0],configLen);
                 ; 0009 04E0 
                 ; 0009 04E1     *buflen    = configLen;
                 ; 0009 04E2 
                 ; 0009 04E3     ETH_switchMode(MODE_NORM);
                 ; 0009 04E4 
                 ; 0009 04E5     /*
                 ; 0009 04E6     if(mode != MODE_NORM){
                 ; 0009 04E7         printDebug("<ETH_getConfig> ETH_switchMode(MODE_NORM) failed\r\n");
                 ; 0009 04E8         return -1;
                 ; 0009 04E9     }
                 ; 0009 04EA     */
                 ; 0009 04EB 
                 ; 0009 04EC     if(config_response == 'S'){
                 ; 0009 04ED         return 0;
                 ; 0009 04EE     }
                 ; 0009 04EF     else{
                 ; 0009 04F0         return -1;
                 ; 0009 04F1     }
                 ; 0009 04F2 }
                 ;/*============================================================*/
                 ;int ETH_setConfig(char *ip, char *mask, char *gw, char *server)
                 ; 0009 04F5 {
                 ; 0009 04F6     TIMER   timeout;
                 ; 0009 04F7     char    getInfoCmd[] = ">R\r";
                 ; 0009 04F8     char    setInfoCmd[] = ">W";
                 ; 0009 04F9     int     i=0;
                 ; 0009 04FA     char    setStr[30];
                 ; 0009 04FB     int     readLen=0;
                 ; 0009 04FC     char    *ptr;
                 ; 0009 04FD 
                 ; 0009 04FE     ptr = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
                 ;	*ip -> Y+53
                 ;	*mask -> Y+51
                 ;	*gw -> Y+49
                 ;	*server -> Y+47
                 ;	timeout -> Y+43
                 ;	getInfoCmd -> Y+39
                 ;	setInfoCmd -> Y+36
                 ;	i -> R16,R17
                 ;	setStr -> Y+6
                 ;	readLen -> R18,R19
                 ;	*ptr -> R20,R21
                 ; 0009 04FF     if(ptr == NULL){
                 ; 0009 0500         printDebug("<ETH_setConfig> malloc(CONF_READ_BUFFER) failed\r\n");
                 ; 0009 0501         return -1;
                 ; 0009 0502     }
                 ; 0009 0503 
                 ; 0009 0504     ETH_switchMode((unsigned char) MODE_CONF);
                 ; 0009 0505 
                 ; 0009 0506     // ------------------------- Read Old Configuration --------------------------- //
                 ; 0009 0507     for(i=0;i<CONF_READ_BUFFER;i++){
                 ; 0009 0508         configRd[i] = 0x00;
                 ; 0009 0509     }
                 ; 0009 050A     configLen       = 0;
                 ; 0009 050B     config_start    = 0;
                 ; 0009 050C     config_ready    = 0;
                 ; 0009 050D     config_end      = 0;
                 ; 0009 050E     config_response = 0;
                 ; 0009 050F 
                 ; 0009 0510     printDebug("<ETH_setConfig> Write to uart 0 :");
                 ; 0009 0511     for(i=0;i<strlen(getInfoCmd);i++){
                 ; 0009 0512         putchar3(getInfoCmd[i]);
                 ; 0009 0513     }
                 ; 0009 0514     printDebug("\r\n");
                 ; 0009 0515 
                 ; 0009 0516     for(i=0;i<strlen(getInfoCmd);i++){
                 ; 0009 0517         putchar0(getInfoCmd[i]);
                 ; 0009 0518     }
                 ; 0009 0519 
                 ; 0009 051A     TIMER_setTimer(&timeout, 7);
                 ; 0009 051B 
                 ; 0009 051C     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 ; 0009 051D        delay_ms(50);
                 ; 0009 051E        #asm("wdr")
                 ; 0009 051F     }
                 ; 0009 0520 
                 ; 0009 0521     memcpy(ptr,&configRd[0],configLen);
                 ; 0009 0522     readLen = configLen;
                 ; 0009 0523 
                 ; 0009 0524     if(config_response != 'S'){
                 ; 0009 0525         printDebug("<ETH_setConfig> read config from ETH module failed\r\n");
                 ; 0009 0526         free( ptr );
                 ; 0009 0527         return -1;
                 ; 0009 0528     }
                 ; 0009 0529 
                 ; 0009 052A     // ------------------------- Update Configuration --------------------------- //
                 ; 0009 052B     sprintf(setStr,"%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X",
                 ; 0009 052C                 (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ; 0009 052D                 (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ; 0009 052E                 (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ; 0009 052F                 (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ; 0009 0530                 (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ; 0009 0531                 (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ; 0009 0532                 (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ; 0009 0533                 (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ; 0009 0534                 (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ; 0009 0535                 (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ; 0009 0536                 (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ; 0009 0537                 (gw[9]    *100) + (gw[10]    *10) + gw[11]);
                 ; 0009 0538 
                 ; 0009 0539     printDebug("<ETH_setConfig> Set String [%s]\r\n",setStr);
                 ; 0009 053A 
                 ; 0009 053B     memcpy((ptr+14),&setStr[0],24);
                 ; 0009 053C 
                 ; 0009 053D     sprintf(setStr,"%02X%02X%02X%02X",
                 ; 0009 053E                 (server[0]*100) + (server[1] *10) + server[2],
                 ; 0009 053F                 (server[3]*100) + (server[4] *10) + server[5],
                 ; 0009 0540                 (server[6]*100) + (server[7] *10) + server[8],
                 ; 0009 0541                 (server[9]*100) + (server[10]*10) + server[11]);
                 ; 0009 0542 
                 ; 0009 0543     printDebug("<ETH_setConfig> Set String [%s]\r\n",setStr);
                 ; 0009 0544 
                 ; 0009 0545     memcpy((ptr+42),&setStr[0],8);
                 ; 0009 0546 
                 ; 0009 0547 //    printDebug("<ETH_setConfig> Modified setting msg ---\r\n");
                 ; 0009 0548 //    for(i=0;i<configLen;i++){
                 ; 0009 0549 //        putchar3(ptr[i]);
                 ; 0009 054A //    }
                 ; 0009 054B //    printDebug("\r\n\---\r\n");
                 ; 0009 054C 
                 ; 0009 054D     // ------------------------- Set New Configuration --------------------------- //
                 ; 0009 054E     for(i=0;i<CONF_READ_BUFFER;i++){
                 ; 0009 054F         configRd[i] = 0x00;
                 ; 0009 0550     }
                 ; 0009 0551     configLen       = 0;
                 ; 0009 0552     config_start    = 0;
                 ; 0009 0553     config_ready    = 0;
                 ; 0009 0554     config_end      = 0;
                 ; 0009 0555     config_response = 0;
                 ; 0009 0556 
                 ; 0009 0557     printDebug("<ETH_setConfig> Setting msg ---\r\n");
                 ; 0009 0558     for(i=0;i<strlen(setInfoCmd);i++){
                 ; 0009 0559         putchar0(setInfoCmd[i]);
                 ; 0009 055A         putchar3(setInfoCmd[i]);
                 ; 0009 055B     }
                 ; 0009 055C     for(i=12;i<readLen;i++){
                 ; 0009 055D         putchar0(ptr[i]);
                 ; 0009 055E         putchar3(ptr[i]);
                 ; 0009 055F     }
                 ; 0009 0560     putchar0('\r');
                 ; 0009 0561     printDebug("\r\n\---\r\n");
                 ; 0009 0562 
                 ; 0009 0563     TIMER_setTimer(&timeout, 10);
                 ; 0009 0564 
                 ; 0009 0565     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 ; 0009 0566        delay_ms(50);
                 ; 0009 0567        #asm("wdr")
                 ; 0009 0568     }
                 ; 0009 0569 
                 ; 0009 056A     ETH_switchMode(MODE_NORM);
                 ; 0009 056B 
                 ; 0009 056C     free( ptr );
                 ; 0009 056D 
                 ; 0009 056E     if(config_response == 'S'){
                 ; 0009 056F         return 0;
                 ; 0009 0570     }
                 ; 0009 0571     else{
                 ; 0009 0572         return -1;
                 ; 0009 0573     }
                 ; 0009 0574 }
                 ;/*============================================================*/
                 ;void ETH_reset(void)
                 ; 0009 0577 {
                 _ETH_reset:
                 ; 0009 0578     printDebug("<ETH_reset> Resetting Ethernet Module, please wait.");
                +
005a49 ece7     +LDI R30 , LOW ( 2 * _0x120000 + ( 5497 ) )
005a4a e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5497 ) )
005a4b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5497 ) )
005a4c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5497 ) )
                 	__POINTD1FN _0x120000,5497
005a4d 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 0579     ETH_RESET   = 0;
005a4f 9872      	CBI  0xE,2
                 ; 0009 057A     delay_ms(3000);
005a50 eba8      	LDI  R26,LOW(3000)
005a51 e0bb      	LDI  R27,HIGH(3000)
005a52 940e b2e6 	CALL _delay_ms
                 ; 0009 057B     ETH_RESET   = 1;
005a54 9a72      	SBI  0xE,2
                 ; 0009 057C     delay_ms(1);
005a55 940e a244 	CALL SUBOPT_0x67
005a57 940e b2e6 	CALL _delay_ms
                 ; 0009 057D     printDebug("...Done\r\n");
                +
005a59 efeb     +LDI R30 , LOW ( 2 * _0x120000 + ( 5549 ) )
005a5a e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5549 ) )
005a5b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5549 ) )
005a5c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5549 ) )
                 	__POINTD1FN _0x120000,5549
005a5d 940e 9f66 	CALL SUBOPT_0x2
                 ; 0009 057E }
005a5f 9508      	RET
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include "ethparser.h"
                 ;#include "debug.h"
                 ;
                 ;/*============================================================*/
                 ;int statusRequestParser(unsigned char *pkt, int len, struct stat_req_st *st)
                 ; 000A 0007 {
                 
                 	.CSEG
                 _statusRequestParser:
                 ; 000A 0008     int     i,k=0;
                 ; 000A 0009 
                 ; 000A 000A     for(i=0;i<sizeof(st->nid);i++){
005a60 940e a279 	CALL SUBOPT_0x6F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
005a62 940e a971 	CALL SUBOPT_0x196
                 _0x140004:
                +
005a64 3008     +CPI R16 , LOW ( 8 )
005a65 e0e0     +LDI R30 , HIGH ( 8 )
005a66 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
005a67 f444      	BRGE _0x140005
                 ; 000A 000B         st->nid[0]  =   pkt[k++];
005a68 940e a976 	CALL SUBOPT_0x197
005a6a 81ac      	LDD  R26,Y+4
005a6b 81bd      	LDD  R27,Y+4+1
005a6c 93ec      	ST   X,R30
                 ; 000A 000C     }
                +
005a6d 5f0f     +SUBI R16 , LOW ( - 1 )
005a6e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005a6f cff4      	RJMP _0x140004
                 _0x140005:
                 ; 000A 000D 
                 ; 000A 000E     st->accm        =   pkt[k++];
005a70 940e a976 	CALL SUBOPT_0x197
005a72 940e a97f 	CALL SUBOPT_0x198
                 ; 000A 000F 
                 ; 000A 0010     st->intv        =   ((pkt[k++] & 0x00ff) << 8) |
                 ; 000A 0011                         ((pkt[k++] & 0x00ff));
005a74 940e a32a 	CALL SUBOPT_0x87
005a76 2ffe      	MOV  R31,R30
005a77 e0e0      	LDI  R30,0
005a78 010f      	MOVW R0,R30
005a79 940e a976 	CALL SUBOPT_0x197
005a7b 940e a32a 	CALL SUBOPT_0x87
005a7d 29e0      	OR   R30,R0
005a7e 29f1      	OR   R31,R1
005a7f 940e a984 	CALL SUBOPT_0x199
                 ; 000A 0012 
                 ; 000A 0013     if(st->accm >= 0x30){
005a81 85a0      	LDD  R26,Z+8
005a82 33a0      	CPI  R26,LOW(0x30)
005a83 f008      	BRLO _0x140006
                 ; 000A 0014         return 0;
005a84 c1a9      	RJMP _0x20E0066
                 ; 000A 0015     }
                 ; 000A 0016 
                 ; 000A 0017     st->parLen      =   len - k;
                 _0x140006:
005a85 81ee      	LDD  R30,Y+6
005a86 81ff      	LDD  R31,Y+6+1
005a87 1be2      	SUB  R30,R18
005a88 0bf3      	SBC  R31,R19
                +
005a89 81ac     +LDD R26 , Y + 4
005a8a 81bd     +LDD R27 , Y + 4 + 1
005a8b 961b     +ADIW R26 , 11
005a8c 93ed     +ST X + , R30
005a8d 93fc     +ST X , R31
                 	__PUTW1SNS 4,11
                 ; 000A 0018 
                 ; 000A 0019     st->parlst      =   malloc((st->parLen) * sizeof(char));
005a8e 81ec      	LDD  R30,Y+4
005a8f 81fd      	LDD  R31,Y+4+1
005a90 85a3      	LDD  R26,Z+11
005a91 85b4      	LDD  R27,Z+12
005a92 940e a98c 	CALL SUBOPT_0x19A
                +
005a94 81ac     +LDD R26 , Y + 4
005a95 81bd     +LDD R27 , Y + 4 + 1
005a96 961d     +ADIW R26 , 13
005a97 93ed     +ST X + , R30
005a98 93fc     +ST X , R31
                 	__PUTW1SNS 4,13
                 ; 000A 001A     if(st->parlst == NULL)
005a99 81ac      	LDD  R26,Y+4
005a9a 81bd      	LDD  R27,Y+4+1
005a9b 961d      	ADIW R26,13
005a9c 940e b5f6 	CALL __GETW1P
005a9e 9730      	SBIW R30,0
005a9f f449      	BRNE _0x140007
                 ; 000A 001B     {
                 ; 000A 001C         printDebug("<statusRequestParser> malloc failed\r\n");
                +
005aa0 e0e6     +LDI R30 , LOW ( 2 * _0x140000 + ( 0 ) )
005aa1 e3f3     +LDI R31 , HIGH ( 2 * _0x140000 + ( 0 ) )
005aa2 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 0 ) )
005aa3 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 0 ) )
                 	__POINTD1FN _0x140000,0
005aa4 940e 9f66 	CALL SUBOPT_0x2
                 ; 000A 001D         return -1;
005aa6 efef      	LDI  R30,LOW(65535)
005aa7 efff      	LDI  R31,HIGH(65535)
005aa8 c187      	RJMP _0x20E0065
                 ; 000A 001E     }
                 ; 000A 001F 
                 ; 000A 0020     for( i=0 ; i<(st->parLen) ; i++ )
                 _0x140007:
                +
005aa9 e000     +LDI R16 , LOW ( 0 )
005aaa e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140009:
005aab 81ac      	LDD  R26,Y+4
005aac 81bd      	LDD  R27,Y+4+1
005aad 961b      	ADIW R26,11
005aae 940e a993 	CALL SUBOPT_0x19B
005ab0 f450      	BRSH _0x14000A
                 ; 000A 0021     {
                 ; 000A 0022         (st->parlst)[i]      = pkt[i+k];
005ab1 81ec      	LDD  R30,Y+4
005ab2 81fd      	LDD  R31,Y+4+1
005ab3 85a5      	LDD  R26,Z+13
005ab4 85b6      	LDD  R27,Z+14
005ab5 940e a998 	CALL SUBOPT_0x19C
005ab7 93ec      	ST   X,R30
                 ; 000A 0023     }
                +
005ab8 5f0f     +SUBI R16 , LOW ( - 1 )
005ab9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005aba cff0      	RJMP _0x140009
                 _0x14000A:
                 ; 000A 0024 
                 ; 000A 0025     return 0;
005abb c172      	RJMP _0x20E0066
                 ; 000A 0026 }
                 ;/*============================================================*/
                 ;int statusReportParser(unsigned char *pkt, unsigned long int *time)
                 ; 000A 0029 {
                 ; 000A 002A     int i,k=0;
                 ; 000A 002B 
                 ; 000A 002C     k               +=  8;
                 ;	*pkt -> Y+6
                 ;	*time -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ; 000A 002D 
                 ; 000A 002E     *time           =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 002F                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 0030                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 0031                         (((long)pkt[k++] & 0x000000FF));
                 ; 000A 0032 
                 ; 000A 0033     return 0;
                 ; 000A 0034 }
                 ;/*============================================================*/
                 ;int configManageParser(unsigned char *pkt, int len, struct conf_man_st *st)
                 ; 000A 0037 {
                 _configManageParser:
                 ; 000A 0038     int i,k=0;
                 ; 000A 0039 
                 ; 000A 003A     printDebug("<configManageParser>\r\n");
005abc 940e a279 	CALL SUBOPT_0x6F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                +
005abe e020     +LDI R18 , LOW ( 0 )
005abf e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
005ac0 e2ec     +LDI R30 , LOW ( 2 * _0x140000 + ( 38 ) )
005ac1 e3f3     +LDI R31 , HIGH ( 2 * _0x140000 + ( 38 ) )
005ac2 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 38 ) )
005ac3 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 38 ) )
                 	__POINTD1FN _0x140000,38
005ac4 940e 9f66 	CALL SUBOPT_0x2
                 ; 000A 003B     print_payload(pkt,len);
005ac6 940e a8ec 	CALL SUBOPT_0x17D
005ac8 85a8      	LDD  R26,Y+8
005ac9 85b9      	LDD  R27,Y+8+1
005aca 940e 7d2a 	CALL _print_payload
                 ; 000A 003C 
                 ; 000A 003D     for(i=0;i<sizeof(st->nid);i++){
                +
005acc e000     +LDI R16 , LOW ( 0 )
005acd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x14000C:
                +
005ace 3008     +CPI R16 , LOW ( 8 )
005acf e0e0     +LDI R30 , HIGH ( 8 )
005ad0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
005ad1 f444      	BRGE _0x14000D
                 ; 000A 003E         st->nid[0]  =   pkt[k++];
005ad2 940e a976 	CALL SUBOPT_0x197
005ad4 81ac      	LDD  R26,Y+4
005ad5 81bd      	LDD  R27,Y+4+1
005ad6 93ec      	ST   X,R30
                 ; 000A 003F     }
                +
005ad7 5f0f     +SUBI R16 , LOW ( - 1 )
005ad8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005ad9 cff4      	RJMP _0x14000C
                 _0x14000D:
                 ; 000A 0040 
                 ; 000A 0041     st->accd        =   pkt[k++];
005ada 940e a976 	CALL SUBOPT_0x197
005adc 940e a97f 	CALL SUBOPT_0x198
                 ; 000A 0042 
                 ; 000A 0043     st->cnfg        =   pkt[k++];
                +
005ade 81ac     +LDD R26 , Y + 4
005adf 81bd     +LDD R27 , Y + 4 + 1
005ae0 9619     +ADIW R26 , 9
005ae1 93ec     +ST X , R30
                 	__PUTB1SNS 4,9
                 ; 000A 0044 
                 ; 000A 0045     if(st->accd == CONF_RD_CMD){
005ae2 81ec      	LDD  R30,Y+4
005ae3 81fd      	LDD  R31,Y+4+1
005ae4 85a0      	LDD  R26,Z+8
005ae5 31a0      	CPI  R26,LOW(0x10)
005ae6 f489      	BRNE _0x14000E
                 ; 000A 0046         printDebug("<configManageParser> READING\r\n");
                +
005ae7 e4e3     +LDI R30 , LOW ( 2 * _0x140000 + ( 61 ) )
005ae8 e3f3     +LDI R31 , HIGH ( 2 * _0x140000 + ( 61 ) )
005ae9 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 61 ) )
005aea e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 61 ) )
                 	__POINTD1FN _0x140000,61
005aeb 940e 9f66 	CALL SUBOPT_0x2
                 ; 000A 0047         st->confLen     =   0;
005aed 81ac      	LDD  R26,Y+4
005aee 81bd      	LDD  R27,Y+4+1
005aef 961a      	ADIW R26,10
005af0 940e a5dc 	CALL SUBOPT_0xFC
                 ; 000A 0048         st->confSpec    =   NULL;
005af2 81ac      	LDD  R26,Y+4
005af3 81bd      	LDD  R27,Y+4+1
005af4 961c      	ADIW R26,12
005af5 940e a5dc 	CALL SUBOPT_0xFC
                 ; 000A 0049         return 0;
005af7 c136      	RJMP _0x20E0066
                 ; 000A 004A     }
                 ; 000A 004B     printDebug("<configManageParser> WRITING\r\n");
                 _0x14000E:
                +
005af8 e6e2     +LDI R30 , LOW ( 2 * _0x140000 + ( 92 ) )
005af9 e3f3     +LDI R31 , HIGH ( 2 * _0x140000 + ( 92 ) )
005afa e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 92 ) )
005afb e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 92 ) )
                 	__POINTD1FN _0x140000,92
005afc 940e 9f66 	CALL SUBOPT_0x2
                 ; 000A 004C 
                 ; 000A 004D     st->confLen     =   len - k;
005afe 81ee      	LDD  R30,Y+6
005aff 81ff      	LDD  R31,Y+6+1
005b00 1be2      	SUB  R30,R18
005b01 0bf3      	SBC  R31,R19
                +
005b02 81ac     +LDD R26 , Y + 4
005b03 81bd     +LDD R27 , Y + 4 + 1
005b04 961a     +ADIW R26 , 10
005b05 93ed     +ST X + , R30
005b06 93fc     +ST X , R31
                 	__PUTW1SNS 4,10
                 ; 000A 004E 
                 ; 000A 004F     printDebug("<configManageParser> confLen = %d\r\n",st->confLen);
                +
005b07 e8e1     +LDI R30 , LOW ( 2 * _0x140000 + ( 123 ) )
005b08 e3f3     +LDI R31 , HIGH ( 2 * _0x140000 + ( 123 ) )
005b09 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 123 ) )
005b0a e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 123 ) )
                 	__POINTD1FN _0x140000,123
005b0b 940e a9a2 	CALL SUBOPT_0x19D
005b0d 961a      	ADIW R26,10
005b0e 940e a029 	CALL SUBOPT_0x1C
005b10 940e a8c3 	CALL SUBOPT_0x174
                 ; 000A 0050 
                 ; 000A 0051 
                 ; 000A 0052     st->confSpec    =   malloc((st->confLen) * sizeof(char));
005b12 81ec      	LDD  R30,Y+4
005b13 81fd      	LDD  R31,Y+4+1
005b14 85a2      	LDD  R26,Z+10
005b15 85b3      	LDD  R27,Z+11
005b16 940e a98c 	CALL SUBOPT_0x19A
                +
005b18 81ac     +LDD R26 , Y + 4
005b19 81bd     +LDD R27 , Y + 4 + 1
005b1a 961c     +ADIW R26 , 12
005b1b 93ed     +ST X + , R30
005b1c 93fc     +ST X , R31
                 	__PUTW1SNS 4,12
                 ; 000A 0053     if(st->confSpec == NULL)
005b1d 81ac      	LDD  R26,Y+4
005b1e 81bd      	LDD  R27,Y+4+1
005b1f 961c      	ADIW R26,12
005b20 940e b5f6 	CALL __GETW1P
005b22 9730      	SBIW R30,0
005b23 f449      	BRNE _0x14000F
                 ; 000A 0054     {
                 ; 000A 0055         printDebug("<configManageParser> malloc failed\r\n");
                +
005b24 eae5     +LDI R30 , LOW ( 2 * _0x140000 + ( 159 ) )
005b25 e3f3     +LDI R31 , HIGH ( 2 * _0x140000 + ( 159 ) )
005b26 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 159 ) )
005b27 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 159 ) )
                 	__POINTD1FN _0x140000,159
005b28 940e 9f66 	CALL SUBOPT_0x2
                 ; 000A 0056         return -1;
005b2a efef      	LDI  R30,LOW(65535)
005b2b efff      	LDI  R31,HIGH(65535)
005b2c c103      	RJMP _0x20E0065
                 ; 000A 0057     }
                 ; 000A 0058 
                 ; 000A 0059     for( i=0 ; i<(st->confLen) ; i++ )
                 _0x14000F:
                +
005b2d e000     +LDI R16 , LOW ( 0 )
005b2e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140011:
005b2f 81ac      	LDD  R26,Y+4
005b30 81bd      	LDD  R27,Y+4+1
005b31 961a      	ADIW R26,10
005b32 940e a993 	CALL SUBOPT_0x19B
005b34 f450      	BRSH _0x140012
                 ; 000A 005A     {
                 ; 000A 005B         (st->confSpec)[i]      = pkt[i+k];
005b35 81ec      	LDD  R30,Y+4
005b36 81fd      	LDD  R31,Y+4+1
005b37 85a4      	LDD  R26,Z+12
005b38 85b5      	LDD  R27,Z+13
005b39 940e a998 	CALL SUBOPT_0x19C
005b3b 93ec      	ST   X,R30
                 ; 000A 005C     }
                +
005b3c 5f0f     +SUBI R16 , LOW ( - 1 )
005b3d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005b3e cff0      	RJMP _0x140011
                 _0x140012:
                 ; 000A 005D 
                 ; 000A 005E     return 0;
005b3f c0ee      	RJMP _0x20E0066
                 ; 000A 005F 
                 ; 000A 0060 }
                 ;/*============================================================*/
                 ;/*
                 ;int dataReportParser(unsigned char *pkt, int len, unsigned char *frameID)
                 ;{
                 ;    *frameID        =   pkt[0];
                 ;    return 0;
                 ;}
                 ;*/
                 ;/*============================================================*/
                 ;int logManipulationCmdParser(unsigned char *pkt, int len, struct log_manic_st *st)
                 ; 000A 006B {
                 _logManipulationCmdParser:
                 ; 000A 006C     int i,k=0;
                 ; 000A 006D 
                 ; 000A 006E     for(i=0;i<sizeof(st->nid);i++){
005b40 940e a279 	CALL SUBOPT_0x6F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
005b42 940e a971 	CALL SUBOPT_0x196
                 _0x140014:
                +
005b44 3008     +CPI R16 , LOW ( 8 )
005b45 e0e0     +LDI R30 , HIGH ( 8 )
005b46 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
005b47 f444      	BRGE _0x140015
                 ; 000A 006F         st->nid[0]  =   pkt[k++];
005b48 940e a976 	CALL SUBOPT_0x197
005b4a 81ac      	LDD  R26,Y+4
005b4b 81bd      	LDD  R27,Y+4+1
005b4c 93ec      	ST   X,R30
                 ; 000A 0070     }
                +
005b4d 5f0f     +SUBI R16 , LOW ( - 1 )
005b4e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005b4f cff4      	RJMP _0x140014
                 _0x140015:
                 ; 000A 0071 
                 ; 000A 0072     st->accd        =   pkt[k++];
005b50 940e a976 	CALL SUBOPT_0x197
005b52 940e a9a7 	CALL SUBOPT_0x19E
                 ; 000A 0073 
                 ; 000A 0074     if(len > 6){
005b54 81ae      	LDD  R26,Y+6
005b55 81bf      	LDD  R27,Y+6+1
005b56 9717      	SBIW R26,7
005b57 f414      	BRGE PC+3
005b58 940c 5bc7 	JMP _0x140016
                 ; 000A 0075         st->tStart  =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 0076                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 0077                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 0078                         (((long)pkt[k++] & 0x000000FF));
005b5a 940e a976 	CALL SUBOPT_0x197
005b5c 940e a9ac 	CALL SUBOPT_0x19F
005b5e 940e a9b4 	CALL SUBOPT_0x1A0
005b60 937f      	PUSH R23
005b61 936f      	PUSH R22
005b62 93ff      	PUSH R31
005b63 93ef      	PUSH R30
005b64 940e a976 	CALL SUBOPT_0x197
005b66 940e a9ac 	CALL SUBOPT_0x19F
005b68 940e b517 	CALL __LSLD16
005b6a 91af      	POP  R26
005b6b 91bf      	POP  R27
005b6c 918f      	POP  R24
005b6d 919f      	POP  R25
005b6e 940e b4b6 	CALL __ORD12
005b70 937f      	PUSH R23
005b71 936f      	PUSH R22
005b72 93ff      	PUSH R31
005b73 93ef      	PUSH R30
005b74 940e a976 	CALL SUBOPT_0x197
005b76 940e a9ac 	CALL SUBOPT_0x19F
005b78 940e a9ba 	CALL SUBOPT_0x1A1
005b7a 91af      	POP  R26
005b7b 91bf      	POP  R27
005b7c 918f      	POP  R24
005b7d 919f      	POP  R25
005b7e 940e b4b6 	CALL __ORD12
005b80 937f      	PUSH R23
005b81 936f      	PUSH R22
005b82 93ff      	PUSH R31
005b83 93ef      	PUSH R30
005b84 940e a976 	CALL SUBOPT_0x197
005b86 940e a9ac 	CALL SUBOPT_0x19F
005b88 91af      	POP  R26
005b89 91bf      	POP  R27
005b8a 918f      	POP  R24
005b8b 919f      	POP  R25
005b8c 940e a9c0 	CALL SUBOPT_0x1A2
                 ; 000A 0079 
                 ; 000A 007A         st->tStop   =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 007B                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 007C                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 007D                         (((long)pkt[k++] & 0x000000FF));
005b8e 940e a976 	CALL SUBOPT_0x197
005b90 940e a9ac 	CALL SUBOPT_0x19F
005b92 940e a9b4 	CALL SUBOPT_0x1A0
005b94 937f      	PUSH R23
005b95 936f      	PUSH R22
005b96 93ff      	PUSH R31
005b97 93ef      	PUSH R30
005b98 940e a976 	CALL SUBOPT_0x197
005b9a 940e a9ac 	CALL SUBOPT_0x19F
005b9c 940e b517 	CALL __LSLD16
005b9e 91af      	POP  R26
005b9f 91bf      	POP  R27
005ba0 918f      	POP  R24
005ba1 919f      	POP  R25
005ba2 940e b4b6 	CALL __ORD12
005ba4 937f      	PUSH R23
005ba5 936f      	PUSH R22
005ba6 93ff      	PUSH R31
005ba7 93ef      	PUSH R30
005ba8 940e a976 	CALL SUBOPT_0x197
005baa 940e a9ac 	CALL SUBOPT_0x19F
005bac 940e a9ba 	CALL SUBOPT_0x1A1
005bae 91af      	POP  R26
005baf 91bf      	POP  R27
005bb0 918f      	POP  R24
005bb1 919f      	POP  R25
005bb2 940e b4b6 	CALL __ORD12
005bb4 937f      	PUSH R23
005bb5 936f      	PUSH R22
005bb6 93ff      	PUSH R31
005bb7 93ef      	PUSH R30
005bb8 940e a976 	CALL SUBOPT_0x197
005bba 940e a9ac 	CALL SUBOPT_0x19F
005bbc 91af      	POP  R26
005bbd 91bf      	POP  R27
005bbe 918f      	POP  R24
005bbf 919f      	POP  R25
005bc0 940e b4b6 	CALL __ORD12
                +
005bc2 81ac     +LDD R26 , Y + 4
005bc3 81bd     +LDD R27 , Y + 4 + 1
005bc4 961d     +ADIW R26 , 13
005bc5 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 4,13
                 ; 000A 007E     }
                 ; 000A 007F 
                 ; 000A 0080     return 0;
                 _0x140016:
005bc7 c066      	RJMP _0x20E0066
                 ; 000A 0081 }
                 ;/*============================================================*/
                 ;int logManipulationAckParser(unsigned char *pkt, struct log_mania_st *st)
                 ; 000A 0084 {
                 _logManipulationAckParser:
                 ; 000A 0085     int i,k=0;
                 ; 000A 0086 
                 ; 000A 0087     for(i=0;i<sizeof(st->nid);i++){
005bc8 940e a279 	CALL SUBOPT_0x6F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
005bca 940e a971 	CALL SUBOPT_0x196
                 _0x140018:
                +
005bcc 3008     +CPI R16 , LOW ( 8 )
005bcd e0e0     +LDI R30 , HIGH ( 8 )
005bce 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
005bcf f444      	BRGE _0x140019
                 ; 000A 0088         st->nid[0]  =   pkt[k++];
005bd0 940e a9c8 	CALL SUBOPT_0x1A3
005bd2 81ac      	LDD  R26,Y+4
005bd3 81bd      	LDD  R27,Y+4+1
005bd4 93ec      	ST   X,R30
                 ; 000A 0089     }
                +
005bd5 5f0f     +SUBI R16 , LOW ( - 1 )
005bd6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005bd7 cff4      	RJMP _0x140018
                 _0x140019:
                 ; 000A 008A 
                 ; 000A 008B     st->accd        =   pkt[k++];
005bd8 c0b4      	RJMP _0x20E0063
                 ; 000A 008C     st->status      =   pkt[k++];
                 ; 000A 008D 
                 ; 000A 008E     return 0;
                 ; 000A 008F }
                 ;/*============================================================*/
                 ;int networkMaintenanceParser(unsigned char *pkt, int len, struct netw_man_st *st)
                 ; 000A 0092 {
                 _networkMaintenanceParser:
                 ; 000A 0093     int i,k=0;
                 ; 000A 0094 
                 ; 000A 0095     for(i=0;i<sizeof(st->nid);i++){
005bd9 940e a279 	CALL SUBOPT_0x6F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
005bdb 940e a971 	CALL SUBOPT_0x196
                 _0x14001B:
                +
005bdd 3008     +CPI R16 , LOW ( 8 )
005bde e0e0     +LDI R30 , HIGH ( 8 )
005bdf 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
005be0 f444      	BRGE _0x14001C
                 ; 000A 0096         st->nid[0]  =   pkt[k++];
005be1 940e a976 	CALL SUBOPT_0x197
005be3 81ac      	LDD  R26,Y+4
005be4 81bd      	LDD  R27,Y+4+1
005be5 93ec      	ST   X,R30
                 ; 000A 0097     }
                +
005be6 5f0f     +SUBI R16 , LOW ( - 1 )
005be7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005be8 cff4      	RJMP _0x14001B
                 _0x14001C:
                 ; 000A 0098 
                 ; 000A 0099     st->cmd         =   pkt[k++];
005be9 940e a976 	CALL SUBOPT_0x197
005beb 940e a9a7 	CALL SUBOPT_0x19E
                 ; 000A 009A 
                 ; 000A 009B     st->dataLen     =   len - 2;
005bed 81ee      	LDD  R30,Y+6
005bee 81ff      	LDD  R31,Y+6+1
005bef 9732      	SBIW R30,2
005bf0 940e a984 	CALL SUBOPT_0x199
                 ; 000A 009C 
                 ; 000A 009D     if( st->dataLen > 0 ){
005bf2 940e a933 	CALL SUBOPT_0x18A
005bf4 f5c8      	BRSH _0x14001D
                 ; 000A 009E 
                 ; 000A 009F         st->data    =   malloc((st->dataLen) * sizeof(char));
005bf5 81ec      	LDD  R30,Y+4
005bf6 81fd      	LDD  R31,Y+4+1
005bf7 85a1      	LDD  R26,Z+9
005bf8 85b2      	LDD  R27,Z+10
005bf9 940e a98c 	CALL SUBOPT_0x19A
                +
005bfb 81ac     +LDD R26 , Y + 4
005bfc 81bd     +LDD R27 , Y + 4 + 1
005bfd 961b     +ADIW R26 , 11
005bfe 93ed     +ST X + , R30
005bff 93fc     +ST X , R31
                 	__PUTW1SNS 4,11
                 ; 000A 00A0         if(st->data == NULL)
005c00 81ac      	LDD  R26,Y+4
005c01 81bd      	LDD  R27,Y+4+1
005c02 961b      	ADIW R26,11
005c03 940e b5f6 	CALL __GETW1P
005c05 9730      	SBIW R30,0
005c06 f4a9      	BRNE _0x14001E
                 ; 000A 00A1         {
                 ; 000A 00A2             printDebug("<networkMaintenanceParser> malloc failed (%d)\r\n",((st->dataLen) * sizeof(char)));
                +
005c07 ecea     +LDI R30 , LOW ( 2 * _0x140000 + ( 196 ) )
005c08 e3f3     +LDI R31 , HIGH ( 2 * _0x140000 + ( 196 ) )
005c09 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 196 ) )
005c0a e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 196 ) )
                 	__POINTD1FN _0x140000,196
005c0b 940e b62a 	CALL __PUTPARD1
005c0d 85e8      	LDD  R30,Y+8
005c0e 85f9      	LDD  R31,Y+8+1
005c0f 85a1      	LDD  R26,Z+9
005c10 85b2      	LDD  R27,Z+10
005c11 e0e1      	LDI  R30,LOW(1)
005c12 e0f0      	LDI  R31,HIGH(1)
005c13 940e b53b 	CALL __MULW12U
005c15 940e a524 	CALL SUBOPT_0xDD
005c17 940e 9fd5 	CALL SUBOPT_0x10
                 ; 000A 00A3             return -1;
005c19 efef      	LDI  R30,LOW(65535)
005c1a efff      	LDI  R31,HIGH(65535)
005c1b c014      	RJMP _0x20E0065
                 ; 000A 00A4         }
                 ; 000A 00A5 
                 ; 000A 00A6         for( i=0 ; i<(st->dataLen) ; i++ )
                 _0x14001E:
                +
005c1c e000     +LDI R16 , LOW ( 0 )
005c1d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140020:
005c1e 81ac      	LDD  R26,Y+4
005c1f 81bd      	LDD  R27,Y+4+1
005c20 9619      	ADIW R26,9
005c21 940e a993 	CALL SUBOPT_0x19B
005c23 f450      	BRSH _0x140021
                 ; 000A 00A7         {
                 ; 000A 00A8             (st->data)[i]      = pkt[i+k];
005c24 81ec      	LDD  R30,Y+4
005c25 81fd      	LDD  R31,Y+4+1
005c26 85a3      	LDD  R26,Z+11
005c27 85b4      	LDD  R27,Z+12
005c28 940e a998 	CALL SUBOPT_0x19C
005c2a 93ec      	ST   X,R30
                 ; 000A 00A9         }
                +
005c2b 5f0f     +SUBI R16 , LOW ( - 1 )
005c2c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005c2d cff0      	RJMP _0x140020
                 _0x140021:
                 ; 000A 00AA 
                 ; 000A 00AB     }
                 ; 000A 00AC 
                 ; 000A 00AD     return 0;
                 _0x14001D:
                 _0x20E0066:
005c2e e0e0      	LDI  R30,LOW(0)
005c2f e0f0      	LDI  R31,HIGH(0)
                 _0x20E0065:
005c30 940e b6a3 	CALL __LOADLOCR4
                 _0x20E0067:
005c32 962a      	ADIW R28,10
005c33 9508      	RET
                 ; 000A 00AE }
                 ;/*============================================================*/
                 ;int remoteDeviceControlParser(unsigned char *pkt, struct rem_dev_ctrl_st *st)
                 ; 000A 00B1 {
                 _remoteDeviceControlParser:
                 ; 000A 00B2     int i,k=0;
                 ; 000A 00B3 
                 ; 000A 00B4     for(i=0;i<sizeof(st->nid);i++){
005c34 940e a279 	CALL SUBOPT_0x6F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
005c36 940e a971 	CALL SUBOPT_0x196
                 _0x140023:
                +
005c38 3008     +CPI R16 , LOW ( 8 )
005c39 e0e0     +LDI R30 , HIGH ( 8 )
005c3a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
005c3b f444      	BRGE _0x140024
                 ; 000A 00B5         st->nid[0]  =   pkt[k++];
005c3c 940e a9c8 	CALL SUBOPT_0x1A3
005c3e 81ac      	LDD  R26,Y+4
005c3f 81bd      	LDD  R27,Y+4+1
005c40 93ec      	ST   X,R30
                 ; 000A 00B6     }
                +
005c41 5f0f     +SUBI R16 , LOW ( - 1 )
005c42 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005c43 cff4      	RJMP _0x140023
                 _0x140024:
                 ; 000A 00B7 
                 ; 000A 00B8     st->cmd         =   pkt[k++];
005c44 940e a9c8 	CALL SUBOPT_0x1A3
005c46 940e a9a7 	CALL SUBOPT_0x19E
                 ; 000A 00B9 
                 ; 000A 00BA     st->value       =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 00BB                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 00BC                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 00BD                         (((long)pkt[k++] & 0x000000FF));
005c48 940e a9c8 	CALL SUBOPT_0x1A3
005c4a 940e a9ac 	CALL SUBOPT_0x19F
005c4c 940e a9b4 	CALL SUBOPT_0x1A0
005c4e 937f      	PUSH R23
005c4f 936f      	PUSH R22
005c50 93ff      	PUSH R31
005c51 93ef      	PUSH R30
005c52 940e a9c8 	CALL SUBOPT_0x1A3
005c54 940e a9ac 	CALL SUBOPT_0x19F
005c56 940e b517 	CALL __LSLD16
005c58 91af      	POP  R26
005c59 91bf      	POP  R27
005c5a 918f      	POP  R24
005c5b 919f      	POP  R25
005c5c 940e b4b6 	CALL __ORD12
005c5e 937f      	PUSH R23
005c5f 936f      	PUSH R22
005c60 93ff      	PUSH R31
005c61 93ef      	PUSH R30
005c62 940e a9c8 	CALL SUBOPT_0x1A3
005c64 940e a9ac 	CALL SUBOPT_0x19F
005c66 940e a9ba 	CALL SUBOPT_0x1A1
005c68 91af      	POP  R26
005c69 91bf      	POP  R27
005c6a 918f      	POP  R24
005c6b 919f      	POP  R25
005c6c 940e b4b6 	CALL __ORD12
005c6e 937f      	PUSH R23
005c6f 936f      	PUSH R22
005c70 93ff      	PUSH R31
005c71 93ef      	PUSH R30
005c72 940e a9c8 	CALL SUBOPT_0x1A3
005c74 940e a9ac 	CALL SUBOPT_0x19F
005c76 91af      	POP  R26
005c77 91bf      	POP  R27
005c78 918f      	POP  R24
005c79 919f      	POP  R25
005c7a 940e a9c0 	CALL SUBOPT_0x1A2
                 ; 000A 00BE 
                 ; 000A 00BF     return 0;
005c7c c01d      	RJMP _0x20E0062
                 ; 000A 00C0 }
                 ;/*============================================================*/
                 ;int clearListParser(unsigned char *pkt, struct clr_lst_st *st)
                 ; 000A 00C3 {
                 _clearListParser:
                 ; 000A 00C4     int i,k=0;
                 ; 000A 00C5 
                 ; 000A 00C6     for(i=0;i<sizeof(st->nid);i++){
005c7d 940e a279 	CALL SUBOPT_0x6F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
005c7f 940e a971 	CALL SUBOPT_0x196
                 _0x140026:
                +
005c81 3008     +CPI R16 , LOW ( 8 )
005c82 e0e0     +LDI R30 , HIGH ( 8 )
005c83 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
005c84 f444      	BRGE _0x140027
                 ; 000A 00C7         st->nid[0]  =   pkt[k++];
005c85 940e a9c8 	CALL SUBOPT_0x1A3
005c87 81ac      	LDD  R26,Y+4
005c88 81bd      	LDD  R27,Y+4+1
005c89 93ec      	ST   X,R30
                 ; 000A 00C8     }
                +
005c8a 5f0f     +SUBI R16 , LOW ( - 1 )
005c8b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005c8c cff4      	RJMP _0x140026
                 _0x140027:
                 ; 000A 00C9 
                 ; 000A 00CA     st->cmd         =   pkt[k++];
                 _0x20E0063:
005c8d 01f9      	MOVW R30,R18
                +
005c8e 5f2f     +SUBI R18 , LOW ( - 1 )
005c8f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005c90 940e a967 	CALL SUBOPT_0x194
005c92 940e a9a7 	CALL SUBOPT_0x19E
                 ; 000A 00CB     st->status      =   pkt[k++];
005c94 940e a9c8 	CALL SUBOPT_0x1A3
                +
005c96 81ac     +LDD R26 , Y + 4
005c97 81bd     +LDD R27 , Y + 4 + 1
005c98 9619     +ADIW R26 , 9
005c99 93ec     +ST X , R30
                 	__PUTB1SNS 4,9
                 ; 000A 00CC 
                 ; 000A 00CD     return 0;
                 _0x20E0062:
005c9a e0e0      	LDI  R30,LOW(0)
005c9b e0f0      	LDI  R31,HIGH(0)
                 _0x20E0064:
005c9c 940e b6a3 	CALL __LOADLOCR4
005c9e 9628      	ADIW R28,8
005c9f 9508      	RET
                 ; 000A 00CE }
                 ;/*============================================================*/
                 ;void free_statusRequest(struct stat_req_st *st)
                 ; 000A 00D1 {
                 _free_statusRequest:
                 ; 000A 00D2     free ( st->parlst );
005ca0 940e a308 	CALL SUBOPT_0x83
                 ;	*st -> Y+0
005ca2 85a5      	LDD  R26,Z+13
005ca3 85b6      	LDD  R27,Z+14
005ca4 940e 8488 	CALL _free
                 ; 000A 00D3 }
005ca6 c05e      	RJMP _0x20E0061
                 ;/*============================================================*/
                 ;void free_configManage(struct conf_man_st *st)
                 ; 000A 00D6 {
                 _free_configManage:
                 ; 000A 00D7     free ( st->confSpec );
005ca7 940e a308 	CALL SUBOPT_0x83
                 ;	*st -> Y+0
005ca9 85a4      	LDD  R26,Z+12
005caa 85b5      	LDD  R27,Z+13
005cab 940e 8488 	CALL _free
                 ; 000A 00D8 }
005cad c057      	RJMP _0x20E0061
                 ;/*============================================================*/
                 ;void free_networkMaintenance(struct netw_man_st *st)
                 ; 000A 00DB {
                 _free_networkMaintenance:
                 ; 000A 00DC     free ( st->data );
005cae 940e a308 	CALL SUBOPT_0x83
                 ;	*st -> Y+0
005cb0 85a3      	LDD  R26,Z+11
005cb1 85b4      	LDD  R27,Z+12
005cb2 940e 8488 	CALL _free
                 ; 000A 00DD }
005cb4 c050      	RJMP _0x20E0061
                 ;/*============================================================*/
                 ;
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "ethservice.h"
                 ;#include "ds1672.h"
                 ;#include "alarm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "debug.h"
                 ;
                 ;/*============================================================*/
                 ;int getConfigLen(unsigned char cnfg)
                 ; 000B 000A {
                 
                 	.CSEG
                 _getConfigLen:
                 ; 000B 000B     unsigned char   type = cnfg & 0xF0;;
                 ; 000B 000C 
                 ; 000B 000D     switch( type ){
005cb5 93aa      	ST   -Y,R26
005cb6 931a      	ST   -Y,R17
                 ;	cnfg -> Y+1
                 ;	type -> R17
005cb7 81e9      	LDD  R30,Y+1
005cb8 7fe0      	ANDI R30,LOW(0xF0)
005cb9 2f1e      	MOV  R17,R30
005cba 2fe1      	MOV  R30,R17
005cbb 940e a0ee 	CALL SUBOPT_0x37
                 ; 000B 000E         case CONF_PROPERTIES    :   return sizeof(struct prop_cnfg_st);
005cbd f419      	BRNE _0x160006
005cbe eae1      	LDI  R30,LOW(161)
005cbf e0f0      	LDI  R31,HIGH(161)
005cc0 c043      	RJMP _0x20E0060
                 ; 000B 000F         case CONF_OPERATE       :   return sizeof(struct oper_cnfg_st);
                 _0x160006:
005cc1 32e0      	CPI  R30,LOW(0x20)
005cc2 e0a0      	LDI  R26,HIGH(0x20)
005cc3 07fa      	CPC  R31,R26
005cc4 f419      	BRNE _0x160007
005cc5 e0e8      	LDI  R30,LOW(8)
005cc6 e0f0      	LDI  R31,HIGH(8)
005cc7 c03c      	RJMP _0x20E0060
                 ; 000B 0010         case CONF_SENSOR        :   return sizeof(struct sens_cnfg_st);
                 _0x160007:
005cc8 33e0      	CPI  R30,LOW(0x30)
005cc9 e0a0      	LDI  R26,HIGH(0x30)
005cca 07fa      	CPC  R31,R26
005ccb f419      	BRNE _0x160008
005ccc e1ed      	LDI  R30,LOW(29)
005ccd e0f0      	LDI  R31,HIGH(29)
005cce c035      	RJMP _0x20E0060
                 ; 000B 0011         case CONF_AUXDI         :   return sizeof(struct din_cnfg_st);
                 _0x160008:
005ccf 34e0      	CPI  R30,LOW(0x40)
005cd0 e0a0      	LDI  R26,HIGH(0x40)
005cd1 07fa      	CPC  R31,R26
005cd2 f419      	BRNE _0x160009
005cd3 e0e3      	LDI  R30,LOW(3)
005cd4 e0f0      	LDI  R31,HIGH(3)
005cd5 c02e      	RJMP _0x20E0060
                 ; 000B 0012         case CONF_AUXDO         :   return sizeof(struct dout_cnfg_st);
                 _0x160009:
005cd6 35e0      	CPI  R30,LOW(0x50)
005cd7 e0a0      	LDI  R26,HIGH(0x50)
005cd8 07fa      	CPC  R31,R26
005cd9 f419      	BRNE _0x16000A
005cda e2e6      	LDI  R30,LOW(38)
005cdb e0f0      	LDI  R31,HIGH(38)
005cdc c027      	RJMP _0x20E0060
                 ; 000B 0013         case CONF_AUXAI         :   return sizeof(struct ain_cnfg_st);
                 _0x16000A:
005cdd 36e0      	CPI  R30,LOW(0x60)
005cde e0a0      	LDI  R26,HIGH(0x60)
005cdf 07fa      	CPC  R31,R26
005ce0 f419      	BRNE _0x16000B
005ce1 e0e5      	LDI  R30,LOW(5)
005ce2 e0f0      	LDI  R31,HIGH(5)
005ce3 c020      	RJMP _0x20E0060
                 ; 000B 0014         case CONF_AUXAO         :   return sizeof(struct aout_cnfg_st);
                 _0x16000B:
005ce4 37e0      	CPI  R30,LOW(0x70)
005ce5 e0a0      	LDI  R26,HIGH(0x70)
005ce6 07fa      	CPC  R31,R26
005ce7 f419      	BRNE _0x16000C
005ce8 e2e9      	LDI  R30,LOW(41)
005ce9 e0f0      	LDI  R31,HIGH(41)
005cea c019      	RJMP _0x20E0060
                 ; 000B 0015         case CONF_BUZZER        :   return sizeof(struct buzz_cnfg_st);
                 _0x16000C:
005ceb 38e0      	CPI  R30,LOW(0x80)
005cec e0a0      	LDI  R26,HIGH(0x80)
005ced 07fa      	CPC  R31,R26
005cee f419      	BRNE _0x16000D
005cef e2e5      	LDI  R30,LOW(37)
005cf0 e0f0      	LDI  R31,HIGH(37)
005cf1 c012      	RJMP _0x20E0060
                 ; 000B 0016         case CONF_ENVALARM      :   return sizeof(struct alm_cnfg_st);
                 _0x16000D:
005cf2 39e0      	CPI  R30,LOW(0x90)
005cf3 e0a0      	LDI  R26,HIGH(0x90)
005cf4 07fa      	CPC  R31,R26
005cf5 f419      	BRNE _0x16000F
005cf6 e1e2      	LDI  R30,LOW(18)
005cf7 e0f0      	LDI  R31,HIGH(18)
005cf8 c00b      	RJMP _0x20E0060
                 ; 000B 0017         default                 :   printDebug("<getConfigLen> unknown configuration type [0x%02X]\r\n",type);
                 _0x16000F:
                +
005cf9 efea     +LDI R30 , LOW ( 2 * _0x160000 + ( 0 ) )
005cfa e3f3     +LDI R31 , HIGH ( 2 * _0x160000 + ( 0 ) )
005cfb e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 0 ) )
005cfc e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 0 ) )
                 	__POINTD1FN _0x160000,0
005cfd 940e b62a 	CALL __PUTPARD1
005cff 2fe1      	MOV  R30,R17
005d00 940e a073 	CALL SUBOPT_0x27
                 ; 000B 0018                                     return -1;
005d02 efef      	LDI  R30,LOW(65535)
005d03 efff      	LDI  R31,HIGH(65535)
                 ; 000B 0019     }
                 ; 000B 001A }
                 _0x20E0060:
005d04 8118      	LDD  R17,Y+0
                 _0x20E0061:
005d05 9622      	ADIW R28,2
005d06 9508      	RET
                 ;/*============================================================*/
                 ;int configRead(unsigned char cnfg, unsigned char *ptr)
                 ; 000B 001D {
                 _configRead:
                 ; 000B 001E     int i = 0;
                 ; 000B 001F     int res = 0;
                 ; 000B 0020     unsigned char   type            = 0x00;
                 ; 000B 0021     int             channel         = 0;
                 ; 000B 0022     void            *cnfgStrc       = NULL;
                 ; 000B 0023 
                 ; 000B 0024     type    =   cnfg & 0xF0;
005d07 940e a9cc 	CALL SUBOPT_0x1A4
005d09 940e a0e9 	CALL SUBOPT_0x36
                 ;	cnfg -> Y+12
                 ;	*ptr -> Y+10
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                 ;	type -> R21
                 ;	channel -> Y+8
                 ;	*cnfgStrc -> Y+6
                +
005d0b e020     +LDI R18 , LOW ( 0 )
005d0c e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
005d0d e050      	LDI  R21,0
005d0e 85ec      	LDD  R30,Y+12
005d0f 7fe0      	ANDI R30,LOW(0xF0)
005d10 2f5e      	MOV  R21,R30
                 ; 000B 0025 
                 ; 000B 0026 
                 ; 000B 0027     switch( type ){
005d11 2fe5      	MOV  R30,R21
005d12 940e a0ee 	CALL SUBOPT_0x37
                 ; 000B 0028         case CONF_PROPERTIES    :   cnfgStrc = malloc (sizeof(struct prop_cnfg_st));
005d14 f011      	BREQ PC+3
005d15 940c 5d85 	JMP _0x160013
005d17 940e a53c 	CALL SUBOPT_0xE1
005d19 940e a9cf 	CALL SUBOPT_0x1A5
                 ; 000B 0029                                     if(cnfgStrc == NULL){
005d1b f479      	BRNE _0x160014
                 ; 000B 002A                                         printDebug("<configRead> CONF_PROPERTIES malloc1 failed (%d bytes)\r\n",sizeof(struct prop_cnfg_st));
                +
005d1c e2ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 53 ) )
005d1d e3f4     +LDI R31 , HIGH ( 2 * _0x160000 + ( 53 ) )
005d1e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 53 ) )
005d1f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 53 ) )
                 	__POINTD1FN _0x160000,53
005d20 940e b62a 	CALL __PUTPARD1
                +
005d22 eae1     +LDI R30 , LOW ( 0xA1 )
005d23 e0f0     +LDI R31 , HIGH ( 0xA1 )
005d24 e060     +LDI R22 , BYTE3 ( 0xA1 )
005d25 e070     +LDI R23 , BYTE4 ( 0xA1 )
                 	__GETD1N 0xA1
005d26 940e a8c3 	CALL SUBOPT_0x174
                 ; 000B 002B                                         return -2;
005d28 efee      	LDI  R30,LOW(65534)
005d29 efff      	LDI  R31,HIGH(65534)
005d2a c3f9      	RJMP _0x20E005F
                 ; 000B 002C                                     }
                 ; 000B 002D 
                 ; 000B 002E                                     res = getPropertiesConfig((struct prop_cnfg_st *) cnfgStrc);
                 _0x160014:
005d2b 81ae      	LDD  R26,Y+6
005d2c 81bf      	LDD  R27,Y+6+1
005d2d 940e 44ce 	CALL _getPropertiesConfig
005d2f 019f      	MOVW R18,R30
                 ; 000B 002F                                     if(res < 0){
005d30 2333      	TST  R19
005d31 f45a      	BRPL _0x160015
                 ; 000B 0030                                         printDebug("<configRead> getPropertiesConfig() failed\r\n");
                +
005d32 e6e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 110 ) )
005d33 e3f4     +LDI R31 , HIGH ( 2 * _0x160000 + ( 110 ) )
005d34 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 110 ) )
005d35 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 110 ) )
                 	__POINTD1FN _0x160000,110
005d36 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 0031                                         free ( cnfgStrc );
005d38 940e a794 	CALL SUBOPT_0x146
                 ; 000B 0032                                         return -3;
005d3a efed      	LDI  R30,LOW(65533)
005d3b efff      	LDI  R31,HIGH(65533)
005d3c c3e7      	RJMP _0x20E005F
                 ; 000B 0033                                     }
                 ; 000B 0034 
                 ; 000B 0035                                     printDebug("\r\n--- READ CONF_PROPERTIES ---\r\n");
                 _0x160015:
                +
005d3d e9e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 154 ) )
005d3e e3f4     +LDI R31 , HIGH ( 2 * _0x160000 + ( 154 ) )
005d3f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 154 ) )
005d40 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 154 ) )
                 	__POINTD1FN _0x160000,154
005d41 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 0036                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceType);
005d43 940e a9d5 	CALL SUBOPT_0x1A6
005d45 940e a524 	CALL SUBOPT_0xDD
005d47 940e 9fd5 	CALL SUBOPT_0x10
                 ; 000B 0037                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->firmwareVersion);
005d49 940e a9d5 	CALL SUBOPT_0x1A6
005d4b 9674      	ADIW R30,20
005d4c 940e a524 	CALL SUBOPT_0xDD
005d4e 940e 9fd5 	CALL SUBOPT_0x10
                 ; 000B 0038                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceName);
005d50 940e a9d5 	CALL SUBOPT_0x1A6
005d52 96b8      	ADIW R30,40
005d53 940e a524 	CALL SUBOPT_0xDD
005d55 940e 9fd5 	CALL SUBOPT_0x10
                 ; 000B 0039                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceID);
005d57 940e a9d5 	CALL SUBOPT_0x1A6
005d59 5be0      	SUBI R30,LOW(-80)
005d5a 4fff      	SBCI R31,HIGH(-80)
005d5b 940e a524 	CALL SUBOPT_0xDD
005d5d 940e 9fd5 	CALL SUBOPT_0x10
                 ; 000B 003A                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->hostName);
005d5f 940e a9d5 	CALL SUBOPT_0x1A6
005d61 59ec      	SUBI R30,LOW(-100)
005d62 4fff      	SBCI R31,HIGH(-100)
005d63 940e a524 	CALL SUBOPT_0xDD
005d65 940e 9fd5 	CALL SUBOPT_0x10
                 ; 000B 003B                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->hostID);
005d67 940e a9d5 	CALL SUBOPT_0x1A6
005d69 57e4      	SUBI R30,LOW(-140)
005d6a 4fff      	SBCI R31,HIGH(-140)
005d6b 940e a524 	CALL SUBOPT_0xDD
005d6d 940e 9fd5 	CALL SUBOPT_0x10
                 ; 000B 003C                                     printDebug("%d\r\n",(signed char) (((struct prop_cnfg_st *)cnfgStrc)->timeZone));
                +
005d6f ebea     +LDI R30 , LOW ( 2 * _0x160000 + ( 192 ) )
005d70 e3f4     +LDI R31 , HIGH ( 2 * _0x160000 + ( 192 ) )
005d71 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 192 ) )
005d72 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 192 ) )
                 	__POINTD1FN _0x160000,192
005d73 940e a64f 	CALL SUBOPT_0x10F
005d75 56a0      	SUBI R26,LOW(-160)
005d76 4fbf      	SBCI R27,HIGH(-160)
005d77 91ec      	LD   R30,X
005d78 940e b51c 	CALL __CBD1
005d7a 940e a8c3 	CALL SUBOPT_0x174
                 ; 000B 003D 
                 ; 000B 003E //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 003F //                                    print_payload((char *)cnfgStrc, sizeof(struct prop_cnfg_st));
                 ; 000B 0040 
                 ; 000B 0041                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct prop_cnfg_st));
005d7c 940e a9da 	CALL SUBOPT_0x1A7
005d7e 940e a53c 	CALL SUBOPT_0xE1
005d80 940e a9df 	CALL SUBOPT_0x1A8
                 ; 000B 0042 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0043 //                                    print_payload((char *)ptr, sizeof(struct prop_cnfg_st));
                 ; 000B 0044 
                 ; 000B 0045                                     free ( cnfgStrc );
                 ; 000B 0046 
                 ; 000B 0047                                     return sizeof(struct prop_cnfg_st);
005d82 eae1      	LDI  R30,LOW(161)
005d83 e0f0      	LDI  R31,HIGH(161)
005d84 c39f      	RJMP _0x20E005F
                 ; 000B 0048 
                 ; 000B 0049         case CONF_OPERATE       :   cnfgStrc = malloc (sizeof(struct oper_cnfg_st));
                 _0x160013:
005d85 32e0      	CPI  R30,LOW(0x20)
005d86 e0a0      	LDI  R26,HIGH(0x20)
005d87 07fa      	CPC  R31,R26
005d88 f011      	BREQ PC+3
005d89 940c 5def 	JMP _0x160016
005d8b e0a8      	LDI  R26,LOW(8)
005d8c 940e a9e2 	CALL SUBOPT_0x1A9
                 ; 000B 004A                                     if(cnfgStrc == NULL){
005d8e f479      	BRNE _0x160017
                 ; 000B 004B                                         printDebug("<configRead> CONF_OPERATE malloc1 failed (%d bytes)\r\n",sizeof(struct oper_cnfg_st));
                +
005d8f ebef     +LDI R30 , LOW ( 2 * _0x160000 + ( 197 ) )
005d90 e3f4     +LDI R31 , HIGH ( 2 * _0x160000 + ( 197 ) )
005d91 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 197 ) )
005d92 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 197 ) )
                 	__POINTD1FN _0x160000,197
005d93 940e b62a 	CALL __PUTPARD1
                +
005d95 e0e8     +LDI R30 , LOW ( 0x8 )
005d96 e0f0     +LDI R31 , HIGH ( 0x8 )
005d97 e060     +LDI R22 , BYTE3 ( 0x8 )
005d98 e070     +LDI R23 , BYTE4 ( 0x8 )
                 	__GETD1N 0x8
005d99 940e a8c3 	CALL SUBOPT_0x174
                 ; 000B 004C                                         return -2;
005d9b efee      	LDI  R30,LOW(65534)
005d9c efff      	LDI  R31,HIGH(65534)
005d9d c386      	RJMP _0x20E005F
                 ; 000B 004D                                     }
                 ; 000B 004E 
                 ; 000B 004F                                     res = getOperatingConfig((struct oper_cnfg_st *) cnfgStrc);
                 _0x160017:
005d9e 81ae      	LDD  R26,Y+6
005d9f 81bf      	LDD  R27,Y+6+1
005da0 940e 4563 	CALL _getOperatingConfig
005da2 019f      	MOVW R18,R30
                 ; 000B 0050                                     if(res < 0){
005da3 2333      	TST  R19
005da4 f45a      	BRPL _0x160018
                 ; 000B 0051                                         printDebug("<configRead> getOperatingConfig() failed\r\n");
                +
005da5 efe5     +LDI R30 , LOW ( 2 * _0x160000 + ( 251 ) )
005da6 e3f4     +LDI R31 , HIGH ( 2 * _0x160000 + ( 251 ) )
005da7 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 251 ) )
005da8 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 251 ) )
                 	__POINTD1FN _0x160000,251
005da9 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 0052                                         free ( cnfgStrc );
005dab 940e a794 	CALL SUBOPT_0x146
                 ; 000B 0053                                         return -3;
005dad efed      	LDI  R30,LOW(65533)
005dae efff      	LDI  R31,HIGH(65533)
005daf c374      	RJMP _0x20E005F
                 ; 000B 0054                                     }
                 ; 000B 0055 
                 ; 000B 0056                                     printDebug("\r\n--- READ CONF_OPERATE ---\r\n");
                 _0x160018:
                +
005db0 e2e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 294 ) )
005db1 e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 294 ) )
005db2 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 294 ) )
005db3 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 294 ) )
                 	__POINTD1FN _0x160000,294
005db4 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 0057                                     printDebug("mode            [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->mode);
                +
005db6 e3ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 324 ) )
005db7 e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 324 ) )
005db8 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 324 ) )
005db9 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 324 ) )
                 	__POINTD1FN _0x160000,324
005dba 940e a64f 	CALL SUBOPT_0x10F
005dbc 91ec      	LD   R30,X
005dbd 940e a073 	CALL SUBOPT_0x27
                 ; 000B 0058                                     printDebug("deviceEnable    [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->deviceEnable);
                +
005dbf e5e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 351 ) )
005dc0 e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 351 ) )
005dc1 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 351 ) )
005dc2 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 351 ) )
                 	__POINTD1FN _0x160000,351
005dc3 940e a654 	CALL SUBOPT_0x110
005dc5 81e1      	LDD  R30,Z+1
005dc6 940e a073 	CALL SUBOPT_0x27
                 ; 000B 0059                                     printDebug("alarmEnable     [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->alarmEnable);
005dc8 940e a9e4 	CALL SUBOPT_0x1AA
005dca 81e2      	LDD  R30,Z+2
005dcb 940e a073 	CALL SUBOPT_0x27
                 ; 000B 005A                                     printDebug("sensorEnable    ");
                +
005dcd e8ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 405 ) )
005dce e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 405 ) )
005dcf e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 405 ) )
005dd0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 405 ) )
                 	__POINTD1FN _0x160000,405
005dd1 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 005B                                     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
005dd3 e000     +LDI R16 , LOW ( 0 )
005dd4 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x16001A:
                +
005dd5 3005     +CPI R16 , LOW ( 5 )
005dd6 e0e0     +LDI R30 , HIGH ( 5 )
005dd7 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
005dd8 f474      	BRGE _0x16001B
                 ; 000B 005C                                         printDebug("[0x%02X]",((struct oper_cnfg_st *)cnfgStrc)->sensorEnable[i]);
005dd9 940e a9e9 	CALL SUBOPT_0x1AB
005ddb 940e a599 	CALL SUBOPT_0xF0
                 ; 000B 005D                                         if(i == (MAX_SENS_CHANNEL-1)){
005ddd e0e4      	LDI  R30,LOW(4)
005dde e0f0      	LDI  R31,HIGH(4)
005ddf 17e0      	CP   R30,R16
005de0 07f1      	CPC  R31,R17
005de1 f411      	BRNE _0x16001C
                 ; 000B 005E                                             printDebug("\r\n");
005de2 940e a9ee 	CALL SUBOPT_0x1AC
                 ; 000B 005F                                         }
                 ; 000B 0060                                     }
                 _0x16001C:
                +
005de4 5f0f     +SUBI R16 , LOW ( - 1 )
005de5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005de6 cfee      	RJMP _0x16001A
                 _0x16001B:
                 ; 000B 0061 
                 ; 000B 0062 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0063 //                                    print_payload((char *)cnfgStrc, sizeof(struct oper_cnfg_st));
                 ; 000B 0064 
                 ; 000B 0065                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct oper_cnfg_st));
005de7 940e a9da 	CALL SUBOPT_0x1A7
005de9 e0a8      	LDI  R26,LOW(8)
005dea 940e a9f4 	CALL SUBOPT_0x1AD
                 ; 000B 0066 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0067 //                                    print_payload((char *)ptr, sizeof(struct oper_cnfg_st));
                 ; 000B 0068 
                 ; 000B 0069                                     free ( cnfgStrc );
                 ; 000B 006A 
                 ; 000B 006B                                     return sizeof(struct oper_cnfg_st);
005dec e0e8      	LDI  R30,LOW(8)
005ded e0f0      	LDI  R31,HIGH(8)
005dee c335      	RJMP _0x20E005F
                 ; 000B 006C 
                 ; 000B 006D         case CONF_SENSOR        :   channel =   (int)cnfg & 0x000F;
                 _0x160016:
005def 33e0      	CPI  R30,LOW(0x30)
005df0 e0a0      	LDI  R26,HIGH(0x30)
005df1 07fa      	CPC  R31,R26
005df2 f011      	BREQ PC+3
005df3 940c 5eae 	JMP _0x16001D
005df5 940e a9f6 	CALL SUBOPT_0x1AE
                 ; 000B 006E 
                 ; 000B 006F                                     cnfgStrc = malloc (sizeof(struct sens_cnfg_st));
005df7 e1ad      	LDI  R26,LOW(29)
005df8 940e a9e2 	CALL SUBOPT_0x1A9
                 ; 000B 0070                                     if(cnfgStrc == NULL){
005dfa f479      	BRNE _0x16001E
                 ; 000B 0071                                         printDebug("<configRead> CONF_SENSOR malloc1 failed (%d bytes)\r\n",sizeof(struct sens_cnfg_st));
                +
005dfb eae9     +LDI R30 , LOW ( 2 * _0x160000 + ( 431 ) )
005dfc e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 431 ) )
005dfd e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 431 ) )
005dfe e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 431 ) )
                 	__POINTD1FN _0x160000,431
005dff 940e b62a 	CALL __PUTPARD1
                +
005e01 e1ed     +LDI R30 , LOW ( 0x1D )
005e02 e0f0     +LDI R31 , HIGH ( 0x1D )
005e03 e060     +LDI R22 , BYTE3 ( 0x1D )
005e04 e070     +LDI R23 , BYTE4 ( 0x1D )
                 	__GETD1N 0x1D
005e05 940e a8c3 	CALL SUBOPT_0x174
                 ; 000B 0072                                         return -2;
005e07 efee      	LDI  R30,LOW(65534)
005e08 efff      	LDI  R31,HIGH(65534)
005e09 c31a      	RJMP _0x20E005F
                 ; 000B 0073                                     }
                 ; 000B 0074 
                 ; 000B 0075                                     res = getSensorConfig(channel, (struct sens_cnfg_st *) cnfgStrc);
                 _0x16001E:
005e0a 940e a8ec 	CALL SUBOPT_0x17D
005e0c 85a8      	LDD  R26,Y+8
005e0d 85b9      	LDD  R27,Y+8+1
005e0e 940e 45d1 	CALL _getSensorConfig
005e10 019f      	MOVW R18,R30
                 ; 000B 0076                                     if(res < 0){
005e11 2333      	TST  R19
005e12 f45a      	BRPL _0x16001F
                 ; 000B 0077                                         printDebug("<configRead> getSensorConfig() failed\r\n");
                +
005e13 edee     +LDI R30 , LOW ( 2 * _0x160000 + ( 484 ) )
005e14 e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 484 ) )
005e15 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 484 ) )
005e16 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 484 ) )
                 	__POINTD1FN _0x160000,484
005e17 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 0078                                         free ( cnfgStrc );
005e19 940e a794 	CALL SUBOPT_0x146
                 ; 000B 0079                                         return -3;
005e1b efed      	LDI  R30,LOW(65533)
005e1c efff      	LDI  R31,HIGH(65533)
005e1d c306      	RJMP _0x20E005F
                 ; 000B 007A                                     }
                 ; 000B 007B 
                 ; 000B 007C                                     printDebug("\r\n--- READ CONF_SENSOR [%d]---\r\n",channel);
                 _0x16001F:
                +
005e1e e0e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 524 ) )
005e1f e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 524 ) )
005e20 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 524 ) )
005e21 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 524 ) )
                 	__POINTD1FN _0x160000,524
005e22 940e a9fd 	CALL SUBOPT_0x1AF
                 ; 000B 007D                                     printDebug("samplingRate    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->samplingRate);
                +
005e24 e2e7     +LDI R30 , LOW ( 2 * _0x160000 + ( 557 ) )
005e25 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 557 ) )
005e26 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 557 ) )
005e27 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 557 ) )
                 	__POINTD1FN _0x160000,557
005e28 940e a64f 	CALL SUBOPT_0x10F
005e2a 940e a029 	CALL SUBOPT_0x1C
005e2c 940e a8c3 	CALL SUBOPT_0x174
                 ; 000B 007E                                     printDebug("reOccurrence    [0x%04X]\r\n",  ((struct sens_cnfg_st *)cnfgStrc)->reOccurrence);
                +
005e2e e3ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 580 ) )
005e2f e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 580 ) )
005e30 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 580 ) )
005e31 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 580 ) )
                 	__POINTD1FN _0x160000,580
005e32 940e a64f 	CALL SUBOPT_0x10F
005e34 9612      	ADIW R26,2
005e35 940e a029 	CALL SUBOPT_0x1C
005e37 940e a8c3 	CALL SUBOPT_0x174
                 ; 000B 007F                                     printDebug("timeStartHour   [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStartHour);
                +
005e39 e5e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 607 ) )
005e3a e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 607 ) )
005e3b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 607 ) )
005e3c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 607 ) )
                 	__POINTD1FN _0x160000,607
005e3d 940e a654 	CALL SUBOPT_0x110
005e3f 81e4      	LDD  R30,Z+4
005e40 940e a073 	CALL SUBOPT_0x27
                 ; 000B 0080                                     printDebug("timeStartMin    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStartMin);
                +
005e42 e7e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 630 ) )
005e43 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 630 ) )
005e44 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 630 ) )
005e45 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 630 ) )
                 	__POINTD1FN _0x160000,630
005e46 940e a654 	CALL SUBOPT_0x110
005e48 81e5      	LDD  R30,Z+5
005e49 940e a073 	CALL SUBOPT_0x27
                 ; 000B 0081                                     printDebug("timeStopHour    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStopHour);
                +
005e4b e8e7     +LDI R30 , LOW ( 2 * _0x160000 + ( 653 ) )
005e4c e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 653 ) )
005e4d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 653 ) )
005e4e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 653 ) )
                 	__POINTD1FN _0x160000,653
005e4f 940e a654 	CALL SUBOPT_0x110
005e51 81e6      	LDD  R30,Z+6
005e52 940e a073 	CALL SUBOPT_0x27
                 ; 000B 0082                                     printDebug("timeStopMin     [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStopMin);
                +
005e54 e9ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 676 ) )
005e55 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 676 ) )
005e56 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 676 ) )
005e57 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 676 ) )
                 	__POINTD1FN _0x160000,676
005e58 940e a654 	CALL SUBOPT_0x110
005e5a 81e7      	LDD  R30,Z+7
005e5b 940e a073 	CALL SUBOPT_0x27
                 ; 000B 0083                                     printDebug("alarmEnable     [0x%02X]\r\n",  ((struct sens_cnfg_st *)cnfgStrc)->alarmEnable);
005e5d 940e a9e4 	CALL SUBOPT_0x1AA
005e5f 85e0      	LDD  R30,Z+8
005e60 940e a073 	CALL SUBOPT_0x27
                 ; 000B 0084                                     printDebug("lowerLimit      [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerLimit);
                +
005e62 ebe5     +LDI R30 , LOW ( 2 * _0x160000 + ( 699 ) )
005e63 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 699 ) )
005e64 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 699 ) )
005e65 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 699 ) )
                 	__POINTD1FN _0x160000,699
005e66 940e a654 	CALL SUBOPT_0x110
005e68 940e a919 	CALL SUBOPT_0x185
005e6a 940e a915 	CALL SUBOPT_0x184
                 ; 000B 0085                                     printDebug("lowerDelay      [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerDelay);
                +
005e6c ecec     +LDI R30 , LOW ( 2 * _0x160000 + ( 722 ) )
005e6d e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 722 ) )
005e6e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 722 ) )
005e6f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 722 ) )
                 	__POINTD1FN _0x160000,722
005e70 940e a64f 	CALL SUBOPT_0x10F
005e72 961d      	ADIW R26,13
005e73 940e a029 	CALL SUBOPT_0x1C
005e75 940e a8c3 	CALL SUBOPT_0x174
                 ; 000B 0086                                     printDebug("lowerExtreme    [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerExtreme);
                +
005e77 eee3     +LDI R30 , LOW ( 2 * _0x160000 + ( 745 ) )
005e78 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 745 ) )
005e79 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 745 ) )
005e7a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 745 ) )
                 	__POINTD1FN _0x160000,745
005e7b 940e a654 	CALL SUBOPT_0x110
                +
005e7d 85a7     +LDD R26 , Z + 15
005e7e 89b0     +LDD R27 , Z + 15 + 1
005e7f 8981     +LDD R24 , Z + 15 + 2
005e80 8992     +LDD R25 , Z + 15 + 3
                 	__GETD2Z 15
005e81 940e a915 	CALL SUBOPT_0x184
                 ; 000B 0087                                     printDebug("upperLimit      [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperLimit);
                +
005e83 efea     +LDI R30 , LOW ( 2 * _0x160000 + ( 768 ) )
005e84 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 768 ) )
005e85 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 768 ) )
005e86 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 768 ) )
                 	__POINTD1FN _0x160000,768
005e87 940e a654 	CALL SUBOPT_0x110
                +
005e89 89a3     +LDD R26 , Z + 19
005e8a 89b4     +LDD R27 , Z + 19 + 1
005e8b 8985     +LDD R24 , Z + 19 + 2
005e8c 8996     +LDD R25 , Z + 19 + 3
                 	__GETD2Z 19
005e8d 940e a915 	CALL SUBOPT_0x184
                 ; 000B 0088                                     printDebug("upperDelay      [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperDelay);
                +
005e8f e1e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 791 ) )
005e90 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 791 ) )
005e91 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 791 ) )
005e92 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 791 ) )
                 	__POINTD1FN _0x160000,791
005e93 940e a64f 	CALL SUBOPT_0x10F
005e95 9657      	ADIW R26,23
005e96 940e a029 	CALL SUBOPT_0x1C
005e98 940e a8c3 	CALL SUBOPT_0x174
                 ; 000B 0089                                     printDebug("upperExtreme    [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperExtreme);
                +
005e9a e2e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 814 ) )
005e9b e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 814 ) )
005e9c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 814 ) )
005e9d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 814 ) )
                 	__POINTD1FN _0x160000,814
005e9e 940e a654 	CALL SUBOPT_0x110
                +
005ea0 8da1     +LDD R26 , Z + 25
005ea1 8db2     +LDD R27 , Z + 25 + 1
005ea2 8d83     +LDD R24 , Z + 25 + 2
005ea3 8d94     +LDD R25 , Z + 25 + 3
                 	__GETD2Z 25
005ea4 940e a915 	CALL SUBOPT_0x184
                 ; 000B 008A 
                 ; 000B 008B //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 008C //                                    print_payload((char *)cnfgStrc, sizeof(struct sens_cnfg_st));
                 ; 000B 008D 
                 ; 000B 008E                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct sens_cnfg_st));
005ea6 940e a9da 	CALL SUBOPT_0x1A7
005ea8 e1ad      	LDI  R26,LOW(29)
005ea9 940e a9f4 	CALL SUBOPT_0x1AD
                 ; 000B 008F //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0090 //                                    print_payload((char *)ptr, sizeof(struct sens_cnfg_st));
                 ; 000B 0091 
                 ; 000B 0092                                     free ( cnfgStrc );
                 ; 000B 0093 
                 ; 000B 0094                                     return sizeof(struct sens_cnfg_st);
005eab e1ed      	LDI  R30,LOW(29)
005eac e0f0      	LDI  R31,HIGH(29)
005ead c276      	RJMP _0x20E005F
                 ; 000B 0095 
                 ; 000B 0096         case CONF_AUXDI         :   channel =   (int)cnfg & 0x000F;
                 _0x16001D:
005eae 34e0      	CPI  R30,LOW(0x40)
005eaf e0a0      	LDI  R26,HIGH(0x40)
005eb0 07fa      	CPC  R31,R26
005eb1 f011      	BREQ PC+3
005eb2 940c 5ef7 	JMP _0x160020
005eb4 940e a9f6 	CALL SUBOPT_0x1AE
                 ; 000B 0097 
                 ; 000B 0098                                     cnfgStrc = malloc (sizeof(struct din_cnfg_st));
005eb6 940e a247 	CALL SUBOPT_0x68
005eb8 940e a9cf 	CALL SUBOPT_0x1A5
                 ; 000B 0099                                     if(cnfgStrc == NULL){
005eba f449      	BRNE _0x160021
                 ; 000B 009A                                         printDebug("<configRead> CONF_AUXDI malloc1 failed (%d bytes)\r\n",sizeof(struct din_cnfg_st));
                +
005ebb e3ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 837 ) )
005ebc e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 837 ) )
005ebd e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 837 ) )
005ebe e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 837 ) )
                 	__POINTD1FN _0x160000,837
005ebf 940e aa02 	CALL SUBOPT_0x1B0
                 ; 000B 009B                                         return -2;
005ec1 efee      	LDI  R30,LOW(65534)
005ec2 efff      	LDI  R31,HIGH(65534)
005ec3 c260      	RJMP _0x20E005F
                 ; 000B 009C                                     }
                 ; 000B 009D 
                 ; 000B 009E                                     res = getAuxDinConfig(channel, (struct din_cnfg_st *) cnfgStrc);
                 _0x160021:
005ec4 940e a8ec 	CALL SUBOPT_0x17D
005ec6 85a8      	LDD  R26,Y+8
005ec7 85b9      	LDD  R27,Y+8+1
005ec8 940e 46b9 	CALL _getAuxDinConfig
005eca 019f      	MOVW R18,R30
                 ; 000B 009F                                     if(res < 0){
005ecb 2333      	TST  R19
005ecc f45a      	BRPL _0x160022
                 ; 000B 00A0                                         printDebug("<configRead> getAuxDinConfig() failed\r\n");
                +
005ecd e7e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 889 ) )
005ece e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 889 ) )
005ecf e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 889 ) )
005ed0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 889 ) )
                 	__POINTD1FN _0x160000,889
005ed1 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 00A1                                         free ( cnfgStrc );
005ed3 940e a794 	CALL SUBOPT_0x146
                 ; 000B 00A2                                         return -3;
005ed5 efed      	LDI  R30,LOW(65533)
005ed6 efff      	LDI  R31,HIGH(65533)
005ed7 c24c      	RJMP _0x20E005F
                 ; 000B 00A3                                     }
                 ; 000B 00A4 
                 ; 000B 00A5                                     printDebug("\r\n--- READ CONF_AUXDI [%d]---\r\n",channel);
                 _0x160022:
                +
005ed8 e9eb     +LDI R30 , LOW ( 2 * _0x160000 + ( 929 ) )
005ed9 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 929 ) )
005eda e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 929 ) )
005edb e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 929 ) )
                 	__POINTD1FN _0x160000,929
005edc 940e a9fd 	CALL SUBOPT_0x1AF
                 ; 000B 00A6                                     printDebug("channelEnable    [0x%02X]\r\n", ((struct din_cnfg_st *)cnfgStrc)->channelEnable);
005ede 940e aa09 	CALL SUBOPT_0x1B1
005ee0 91ec      	LD   R30,X
005ee1 940e a073 	CALL SUBOPT_0x27
                 ; 000B 00A7                                     printDebug("alarmDelay       [%d]\r\n",     ((struct din_cnfg_st *)cnfgStrc)->alarmDelay);
                +
005ee3 ede7     +LDI R30 , LOW ( 2 * _0x160000 + ( 989 ) )
005ee4 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 989 ) )
005ee5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 989 ) )
005ee6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 989 ) )
                 	__POINTD1FN _0x160000,989
005ee7 940e a64f 	CALL SUBOPT_0x10F
005ee9 9611      	ADIW R26,1
005eea 940e a029 	CALL SUBOPT_0x1C
005eec 940e a8c3 	CALL SUBOPT_0x174
                 ; 000B 00A8 
                 ; 000B 00A9 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00AA //                                    print_payload((char *)cnfgStrc, sizeof(struct din_cnfg_st));
                 ; 000B 00AB 
                 ; 000B 00AC                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct din_cnfg_st));
005eee 940e a9da 	CALL SUBOPT_0x1A7
005ef0 940e a247 	CALL SUBOPT_0x68
005ef2 940e a9df 	CALL SUBOPT_0x1A8
                 ; 000B 00AD //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00AE //                                    print_payload((char *)ptr, sizeof(struct din_cnfg_st));
                 ; 000B 00AF 
                 ; 000B 00B0                                     free ( cnfgStrc );
                 ; 000B 00B1 
                 ; 000B 00B2                                     return sizeof(struct din_cnfg_st);
005ef4 e0e3      	LDI  R30,LOW(3)
005ef5 e0f0      	LDI  R31,HIGH(3)
005ef6 c22d      	RJMP _0x20E005F
                 ; 000B 00B3 
                 ; 000B 00B4         case CONF_AUXDO         :   channel =   (int)cnfg & 0x000F;
                 _0x160020:
005ef7 35e0      	CPI  R30,LOW(0x50)
005ef8 e0a0      	LDI  R26,HIGH(0x50)
005ef9 07fa      	CPC  R31,R26
005efa f011      	BREQ PC+3
005efb 940c 5f5b 	JMP _0x160023
005efd 940e a9f6 	CALL SUBOPT_0x1AE
                 ; 000B 00B5 
                 ; 000B 00B6                                     cnfgStrc = malloc (sizeof(struct dout_cnfg_st));
005eff e2a6      	LDI  R26,LOW(38)
005f00 940e a9e2 	CALL SUBOPT_0x1A9
                 ; 000B 00B7                                     if(cnfgStrc == NULL){
005f02 f479      	BRNE _0x160024
                 ; 000B 00B8                                         printDebug("<configRead> CONF_AUXDO malloc1 failed (%d bytes)\r\n",sizeof(struct dout_cnfg_st));
                +
005f03 eeef     +LDI R30 , LOW ( 2 * _0x160000 + ( 1013 ) )
005f04 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1013 ) )
005f05 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1013 ) )
005f06 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1013 ) )
                 	__POINTD1FN _0x160000,1013
005f07 940e b62a 	CALL __PUTPARD1
                +
005f09 e2e6     +LDI R30 , LOW ( 0x26 )
005f0a e0f0     +LDI R31 , HIGH ( 0x26 )
005f0b e060     +LDI R22 , BYTE3 ( 0x26 )
005f0c e070     +LDI R23 , BYTE4 ( 0x26 )
                 	__GETD1N 0x26
005f0d 940e a8c3 	CALL SUBOPT_0x174
                 ; 000B 00B9                                         return -2;
005f0f efee      	LDI  R30,LOW(65534)
005f10 efff      	LDI  R31,HIGH(65534)
005f11 c212      	RJMP _0x20E005F
                 ; 000B 00BA                                     }
                 ; 000B 00BB 
                 ; 000B 00BC                                     res = getAuxDoutConfig(channel, (struct dout_cnfg_st *) cnfgStrc);
                 _0x160024:
005f12 940e a8ec 	CALL SUBOPT_0x17D
005f14 85a8      	LDD  R26,Y+8
005f15 85b9      	LDD  R27,Y+8+1
005f16 940e 46ef 	CALL _getAuxDoutConfig
005f18 019f      	MOVW R18,R30
                 ; 000B 00BD                                     if(res < 0){
005f19 2333      	TST  R19
005f1a f45a      	BRPL _0x160025
                 ; 000B 00BE                                         printDebug("<configRead> getAuxDoutConfig() failed\r\n");
                +
005f1b e2e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 1065 ) )
005f1c e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1065 ) )
005f1d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1065 ) )
005f1e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1065 ) )
                 	__POINTD1FN _0x160000,1065
005f1f 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 00BF                                         free ( cnfgStrc );
005f21 940e a794 	CALL SUBOPT_0x146
                 ; 000B 00C0                                         return -3;
005f23 efed      	LDI  R30,LOW(65533)
005f24 efff      	LDI  R31,HIGH(65533)
005f25 c1fe      	RJMP _0x20E005F
                 ; 000B 00C1                                     }
                 ; 000B 00C2 
                 ; 000B 00C3                                     printDebug("\r\n--- READ CONF_AUXDO [%d]---\r\n",channel);
                 _0x160025:
                +
005f26 e4ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1106 ) )
005f27 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1106 ) )
005f28 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1106 ) )
005f29 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1106 ) )
                 	__POINTD1FN _0x160000,1106
005f2a 940e a9fd 	CALL SUBOPT_0x1AF
                 ; 000B 00C4                                     printDebug("channelEnable     [0x%02X]\r\n",    ((struct dout_cnfg_st *)cnfgStrc)->channelEnable);
005f2c 940e aa0e 	CALL SUBOPT_0x1B2
005f2e 91ec      	LD   R30,X
005f2f 940e a073 	CALL SUBOPT_0x27
                 ; 000B 00C5                                     printDebug("stateOnEvent      [%d]\r\n",        ((struct dout_cnfg_st *)cnfgStrc)->stateOnEvent);
                +
005f31 e8e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1167 ) )
005f32 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1167 ) )
005f33 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1167 ) )
005f34 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1167 ) )
                 	__POINTD1FN _0x160000,1167
005f35 940e a654 	CALL SUBOPT_0x110
005f37 81e1      	LDD  R30,Z+1
005f38 940e a073 	CALL SUBOPT_0x27
                 ; 000B 00C6                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct dout_cnfg_st *)cnfgStrc)->eventSourceNumber);
005f3a 940e aa13 	CALL SUBOPT_0x1B3
005f3c 81e2      	LDD  R30,Z+2
005f3d 940e a073 	CALL SUBOPT_0x27
                 ; 000B 00C7 
                 ; 000B 00C8                                     printDebug("eventSource       ");
005f3f 940e aa18 	CALL SUBOPT_0x1B4
                 ; 000B 00C9                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
005f41 e000     +LDI R16 , LOW ( 0 )
005f42 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160027:
                +
005f43 3203     +CPI R16 , LOW ( 35 )
005f44 e0e0     +LDI R30 , HIGH ( 35 )
005f45 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
005f46 f464      	BRGE _0x160028
                 ; 000B 00CA                                         printDebug("[0x%02X]",((struct dout_cnfg_st *)cnfgStrc)->eventSource[i]);
005f47 940e a9e9 	CALL SUBOPT_0x1AB
005f49 940e a599 	CALL SUBOPT_0xF0
                 ; 000B 00CB                                         if(i == (MAX_EVENT_SOURCE-1)){
005f4b 940e aa1e 	CALL SUBOPT_0x1B5
005f4d f411      	BRNE _0x160029
                 ; 000B 00CC                                             printDebug("\r\n");
005f4e 940e a9ee 	CALL SUBOPT_0x1AC
                 ; 000B 00CD                                         }
                 ; 000B 00CE                                     }
                 _0x160029:
                +
005f50 5f0f     +SUBI R16 , LOW ( - 1 )
005f51 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005f52 cff0      	RJMP _0x160027
                 _0x160028:
                 ; 000B 00CF 
                 ; 000B 00D0 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00D1 //                                    print_payload((char *)cnfgStrc, sizeof(struct dout_cnfg_st));
                 ; 000B 00D2 
                 ; 000B 00D3                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct dout_cnfg_st));
005f53 940e a9da 	CALL SUBOPT_0x1A7
005f55 e2a6      	LDI  R26,LOW(38)
005f56 940e a9f4 	CALL SUBOPT_0x1AD
                 ; 000B 00D4 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00D5 //                                    print_payload((char *)ptr, sizeof(struct dout_cnfg_st));
                 ; 000B 00D6 
                 ; 000B 00D7                                     free ( cnfgStrc );
                 ; 000B 00D8 
                 ; 000B 00D9                                     return sizeof(struct dout_cnfg_st);
005f58 e2e6      	LDI  R30,LOW(38)
005f59 e0f0      	LDI  R31,HIGH(38)
005f5a c1c9      	RJMP _0x20E005F
                 ; 000B 00DA 
                 ; 000B 00DB         case CONF_AUXAI         :   channel =   (int)cnfg & 0x000F;
                 _0x160023:
005f5b 36e0      	CPI  R30,LOW(0x60)
005f5c e0a0      	LDI  R26,HIGH(0x60)
005f5d 07fa      	CPC  R31,R26
005f5e f011      	BREQ PC+3
005f5f 940c 5fa5 	JMP _0x16002A
005f61 940e a9f6 	CALL SUBOPT_0x1AE
                 ; 000B 00DC 
                 ; 000B 00DD                                     cnfgStrc = malloc (sizeof(struct ain_cnfg_st));
005f63 e0a5      	LDI  R26,LOW(5)
005f64 940e a9e2 	CALL SUBOPT_0x1A9
                 ; 000B 00DE                                     if(cnfgStrc == NULL){
005f66 f479      	BRNE _0x16002B
                 ; 000B 00DF                                         printDebug("<configRead> CONF_AUXAI malloc1 failed (%d bytes)\r\n",sizeof(struct ain_cnfg_st));
                +
005f67 ecee     +LDI R30 , LOW ( 2 * _0x160000 + ( 1236 ) )
005f68 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1236 ) )
005f69 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1236 ) )
005f6a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1236 ) )
                 	__POINTD1FN _0x160000,1236
005f6b 940e b62a 	CALL __PUTPARD1
                +
005f6d e0e5     +LDI R30 , LOW ( 0x5 )
005f6e e0f0     +LDI R31 , HIGH ( 0x5 )
005f6f e060     +LDI R22 , BYTE3 ( 0x5 )
005f70 e070     +LDI R23 , BYTE4 ( 0x5 )
                 	__GETD1N 0x5
005f71 940e a8c3 	CALL SUBOPT_0x174
                 ; 000B 00E0                                         return -2;
005f73 efee      	LDI  R30,LOW(65534)
005f74 efff      	LDI  R31,HIGH(65534)
005f75 c1ae      	RJMP _0x20E005F
                 ; 000B 00E1                                     }
                 ; 000B 00E2 
                 ; 000B 00E3                                     res = getAuxAinConfig(channel, (struct ain_cnfg_st *) cnfgStrc);
                 _0x16002B:
005f76 940e a8ec 	CALL SUBOPT_0x17D
005f78 85a8      	LDD  R26,Y+8
005f79 85b9      	LDD  R27,Y+8+1
005f7a 940e 4789 	CALL _getAuxAinConfig
005f7c 019f      	MOVW R18,R30
                 ; 000B 00E4                                     if(res < 0){
005f7d 2333      	TST  R19
005f7e f45a      	BRPL _0x16002C
                 ; 000B 00E5                                         printDebug("<configRead> getAuxAinConfig() failed\r\n");
                +
005f7f e0e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 1288 ) )
005f80 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1288 ) )
005f81 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1288 ) )
005f82 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1288 ) )
                 	__POINTD1FN _0x160000,1288
005f83 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 00E6                                         free ( cnfgStrc );
005f85 940e a794 	CALL SUBOPT_0x146
                 ; 000B 00E7                                         return -3;
005f87 efed      	LDI  R30,LOW(65533)
005f88 efff      	LDI  R31,HIGH(65533)
005f89 c19a      	RJMP _0x20E005F
                 ; 000B 00E8                                     }
                 ; 000B 00E9 
                 ; 000B 00EA                                     printDebug("\r\n--- READ CONF_AUXAI [%d]---\r\n",channel);
                 _0x16002C:
                +
005f8a e2ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 1328 ) )
005f8b e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1328 ) )
005f8c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1328 ) )
005f8d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1328 ) )
                 	__POINTD1FN _0x160000,1328
005f8e 940e a9fd 	CALL SUBOPT_0x1AF
                 ; 000B 00EB                                     printDebug("channelEnable    [0x%02X]\r\n", ((struct ain_cnfg_st *)cnfgStrc)->channelEnable);
005f90 940e aa09 	CALL SUBOPT_0x1B1
005f92 91ec      	LD   R30,X
005f93 940e a073 	CALL SUBOPT_0x27
                 ; 000B 00EC                                     printDebug("alarmDelay       [%f]\r\n",     ((struct ain_cnfg_st *)cnfgStrc)->alarmLevel);
                +
005f95 e4ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 1360 ) )
005f96 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1360 ) )
005f97 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1360 ) )
005f98 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1360 ) )
                 	__POINTD1FN _0x160000,1360
005f99 940e a654 	CALL SUBOPT_0x110
005f9b 940e aa23 	CALL SUBOPT_0x1B6
                 ; 000B 00ED 
                 ; 000B 00EE //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00EF //                                    print_payload((char *)cnfgStrc, sizeof(struct ain_cnfg_st));
                 ; 000B 00F0 
                 ; 000B 00F1                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct ain_cnfg_st));
005f9d 940e a9da 	CALL SUBOPT_0x1A7
005f9f e0a5      	LDI  R26,LOW(5)
005fa0 940e a9f4 	CALL SUBOPT_0x1AD
                 ; 000B 00F2 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00F3 //                                    print_payload((char *)ptr, sizeof(struct ain_cnfg_st));
                 ; 000B 00F4 
                 ; 000B 00F5                                     free ( cnfgStrc );
                 ; 000B 00F6 
                 ; 000B 00F7                                     return sizeof(struct ain_cnfg_st);
005fa2 e0e5      	LDI  R30,LOW(5)
005fa3 e0f0      	LDI  R31,HIGH(5)
005fa4 c17f      	RJMP _0x20E005F
                 ; 000B 00F8 
                 ; 000B 00F9         case CONF_AUXAO         :   channel =   (int)cnfg & 0x000F;
                 _0x16002A:
005fa5 37e0      	CPI  R30,LOW(0x70)
005fa6 e0a0      	LDI  R26,HIGH(0x70)
005fa7 07fa      	CPC  R31,R26
005fa8 f011      	BREQ PC+3
005fa9 940c 600c 	JMP _0x16002D
005fab 940e a9f6 	CALL SUBOPT_0x1AE
                 ; 000B 00FA 
                 ; 000B 00FB                                     cnfgStrc = malloc (sizeof(struct aout_cnfg_st));
005fad e2a9      	LDI  R26,LOW(41)
005fae 940e a9e2 	CALL SUBOPT_0x1A9
                 ; 000B 00FC                                     if(cnfgStrc == NULL){
005fb0 f479      	BRNE _0x16002E
                 ; 000B 00FD                                         printDebug("<configRead> CONF_AUXAO malloc1 failed (%d bytes)\r\n",sizeof(struct aout_cnfg_st));
                +
005fb1 e6e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 1384 ) )
005fb2 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1384 ) )
005fb3 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1384 ) )
005fb4 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1384 ) )
                 	__POINTD1FN _0x160000,1384
005fb5 940e b62a 	CALL __PUTPARD1
                +
005fb7 e2e9     +LDI R30 , LOW ( 0x29 )
005fb8 e0f0     +LDI R31 , HIGH ( 0x29 )
005fb9 e060     +LDI R22 , BYTE3 ( 0x29 )
005fba e070     +LDI R23 , BYTE4 ( 0x29 )
                 	__GETD1N 0x29
005fbb 940e a8c3 	CALL SUBOPT_0x174
                 ; 000B 00FE                                         return -2;
005fbd efee      	LDI  R30,LOW(65534)
005fbe efff      	LDI  R31,HIGH(65534)
005fbf c164      	RJMP _0x20E005F
                 ; 000B 00FF                                     }
                 ; 000B 0100 
                 ; 000B 0101                                     res = getAuxAoutConfig(channel, (struct aout_cnfg_st *) cnfgStrc);
                 _0x16002E:
005fc0 940e a8ec 	CALL SUBOPT_0x17D
005fc2 85a8      	LDD  R26,Y+8
005fc3 85b9      	LDD  R27,Y+8+1
005fc4 940e 47c4 	CALL _getAuxAoutConfig
005fc6 019f      	MOVW R18,R30
                 ; 000B 0102                                     if(res < 0){
005fc7 2333      	TST  R19
005fc8 f45a      	BRPL _0x16002F
                 ; 000B 0103                                         printDebug("<configRead> getAuxAoutConfig() failed\r\n");
                +
005fc9 e9e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1436 ) )
005fca e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1436 ) )
005fcb e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1436 ) )
005fcc e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1436 ) )
                 	__POINTD1FN _0x160000,1436
005fcd 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 0104                                         free ( cnfgStrc );
005fcf 940e a794 	CALL SUBOPT_0x146
                 ; 000B 0105                                         return -3;
005fd1 efed      	LDI  R30,LOW(65533)
005fd2 efff      	LDI  R31,HIGH(65533)
005fd3 c150      	RJMP _0x20E005F
                 ; 000B 0106                                     }
                 ; 000B 0107 
                 ; 000B 0108                                     printDebug("\r\n--- READ CONF_AUXAO [%d]---\r\n",channel);
                 _0x16002F:
                +
005fd4 ebef     +LDI R30 , LOW ( 2 * _0x160000 + ( 1477 ) )
005fd5 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1477 ) )
005fd6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1477 ) )
005fd7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1477 ) )
                 	__POINTD1FN _0x160000,1477
005fd8 940e a9fd 	CALL SUBOPT_0x1AF
                 ; 000B 0109                                     printDebug("channelEnable     [0x%02X]\r\n",    ((struct aout_cnfg_st *)cnfgStrc)->channelEnable);
005fda 940e aa0e 	CALL SUBOPT_0x1B2
005fdc 91ec      	LD   R30,X
005fdd 940e a073 	CALL SUBOPT_0x27
                 ; 000B 010A                                     printDebug("levelOnEvent      [%f]\r\n",        ((struct aout_cnfg_st *)cnfgStrc)->levelOnEvent);
                +
005fdf edef     +LDI R30 , LOW ( 2 * _0x160000 + ( 1509 ) )
005fe0 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1509 ) )
005fe1 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1509 ) )
005fe2 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1509 ) )
                 	__POINTD1FN _0x160000,1509
005fe3 940e a654 	CALL SUBOPT_0x110
005fe5 940e aa23 	CALL SUBOPT_0x1B6
                 ; 000B 010B                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct aout_cnfg_st *)cnfgStrc)->eventSourceNumber);
005fe7 940e aa13 	CALL SUBOPT_0x1B3
005fe9 81e5      	LDD  R30,Z+5
005fea 940e a073 	CALL SUBOPT_0x27
                 ; 000B 010C 
                 ; 000B 010D                                     printDebug("eventSource       ");
005fec 940e aa18 	CALL SUBOPT_0x1B4
                 ; 000B 010E                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
005fee e000     +LDI R16 , LOW ( 0 )
005fef e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160031:
                +
005ff0 3203     +CPI R16 , LOW ( 35 )
005ff1 e0e0     +LDI R30 , HIGH ( 35 )
005ff2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
005ff3 f484      	BRGE _0x160032
                 ; 000B 010F                                         printDebug("[0x%02X]",((struct aout_cnfg_st *)cnfgStrc)->eventSource[i]);
005ff4 940e a9e9 	CALL SUBOPT_0x1AB
005ff6 9636      	ADIW R30,6
005ff7 0fe0      	ADD  R30,R16
005ff8 1ff1      	ADC  R31,R17
005ff9 81e0      	LD   R30,Z
005ffa 940e a073 	CALL SUBOPT_0x27
                 ; 000B 0110                                         if(i == (MAX_EVENT_SOURCE-1)){
005ffc 940e aa1e 	CALL SUBOPT_0x1B5
005ffe f411      	BRNE _0x160033
                 ; 000B 0111                                             printDebug("\r\n");
005fff 940e a9ee 	CALL SUBOPT_0x1AC
                 ; 000B 0112                                         }
                 ; 000B 0113                                     }
                 _0x160033:
                +
006001 5f0f     +SUBI R16 , LOW ( - 1 )
006002 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006003 cfec      	RJMP _0x160031
                 _0x160032:
                 ; 000B 0114 
                 ; 000B 0115 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0116 //                                    print_payload((char *)cnfgStrc, sizeof(struct aout_cnfg_st));
                 ; 000B 0117 
                 ; 000B 0118                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct aout_cnfg_st));
006004 940e a9da 	CALL SUBOPT_0x1A7
006006 e2a9      	LDI  R26,LOW(41)
006007 940e a9f4 	CALL SUBOPT_0x1AD
                 ; 000B 0119 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 011A //                                    print_payload((char *)ptr, sizeof(struct aout_cnfg_st));
                 ; 000B 011B 
                 ; 000B 011C                                     free ( cnfgStrc );
                 ; 000B 011D 
                 ; 000B 011E                                     return sizeof(struct aout_cnfg_st);
006009 e2e9      	LDI  R30,LOW(41)
00600a e0f0      	LDI  R31,HIGH(41)
00600b c118      	RJMP _0x20E005F
                 ; 000B 011F 
                 ; 000B 0120         case CONF_BUZZER        :   cnfgStrc = malloc (sizeof(struct buzz_cnfg_st));
                 _0x16002D:
00600c 38e0      	CPI  R30,LOW(0x80)
00600d e0a0      	LDI  R26,HIGH(0x80)
00600e 07fa      	CPC  R31,R26
00600f f011      	BREQ PC+3
006010 940c 6069 	JMP _0x160034
006012 e2a5      	LDI  R26,LOW(37)
006013 940e a9e2 	CALL SUBOPT_0x1A9
                 ; 000B 0121                                     if(cnfgStrc == NULL){
006015 f479      	BRNE _0x160035
                 ; 000B 0122                                         printDebug("<configRead> CONF_BUZZER malloc1 failed (%d bytes)\r\n",sizeof(struct buzz_cnfg_st));
                +
006016 efe8     +LDI R30 , LOW ( 2 * _0x160000 + ( 1534 ) )
006017 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1534 ) )
006018 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1534 ) )
006019 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1534 ) )
                 	__POINTD1FN _0x160000,1534
00601a 940e b62a 	CALL __PUTPARD1
                +
00601c e2e5     +LDI R30 , LOW ( 0x25 )
00601d e0f0     +LDI R31 , HIGH ( 0x25 )
00601e e060     +LDI R22 , BYTE3 ( 0x25 )
00601f e070     +LDI R23 , BYTE4 ( 0x25 )
                 	__GETD1N 0x25
006020 940e a8c3 	CALL SUBOPT_0x174
                 ; 000B 0123                                         return -2;
006022 efee      	LDI  R30,LOW(65534)
006023 efff      	LDI  R31,HIGH(65534)
006024 c0ff      	RJMP _0x20E005F
                 ; 000B 0124                                     }
                 ; 000B 0125 
                 ; 000B 0126                                     res = getBuzzerConfig((struct buzz_cnfg_st *) cnfgStrc);
                 _0x160035:
006025 81ae      	LDD  R26,Y+6
006026 81bf      	LDD  R27,Y+6+1
006027 940e 4849 	CALL _getBuzzerConfig
006029 019f      	MOVW R18,R30
                 ; 000B 0127                                     if(res < 0){
00602a 2333      	TST  R19
00602b f45a      	BRPL _0x160036
                 ; 000B 0128                                         printDebug("<configRead> getBuzzerConfig() failed\r\n");
                +
00602c e2ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 1587 ) )
00602d e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1587 ) )
00602e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1587 ) )
00602f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1587 ) )
                 	__POINTD1FN _0x160000,1587
006030 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 0129                                         free ( cnfgStrc );
006032 940e a794 	CALL SUBOPT_0x146
                 ; 000B 012A                                         return -3;
006034 efed      	LDI  R30,LOW(65533)
006035 efff      	LDI  R31,HIGH(65533)
006036 c0ed      	RJMP _0x20E005F
                 ; 000B 012B                                     }
                 ; 000B 012C 
                 ; 000B 012D                                     printDebug("\r\n--- READ CONF_BUZZER ---\r\n");
                 _0x160036:
                +
006037 e5e5     +LDI R30 , LOW ( 2 * _0x160000 + ( 1627 ) )
006038 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1627 ) )
006039 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1627 ) )
00603a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1627 ) )
                 	__POINTD1FN _0x160000,1627
00603b 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 012E                                     printDebug("enable            [0x%02X]\r\n",    ((struct buzz_cnfg_st *)cnfgStrc)->enable);
                +
00603d e7e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 1656 ) )
00603e e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1656 ) )
00603f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1656 ) )
006040 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1656 ) )
                 	__POINTD1FN _0x160000,1656
006041 940e a64f 	CALL SUBOPT_0x10F
006043 91ec      	LD   R30,X
006044 940e a073 	CALL SUBOPT_0x27
                 ; 000B 012F                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct buzz_cnfg_st *)cnfgStrc)->eventSourceNumber);
006046 940e aa13 	CALL SUBOPT_0x1B3
006048 81e1      	LDD  R30,Z+1
006049 940e a073 	CALL SUBOPT_0x27
                 ; 000B 0130 
                 ; 000B 0131                                     printDebug("eventSource       ");
00604b 940e aa18 	CALL SUBOPT_0x1B4
                 ; 000B 0132                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
00604d e000     +LDI R16 , LOW ( 0 )
00604e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160038:
                +
00604f 3203     +CPI R16 , LOW ( 35 )
006050 e0e0     +LDI R30 , HIGH ( 35 )
006051 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
006052 f474      	BRGE _0x160039
                 ; 000B 0133                                         printDebug("[0x%02X]",((struct buzz_cnfg_st *)cnfgStrc)->eventSource[i]);
006053 940e a9e9 	CALL SUBOPT_0x1AB
006055 940e a65e 	CALL SUBOPT_0x112
006057 940e a073 	CALL SUBOPT_0x27
                 ; 000B 0134                                         if(i == (MAX_EVENT_SOURCE - 1)){
006059 940e aa1e 	CALL SUBOPT_0x1B5
00605b f411      	BRNE _0x16003A
                 ; 000B 0135                                             printDebug("\r\n");
00605c 940e a9ee 	CALL SUBOPT_0x1AC
                 ; 000B 0136                                         }
                 ; 000B 0137                                     }
                 _0x16003A:
                +
00605e 5f0f     +SUBI R16 , LOW ( - 1 )
00605f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006060 cfee      	RJMP _0x160038
                 _0x160039:
                 ; 000B 0138 
                 ; 000B 0139 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 013A //                                    print_payload((char *)cnfgStrc, sizeof(struct buzz_cnfg_st));
                 ; 000B 013B 
                 ; 000B 013C                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct buzz_cnfg_st));
006061 940e a9da 	CALL SUBOPT_0x1A7
006063 e2a5      	LDI  R26,LOW(37)
006064 940e a9f4 	CALL SUBOPT_0x1AD
                 ; 000B 013D //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 013E //                                    print_payload((char *)ptr, sizeof(struct buzz_cnfg_st));
                 ; 000B 013F 
                 ; 000B 0140                                     free ( cnfgStrc );
                 ; 000B 0141 
                 ; 000B 0142                                     return sizeof(struct buzz_cnfg_st);
006066 e2e5      	LDI  R30,LOW(37)
006067 e0f0      	LDI  R31,HIGH(37)
006068 c0bb      	RJMP _0x20E005F
                 ; 000B 0143 
                 ; 000B 0144         case CONF_ENVALARM      :   cnfgStrc = malloc (sizeof(struct alm_cnfg_st));
                 _0x160034:
006069 39e0      	CPI  R30,LOW(0x90)
00606a e0a0      	LDI  R26,HIGH(0x90)
00606b 07fa      	CPC  R31,R26
00606c f011      	BREQ PC+3
00606d 940c 60d7 	JMP _0x16003B
00606f e1a2      	LDI  R26,LOW(18)
006070 940e a9e2 	CALL SUBOPT_0x1A9
                 ; 000B 0145                                     if(cnfgStrc == NULL){
006072 f479      	BRNE _0x16003C
                 ; 000B 0146                                         printDebug("<configRead> CONF_ENVALARM malloc1 failed (%d bytes)\r\n",sizeof(struct alm_cnfg_st));
                +
006073 e8ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 1685 ) )
006074 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1685 ) )
006075 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1685 ) )
006076 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1685 ) )
                 	__POINTD1FN _0x160000,1685
006077 940e b62a 	CALL __PUTPARD1
                +
006079 e1e2     +LDI R30 , LOW ( 0x12 )
00607a e0f0     +LDI R31 , HIGH ( 0x12 )
00607b e060     +LDI R22 , BYTE3 ( 0x12 )
00607c e070     +LDI R23 , BYTE4 ( 0x12 )
                 	__GETD1N 0x12
00607d 940e a8c3 	CALL SUBOPT_0x174
                 ; 000B 0147                                         return -2;
00607f efee      	LDI  R30,LOW(65534)
006080 efff      	LDI  R31,HIGH(65534)
006081 c0a2      	RJMP _0x20E005F
                 ; 000B 0148                                     }
                 ; 000B 0149 
                 ; 000B 014A                                     res = getEnvAlarmConfig((struct alm_cnfg_st *) cnfgStrc);
                 _0x16003C:
006082 81ae      	LDD  R26,Y+6
006083 81bf      	LDD  R27,Y+6+1
006084 940e 48e2 	CALL _getEnvAlarmConfig
006086 019f      	MOVW R18,R30
                 ; 000B 014B                                     if(res < 0){
006087 2333      	TST  R19
006088 f45a      	BRPL _0x16003D
                 ; 000B 014C                                         printDebug("<configRead> getEnvAlarmConfig() failed\r\n");
                +
006089 ece6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1740 ) )
00608a e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1740 ) )
00608b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1740 ) )
00608c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1740 ) )
                 	__POINTD1FN _0x160000,1740
00608d 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 014D                                         free ( cnfgStrc );
00608f 940e a794 	CALL SUBOPT_0x146
                 ; 000B 014E                                         return -3;
006091 efed      	LDI  R30,LOW(65533)
006092 efff      	LDI  R31,HIGH(65533)
006093 c090      	RJMP _0x20E005F
                 ; 000B 014F                                     }
                 ; 000B 0150 
                 ; 000B 0151                                     printDebug("\r\n--- READ CONF_ENVALARM ---\r\n");
                 _0x16003D:
                +
006094 efe0     +LDI R30 , LOW ( 2 * _0x160000 + ( 1782 ) )
006095 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1782 ) )
006096 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1782 ) )
006097 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1782 ) )
                 	__POINTD1FN _0x160000,1782
006098 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 0152                                     printDebug("gsmRSSILevel      [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->gsmRSSILevel);
                +
00609a e0ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 1813 ) )
00609b e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1813 ) )
00609c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1813 ) )
00609d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1813 ) )
                 	__POINTD1FN _0x160000,1813
00609e 940e a64f 	CALL SUBOPT_0x10F
0060a0 940e a668 	CALL SUBOPT_0x114
                 ; 000B 0153                                     printDebug("gsmCreditBalance  [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->gsmCreditBalance);
                +
0060a2 e2e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 1838 ) )
0060a3 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1838 ) )
0060a4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1838 ) )
0060a5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1838 ) )
                 	__POINTD1FN _0x160000,1838
0060a6 940e a64f 	CALL SUBOPT_0x10F
0060a8 9614      	ADIW R26,4
0060a9 940e a66d 	CALL SUBOPT_0x115
                 ; 000B 0154                                     printDebug("batteryLevel      [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->batteryLevel);
                +
0060ab e4e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 1863 ) )
0060ac e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1863 ) )
0060ad e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1863 ) )
0060ae e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1863 ) )
                 	__POINTD1FN _0x160000,1863
0060af 940e a654 	CALL SUBOPT_0x110
0060b1 940e a675 	CALL SUBOPT_0x117
                 ; 000B 0155                                     printDebug("commSignalLevel   [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->commSignalLevel);
                +
0060b3 e5ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 1888 ) )
0060b4 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1888 ) )
0060b5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1888 ) )
0060b6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1888 ) )
                 	__POINTD1FN _0x160000,1888
0060b7 940e a654 	CALL SUBOPT_0x110
0060b9 940e a67c 	CALL SUBOPT_0x118
                 ; 000B 0156                                     printDebug("commLostDelay     [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->commLostDelay);
                +
0060bb e7e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 1913 ) )
0060bc e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1913 ) )
0060bd e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1913 ) )
0060be e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1913 ) )
                 	__POINTD1FN _0x160000,1913
0060bf 940e a64f 	CALL SUBOPT_0x10F
0060c1 961e      	ADIW R26,14
0060c2 940e a66d 	CALL SUBOPT_0x115
                 ; 000B 0157                                     printDebug("memoryMin         [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->memoryMin);
                +
0060c4 e8ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1938 ) )
0060c5 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1938 ) )
0060c6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1938 ) )
0060c7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1938 ) )
                 	__POINTD1FN _0x160000,1938
0060c8 940e a64f 	CALL SUBOPT_0x10F
0060ca 9650      	ADIW R26,16
0060cb 940e a029 	CALL SUBOPT_0x1C
0060cd 940e a8c3 	CALL SUBOPT_0x174
                 ; 000B 0158 
                 ; 000B 0159 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 015A //                                    print_payload((char *)cnfgStrc, sizeof(struct alm_cnfg_st));
                 ; 000B 015B 
                 ; 000B 015C                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct alm_cnfg_st));
0060cf 940e a9da 	CALL SUBOPT_0x1A7
0060d1 e1a2      	LDI  R26,LOW(18)
0060d2 940e a9f4 	CALL SUBOPT_0x1AD
                 ; 000B 015D //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 015E //                                    print_payload((char *)ptr, sizeof(struct alm_cnfg_st));
                 ; 000B 015F 
                 ; 000B 0160                                     free ( cnfgStrc );
                 ; 000B 0161 
                 ; 000B 0162                                     return sizeof(struct alm_cnfg_st);
0060d4 e1e2      	LDI  R30,LOW(18)
0060d5 e0f0      	LDI  R31,HIGH(18)
0060d6 c04d      	RJMP _0x20E005F
                 ; 000B 0163         case CONF_STATREPORT    :   cnfgStrc = malloc (sizeof(struct stat_cnfg_st));
                 _0x16003B:
0060d7 3ae0      	CPI  R30,LOW(0xA0)
0060d8 e0a0      	LDI  R26,HIGH(0xA0)
0060d9 07fa      	CPC  R31,R26
0060da f011      	BREQ PC+3
0060db 940c 611d 	JMP _0x160041
0060dd 940e a247 	CALL SUBOPT_0x68
0060df 940e a9cf 	CALL SUBOPT_0x1A5
                 ; 000B 0164                                     if(cnfgStrc == NULL){
0060e1 f449      	BRNE _0x16003F
                 ; 000B 0165                                         printDebug("<configRead> CONF_STATREPORT malloc1 failed (%d bytes)\r\n",sizeof(struct stat_cnfg_st));
                +
0060e2 eae5     +LDI R30 , LOW ( 2 * _0x160000 + ( 1963 ) )
0060e3 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1963 ) )
0060e4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1963 ) )
0060e5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1963 ) )
                 	__POINTD1FN _0x160000,1963
0060e6 940e aa02 	CALL SUBOPT_0x1B0
                 ; 000B 0166                                         return -2;
0060e8 efee      	LDI  R30,LOW(65534)
0060e9 efff      	LDI  R31,HIGH(65534)
0060ea c039      	RJMP _0x20E005F
                 ; 000B 0167                                     }
                 ; 000B 0168 
                 ; 000B 0169                                     res = getStatusReportConfig((struct stat_cnfg_st *) cnfgStrc);
                 _0x16003F:
0060eb 81ae      	LDD  R26,Y+6
0060ec 81bf      	LDD  R27,Y+6+1
0060ed 940e 4975 	CALL _getStatusReportConfig
0060ef 019f      	MOVW R18,R30
                 ; 000B 016A                                     if(res < 0){
0060f0 2333      	TST  R19
0060f1 f45a      	BRPL _0x160040
                 ; 000B 016B                                         printDebug("<configRead> getStatusReportConfig() failed\r\n");
                +
0060f2 edee     +LDI R30 , LOW ( 2 * _0x160000 + ( 2020 ) )
0060f3 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2020 ) )
0060f4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2020 ) )
0060f5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2020 ) )
                 	__POINTD1FN _0x160000,2020
0060f6 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 016C                                         free ( cnfgStrc );
0060f8 940e a794 	CALL SUBOPT_0x146
                 ; 000B 016D                                         return -3;
0060fa efed      	LDI  R30,LOW(65533)
0060fb efff      	LDI  R31,HIGH(65533)
0060fc c027      	RJMP _0x20E005F
                 ; 000B 016E                                     }
                 ; 000B 016F 
                 ; 000B 0170                                     printDebug("\r\n--- READ CONF_STATREPORT ---\r\n");
                 _0x160040:
                +
0060fd e0ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2066 ) )
0060fe e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2066 ) )
0060ff e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2066 ) )
006100 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2066 ) )
                 	__POINTD1FN _0x160000,2066
006101 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 0171                                     printDebug("accm      [0x%02X]\r\n",((struct stat_cnfg_st *)cnfgStrc)->accm);
                +
006103 e2ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 2099 ) )
006104 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2099 ) )
006105 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2099 ) )
006106 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2099 ) )
                 	__POINTD1FN _0x160000,2099
006107 940e a64f 	CALL SUBOPT_0x10F
006109 91ec      	LD   R30,X
00610a 940e a073 	CALL SUBOPT_0x27
                 ; 000B 0172                                     printDebug("intv      [%d]\r\n",    ((struct stat_cnfg_st *)cnfgStrc)->intv);
                +
00610c e4e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 2120 ) )
00610d e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2120 ) )
00610e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2120 ) )
00610f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2120 ) )
                 	__POINTD1FN _0x160000,2120
006110 940e a64f 	CALL SUBOPT_0x10F
006112 9611      	ADIW R26,1
006113 940e a029 	CALL SUBOPT_0x1C
006115 940e a8c3 	CALL SUBOPT_0x174
                 ; 000B 0173 
                 ; 000B 0174 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0175 //                                    print_payload((char *)cnfgStrc, sizeof(struct stat_cnfg_st));
                 ; 000B 0176 
                 ; 000B 0177                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct stat_cnfg_st));
006117 940e a9da 	CALL SUBOPT_0x1A7
006119 940e a247 	CALL SUBOPT_0x68
00611b 940e a9df 	CALL SUBOPT_0x1A8
                 ; 000B 0178 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0179 //                                    print_payload((char *)ptr, sizeof(struct stat_cnfg_st));
                 ; 000B 017A 
                 ; 000B 017B                                     free ( cnfgStrc );
                 ; 000B 017C         default                 :   printDebug("<configRead> unknown configuration type [0x%02X]\r\n",type);
                 _0x160041:
00611d 940e aa28 	CALL SUBOPT_0x1B7
00611f 2fe5      	MOV  R30,R21
006120 940e a073 	CALL SUBOPT_0x27
                 ; 000B 017D                                     return -1;
006122 efef      	LDI  R30,LOW(65535)
006123 efff      	LDI  R31,HIGH(65535)
                 ; 000B 017E     }
                 ; 000B 017F 
                 ; 000B 0180     return 0;
                 _0x20E005F:
006124 940e b6a1 	CALL __LOADLOCR6
006126 962d      	ADIW R28,13
006127 9508      	RET
                 ; 000B 0181 
                 ; 000B 0182 }
                 ;/*============================================================*/
                 ;int configWrite(unsigned char cnfg, unsigned char *conf, int len)
                 ; 000B 0185 {
                 _configWrite:
                 ; 000B 0186     int res = 0;
                 ; 000B 0187     unsigned char   type            = 0x00;
                 ; 000B 0188     int             channel         = 0;
                 ; 000B 0189 
                 ; 000B 018A     type    =   cnfg & 0xF0;
006128 93ba      	ST   -Y,R27
006129 93aa      	ST   -Y,R26
00612a 940e a0e9 	CALL SUBOPT_0x36
                 ;	cnfg -> Y+10
                 ;	*conf -> Y+8
                 ;	len -> Y+6
                 ;	res -> R16,R17
                 ;	type -> R19
                 ;	channel -> R20,R21
00612c e030      	LDI  R19,0
                +
00612d e040     +LDI R20 , LOW ( 0 )
00612e e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00612f 85ea      	LDD  R30,Y+10
006130 7fe0      	ANDI R30,LOW(0xF0)
006131 2f3e      	MOV  R19,R30
                 ; 000B 018B 
                 ; 000B 018C     printDebug("\r\n --- WRITE CONFIG packet (%d)--- \r\n",len);
                +
006132 e8e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2188 ) )
006133 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2188 ) )
006134 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2188 ) )
006135 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2188 ) )
                 	__POINTD1FN _0x160000,2188
006136 940e a654 	CALL SUBOPT_0x110
006138 940e a4fe 	CALL SUBOPT_0xD5
                 ; 000B 018D     print_payload(conf,len);
00613a 940e a8ec 	CALL SUBOPT_0x17D
00613c 85a8      	LDD  R26,Y+8
00613d 85b9      	LDD  R27,Y+8+1
00613e 940e 7d2a 	CALL _print_payload
                 ; 000B 018E 
                 ; 000B 018F     switch( type ){
006140 2fe3      	MOV  R30,R19
006141 940e a0ee 	CALL SUBOPT_0x37
                 ; 000B 0190         case CONF_PROPERTIES    :   printDebug("\r\n--- Write CONF_PROPERTIES ---");
006143 f4b9      	BRNE _0x160045
                +
006144 eaec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2226 ) )
006145 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2226 ) )
006146 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2226 ) )
006147 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2226 ) )
                 	__POINTD1FN _0x160000,2226
006148 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 0191 
                 ; 000B 0192                                     res = setPropertiesConfig((struct prop_cnfg_st *)conf);
00614a 85a8      	LDD  R26,Y+8
00614b 85b9      	LDD  R27,Y+8+1
00614c 940e 49b2 	CALL _setPropertiesConfig
00614e 018f      	MOVW R16,R30
                 ; 000B 0193                                     if(res < 0){
00614f 2311      	TST  R17
006150 f44a      	BRPL _0x160046
                 ; 000B 0194                                         printDebug("<configWrite> setPropertiesConfig() failed\r\n");
                +
006151 ecec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2258 ) )
006152 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2258 ) )
006153 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2258 ) )
006154 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2258 ) )
                 	__POINTD1FN _0x160000,2258
006155 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 0195                                         return -3;
006157 efed      	LDI  R30,LOW(65533)
006158 efff      	LDI  R31,HIGH(65533)
006159 c107      	RJMP _0x20E005E
                 ; 000B 0196                                     }
                 ; 000B 0197                                     break;
                 _0x160046:
00615a c104      	RJMP _0x160044
                 ; 000B 0198         case CONF_OPERATE       :   printDebug("\r\n--- Write CONF_OPERATE ---");
                 _0x160045:
00615b 32e0      	CPI  R30,LOW(0x20)
00615c e0a0      	LDI  R26,HIGH(0x20)
00615d 07fa      	CPC  R31,R26
00615e f4b9      	BRNE _0x160047
                +
00615f efe9     +LDI R30 , LOW ( 2 * _0x160000 + ( 2303 ) )
006160 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2303 ) )
006161 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2303 ) )
006162 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2303 ) )
                 	__POINTD1FN _0x160000,2303
006163 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 0199 
                 ; 000B 019A                                     res = setOperatingConfig((struct oper_cnfg_st *)conf);
006165 85a8      	LDD  R26,Y+8
006166 85b9      	LDD  R27,Y+8+1
006167 940e 4a29 	CALL _setOperatingConfig
006169 018f      	MOVW R16,R30
                 ; 000B 019B                                     if(res < 0){
00616a 2311      	TST  R17
00616b f44a      	BRPL _0x160048
                 ; 000B 019C                                         printDebug("<configWrite> setOperatingConfig() failed\r\n");
                +
00616c e1e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2332 ) )
00616d e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2332 ) )
00616e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2332 ) )
00616f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2332 ) )
                 	__POINTD1FN _0x160000,2332
006170 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 019D                                         return -3;
006172 efed      	LDI  R30,LOW(65533)
006173 efff      	LDI  R31,HIGH(65533)
006174 c0ec      	RJMP _0x20E005E
                 ; 000B 019E                                     }
                 ; 000B 019F                                     break;
                 _0x160048:
006175 c0e9      	RJMP _0x160044
                 ; 000B 01A0         case CONF_SENSOR        :   channel =   (int)cnfg & 0x000F;
                 _0x160047:
006176 33e0      	CPI  R30,LOW(0x30)
006177 e0a0      	LDI  R26,HIGH(0x30)
006178 07fa      	CPC  R31,R26
006179 f4c9      	BRNE _0x160049
00617a 940e aa2f 	CALL SUBOPT_0x1B8
                 ; 000B 01A1                                     printDebug("\r\n--- Write CONF_SENSOR (%d) ---",channel);
                +
00617c e4e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 2376 ) )
00617d e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2376 ) )
00617e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2376 ) )
00617f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2376 ) )
                 	__POINTD1FN _0x160000,2376
006180 940e a0f6 	CALL SUBOPT_0x39
                 ; 000B 01A2 
                 ; 000B 01A3                                     res = setSensorConfig(channel,(struct sens_cnfg_st *)conf);
006182 940e aa35 	CALL SUBOPT_0x1B9
006184 940e 4a9d 	CALL _setSensorConfig
006186 018f      	MOVW R16,R30
                 ; 000B 01A4                                     if(res < 0){
006187 2311      	TST  R17
006188 f44a      	BRPL _0x16004A
                 ; 000B 01A5                                         printDebug("<configWrite> setSensorConfig() failed\r\n");
                +
006189 e6e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 2409 ) )
00618a e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2409 ) )
00618b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2409 ) )
00618c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2409 ) )
                 	__POINTD1FN _0x160000,2409
00618d 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 01A6                                         return -3;
00618f efed      	LDI  R30,LOW(65533)
006190 efff      	LDI  R31,HIGH(65533)
006191 c0cf      	RJMP _0x20E005E
                 ; 000B 01A7                                     }
                 ; 000B 01A8                                     break;
                 _0x16004A:
006192 c0cc      	RJMP _0x160044
                 ; 000B 01A9         case CONF_AUXDI         :   channel =   (int)cnfg & 0x000F;
                 _0x160049:
006193 34e0      	CPI  R30,LOW(0x40)
006194 e0a0      	LDI  R26,HIGH(0x40)
006195 07fa      	CPC  R31,R26
006196 f4c9      	BRNE _0x16004B
006197 940e aa2f 	CALL SUBOPT_0x1B8
                 ; 000B 01AA                                     printDebug("\r\n--- Write CONF_AUXDI (%d) ---",channel);
                +
006199 e8ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2450 ) )
00619a e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2450 ) )
00619b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2450 ) )
00619c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2450 ) )
                 	__POINTD1FN _0x160000,2450
00619d 940e a0f6 	CALL SUBOPT_0x39
                 ; 000B 01AB 
                 ; 000B 01AC                                     res = setAuxDinConfig(channel,(struct din_cnfg_st *)conf);
00619f 940e aa35 	CALL SUBOPT_0x1B9
0061a1 940e 4bf8 	CALL _setAuxDinConfig
0061a3 018f      	MOVW R16,R30
                 ; 000B 01AD                                     if(res < 0){
0061a4 2311      	TST  R17
0061a5 f44a      	BRPL _0x16004C
                 ; 000B 01AE                                         printDebug("<configWrite> setAuxDinConfig() failed\r\n");
                +
0061a6 eaec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2482 ) )
0061a7 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2482 ) )
0061a8 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2482 ) )
0061a9 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2482 ) )
                 	__POINTD1FN _0x160000,2482
0061aa 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 01AF                                         return -3;
0061ac efed      	LDI  R30,LOW(65533)
0061ad efff      	LDI  R31,HIGH(65533)
0061ae c0b2      	RJMP _0x20E005E
                 ; 000B 01B0                                     }
                 ; 000B 01B1                                     break;
                 _0x16004C:
0061af c0af      	RJMP _0x160044
                 ; 000B 01B2         case CONF_AUXDO         :   channel =   (int)cnfg & 0x000F;
                 _0x16004B:
0061b0 35e0      	CPI  R30,LOW(0x50)
0061b1 e0a0      	LDI  R26,HIGH(0x50)
0061b2 07fa      	CPC  R31,R26
0061b3 f4c9      	BRNE _0x16004D
0061b4 940e aa2f 	CALL SUBOPT_0x1B8
                 ; 000B 01B3                                     printDebug("\r\n--- Write CONF_AUXDO (%d) ---",channel);
                +
0061b6 ede5     +LDI R30 , LOW ( 2 * _0x160000 + ( 2523 ) )
0061b7 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2523 ) )
0061b8 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2523 ) )
0061b9 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2523 ) )
                 	__POINTD1FN _0x160000,2523
0061ba 940e a0f6 	CALL SUBOPT_0x39
                 ; 000B 01B4 
                 ; 000B 01B5                                     res = setAuxDoutConfig(channel,(struct dout_cnfg_st *)conf);
0061bc 940e aa35 	CALL SUBOPT_0x1B9
0061be 940e 4c40 	CALL _setAuxDoutConfig
0061c0 018f      	MOVW R16,R30
                 ; 000B 01B6                                     if(res < 0){
0061c1 2311      	TST  R17
0061c2 f44a      	BRPL _0x16004E
                 ; 000B 01B7                                         printDebug("<configWrite> setAuxDoutConfig() failed\r\n");
                +
0061c3 efe5     +LDI R30 , LOW ( 2 * _0x160000 + ( 2555 ) )
0061c4 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2555 ) )
0061c5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2555 ) )
0061c6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2555 ) )
                 	__POINTD1FN _0x160000,2555
0061c7 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 01B8                                         return -3;
0061c9 efed      	LDI  R30,LOW(65533)
0061ca efff      	LDI  R31,HIGH(65533)
0061cb c095      	RJMP _0x20E005E
                 ; 000B 01B9                                     }
                 ; 000B 01BA                                     break;
                 _0x16004E:
0061cc c092      	RJMP _0x160044
                 ; 000B 01BB         case CONF_AUXAI         :   channel =   (int)cnfg & 0x000F;
                 _0x16004D:
0061cd 36e0      	CPI  R30,LOW(0x60)
0061ce e0a0      	LDI  R26,HIGH(0x60)
0061cf 07fa      	CPC  R31,R26
0061d0 f4c9      	BRNE _0x16004F
0061d1 940e aa2f 	CALL SUBOPT_0x1B8
                 ; 000B 01BC                                     printDebug("\r\n--- Write CONF_AUXAI (%d) ---",channel);
                +
0061d3 e1ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 2597 ) )
0061d4 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2597 ) )
0061d5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2597 ) )
0061d6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2597 ) )
                 	__POINTD1FN _0x160000,2597
0061d7 940e a0f6 	CALL SUBOPT_0x39
                 ; 000B 01BD 
                 ; 000B 01BE                                     res = setAuxAinConfig(channel,(struct ain_cnfg_st *)conf);
0061d9 940e aa35 	CALL SUBOPT_0x1B9
0061db 940e 4cc6 	CALL _setAuxAinConfig
0061dd 018f      	MOVW R16,R30
                 ; 000B 01BF                                     if(res < 0){
0061de 2311      	TST  R17
0061df f44a      	BRPL _0x160050
                 ; 000B 01C0                                         printDebug("<configWrite> setAuxAinConfig() failed\r\n");
                +
0061e0 e3ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 2629 ) )
0061e1 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2629 ) )
0061e2 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2629 ) )
0061e3 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2629 ) )
                 	__POINTD1FN _0x160000,2629
0061e4 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 01C1                                         return -3;
0061e6 efed      	LDI  R30,LOW(65533)
0061e7 efff      	LDI  R31,HIGH(65533)
0061e8 c078      	RJMP _0x20E005E
                 ; 000B 01C2                                     }
                 ; 000B 01C3                                     break;
                 _0x160050:
0061e9 c075      	RJMP _0x160044
                 ; 000B 01C4         case CONF_AUXAO         :   channel =   (int)cnfg & 0x000F;
                 _0x16004F:
0061ea 37e0      	CPI  R30,LOW(0x70)
0061eb e0a0      	LDI  R26,HIGH(0x70)
0061ec 07fa      	CPC  R31,R26
0061ed f4c9      	BRNE _0x160051
0061ee 940e aa2f 	CALL SUBOPT_0x1B8
                 ; 000B 01C5                                     printDebug("\r\n--- Write CONF_AUXAO (%d) ---",channel);
                +
0061f0 e6e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 2670 ) )
0061f1 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2670 ) )
0061f2 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2670 ) )
0061f3 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2670 ) )
                 	__POINTD1FN _0x160000,2670
0061f4 940e a0f6 	CALL SUBOPT_0x39
                 ; 000B 01C6 
                 ; 000B 01C7                                     res = setAuxAoutConfig(channel,(struct aout_cnfg_st *)conf);
0061f6 940e aa35 	CALL SUBOPT_0x1B9
0061f8 940e 4d06 	CALL _setAuxAoutConfig
0061fa 018f      	MOVW R16,R30
                 ; 000B 01C8                                     if(res < 0){
0061fb 2311      	TST  R17
0061fc f44a      	BRPL _0x160052
                 ; 000B 01C9                                         printDebug("<configWrite> setAuxAoutConfig() failed\r\n");
                +
0061fd e8e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 2702 ) )
0061fe e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2702 ) )
0061ff e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2702 ) )
006200 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2702 ) )
                 	__POINTD1FN _0x160000,2702
006201 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 01CA                                         return -3;
006203 efed      	LDI  R30,LOW(65533)
006204 efff      	LDI  R31,HIGH(65533)
006205 c05b      	RJMP _0x20E005E
                 ; 000B 01CB                                     }
                 ; 000B 01CC                                     break;
                 _0x160052:
006206 c058      	RJMP _0x160044
                 ; 000B 01CD         case CONF_BUZZER        :   printDebug("\r\n--- Write CONF_BUZZER ---");
                 _0x160051:
006207 38e0      	CPI  R30,LOW(0x80)
006208 e0a0      	LDI  R26,HIGH(0x80)
006209 07fa      	CPC  R31,R26
00620a f4b9      	BRNE _0x160053
                +
00620b ebe2     +LDI R30 , LOW ( 2 * _0x160000 + ( 2744 ) )
00620c e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2744 ) )
00620d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2744 ) )
00620e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2744 ) )
                 	__POINTD1FN _0x160000,2744
00620f 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 01CE 
                 ; 000B 01CF                                     res = setBuzzerConfig((struct buzz_cnfg_st *)conf);
006211 85a8      	LDD  R26,Y+8
006212 85b9      	LDD  R27,Y+8+1
006213 940e 4d99 	CALL _setBuzzerConfig
006215 018f      	MOVW R16,R30
                 ; 000B 01D0                                     if(res < 0){
006216 2311      	TST  R17
006217 f44a      	BRPL _0x160054
                 ; 000B 01D1                                         printDebug("<configWrite> setBuzzerConfig() failed\r\n");
                +
006218 ecee     +LDI R30 , LOW ( 2 * _0x160000 + ( 2772 ) )
006219 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2772 ) )
00621a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2772 ) )
00621b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2772 ) )
                 	__POINTD1FN _0x160000,2772
00621c 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 01D2                                         return -3;
00621e efed      	LDI  R30,LOW(65533)
00621f efff      	LDI  R31,HIGH(65533)
006220 c040      	RJMP _0x20E005E
                 ; 000B 01D3                                     }
                 ; 000B 01D4                                     break;
                 _0x160054:
006221 c03d      	RJMP _0x160044
                 ; 000B 01D5         case CONF_ENVALARM      :   printDebug("\r\n--- Write CONF_ENVALARM ---");
                 _0x160053:
006222 39e0      	CPI  R30,LOW(0x90)
006223 e0a0      	LDI  R26,HIGH(0x90)
006224 07fa      	CPC  R31,R26
006225 f4b9      	BRNE _0x160055
                +
006226 efe7     +LDI R30 , LOW ( 2 * _0x160000 + ( 2813 ) )
006227 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2813 ) )
006228 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2813 ) )
006229 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2813 ) )
                 	__POINTD1FN _0x160000,2813
00622a 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 01D6 
                 ; 000B 01D7                                     res = setEnvAlarmConfig((struct alm_cnfg_st *)conf);
00622c 85a8      	LDD  R26,Y+8
00622d 85b9      	LDD  R27,Y+8+1
00622e 940e 4dfd 	CALL _setEnvAlarmConfig
006230 018f      	MOVW R16,R30
                 ; 000B 01D8                                     if(res < 0){
006231 2311      	TST  R17
006232 f44a      	BRPL _0x160056
                 ; 000B 01D9                                         printDebug("<configWrite> setEnvAlarmConfig() failed\r\n");
                +
006233 e1e5     +LDI R30 , LOW ( 2 * _0x160000 + ( 2843 ) )
006234 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2843 ) )
006235 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2843 ) )
006236 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2843 ) )
                 	__POINTD1FN _0x160000,2843
006237 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 01DA                                         return -3;
006239 efed      	LDI  R30,LOW(65533)
00623a efff      	LDI  R31,HIGH(65533)
00623b c025      	RJMP _0x20E005E
                 ; 000B 01DB                                     }
                 ; 000B 01DC                                     break;
                 _0x160056:
00623c c022      	RJMP _0x160044
                 ; 000B 01DD         case CONF_STATREPORT    :   printDebug("\r\n--- Write CONF_STATREPORT ---");
                 _0x160055:
00623d 3ae0      	CPI  R30,LOW(0xA0)
00623e e0a0      	LDI  R26,HIGH(0xA0)
00623f 07fa      	CPC  R31,R26
006240 f4b1      	BRNE _0x160059
                +
006241 e4e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 2886 ) )
006242 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2886 ) )
006243 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2886 ) )
006244 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2886 ) )
                 	__POINTD1FN _0x160000,2886
006245 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 01DE 
                 ; 000B 01DF                                     res = setStatusReportConfig((struct stat_cnfg_st *)conf);
006247 85a8      	LDD  R26,Y+8
006248 85b9      	LDD  R27,Y+8+1
006249 940e 4e7a 	CALL _setStatusReportConfig
00624b 018f      	MOVW R16,R30
                 ; 000B 01E0                                     if(res < 0){
00624c 2311      	TST  R17
00624d f44a      	BRPL _0x160058
                 ; 000B 01E1                                         printDebug("<configWrite> setStatusReportConfig() failed\r\n");
                +
00624e e6e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 2918 ) )
00624f e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2918 ) )
006250 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2918 ) )
006251 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2918 ) )
                 	__POINTD1FN _0x160000,2918
006252 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 01E2                                         return -3;
006254 efed      	LDI  R30,LOW(65533)
006255 efff      	LDI  R31,HIGH(65533)
006256 c00a      	RJMP _0x20E005E
                 ; 000B 01E3                                     }
                 ; 000B 01E4 
                 ; 000B 01E5         default                 :   printDebug("<configRead> unknown configuration type [0x%02X]\r\n",type);
                 _0x160058:
                 _0x160059:
006257 940e aa28 	CALL SUBOPT_0x1B7
006259 2fe3      	MOV  R30,R19
00625a 940e a073 	CALL SUBOPT_0x27
                 ; 000B 01E6                                     return -1;
00625c efef      	LDI  R30,LOW(65535)
00625d efff      	LDI  R31,HIGH(65535)
00625e c002      	RJMP _0x20E005E
                 ; 000B 01E7     }
                 _0x160044:
                 ; 000B 01E8     return 0;
00625f e0e0      	LDI  R30,LOW(0)
006260 e0f0      	LDI  R31,HIGH(0)
                 _0x20E005E:
006261 940e b6a1 	CALL __LOADLOCR6
006263 962b      	ADIW R28,11
006264 9508      	RET
                 ; 000B 01E9 }
                 ;/*============================================================*/
                 ;int setLogManipulateSchema(unsigned char accd, unsigned long int tStart, unsigned long int tStop)
                 ; 000B 01EC {
                 _setLogManipulateSchema:
                 ; 000B 01ED     if(tStop < tStart){
006265 940e b62f 	CALL __PUTPARD2
                 ;	accd -> Y+8
                 ;	tStart -> Y+4
                 ;	tStop -> Y+0
006267 940e a2ac 	CALL SUBOPT_0x77
006269 940e a2bf 	CALL SUBOPT_0x7A
00626b 940e b695 	CALL __CPD21
00626d f468      	BRSH _0x16005A
                 ; 000B 01EE         printDebug("<setLogManipulateSchema> time period error start[%ld] - stop[%ld]\r\n",tStart,tStop);
                +
00626e e8ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 2965 ) )
00626f e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2965 ) )
006270 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2965 ) )
006271 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2965 ) )
                 	__POINTD1FN _0x160000,2965
006272 940e aa3a 	CALL SUBOPT_0x1BA
006274 940e aa3a 	CALL SUBOPT_0x1BA
006276 940e a038 	CALL SUBOPT_0x1F
                 ; 000B 01EF         return -1;
006278 efef      	LDI  R30,LOW(65535)
006279 efff      	LDI  R31,HIGH(65535)
00627a c0e3      	RJMP _0x20E005D
                 ; 000B 01F0     }
                 ; 000B 01F1 
                 ; 000B 01F2     return 0;
                 _0x16005A:
00627b e0e0      	LDI  R30,LOW(0)
00627c e0f0      	LDI  R31,HIGH(0)
00627d c0e0      	RJMP _0x20E005D
                 ; 000B 01F3 }
                 ;/*============================================================*/
                 ;int setTimeSyncSchema(unsigned char *timeData)
                 ; 000B 01F6 {
                 _setTimeSyncSchema:
                 ; 000B 01F7     int res;
                 ; 000B 01F8     unsigned long int unixTime = 0x00000000;
                 ; 000B 01F9 
                 ; 000B 01FA     memcpy(&unixTime,timeData,sizeof(unixTime));
00627e 940e a9cc 	CALL SUBOPT_0x1A4
006280 931a      	ST   -Y,R17
006281 930a      	ST   -Y,R16
                 ;	*timeData -> Y+6
                 ;	res -> R16,R17
                 ;	unixTime -> Y+2
006282 940e aa3e 	CALL SUBOPT_0x1BB
006284 85e8      	LDD  R30,Y+8
006285 85f9      	LDD  R31,Y+8+1
006286 940e a10b 	CALL SUBOPT_0x3C
                 ; 000B 01FB 
                 ; 000B 01FC     if(unixTime == 0){
006288 940e aa43 	CALL SUBOPT_0x1BC
00628a f451      	BRNE _0x16005B
                 ; 000B 01FD         printDebug("<setTimeSyncSchema> Got 0 Unix time stamp\r\n");
                +
00628b ede3     +LDI R30 , LOW ( 2 * _0x160000 + ( 3033 ) )
00628c e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3033 ) )
00628d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3033 ) )
00628e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3033 ) )
                 	__POINTD1FN _0x160000,3033
00628f 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 01FE         return -1;
006291 efef      	LDI  R30,LOW(65535)
006292 efff      	LDI  R31,HIGH(65535)
006293 940c 6642 	JMP  _0x20E0059
                 ; 000B 01FF     }
                 ; 000B 0200 
                 ; 000B 0201     printDebug("<setTimeSyncSchema> Received time sync. packet %ld\r\n",unixTime);
                 _0x16005B:
                +
006295 efef     +LDI R30 , LOW ( 2 * _0x160000 + ( 3077 ) )
006296 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3077 ) )
006297 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3077 ) )
006298 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3077 ) )
                 	__POINTD1FN _0x160000,3077
006299 940e aa47 	CALL SUBOPT_0x1BD
                 ; 000B 0202 
                 ; 000B 0203     res = RTC_setBinary( unixTime );
00629b 940e a3b4 	CALL SUBOPT_0xA1
00629d 940e 436b 	CALL _RTC_setBinary
00629f 018f      	MOVW R16,R30
                 ; 000B 0204     if( res < 0 ){
0062a0 2311      	TST  R17
0062a1 f452      	BRPL _0x16005C
                 ; 000B 0205         printDebug("<setTimeSyncSchema> RTC_setBinary(%ld) failed\r\n", unixTime);
                +
0062a2 e3e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 3130 ) )
0062a3 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3130 ) )
0062a4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3130 ) )
0062a5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3130 ) )
                 	__POINTD1FN _0x160000,3130
0062a6 940e aa47 	CALL SUBOPT_0x1BD
                 ; 000B 0206         return -1;
0062a8 efef      	LDI  R30,LOW(65535)
0062a9 efff      	LDI  R31,HIGH(65535)
0062aa 940c 6642 	JMP  _0x20E0059
                 ; 000B 0207     }
                 ; 000B 0208 
                 ; 000B 0209     return 0;
                 _0x16005C:
0062ac e0e0      	LDI  R30,LOW(0)
0062ad e0f0      	LDI  R31,HIGH(0)
0062ae 940c 6642 	JMP  _0x20E0059
                 ; 000B 020A }
                 ;/*============================================================*/
                 ;int setMuteAlarm(unsigned long int period)
                 ; 000B 020D {
                 _setMuteAlarm:
                 ; 000B 020E     int res;
                 ; 000B 020F 
                 ; 000B 0210     if(period == 0){
0062b0 940e aa4b 	CALL SUBOPT_0x1BE
                 ;	period -> Y+2
                 ;	res -> R16,R17
0062b2 940e aa43 	CALL SUBOPT_0x1BC
0062b4 f439      	BRNE _0x16005D
                 ; 000B 0211         printDebug("<setMuteAlarm> permanent mute alarm\r\n");
                +
0062b5 e6e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 3178 ) )
0062b6 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3178 ) )
0062b7 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3178 ) )
0062b8 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3178 ) )
                 	__POINTD1FN _0x160000,3178
0062b9 940e 9f66 	CALL SUBOPT_0x2
                 ; 000B 0212     }
                 ; 000B 0213     else if(((period < 300) || (period > 86400))){
0062bb c024      	RJMP _0x16005E
                 _0x16005D:
0062bc 940e a3b4 	CALL SUBOPT_0xA1
                +
0062be 32ac     +CPI R26 , LOW ( 0x12C )
0062bf e0e1     +LDI R30 , HIGH ( 0x12C )
0062c0 07be     +CPC R27 , R30
0062c1 e0e0     +LDI R30 , BYTE3 ( 0x12C )
0062c2 078e     +CPC R24 , R30
0062c3 e0e0     +LDI R30 , BYTE4 ( 0x12C )
0062c4 079e     +CPC R25 , R30
                 	__CPD2N 0x12C
0062c5 f050      	BRLO _0x160060
0062c6 940e a3b4 	CALL SUBOPT_0xA1
                +
0062c8 38a1     +CPI R26 , LOW ( 0x15181 )
0062c9 e5e1     +LDI R30 , HIGH ( 0x15181 )
0062ca 07be     +CPC R27 , R30
0062cb e0e1     +LDI R30 , BYTE3 ( 0x15181 )
0062cc 078e     +CPC R24 , R30
0062cd e0e0     +LDI R30 , BYTE4 ( 0x15181 )
0062ce 079e     +CPC R25 , R30
                 	__CPD2N 0x15181
0062cf f050      	BRLO _0x16005F
                 _0x160060:
                 ; 000B 0214         printDebug("<setMuteAlarm> invalid period (%ld)\r\n", period);
                +
0062d0 e8ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 3216 ) )
0062d1 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3216 ) )
0062d2 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3216 ) )
0062d3 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3216 ) )
                 	__POINTD1FN _0x160000,3216
0062d4 940e aa47 	CALL SUBOPT_0x1BD
                 ; 000B 0215         return -1;
0062d6 efef      	LDI  R30,LOW(65535)
0062d7 efff      	LDI  R31,HIGH(65535)
0062d8 940c 6493 	JMP  _0x20E005B
                 ; 000B 0216     }
                 ; 000B 0217     else{
                 _0x16005F:
                 ; 000B 0218         printDebug("<setMuteAlarm> mute alarm for %ld second\r\n",period);
                +
0062da ebe0     +LDI R30 , LOW ( 2 * _0x160000 + ( 3254 ) )
0062db e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3254 ) )
0062dc e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3254 ) )
0062dd e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3254 ) )
                 	__POINTD1FN _0x160000,3254
0062de 940e aa47 	CALL SUBOPT_0x1BD
                 ; 000B 0219     }
                 _0x16005E:
                 ; 000B 021A 
                 ; 000B 021B     res = ALARM_mute( period );
0062e0 940e a3b4 	CALL SUBOPT_0xA1
0062e2 940e 6f85 	CALL _ALARM_mute
0062e4 018f      	MOVW R16,R30
                 ; 000B 021C     if( res < 0 ){
0062e5 2311      	TST  R17
0062e6 f452      	BRPL _0x160063
                 ; 000B 021D         printDebug("<setMuteAlarm> ALARM_mute(%ld) failed\r\n", period);
                +
0062e7 edeb     +LDI R30 , LOW ( 2 * _0x160000 + ( 3297 ) )
0062e8 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3297 ) )
0062e9 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3297 ) )
0062ea e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3297 ) )
                 	__POINTD1FN _0x160000,3297
0062eb 940e aa47 	CALL SUBOPT_0x1BD
                 ; 000B 021E         return -1;
0062ed efef      	LDI  R30,LOW(65535)
0062ee efff      	LDI  R31,HIGH(65535)
0062ef 940c 6493 	JMP  _0x20E005B
                 ; 000B 021F     }
                 ; 000B 0220 
                 ; 000B 0221     return 0;
                 _0x160063:
0062f1 940c 6491 	JMP  _0x20E005A
                 ; 000B 0222 }
                 ;/*============================================================*/
                 ;int configConfirm(void)
                 ; 000B 0225 {
                 _configConfirm:
                 ; 000B 0226     return 0;
0062f3 e0e0      	LDI  R30,LOW(0)
0062f4 e0f0      	LDI  R31,HIGH(0)
0062f5 9508      	RET
                 ; 000B 0227 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "ethqueue.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "debug.h"
                 ;
                 ;#define MAX_SESS_LIST   100
                 ;
                 ;struct ethqueue eth_waitQueue[ETH_MAX_WAIT_QUEUE];
                 ;char   ETH_waitQCount = 0;
                 ;
                 ;char   sess_list[MAX_SESS_LIST];
                 ;int    last_sess_id = 0;
                 ;
                 ;/*============================================================*/
                 ;int ETH_addWaitQueue(char id, char *pktptr, int len, int timeout)
                 ; 000C 0011 {
                 
                 	.CSEG
                 _ETH_addWaitQueue:
                 ; 000C 0012     int slot;
                 ; 000C 0013 
                 ; 000C 0014     slot = ETH_findFreeSlotWaitQueue();
0062f6 940e a285 	CALL SUBOPT_0x71
                 ;	id -> Y+8
                 ;	*pktptr -> Y+6
                 ;	len -> Y+4
                 ;	timeout -> Y+2
                 ;	slot -> R16,R17
0062f8 d0d7      	RCALL _ETH_findFreeSlotWaitQueue
0062f9 2f0e      	MOV  R16,R30
0062fa 2711      	CLR  R17
                 ; 000C 0015     if(slot < 0){
0062fb 2311      	TST  R17
0062fc f44a      	BRPL _0x180003
                 ; 000C 0016         printDebug("\r\n\r\n<ETH_addWaitQueue> WARNING : Wait queue FULL\r\n\r\n");
                +
0062fd e0e8     +LDI R30 , LOW ( 2 * _0x180000 + ( 0 ) )
0062fe e4f1     +LDI R31 , HIGH ( 2 * _0x180000 + ( 0 ) )
0062ff e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 0 ) )
006300 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 0 ) )
                 	__POINTD1FN _0x180000,0
006301 940e 9f66 	CALL SUBOPT_0x2
                 ; 000C 0017         return -1;
006303 efef      	LDI  R30,LOW(65535)
006304 efff      	LDI  R31,HIGH(65535)
006305 c056      	RJMP _0x20E005C
                 ; 000C 0018     }
                 ; 000C 0019 
                 ; 000C 001A 
                 ; 000C 001B     eth_waitQueue[slot].packetData = (char *) malloc(len);
                 _0x180003:
006306 940e a7f7 	CALL SUBOPT_0x157
                +
006308 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
006309 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
00630a 93ff      	PUSH R31
00630b 93ef      	PUSH R30
00630c 81ac      	LDD  R26,Y+4
00630d 81bd      	LDD  R27,Y+4+1
00630e 940e 846d 	CALL _malloc
006310 91af      	POP  R26
006311 91bf      	POP  R27
006312 93ed      	ST   X+,R30
006313 93fc      	ST   X,R31
                 ; 000C 001C     if(eth_waitQueue[slot].packetData == NULL)
006314 940e a7f7 	CALL SUBOPT_0x157
006316 940e a834 	CALL SUBOPT_0x15E
006318 9730      	SBIW R30,0
006319 f449      	BRNE _0x180004
                 ; 000C 001D     {
                 ; 000C 001E         printDebug("<ETH_addWaitQueue> malloc(%d) failed\r\n",len);
                +
00631a e3ed     +LDI R30 , LOW ( 2 * _0x180000 + ( 53 ) )
00631b e4f1     +LDI R31 , HIGH ( 2 * _0x180000 + ( 53 ) )
00631c e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 53 ) )
00631d e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 53 ) )
                 	__POINTD1FN _0x180000,53
00631e 940e a5f6 	CALL SUBOPT_0x100
                 ; 000C 001F         return -1;
006320 efef      	LDI  R30,LOW(65535)
006321 efff      	LDI  R31,HIGH(65535)
006322 c039      	RJMP _0x20E005C
                 ; 000C 0020     }
                 ; 000C 0021 
                 ; 000C 0022     memcpy( eth_waitQueue[slot].packetData, pktptr, len );
                 _0x180004:
006323 940e a7f7 	CALL SUBOPT_0x157
006325 940e a834 	CALL SUBOPT_0x15E
006327 940e aa50 	CALL SUBOPT_0x1BF
006329 85a8      	LDD  R26,Y+8
00632a 85b9      	LDD  R27,Y+8+1
00632b 940e 848f 	CALL _memcpy
                 ; 000C 0023 
                 ; 000C 0024     eth_waitQueue[slot].packetLen   = len;
00632d 940e a7f7 	CALL SUBOPT_0x157
                +
00632f 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
006330 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
006331 81ac      	LDD  R26,Y+4
006332 83a0      	STD  Z+0,R26
                 ; 000C 0025     eth_waitQueue[slot].packetID    = id;
006333 940e a7f7 	CALL SUBOPT_0x157
                +
006335 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
006336 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
006337 85a8      	LDD  R26,Y+8
006338 83a0      	STD  Z+0,R26
                 ; 000C 0026     eth_waitQueue[slot].retryCount  = 0;
006339 940e a7f7 	CALL SUBOPT_0x157
00633b 940e aa53 	CALL SUBOPT_0x1C0
                 ; 000C 0027     eth_waitQueue[slot].timeout     = timeout;
00633d 940e a7f7 	CALL SUBOPT_0x157
                +
00633f 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
006340 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
006341 81aa      	LDD  R26,Y+2
006342 81bb      	LDD  R27,Y+2+1
006343 83a0      	STD  Z+0,R26
006344 83b1      	STD  Z+1,R27
                 ; 000C 0028 
                 ; 000C 0029     //eth_waitQueue[slot].retryTime   = 0;
                 ; 000C 002A     TIMER_setTimer(&(eth_waitQueue[slot].retryTime), eth_waitQueue[slot].timeout);
006345 940e a7f7 	CALL SUBOPT_0x157
006347 940e a826 	CALL SUBOPT_0x15C
006349 940e a82b 	CALL SUBOPT_0x15D
                 ; 000C 002B 
                 ; 000C 002C     ETH_waitQCount++;
00634b 9473      	INC  R7
                 ; 000C 002D     printDebug("\r\n                                     Added (%02X) to eth_waitQueue[%d]\r\n", id, slot);
                +
00634c e6e4     +LDI R30 , LOW ( 2 * _0x180000 + ( 92 ) )
00634d e4f1     +LDI R31 , HIGH ( 2 * _0x180000 + ( 92 ) )
00634e e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 92 ) )
00634f e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 92 ) )
                 	__POINTD1FN _0x180000,92
006350 940e b62a 	CALL __PUTPARD1
006352 85ec      	LDD  R30,Y+12
006353 940e a1bb 	CALL SUBOPT_0x55
006355 01f8      	MOVW R30,R16
006356 940e b522 	CALL __CWD1
006358 940e a038 	CALL SUBOPT_0x1F
                 ; 000C 002E     //print_payload(eth_waitQueue[slot].packetData,eth_waitQueue[slot].packetLen);
                 ; 000C 002F     return ETH_waitQCount;
00635a 2de7      	MOV  R30,R7
00635b e0f0      	LDI  R31,0
                 _0x20E005C:
00635c 8119      	LDD  R17,Y+1
00635d 8108      	LDD  R16,Y+0
                 _0x20E005D:
00635e 9629      	ADIW R28,9
00635f 9508      	RET
                 ; 000C 0030 }
                 ;/*============================================================*/
                 ;int ETH_removeWaitQueue(char id)
                 ; 000C 0033 {
                 _ETH_removeWaitQueue:
                 ; 000C 0034     char i;
                 ; 000C 0035     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
006360 93aa      	ST   -Y,R26
006361 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
006362 e010      	LDI  R17,LOW(0)
                 _0x180006:
006363 301f      	CPI  R17,15
006364 f508      	BRSH _0x180007
                 ; 000C 0036         if(id == eth_waitQueue[i].packetID){        // scan id in eth_waitQueue
006365 940e aa58 	CALL SUBOPT_0x1C1
006367 81e0      	LD   R30,Z
006368 81a9      	LDD  R26,Y+1
006369 17ea      	CP   R30,R26
00636a f4c9      	BRNE _0x180008
                 ; 000C 0037             //printDebug("                                 Removing (%02X) from eth_waitQueue\r\n", id);
                 ; 000C 0038             //print_payload(eth_waitQueue[i].packetData,eth_waitQueue[i].packetLen);
                 ; 000C 0039             //memset( eth_waitQueue[i].packetData, '\0', ETH_MAX_PKT_LEN );
                 ; 000C 003A             free(eth_waitQueue[i].packetData);
00636b e0ab      	LDI  R26,LOW(11)
00636c 9f1a      	MUL  R17,R26
00636d 01f0      	MOVW R30,R0
00636e 940e a834 	CALL SUBOPT_0x15E
006370 940e aa5e 	CALL SUBOPT_0x1C2
                 ; 000C 003B             eth_waitQueue[i].packetData  = NULL;
                 ; 000C 003C             eth_waitQueue[i].packetLen   = 0;
                 ; 000C 003D             eth_waitQueue[i].packetID    = 0;
006372 940e aa72 	CALL SUBOPT_0x1C3
                 ; 000C 003E             eth_waitQueue[i].retryCount  = 0;
                 ; 000C 003F             eth_waitQueue[i].timeout     = 0;
006374 940e aa78 	CALL SUBOPT_0x1C4
                 ; 000C 0040             eth_waitQueue[i].retryTime   = 0;
                 ; 000C 0041             ETH_waitQCount--;
006376 947a      	DEC  R7
                 ; 000C 0042             //printDebug("Removed\r\n");
                 ; 000C 0043             printDebug("\r\n                                     Removed (%02X) to eth_waitQueue[%d]\r\n", id, i);
                +
006377 eaef     +LDI R30 , LOW ( 2 * _0x180000 + ( 167 ) )
006378 e4f1     +LDI R31 , HIGH ( 2 * _0x180000 + ( 167 ) )
006379 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 167 ) )
00637a e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 167 ) )
                 	__POINTD1FN _0x180000,167
00637b 940e aa8d 	CALL SUBOPT_0x1C5
00637d 940e aa92 	CALL SUBOPT_0x1C6
                 ; 000C 0044             return ETH_waitQCount;
00637f 2de7      	MOV  R30,R7
006380 940e aa98 	CALL SUBOPT_0x1C7
006382 940c 67f4 	JMP  _0x20E0055
                 ; 000C 0045         }
                 ; 000C 0046     }
                 _0x180008:
006384 5f1f      	SUBI R17,-1
006385 cfdd      	RJMP _0x180006
                 _0x180007:
                 ; 000C 0047     printDebug("\r\n\r\nWARNING : ETH_removeWaitQueue(%02X) not found!!\r\n\r\n",id);
                +
006386 efec     +LDI R30 , LOW ( 2 * _0x180000 + ( 244 ) )
006387 e4f1     +LDI R31 , HIGH ( 2 * _0x180000 + ( 244 ) )
006388 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 244 ) )
006389 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 244 ) )
                 	__POINTD1FN _0x180000,244
00638a 940e aa9b 	CALL SUBOPT_0x1C8
                 ; 000C 0048     return -1;
00638c efef      	LDI  R30,LOW(65535)
00638d efff      	LDI  R31,HIGH(65535)
00638e 8118      	LDD  R17,Y+0
00638f 940c 67f4 	JMP  _0x20E0055
                 ; 000C 0049 }
                 ;/*============================================================*/
                 ;void ETH_initWaitQueue(void)
                 ; 000C 004C {
                 _ETH_initWaitQueue:
                 ; 000C 004D     char i;
                 ; 000C 004E 
                 ; 000C 004F     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
006391 931a      	ST   -Y,R17
                 ;	i -> R17
006392 e010      	LDI  R17,LOW(0)
                 _0x18000A:
006393 301f      	CPI  R17,15
006394 f468      	BRSH _0x18000B
                 ; 000C 0050         //memset( eth_waitQueue[i].packetData, '\0', ETH_MAX_PKT_LEN );
                 ; 000C 0051         free(eth_waitQueue[i].packetData);
006395 e0ab      	LDI  R26,LOW(11)
006396 9f1a      	MUL  R17,R26
006397 01f0      	MOVW R30,R0
006398 940e a834 	CALL SUBOPT_0x15E
00639a 940e aa5e 	CALL SUBOPT_0x1C2
                 ; 000C 0052         eth_waitQueue[i].packetData  = NULL;
                 ; 000C 0053         eth_waitQueue[i].packetLen   = 0;
                 ; 000C 0054         eth_waitQueue[i].packetID    = 0;
00639c 940e aa72 	CALL SUBOPT_0x1C3
                 ; 000C 0055         eth_waitQueue[i].retryCount  = 0;
                 ; 000C 0056         eth_waitQueue[i].timeout     = 0;
00639e 940e aa78 	CALL SUBOPT_0x1C4
                 ; 000C 0057         eth_waitQueue[i].retryTime   = 0;
                 ; 000C 0058     }
0063a0 5f1f      	SUBI R17,-1
0063a1 cff1      	RJMP _0x18000A
                 _0x18000B:
                 ; 000C 0059     return;
0063a2 940c 6739 	JMP  _0x20E0057
                 ; 000C 005A }
                 ;/*============================================================*/
                 ;char ETH_isIdExist(char id)
                 ; 000C 005D {
                 _ETH_isIdExist:
                 ; 000C 005E     char i;
                 ; 000C 005F 
                 ; 000C 0060     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
0063a4 93aa      	ST   -Y,R26
0063a5 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
0063a6 e010      	LDI  R17,LOW(0)
                 _0x18000D:
0063a7 301f      	CPI  R17,15
0063a8 f460      	BRSH _0x18000E
                 ; 000C 0061         if(id == eth_waitQueue[i].packetID){
0063a9 940e aa58 	CALL SUBOPT_0x1C1
0063ab 81e0      	LD   R30,Z
0063ac 81a9      	LDD  R26,Y+1
0063ad 17ea      	CP   R30,R26
0063ae f421      	BRNE _0x18000F
                 ; 000C 0062             return 1;                           // found id in eth_waitQueue
0063af e0e1      	LDI  R30,LOW(1)
0063b0 8118      	LDD  R17,Y+0
0063b1 940c 67f4 	JMP  _0x20E0055
                 ; 000C 0063         }
                 ; 000C 0064     }
                 _0x18000F:
0063b3 5f1f      	SUBI R17,-1
0063b4 cff2      	RJMP _0x18000D
                 _0x18000E:
                 ; 000C 0065     return 0;
0063b5 e0e0      	LDI  R30,LOW(0)
0063b6 8118      	LDD  R17,Y+0
0063b7 940c 67f4 	JMP  _0x20E0055
                 ; 000C 0066 }
                 ;/*============================================================*/
                 ;char ETH_isIdUsed(char id)
                 ; 000C 0069 {
                 _ETH_isIdUsed:
                 ; 000C 006A     char i;
                 ; 000C 006B 
                 ; 000C 006C     for(i=0;i<MAX_SESS_LIST;i++){
0063b9 93aa      	ST   -Y,R26
0063ba 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
0063bb e010      	LDI  R17,LOW(0)
                 _0x180011:
0063bc 3614      	CPI  R17,100
0063bd f470      	BRSH _0x180012
                 ; 000C 006D         if(id == sess_list[i]){
0063be 940e a38d 	CALL SUBOPT_0x99
0063c0 51e9      	SUBI R30,LOW(-_sess_list)
0063c1 4efb      	SBCI R31,HIGH(-_sess_list)
0063c2 81e0      	LD   R30,Z
0063c3 81a9      	LDD  R26,Y+1
0063c4 17ea      	CP   R30,R26
0063c5 f421      	BRNE _0x180013
                 ; 000C 006E             return 1;                           // found id in eth_waitQueue
0063c6 e0e1      	LDI  R30,LOW(1)
0063c7 8118      	LDD  R17,Y+0
0063c8 940c 67f4 	JMP  _0x20E0055
                 ; 000C 006F         }
                 ; 000C 0070     }
                 _0x180013:
0063ca 5f1f      	SUBI R17,-1
0063cb cff0      	RJMP _0x180011
                 _0x180012:
                 ; 000C 0071     return 0;
0063cc e0e0      	LDI  R30,LOW(0)
0063cd 8118      	LDD  R17,Y+0
0063ce 940c 67f4 	JMP  _0x20E0055
                 ; 000C 0072 }
                 ;/*============================================================*/
                 ;char ETH_findFreeSlotWaitQueue(void)
                 ; 000C 0075 {
                 _ETH_findFreeSlotWaitQueue:
                 ; 000C 0076     char i;
                 ; 000C 0077     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
0063d0 931a      	ST   -Y,R17
                 ;	i -> R17
0063d1 e010      	LDI  R17,LOW(0)
                 _0x180015:
0063d2 301f      	CPI  R17,15
0063d3 f468      	BRSH _0x180016
                 ; 000C 0078         if(eth_waitQueue[i].packetLen == 0){
0063d4 e0ab      	LDI  R26,LOW(11)
0063d5 9f1a      	MUL  R17,R26
0063d6 01f0      	MOVW R30,R0
                +
0063d7 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
0063d8 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
0063d9 81e0      	LD   R30,Z
0063da 30e0      	CPI  R30,0
0063db f419      	BRNE _0x180017
                 ; 000C 0079             return i;
0063dc 2fe1      	MOV  R30,R17
0063dd 940c 6739 	JMP  _0x20E0057
                 ; 000C 007A         }
                 ; 000C 007B     }
                 _0x180017:
0063df 5f1f      	SUBI R17,-1
0063e0 cff1      	RJMP _0x180015
                 _0x180016:
                 ; 000C 007C     return -1;
0063e1 efef      	LDI  R30,LOW(255)
0063e2 940c 6739 	JMP  _0x20E0057
                 ; 000C 007D }
                 ;/*============================================================*/
                 ;char ETH_generateId(void)
                 ; 000C 0080 {
                 _ETH_generateId:
                 ; 000C 0081     char id;
                 ; 000C 0082 
                 ; 000C 0083     do{
0063e4 931a      	ST   -Y,R17
                 ;	id -> R17
                 _0x180019:
                 ; 000C 0084         id = (rand() % 256) & 0xFF;
0063e5 940e 83b3 	CALL _rand
0063e7 2f1e      	MOV  R17,R30
                 ; 000C 0085     }while(ETH_isIdExist(id) || (id == 0) || (id == 0xFF) || ETH_isIdUsed(id));
0063e8 2fa1      	MOV  R26,R17
0063e9 dfba      	RCALL _ETH_isIdExist
0063ea 30e0      	CPI  R30,0
0063eb f441      	BRNE _0x18001B
0063ec 3010      	CPI  R17,0
0063ed f031      	BREQ _0x18001B
0063ee 3f1f      	CPI  R17,255
0063ef f021      	BREQ _0x18001B
0063f0 2fa1      	MOV  R26,R17
0063f1 dfc7      	RCALL _ETH_isIdUsed
0063f2 30e0      	CPI  R30,0
0063f3 f009      	BREQ _0x18001A
                 _0x18001B:
0063f4 cff0      	RJMP _0x180019
                 _0x18001A:
                 ; 000C 0086     sess_list[last_sess_id] = id;
0063f5 01f4      	MOVW R30,R8
0063f6 51e9      	SUBI R30,LOW(-_sess_list)
0063f7 4efb      	SBCI R31,HIGH(-_sess_list)
0063f8 8310      	ST   Z,R17
                 ; 000C 0087     last_sess_id = (last_sess_id + 1) % MAX_SESS_LIST;
0063f9 01d4      	MOVW R26,R8
0063fa 9611      	ADIW R26,1
0063fb e6e4      	LDI  R30,LOW(100)
0063fc e0f0      	LDI  R31,HIGH(100)
0063fd 940e b5ca 	CALL __MODW21
0063ff 014f      	MOVW R8,R30
                 ; 000C 0088 
                 ; 000C 0089     return id;
006400 2fe1      	MOV  R30,R17
006401 940c 6739 	JMP  _0x20E0057
                 ; 000C 008A }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include "sensor.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "debug.h"
                 ;#include "dht11.h"
                 ;#include "calibration.h"
                 ;
                 ;#define MAX(x, y) (((x) > (y)) ? (x) : (y))
                 ;
                 ;
                 ;//extern eeprom ST_CAL sensorCalulate;
                 ;struct sens_val_st      sensor[5];
                 ;extern ST_DHT11 dhtDevice;
                 ;ST_DHT11 dhtDevice;
                 ;//eeprom float calS1[5];//standrad point 1
                 ;//eeprom float calS2[5];//standrad point 2
                 ;//eeprom float calS3[5];//standrad point 3
                 ;//eeprom float calX1[5];//input sensor point 1
                 ;//eeprom float calX2[5];//input sensor point 2
                 ;//eeprom float calX3[5];//input sensor point 3
                 ;
                 ;float sensorGetValue(unsigned int channelID){
                 ; 000D 001A float sensorGetValue(unsigned int channelID){
                 
                 	.CSEG
                 _sensorGetValue:
                 ; 000D 001B     printDebug("Sensor ch[%d] is a raw data[%0.2f] , calProcess[%0.2f]\r\n",channelID-1,adcData[channelID-1],calProcessValue(adcData[channelID-1],channelID));
006403 93ba      	ST   -Y,R27
006404 93aa      	ST   -Y,R26
                 ;	channelID -> Y+0
                +
006405 e3ec     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 0 ) )
006406 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 0 ) )
006407 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 0 ) )
006408 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 0 ) )
                 	__POINTD1FN _0x1A0000,0
006409 940e a670 	CALL SUBOPT_0x116
00640b 9731      	SBIW R30,1
00640c 940e a524 	CALL SUBOPT_0xDD
00640e 85e8      	LDD  R30,Y+8
00640f 85f9      	LDD  R31,Y+8+1
006410 9731      	SBIW R30,1
006411 940e a35d 	CALL SUBOPT_0x90
006413 940e a019 	CALL SUBOPT_0x19
006415 940e b62a 	CALL __PUTPARD1
006417 85ec      	LDD  R30,Y+12
006418 85fd      	LDD  R31,Y+12+1
006419 9731      	SBIW R30,1
00641a 940e a35d 	CALL SUBOPT_0x90
00641c 940e a019 	CALL SUBOPT_0x19
00641e 940e b62a 	CALL __PUTPARD1
006420 89a8      	LDD  R26,Y+16
006421 89b9      	LDD  R27,Y+16+1
006422 940e 80b2 	CALL _calProcessValue
006424 940e b62a 	CALL __PUTPARD1
006426 940e a1c1 	CALL SUBOPT_0x56
                 ; 000D 001C     return calProcessValue(adcData[channelID-1],channelID);
006428 81e8      	LD   R30,Y
006429 81f9      	LDD  R31,Y+1
00642a 9731      	SBIW R30,1
00642b 940e a35d 	CALL SUBOPT_0x90
00642d 940e a019 	CALL SUBOPT_0x19
00642f 940e a663 	CALL SUBOPT_0x113
006431 940e 80b2 	CALL _calProcessValue
006433 940c 67f4 	JMP  _0x20E0055
                 ; 000D 001D }
                 ;
                 ;int sensorRead(int ch, struct sens_val_st *sensor){
                 ; 000D 001F int sensorRead(int ch, struct sens_val_st *sensor){
                 _sensorRead:
                 ; 000D 0020     int dhtRet = 0;
                 ; 000D 0021 
                 ; 000D 0022     updateSensorADC(ch);
006435 940e a285 	CALL SUBOPT_0x71
                 ;	ch -> Y+4
                 ;	*sensor -> Y+2
                 ;	dhtRet -> R16,R17
                +
006437 e000     +LDI R16 , LOW ( 0 )
006438 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
006439 81ac      	LDD  R26,Y+4
00643a 81bd      	LDD  R27,Y+4+1
00643b d05b      	RCALL _updateSensorADC
                 ; 000D 0023     if(ch==0){
00643c 81ec      	LDD  R30,Y+4
00643d 81fd      	LDD  R31,Y+4+1
00643e 9730      	SBIW R30,0
00643f f449      	BRNE _0x1A0003
                 ; 000D 0024        sensor->value = calProcessValue(adcData[ch],ch+1);
006440 940e aaa0 	CALL SUBOPT_0x1C9
006442 940e a019 	CALL SUBOPT_0x19
006444 940e a9a2 	CALL SUBOPT_0x19D
006446 940e aaa3 	CALL SUBOPT_0x1CA
                 ; 000D 0025        //sensor->value = adcData[ch];
                 ; 000D 0026     }else if(ch==3){
006448 c043      	RJMP _0x1A0004
                 _0x1A0003:
006449 81ac      	LDD  R26,Y+4
00644a 81bd      	LDD  R27,Y+4+1
00644b 9713      	SBIW R26,3
00644c f449      	BRNE _0x1A0005
                 ; 000D 0027     sensor->value = calProcessValue(adcData[ch],ch+1);
00644d 940e aaa0 	CALL SUBOPT_0x1C9
00644f 940e a019 	CALL SUBOPT_0x19
006451 940e a9a2 	CALL SUBOPT_0x19D
006453 940e aaa3 	CALL SUBOPT_0x1CA
                 ; 000D 0028        //sensor->value = adcData[ch];
                 ; 000D 0029     }else if(ch==4){
006455 c036      	RJMP _0x1A0006
                 _0x1A0005:
006456 81ac      	LDD  R26,Y+4
006457 81bd      	LDD  R27,Y+4+1
006458 9714      	SBIW R26,4
006459 f449      	BRNE _0x1A0007
                 ; 000D 002A        sensor->value = calProcessValue(adcData[ch],ch+1);
00645a 940e aaa0 	CALL SUBOPT_0x1C9
00645c 940e a019 	CALL SUBOPT_0x19
00645e 940e a9a2 	CALL SUBOPT_0x19D
006460 940e aaa3 	CALL SUBOPT_0x1CA
                 ; 000D 002B        //sensor->value = adcData[ch];
                 ; 000D 002C     }else if((ch==1) || (ch==2)){
006462 c029      	RJMP _0x1A0008
                 _0x1A0007:
006463 81ac      	LDD  R26,Y+4
006464 81bd      	LDD  R27,Y+4+1
006465 9711      	SBIW R26,1
006466 f021      	BREQ _0x1A000A
006467 81ac      	LDD  R26,Y+4
006468 81bd      	LDD  R27,Y+4+1
006469 9712      	SBIW R26,2
00646a f509      	BRNE _0x1A0009
                 _0x1A000A:
                 ; 000D 002D         dhtRet = dhtDevice.status;
                +
00646b 9100 1563+LDS R16 , _dhtDevice + ( 8 )
00646d 9110 1564+LDS R17 , _dhtDevice + ( 8 ) + 1
                 	__GETWRMN 16,17,_dhtDevice,8
                 ; 000D 002E         if(dhtRet == DHT11_SUCCESS){
00646f e0e1      	LDI  R30,LOW(1)
006470 e0f0      	LDI  R31,HIGH(1)
006471 17e0      	CP   R30,R16
006472 07f1      	CPC  R31,R17
006473 f449      	BRNE _0x1A000C
                 ; 000D 002F            sensor->value = calProcessValue(adcData[ch],ch+1);
006474 940e aaa0 	CALL SUBOPT_0x1C9
006476 940e a019 	CALL SUBOPT_0x19
006478 940e a9a2 	CALL SUBOPT_0x19D
00647a 940e aaa3 	CALL SUBOPT_0x1CA
                 ; 000D 0030            //sensor->value = adcData[ch];
                 ; 000D 0031         }else if(dhtRet == DHT11_ERROR_TIMEOUT){
00647c c00f      	RJMP _0x1A000D
                 _0x1A000C:
00647d e0e3      	LDI  R30,LOW(3)
00647e e0f0      	LDI  R31,HIGH(3)
00647f 17e0      	CP   R30,R16
006480 07f1      	CPC  R31,R17
006481 f029      	BREQ _0x1A003B
                 ; 000D 0032            sensor->status  = SENS_ERROR;
                 ; 000D 0033            //return -2;
                 ; 000D 0034         }else if(dhtRet == DHT11_ERROR_CHECKSUM){
006482 e0e2      	LDI  R30,LOW(2)
006483 e0f0      	LDI  R31,HIGH(2)
006484 17e0      	CP   R30,R16
006485 07f1      	CPC  R31,R17
006486 f429      	BRNE _0x1A0010
                 ; 000D 0035            sensor->status  = SENS_ERROR;
                 _0x1A003B:
006487 81aa      	LDD  R26,Y+2
006488 81bb      	LDD  R27,Y+2+1
006489 9614      	ADIW R26,4
00648a e8e0      	LDI  R30,LOW(128)
00648b 93ec      	ST   X,R30
                 ; 000D 0036            //return -2;
                 ; 000D 0037         }
                 ; 000D 0038     }
                 _0x1A0010:
                 _0x1A000D:
                 ; 000D 0039 
                 ; 000D 003A     sensor->status  = SENS_NORMAL;
                 _0x1A0009:
                 _0x1A0008:
                 _0x1A0006:
                 _0x1A0004:
00648c 81aa      	LDD  R26,Y+2
00648d 81bb      	LDD  R27,Y+2+1
00648e 9614      	ADIW R26,4
00648f e0e0      	LDI  R30,LOW(0)
006490 93ec      	ST   X,R30
                 ; 000D 003B     return 0;
                 _0x20E005A:
006491 e0e0      	LDI  R30,LOW(0)
006492 e0f0      	LDI  R31,HIGH(0)
                 _0x20E005B:
006493 8119      	LDD  R17,Y+1
006494 8108      	LDD  R16,Y+0
006495 9626      	ADIW R28,6
006496 9508      	RET
                 ; 000D 003C }
                 ;
                 ;void updateSensorADC(int ch)
                 ; 000D 003F {
                 _updateSensorADC:
                 ; 000D 0040     int adc_raw = 0;
                 ; 000D 0041     int dhtRet = 0;
                 ; 000D 0042     float voltCutOff = 0.0;
                 ; 000D 0043     float ACS709offset = 18.5;
                 ; 000D 0044     float buffAmpSensor[60];
                 ; 000D 0045     float buffVoltSensor[50];
                 ; 000D 0046     float buff420Sensor[10];
                 ; 000D 0047     float bufferTemp[2] = {0,0};
                 ; 000D 0048     float bufferHumi[2] = {0,0};
                 ; 000D 0049     int i=0,j=0;
                 ; 000D 004A     int dht11Reread=0;
                 ; 000D 004B     float ampValue = 0.0;
                 ; 000D 004C     float voltValue = 0.0;
                 ; 000D 004D     float mA420Value = 0.0;
                 ; 000D 004E 
                 ; 000D 004F     adc_raw     = read_adc(8+ch);
006497 93ba      	ST   -Y,R27
006498 93aa      	ST   -Y,R26
006499 9728      	SBIW R28,8
00649a 50d2      	SUBI R29,2
                +
00649b e088     +LDI R24 , LOW ( 520 )
00649c e092     +LDI R25 , HIGH ( 520 )
                 	__GETWRN 24,25,520
00649d e0a0      	LDI  R26,LOW(0)
00649e e0b0      	LDI  R27,HIGH(0)
00649f e3e4      	LDI  R30,LOW(_0x1A0011*2)
0064a0 e4f2      	LDI  R31,HIGH(_0x1A0011*2)
0064a1 e060      	LDI  R22,BYTE3(_0x1A0011*2)
0064a2 940e b6a9 	CALL __INITLOCW
0064a4 940e a079 	CALL SUBOPT_0x28
                 ;	ch -> Y+526
                 ;	adc_raw -> R16,R17
                 ;	dhtRet -> R18,R19
                 ;	voltCutOff -> Y+522
                 ;	ACS709offset -> Y+518
                 ;	buffAmpSensor -> Y+278
                 ;	buffVoltSensor -> Y+78
                 ;	buff420Sensor -> Y+38
                 ;	bufferTemp -> Y+30
                 ;	bufferHumi -> Y+22
                 ;	i -> R20,R21
                 ;	j -> Y+20
                 ;	dht11Reread -> Y+18
                 ;	ampValue -> Y+14
                 ;	voltValue -> Y+10
                 ;	mA420Value -> Y+6
0064a6 940e aaab 	CALL SUBOPT_0x1CB
0064a8 018f      	MOVW R16,R30
                 ; 000D 0050     if(ch==0){
0064a9 940e aab2 	CALL SUBOPT_0x1CC
0064ab 9730      	SBIW R30,0
0064ac f581      	BRNE _0x1A0012
                 ; 000D 0051         //adcData[ch] =   adc_raw;
                 ; 000D 0052         //mA420Value = ((((adcData[ch]+5.0/1023.0)*3.30)/3.30)*20.0);
                 ; 000D 0053 
                 ; 000D 0054         for(i=0;i<10;i++){
                +
0064ad e040     +LDI R20 , LOW ( 0 )
0064ae e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x1A0014:
                +
0064af 304a     +CPI R20 , LOW ( 10 )
0064b0 e0e0     +LDI R30 , HIGH ( 10 )
0064b1 075e     +CPC R21 , R30
                 	__CPWRN 20,21,10
0064b2 f49c      	BRGE _0x1A0015
                 ; 000D 0055             buff420Sensor[i] = read_adc(8+ch);
0064b3 01fa      	MOVW R30,R20
0064b4 01de      	MOVW R26,R28
0064b5 9696      	ADIW R26,38
0064b6 940e aab9 	CALL SUBOPT_0x1CD
0064b8 93ff      	PUSH R31
0064b9 93ef      	PUSH R30
0064ba 940e aaab 	CALL SUBOPT_0x1CB
0064bc 91af      	POP  R26
0064bd 91bf      	POP  R27
0064be 940e a362 	CALL SUBOPT_0x91
                 ; 000D 0056             delay_us(10);
                +
0064c0 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0064c1 958a     +DEC R24
0064c2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 000D 0057         }
                +
0064c3 5f4f     +SUBI R20 , LOW ( - 1 )
0064c4 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0064c5 cfe9      	RJMP _0x1A0014
                 _0x1A0015:
                 ; 000D 0058         mA420Value = ((average(buff420Sensor,10)+5.0)/1023.0)*20.0;
0064c6 01fe      	MOVW R30,R28
0064c7 96b6      	ADIW R30,38
0064c8 940e a948 	CALL SUBOPT_0x18E
0064ca 940e aabe 	CALL SUBOPT_0x1CE
0064cc 940e a345 	CALL SUBOPT_0x8C
                +
0064ce e0a0     +LDI R26 , LOW ( 0x41A00000 )
0064cf e0b0     +LDI R27 , HIGH ( 0x41A00000 )
0064d0 ea80     +LDI R24 , BYTE3 ( 0x41A00000 )
0064d1 e491     +LDI R25 , BYTE4 ( 0x41A00000 )
                 	__GETD2N 0x41A00000
0064d2 940e b3e6 	CALL __MULF12
0064d4 940e a3be 	CALL SUBOPT_0xA3
                 ; 000D 0059         //mA420Value = (((adcData[ch]+5.0/1023.0)*3.30)/165.0);     //R=165 Ohm
                 ; 000D 005A        //printDebug("[%d]ADC: %f, mA: %f \r\n", ch, adcData[ch], mA420Value);
                 ; 000D 005B        //adcData[ch] = (adcData[ch]+5/1023.0)*3.30;
                 ; 000D 005C        adcData[ch] = mA420Value;
0064d6 940e aac5 	CALL SUBOPT_0x1CF
0064d8 0fea      	ADD  R30,R26
0064d9 1ffb      	ADC  R31,R27
0064da 940e aac7 	CALL SUBOPT_0x1D0
                 ; 000D 005D     }else if(ch==3){
0064dc c140      	RJMP _0x1A0016
                 _0x1A0012:
0064dd 940e aacc 	CALL SUBOPT_0x1D1
0064df 9713      	SBIW R26,3
0064e0 f591      	BRNE _0x1A0017
                 ; 000D 005E         //adcData[ch] =   adc_raw;
                 ; 000D 005F         //voltValue = ((((adcData[ch]+5.0)/1023.0)*3.30)/3.30)*1000.0;
                 ; 000D 0060         for(i=0;i<50;i++){
                +
0064e1 e040     +LDI R20 , LOW ( 0 )
0064e2 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x1A0019:
                +
0064e3 3342     +CPI R20 , LOW ( 50 )
0064e4 e0e0     +LDI R30 , HIGH ( 50 )
0064e5 075e     +CPC R21 , R30
                 	__CPWRN 20,21,50
0064e6 f4a4      	BRGE _0x1A001A
                 ; 000D 0061             buffVoltSensor[i] = read_adc(8+ch);
0064e7 01fa      	MOVW R30,R20
0064e8 01de      	MOVW R26,R28
0064e9 5ba2      	SUBI R26,LOW(-(78))
0064ea 4fbf      	SBCI R27,HIGH(-(78))
0064eb 940e aab9 	CALL SUBOPT_0x1CD
0064ed 93ff      	PUSH R31
0064ee 93ef      	PUSH R30
0064ef 940e aaab 	CALL SUBOPT_0x1CB
0064f1 91af      	POP  R26
0064f2 91bf      	POP  R27
0064f3 940e a362 	CALL SUBOPT_0x91
                 ; 000D 0062             delay_us(10);
                +
0064f5 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0064f6 958a     +DEC R24
0064f7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 000D 0063         }
                +
0064f8 5f4f     +SUBI R20 , LOW ( - 1 )
0064f9 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0064fa cfe8      	RJMP _0x1A0019
                 _0x1A001A:
                 ; 000D 0064 
                 ; 000D 0065 
                 ; 000D 0066         voltValue = ((average(buffVoltSensor,50)+5.0)/1023.0)*1000.0;
0064fb 01fe      	MOVW R30,R28
0064fc 5be2      	SUBI R30,LOW(-(78))
0064fd 4fff      	SBCI R31,HIGH(-(78))
0064fe 93fa      	ST   -Y,R31
0064ff 93ea      	ST   -Y,R30
006500 940e a25c 	CALL SUBOPT_0x6C
006502 940e aabe 	CALL SUBOPT_0x1CE
006504 940e a345 	CALL SUBOPT_0x8C
                +
006506 e0a0     +LDI R26 , LOW ( 0x447A0000 )
006507 e0b0     +LDI R27 , HIGH ( 0x447A0000 )
006508 e78a     +LDI R24 , BYTE3 ( 0x447A0000 )
006509 e494     +LDI R25 , BYTE4 ( 0x447A0000 )
                 	__GETD2N 0x447A0000
00650a 940e b3e6 	CALL __MULF12
00650c 940e aad3 	CALL SUBOPT_0x1D2
                 ; 000D 0067         //printDebug("[%d]ADC: %f, Volt(raw): %f, Volt(AC): %f \r\n", ch, adcData[ch], (adcData[ch]+5.0/1023.0)*3.30, voltValue);
                 ; 000D 0068 
                 ; 000D 0069        adcData[ch] = voltValue;
00650e 940e aac5 	CALL SUBOPT_0x1CF
006510 940e aad8 	CALL SUBOPT_0x1D3
                 ; 000D 006A        //adcData[ch] = (adcData[ch]+5/1023)*3.30;
                 ; 000D 006B     }else if(ch==4){
006512 c10a      	RJMP _0x1A001B
                 _0x1A0017:
006513 940e aacc 	CALL SUBOPT_0x1D1
006515 9714      	SBIW R26,4
006516 f011      	BREQ PC+3
006517 940c 6582 	JMP _0x1A001C
                 ; 000D 006C         memset(buffAmpSensor,0,sizeof(buffAmpSensor));
006519 01fe      	MOVW R30,R28
00651a 5eea      	SUBI R30,LOW(-(278))
00651b 4ffe      	SBCI R31,HIGH(-(278))
00651c 940e a537 	CALL SUBOPT_0xE0
00651e efa0      	LDI  R26,LOW(240)
00651f 940e aadf 	CALL SUBOPT_0x1D4
                 ; 000D 006D         for(i=0;i<60;i++){
                +
006521 e040     +LDI R20 , LOW ( 0 )
006522 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x1A001E:
                +
006523 334c     +CPI R20 , LOW ( 60 )
006524 e0e0     +LDI R30 , HIGH ( 60 )
006525 075e     +CPC R21 , R30
                 	__CPWRN 20,21,60
006526 f4ac      	BRGE _0x1A001F
                 ; 000D 006E           buffAmpSensor[i] =  read_adc(8+ch);
006527 01fa      	MOVW R30,R20
006528 01de      	MOVW R26,R28
006529 5eaa      	SUBI R26,LOW(-(278))
00652a 4fbe      	SBCI R27,HIGH(-(278))
00652b 940e aab9 	CALL SUBOPT_0x1CD
00652d 93ff      	PUSH R31
00652e 93ef      	PUSH R30
00652f 940e aaab 	CALL SUBOPT_0x1CB
006531 91af      	POP  R26
006532 91bf      	POP  R27
006533 940e a362 	CALL SUBOPT_0x91
                 ; 000D 006F           delay_ms(1);
006535 940e a244 	CALL SUBOPT_0x67
006537 940e b2e6 	CALL _delay_ms
                 ; 000D 0070         }
                +
006539 5f4f     +SUBI R20 , LOW ( - 1 )
00653a 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00653b cfe7      	RJMP _0x1A001E
                 _0x1A001F:
                 ; 000D 0071         //adcData[ch] = average(buffAmpSensor);
                 ; 000D 0072        // voltCutOff = fabs(((((adcData[ch]+5.0)/1023.0)*3.30)-1.65));
                 ; 000D 0073         voltCutOff = fabs(((((voltPeak(buffAmpSensor)+5.0)/1023.0)*3.30)-1.65));
00653c 01de      	MOVW R26,R28
00653d 5eaa      	SUBI R26,LOW(-(278))
00653e 4fbe      	SBCI R27,HIGH(-(278))
00653f d0e2      	RCALL _voltPeak
                +
006540 e0a0     +LDI R26 , LOW ( 0x40A00000 )
006541 e0b0     +LDI R27 , HIGH ( 0x40A00000 )
006542 ea80     +LDI R24 , BYTE3 ( 0x40A00000 )
006543 e490     +LDI R25 , BYTE4 ( 0x40A00000 )
                 	__GETD2N 0x40A00000
006544 940e a33b 	CALL SUBOPT_0x8A
006546 940e a345 	CALL SUBOPT_0x8C
                +
006548 e3a3     +LDI R26 , LOW ( 0x40533333 )
006549 e3b3     +LDI R27 , HIGH ( 0x40533333 )
00654a e583     +LDI R24 , BYTE3 ( 0x40533333 )
00654b e490     +LDI R25 , BYTE4 ( 0x40533333 )
                 	__GETD2N 0x40533333
00654c 940e b3e6 	CALL __MULF12
00654e 01df      	MOVW R26,R30
00654f 01cb      	MOVW R24,R22
                +
006550 e3e3     +LDI R30 , LOW ( 0x3FD33333 )
006551 e3f3     +LDI R31 , HIGH ( 0x3FD33333 )
006552 ed63     +LDI R22 , BYTE3 ( 0x3FD33333 )
006553 e37f     +LDI R23 , BYTE4 ( 0x3FD33333 )
                 	__GETD1N 0x3FD33333
006554 940e aae2 	CALL SUBOPT_0x1D5
006556 01df      	MOVW R26,R30
006557 01cb      	MOVW R24,R22
006558 940e 8182 	CALL _fabs
                +
00655a 01de     +MOVW R26 , R28
00655b 5fa6     +SUBI R26 , LOW ( - 522 )
00655c 4fbd     +SBCI R27 , HIGH ( - 522 )
00655d 93ed     +ST X + , R30
00655e 93fd     +ST X + , R31
00655f 936d     +ST X + , R22
006560 937c     +ST X , R23
                 	__PUTD1SX 522
                 ; 000D 0074         ampValue = (voltCutOff*1000.0)/18.5;
                +
006561 01de     +MOVW R26 , R28
006562 5fa6     +SUBI R26 , LOW ( - 522 )
006563 4fbd     +SBCI R27 , HIGH ( - 522 )
006564 900d     +LD R0 , X +
006565 901d     +LD R1 , X +
006566 918d     +LD R24 , X +
006567 919c     +LD R25 , X
006568 01d0     +MOVW R26 , R0
                 	__GETD2SX 522
                +
006569 e0e0     +LDI R30 , LOW ( 0x447A0000 )
00656a e0f0     +LDI R31 , HIGH ( 0x447A0000 )
00656b e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
00656c e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
00656d 940e b3e6 	CALL __MULF12
00656f 01df      	MOVW R26,R30
006570 01cb      	MOVW R24,R22
                +
006571 e0e0     +LDI R30 , LOW ( 0x41940000 )
006572 e0f0     +LDI R31 , HIGH ( 0x41940000 )
006573 e964     +LDI R22 , BYTE3 ( 0x41940000 )
006574 e471     +LDI R23 , BYTE4 ( 0x41940000 )
                 	__GETD1N 0x41940000
006575 940e b434 	CALL __DIVF21
006577 940e aae7 	CALL SUBOPT_0x1D6
                 ; 000D 0075         //printDebug("[%d]ADC: %f, Volt(raw): %f, Amp: %f\r\n", ch, adcData[ch], (adcData[ch]-511.0), ampValue);
                 ; 000D 0076 
                 ; 000D 0077        adcData[ch] =  ampValue;
006579 940e aac5 	CALL SUBOPT_0x1CF
00657b 0fea      	ADD  R30,R26
00657c 1ffb      	ADC  R31,R27
00657d 940e aaec 	CALL SUBOPT_0x1D7
00657f 940e aaf1 	CALL SUBOPT_0x1D8
                 ; 000D 0078     }else if((ch==1) || (ch==2)){
006581 c09b      	RJMP _0x1A0020
                 _0x1A001C:
006582 940e aacc 	CALL SUBOPT_0x1D1
006584 9711      	SBIW R26,1
006585 f029      	BREQ _0x1A0022
006586 940e aacc 	CALL SUBOPT_0x1D1
006588 9712      	SBIW R26,2
006589 f009      	BREQ _0x1A0022
00658a c092      	RJMP _0x1A0021
                 _0x1A0022:
                 ; 000D 0079 
                 ; 000D 007A         //dhtRet = DHT11Read(&dhtDevice);
                 ; 000D 007B 
                 ; 000D 007C         dht11Reread = 0;
00658b e0e0      	LDI  R30,LOW(0)
00658c 8bea      	STD  Y+18,R30
00658d 8beb      	STD  Y+18+1,R30
                 ; 000D 007D         //memset(&dhtDevice,0,sizeof(dhtDevice));
                 ; 000D 007E         for(i=0;i<20;i++){
                +
00658e e040     +LDI R20 , LOW ( 0 )
00658f e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x1A0025:
                +
006590 3144     +CPI R20 , LOW ( 20 )
006591 e0e0     +LDI R30 , HIGH ( 20 )
006592 075e     +CPC R21 , R30
                 	__CPWRN 20,21,20
006593 f5b4      	BRGE _0x1A0026
                 ; 000D 007F 
                 ; 000D 0080             dhtRet = DHT11Read(&dhtDevice);
006594 e5ab      	LDI  R26,LOW(_dhtDevice)
006595 e1b5      	LDI  R27,HIGH(_dhtDevice)
006596 940e 7f66 	CALL _DHT11Read
006598 019f      	MOVW R18,R30
                 ; 000D 0081             //delay_ms(4);
                 ; 000D 0082             //printDebug("[%d]ADC:DHT11:Return (%d). \r\n", ch,dhtRet);
                 ; 000D 0083             if(dhtRet == DHT11_SUCCESS){
006599 e0e1      	LDI  R30,LOW(1)
00659a e0f0      	LDI  R31,HIGH(1)
00659b 17e2      	CP   R30,R18
00659c 07f3      	CPC  R31,R19
00659d f529      	BRNE _0x1A0027
                 ; 000D 0084 //                if(ch==1){
                 ; 000D 0085 //                  bufferTemp[dht11Reread] = dhtDevice.temp;
                 ; 000D 0086 //                }else if(ch==2){
                 ; 000D 0087 //                  bufferHumi[dht11Reread] = dhtDevice.humi;
                 ; 000D 0088 //                }
                 ; 000D 0089 
                 ; 000D 008A                 bufferTemp[dht11Reread] = dhtDevice.temp;
00659e 89ea      	LDD  R30,Y+18
00659f 89fb      	LDD  R31,Y+18+1
0065a0 01de      	MOVW R26,R28
0065a1 965e      	ADIW R26,30
0065a2 940e aab9 	CALL SUBOPT_0x1CD
0065a4 91a0 155b 	LDS  R26,_dhtDevice
0065a6 91b0 155c 	LDS  R27,_dhtDevice+1
0065a8 9180 155d 	LDS  R24,_dhtDevice+2
0065aa 9190 155e 	LDS  R25,_dhtDevice+3
0065ac 940e aaf1 	CALL SUBOPT_0x1D8
                 ; 000D 008B                 bufferHumi[dht11Reread] = dhtDevice.humi;
0065ae 89ea      	LDD  R30,Y+18
0065af 89fb      	LDD  R31,Y+18+1
0065b0 01de      	MOVW R26,R28
0065b1 9656      	ADIW R26,22
0065b2 940e aaf4 	CALL SUBOPT_0x1D9
                +
0065b4 91e0 155f+LDS R30 , _dhtDevice + ( 4 )
0065b6 91f0 1560+LDS R31 , _dhtDevice + ( 4 ) + 1
0065b8 9160 1561+LDS R22 , _dhtDevice + ( 4 ) + 2
0065ba 9170 1562+LDS R23 , _dhtDevice + ( 4 ) + 3
                 	__GETD1MN _dhtDevice,4
0065bc 940e b605 	CALL __PUTDP1
                 ; 000D 008C 
                 ; 000D 008D                 ++dht11Reread;
0065be 89ea      	LDD  R30,Y+18
0065bf 89fb      	LDD  R31,Y+18+1
0065c0 9631      	ADIW R30,1
0065c1 8bea      	STD  Y+18,R30
0065c2 8bfb      	STD  Y+18+1,R31
                 ; 000D 008E             }
                 ; 000D 008F             if(dht11Reread>=2){
                 _0x1A0027:
0065c3 89aa      	LDD  R26,Y+18
0065c4 89bb      	LDD  R27,Y+18+1
0065c5 9712      	SBIW R26,2
0065c6 f41c      	BRGE _0x1A0026
                 ; 000D 0090                break;
                 ; 000D 0091             }
                 ; 000D 0092         }
                +
0065c7 5f4f     +SUBI R20 , LOW ( - 1 )
0065c8 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0065c9 cfc6      	RJMP _0x1A0025
                 _0x1A0026:
                 ; 000D 0093 
                 ; 000D 0094         if(dht11Reread>=2){
0065ca 89aa      	LDD  R26,Y+18
0065cb 89bb      	LDD  R27,Y+18+1
0065cc 9712      	SBIW R26,2
0065cd f134      	BRLT _0x1A0029
                 ; 000D 0095             if(ch==1){
0065ce 940e aacc 	CALL SUBOPT_0x1D1
0065d0 9711      	SBIW R26,1
0065d1 f471      	BRNE _0x1A002A
                 ; 000D 0096                adcData[ch] = average(bufferTemp,2);
0065d2 940e aac5 	CALL SUBOPT_0x1CF
0065d4 0fea      	ADD  R30,R26
0065d5 1ffb      	ADC  R31,R27
0065d6 93ff      	PUSH R31
0065d7 93ef      	PUSH R30
0065d8 940e aaf9 	CALL SUBOPT_0x1DA
0065da 940e a23d 	CALL SUBOPT_0x65
0065dc d069      	RCALL _average
0065dd 91af      	POP  R26
0065de 91bf      	POP  R27
0065df c011      	RJMP _0x1A003C
                 ; 000D 0097             }else if(ch==2){
                 _0x1A002A:
0065e0 940e aacc 	CALL SUBOPT_0x1D1
0065e2 9712      	SBIW R26,2
0065e3 f479      	BRNE _0x1A002C
                 ; 000D 0098                adcData[ch] = average(bufferHumi,2);
0065e4 940e aac5 	CALL SUBOPT_0x1CF
0065e6 0fea      	ADD  R30,R26
0065e7 1ffb      	ADC  R31,R27
0065e8 93ff      	PUSH R31
0065e9 93ef      	PUSH R30
0065ea 940e aafe 	CALL SUBOPT_0x1DB
0065ec 940e a23d 	CALL SUBOPT_0x65
0065ee d057      	RCALL _average
0065ef 91af      	POP  R26
0065f0 91bf      	POP  R27
                 _0x1A003C:
0065f1 940e b605 	CALL __PUTDP1
                 ; 000D 0099             }
                 ; 000D 009A         }else if(dht11Reread>=1){
                 _0x1A002C:
0065f3 c029      	RJMP _0x1A002D
                 _0x1A0029:
0065f4 89aa      	LDD  R26,Y+18
0065f5 89bb      	LDD  R27,Y+18+1
0065f6 9711      	SBIW R26,1
0065f7 f12c      	BRLT _0x1A002E
                 ; 000D 009B             if(ch==1){
0065f8 940e aacc 	CALL SUBOPT_0x1D1
0065fa 9711      	SBIW R26,1
0065fb f471      	BRNE _0x1A002F
                 ; 000D 009C                adcData[ch] = average(bufferTemp,1);
0065fc 940e aac5 	CALL SUBOPT_0x1CF
0065fe 0fea      	ADD  R30,R26
0065ff 1ffb      	ADC  R31,R27
006600 93ff      	PUSH R31
006601 93ef      	PUSH R30
006602 940e aaf9 	CALL SUBOPT_0x1DA
006604 940e a244 	CALL SUBOPT_0x67
006606 d03f      	RCALL _average
006607 91af      	POP  R26
006608 91bf      	POP  R27
006609 c011      	RJMP _0x1A003D
                 ; 000D 009D             }else if(ch==2){
                 _0x1A002F:
00660a 940e aacc 	CALL SUBOPT_0x1D1
00660c 9712      	SBIW R26,2
00660d f479      	BRNE _0x1A0031
                 ; 000D 009E                adcData[ch] = average(bufferHumi,1);
00660e 940e aac5 	CALL SUBOPT_0x1CF
006610 0fea      	ADD  R30,R26
006611 1ffb      	ADC  R31,R27
006612 93ff      	PUSH R31
006613 93ef      	PUSH R30
006614 940e aafe 	CALL SUBOPT_0x1DB
006616 940e a244 	CALL SUBOPT_0x67
006618 d02d      	RCALL _average
006619 91af      	POP  R26
00661a 91bf      	POP  R27
                 _0x1A003D:
00661b 940e b605 	CALL __PUTDP1
                 ; 000D 009F             }
                 ; 000D 00A0         }
                 _0x1A0031:
                 ; 000D 00A1     }
                 _0x1A002E:
                 _0x1A002D:
                 ; 000D 00A2     return;
                 _0x1A0021:
                 _0x1A0020:
                 _0x1A001B:
                 _0x1A0016:
00661d 940e b6a1 	CALL __LOADLOCR6
00661f 9660      	ADIW R28,16
006620 5fde      	SUBI R29,-2
006621 9508      	RET
                 ; 000D 00A3 }
                 ;
                 ;float voltPeak(float data[]){       //Amp value
                 ; 000D 00A5 float voltPeak(float data[]){
                 _voltPeak:
                 ; 000D 00A6      int i = 0;
                 ; 000D 00A7      float sum=0.0;
                 ; 000D 00A8 
                 ; 000D 00A9      for(i=0;i<60;i++){
006622 940e a9cc 	CALL SUBOPT_0x1A4
006624 940e a325 	CALL SUBOPT_0x86
                 ;	data -> Y+6
                 ;	i -> R16,R17
                 ;	sum -> Y+2
                +
006626 e000     +LDI R16 , LOW ( 0 )
006627 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1A0033:
                +
006628 330c     +CPI R16 , LOW ( 60 )
006629 e0e0     +LDI R30 , HIGH ( 60 )
00662a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,60
00662b f4a4      	BRGE _0x1A0034
                 ; 000D 00AA        sum = MAX(sum,data[i]);
00662c 940e ab03 	CALL SUBOPT_0x1DC
00662e 940e a3b4 	CALL SUBOPT_0xA1
006630 940e b479 	CALL __CMPF12
006632 f009      	BREQ PC+2
006633 f410      	BRCC PC+3
006634 940c 6639 	JMP  _0x1A0035
006636 940e a3af 	CALL SUBOPT_0xA0
006638 c002      	RJMP _0x1A0036
                 _0x1A0035:
006639 940e ab03 	CALL SUBOPT_0x1DC
                 _0x1A0036:
00663b 940e a3aa 	CALL SUBOPT_0x9F
                 ; 000D 00AB      }
                +
00663d 5f0f     +SUBI R16 , LOW ( - 1 )
00663e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00663f cfe8      	RJMP _0x1A0033
                 _0x1A0034:
                 ; 000D 00AC      return sum;
006640 940e a3af 	CALL SUBOPT_0xA0
                 _0x20E0059:
006642 8119      	LDD  R17,Y+1
006643 8108      	LDD  R16,Y+0
006644 9628      	ADIW R28,8
006645 9508      	RET
                 ; 000D 00AD }
                 ;float average(float data[],int count){      //Volt value
                 ; 000D 00AE float average(float data[],int count){
                 _average:
                 ; 000D 00AF      int i = 0;
                 ; 000D 00B0      float avg = 0.0, sum=0.0;
                 ; 000D 00B1 
                 ; 000D 00B2      //printDebug("raw data.\r\n");
                 ; 000D 00B3      for(i=0;i<count;i++){
006646 93ba      	ST   -Y,R27
006647 93aa      	ST   -Y,R26
006648 9728      	SBIW R28,8
006649 940e ab0a 	CALL SUBOPT_0x1DD
00664b e0e0      	LDI  R30,LOW(0)
00664c 83eb      	STD  Y+3,R30
00664d 83ec      	STD  Y+4,R30
00664e 83ed      	STD  Y+5,R30
00664f 83ee      	STD  Y+6,R30
006650 83ef      	STD  Y+7,R30
006651 940e a325 	CALL SUBOPT_0x86
                 ;	data -> Y+12
                 ;	count -> Y+10
                 ;	i -> R16,R17
                 ;	avg -> Y+6
                 ;	sum -> Y+2
                +
006653 e000     +LDI R16 , LOW ( 0 )
006654 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1A0039:
006655 85ea      	LDD  R30,Y+10
006656 85fb      	LDD  R31,Y+10+1
006657 170e      	CP   R16,R30
006658 071f      	CPC  R17,R31
006659 f474      	BRGE _0x1A003A
                 ; 000D 00B4        //printDebug("%.2f ", data[i]);
                 ; 000D 00B5        sum += data[i];
00665a 01f8      	MOVW R30,R16
00665b 85ac      	LDD  R26,Y+12
00665c 85bd      	LDD  R27,Y+12+1
00665d 940e ab0f 	CALL SUBOPT_0x1DE
00665f 940e a3b4 	CALL SUBOPT_0xA1
006661 940e b396 	CALL __ADDF12
006663 940e a3aa 	CALL SUBOPT_0x9F
                 ; 000D 00B6      }
                +
006665 5f0f     +SUBI R16 , LOW ( - 1 )
006666 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006667 cfed      	RJMP _0x1A0039
                 _0x1A003A:
                 ; 000D 00B7      //printDebug("\r\nMax(%.2f) ", sum);
                 ; 000D 00B8      //printDebug("\r\n");
                 ; 000D 00B9      //return sum;
                 ; 000D 00BA 
                 ; 000D 00BB 
                 ; 000D 00BC      avg =(sum/count);
006668 85ea      	LDD  R30,Y+10
006669 85fb      	LDD  R31,Y+10+1
00666a 940e ab13 	CALL SUBOPT_0x1DF
00666c 940e b434 	CALL __DIVF21
00666e 940e a39e 	CALL SUBOPT_0x9D
                 ; 000D 00BD      return avg;
006670 8119      	LDD  R17,Y+1
006671 8108      	LDD  R16,Y+0
006672 962e      	ADIW R28,14
006673 9508      	RET
                 ; 000D 00BE }
                 ;
                 ;
                 ;
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "dataqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct data_record_st dataQ[MAX_DATA_QUEUE];
                 ;int last_wr_dataQ = 0;
                 ;int last_rd_dataQ = 0;
                 ;int dataQ_len = 0;
                 ;
                 ;/*============================================================*/
                 ;int addDataQueue(unsigned long int timestamp, unsigned int channel, float value)
                 ; 000E 000D {
                 
                 	.CSEG
                 _addDataQueue:
                 ; 000E 000E     if(dataQ_len == MAX_DATA_QUEUE){
006674 940e b62f 	CALL __PUTPARD2
                 ;	timestamp -> Y+6
                 ;	channel -> Y+4
                 ;	value -> Y+0
006676 91a0 15c9 	LDS  R26,_dataQ_len
006678 91b0 15ca 	LDS  R27,_dataQ_len+1
00667a 971a      	SBIW R26,10
00667b f421      	BRNE _0x1C0003
                 ; 000E 000F         return -1;
00667c efef      	LDI  R30,LOW(65535)
00667d efff      	LDI  R31,HIGH(65535)
00667e 940c 6a75 	JMP  _0x20E004D
                 ; 000E 0010     }
                 ; 000E 0011 
                 ; 000E 0012     dataQ[last_wr_dataQ].timestamp      = timestamp;
                 _0x1C0003:
006680 940e ab19 	CALL SUBOPT_0x1E0
006682 59eb      	SUBI R30,LOW(-_dataQ)
006683 4efa      	SBCI R31,HIGH(-_dataQ)
006684 940e aac7 	CALL SUBOPT_0x1D0
                 ; 000E 0013     dataQ[last_wr_dataQ].channel        = channel;
006686 940e ab19 	CALL SUBOPT_0x1E0
                +
006688 59e7     +SUBI R30 , LOW ( - _dataQ - ( 4 ) )
006689 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 4 ) )
                 	__ADDW1MN _dataQ,4
00668a 81ac      	LDD  R26,Y+4
00668b 81bd      	LDD  R27,Y+4+1
00668c 83a0      	STD  Z+0,R26
00668d 83b1      	STD  Z+1,R27
                 ; 000E 0014     dataQ[last_wr_dataQ].value          = value;
00668e 940e ab19 	CALL SUBOPT_0x1E0
                +
006690 59e5     +SUBI R30 , LOW ( - _dataQ - ( 6 ) )
006691 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 6 ) )
                 	__ADDW1MN _dataQ,6
006692 940e a2bf 	CALL SUBOPT_0x7A
006694 940e aaf1 	CALL SUBOPT_0x1D8
                 ; 000E 0015 
                 ; 000E 0016     last_wr_dataQ = (last_wr_dataQ + 1) % MAX_DATA_QUEUE;
006696 01d5      	MOVW R26,R10
006697 9611      	ADIW R26,1
006698 e0ea      	LDI  R30,LOW(10)
006699 e0f0      	LDI  R31,HIGH(10)
00669a 940e b5ca 	CALL __MODW21
00669c 015f      	MOVW R10,R30
                 ; 000E 0017 
                 ; 000E 0018     dataQ_len++;
00669d eca9      	LDI  R26,LOW(_dataQ_len)
00669e e1b5      	LDI  R27,HIGH(_dataQ_len)
00669f 940e a273 	CALL SUBOPT_0x6E
                 ; 000E 0019 
                 ; 000E 001A     return 0;
0066a1 e0e0      	LDI  R30,LOW(0)
0066a2 e0f0      	LDI  R31,HIGH(0)
0066a3 940c 6a75 	JMP  _0x20E004D
                 ; 000E 001B }
                 ;/*============================================================*/
                 ;int fetchDataQueue(unsigned long int *timestamp, unsigned int *channel, float *value)
                 ; 000E 001E {
                 _fetchDataQueue:
                 ; 000E 001F     if(dataQ_len == 0){
0066a5 93ba      	ST   -Y,R27
0066a6 93aa      	ST   -Y,R26
                 ;	*timestamp -> Y+4
                 ;	*channel -> Y+2
                 ;	*value -> Y+0
0066a7 91e0 15c9 	LDS  R30,_dataQ_len
0066a9 91f0 15ca 	LDS  R31,_dataQ_len+1
0066ab 9730      	SBIW R30,0
0066ac f421      	BRNE _0x1C0004
                 ; 000E 0020         return -1;
0066ad efef      	LDI  R30,LOW(65535)
0066ae efff      	LDI  R31,HIGH(65535)
0066af 940c 6a58 	JMP  _0x20E004E
                 ; 000E 0021     }
                 ; 000E 0022 
                 ; 000E 0023     *timestamp  =   dataQ[last_rd_dataQ].timestamp;
                 _0x1C0004:
0066b1 940e ab1f 	CALL SUBOPT_0x1E1
0066b3 59eb      	SUBI R30,LOW(-_dataQ)
0066b4 4efa      	SBCI R31,HIGH(-_dataQ)
0066b5 940e ab25 	CALL SUBOPT_0x1E2
                 ; 000E 0024     *channel    =   dataQ[last_rd_dataQ].channel;
0066b7 940e ab1f 	CALL SUBOPT_0x1E1
                +
0066b9 59e7     +SUBI R30 , LOW ( - _dataQ - ( 4 ) )
0066ba 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 4 ) )
                 	__ADDW1MN _dataQ,4
0066bb 01df      	MOVW R26,R30
0066bc 940e b5f6 	CALL __GETW1P
0066be 81aa      	LDD  R26,Y+2
0066bf 81bb      	LDD  R27,Y+2+1
0066c0 93ed      	ST   X+,R30
0066c1 93fc      	ST   X,R31
                 ; 000E 0025     *value      =   dataQ[last_rd_dataQ].value;
0066c2 940e ab1f 	CALL SUBOPT_0x1E1
                +
0066c4 59e5     +SUBI R30 , LOW ( - _dataQ - ( 6 ) )
0066c5 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 6 ) )
                 	__ADDW1MN _dataQ,6
0066c6 01df      	MOVW R26,R30
0066c7 940e b5fa 	CALL __GETD1P
0066c9 81a8      	LD   R26,Y
0066ca 81b9      	LDD  R27,Y+1
0066cb 940e b605 	CALL __PUTDP1
                 ; 000E 0026 
                 ; 000E 0027     last_rd_dataQ = (last_rd_dataQ + 1) % MAX_DATA_QUEUE;
0066cd 01d6      	MOVW R26,R12
0066ce 9611      	ADIW R26,1
0066cf e0ea      	LDI  R30,LOW(10)
0066d0 e0f0      	LDI  R31,HIGH(10)
0066d1 940e b5ca 	CALL __MODW21
0066d3 016f      	MOVW R12,R30
                 ; 000E 0028 
                 ; 000E 0029     dataQ_len--;
0066d4 eca9      	LDI  R26,LOW(_dataQ_len)
0066d5 e1b5      	LDI  R27,HIGH(_dataQ_len)
0066d6 940c 6a51 	JMP  _0x20E0050
                 ; 000E 002A     return 0;
                 ; 000E 002B }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "status.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "debug.h"
                 ;
                 ;/*eeprom*/ char sensorStatus[MAX_SENS_CHANNEL]                  = {SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL};
                 ;/*eeprom*/ char dataStatus[MAX_SENS_CHANNEL]                    = {DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL};
                 ;char mtncStatus                                             = MTNC_NORMAL;
                 ;char powerSrcStatus                                         = PWR_NORMAL;
                 ;char batteryStatus                                          = BATT_NORMAL;
                 ;char dinStatus[USE_DIN]                                     = {UNKNOWN,UNKNOWN};
                 
                 	.DSEG
                 ;char doutStatus[USE_DIN]                                    = {UNKNOWN,UNKNOWN};
                 ;char serverCommStatus                                       = UNKNOWN;
                 ;char lanStatus                                              = 0;
                 ;char memoryStatus                                           = MEM_NORMAL;
                 ;
                 ;float batteryVolt                                           = 0.0;
                 ;
                 ;/*
                 ;char dataLowerStatus[MAX_SENS_CHANNEL]           = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataLowerDelayStatus[MAX_SENS_CHANNEL]      = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataLowerExtremeStatus[MAX_SENS_CHANNEL]    = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperStatus[MAX_SENS_CHANNEL]           = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperDelayStatus[MAX_SENS_CHANNEL]      = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperExtremeStatus[MAX_SENS_CHANNEL]    = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;*/
                 ;
                 ;/****
                 ;*  "sensor.h" -> struct sens_val_st sensor[]
                 ;*
                 ;****/
                 ;/*============================================================*/
                 ;int updateMIPStatus(void)
                 ; 000F 0025 {
                 
                 	.CSEG
                 ; 000F 0026     // -- depend on menu -- //
                 ; 000F 0027     return 0;
                 ; 000F 0028 }
                 ;/*============================================================*/
                 ;int updateBatteryStatus(void)
                 ; 000F 002B {
                 _updateBatteryStatus:
                 ; 000F 002C     static TIMER    t               = 0;
                 ; 000F 002D     static char     t_flag          = 0;
                 ; 000F 002E     static char     lastCheck       = 0;
                 ; 000F 002F     char            current_status  = 0;
                 ; 000F 0030 
                 ; 000F 0031     if(MAIN_POWER_CONNECT){
0066d8 931a      	ST   -Y,R17
                 ;	current_status -> R17
0066d9 e010      	LDI  R17,0
0066da 91e0 0103 	LDS  R30,259
0066dc 78e0      	ANDI R30,LOW(0x80)
0066dd e0f0      	LDI  R31,0
0066de 940e b4f3 	CALL __ASRW3
0066e0 940e b4f1 	CALL __ASRW4
0066e2 9730      	SBIW R30,0
0066e3 f461      	BRNE _0x1E0006
                 ; 000F 0032         powerSrcStatus      =   PWR_NORMAL;
0066e4 e0e0      	LDI  R30,LOW(0)
0066e5 93e0 147a 	STS  _powerSrcStatus,R30
                 ; 000F 0033         batteryStatus       =   BATT_NORMAL;
0066e7 93e0 147b 	STS  _batteryStatus,R30
                 ; 000F 0034         batteryVolt         =   4.2;
                +
0066e9 e6e6     +LDI R30 , LOW ( 0x40866666 )
0066ea e6f6     +LDI R31 , HIGH ( 0x40866666 )
0066eb e866     +LDI R22 , BYTE3 ( 0x40866666 )
0066ec e470     +LDI R23 , BYTE4 ( 0x40866666 )
                 	__GETD1N 0x40866666
0066ed 940e ab2d 	CALL SUBOPT_0x1E3
                 ; 000F 0035         return 0;
0066ef c047      	RJMP _0x20E0058
                 ; 000F 0036     }
                 ; 000F 0037     else{
                 _0x1E0006:
                 ; 000F 0038         powerSrcStatus      =   PWR_DOWN;
0066f0 e0e1      	LDI  R30,LOW(1)
0066f1 93e0 147a 	STS  _powerSrcStatus,R30
                 ; 000F 0039         batteryVolt         =   readBattery();
0066f3 940e 400f 	CALL _readBattery
0066f5 940e ab2d 	CALL SUBOPT_0x1E3
                 ; 000F 003A 
                 ; 000F 003B         if(env_config.batteryLevel == 0)    // -- battery alarm disable --> always BATT_NORMAL -- //
0066f7 940e ab36 	CALL SUBOPT_0x1E4
0066f9 940e b67e 	CALL __CPD10
0066fb f421      	BRNE _0x1E0008
                 ; 000F 003C         {
                 ; 000F 003D             batteryStatus = BATT_NORMAL;
0066fc e0e0      	LDI  R30,LOW(0)
0066fd 93e0 147b 	STS  _batteryStatus,R30
                 ; 000F 003E         }
                 ; 000F 003F         else
0066ff c034      	RJMP _0x1E0009
                 _0x1E0008:
                 ; 000F 0040         {
                 ; 000F 0041             if(batteryVolt < env_config.batteryLevel)
006700 940e ab36 	CALL SUBOPT_0x1E4
006702 91a0 1483 	LDS  R26,_batteryVolt
006704 91b0 1484 	LDS  R27,_batteryVolt+1
006706 9180 1485 	LDS  R24,_batteryVolt+2
006708 9190 1486 	LDS  R25,_batteryVolt+3
00670a 940e b479 	CALL __CMPF12
00670c f410      	BRSH _0x1E000A
                 ; 000F 0042             {
                 ; 000F 0043                 current_status      = BATT_LOW;
00670d e011      	LDI  R17,LOW(1)
                 ; 000F 0044             }
                 ; 000F 0045             else
00670e c001      	RJMP _0x1E000B
                 _0x1E000A:
                 ; 000F 0046             {
                 ; 000F 0047                 current_status      = BATT_NORMAL;
00670f e010      	LDI  R17,LOW(0)
                 ; 000F 0048             }
                 _0x1E000B:
                 ; 000F 0049 
                 ; 000F 004A             if(lastCheck != current_status)
006710 91a0 15d0 	LDS  R26,_lastCheck_S00F0001000
006712 171a      	CP   R17,R26
006713 f029      	BREQ _0x1E000C
                 ; 000F 004B             {
                 ; 000F 004C                 t_flag              = 0;
006714 e0e0      	LDI  R30,LOW(0)
006715 93e0 15cf 	STS  _t_flag_S00F0001000,R30
                 ; 000F 004D                 lastCheck           = current_status;
006717 9310 15d0 	STS  _lastCheck_S00F0001000,R17
                 ; 000F 004E             }
                 ; 000F 004F 
                 ; 000F 0050             if(!t_flag)
                 _0x1E000C:
006719 91e0 15cf 	LDS  R30,_t_flag_S00F0001000
00671b 30e0      	CPI  R30,0
00671c f431      	BRNE _0x1E000D
                 ; 000F 0051             {
                 ; 000F 0052                 TIMER_setTimer(&t,10);
00671d eceb      	LDI  R30,LOW(_t_S00F0001000)
00671e e1f5      	LDI  R31,HIGH(_t_S00F0001000)
00671f 940e a062 	CALL SUBOPT_0x25
                 ; 000F 0053                 t_flag              = 1;
006721 e0e1      	LDI  R30,LOW(1)
006722 c00f      	RJMP _0x1E005D
                 ; 000F 0054             }
                 ; 000F 0055             else
                 _0x1E000D:
                 ; 000F 0056             {
                 ; 000F 0057                 if(TIMER_checkTimerExceed(t))
006723 91a0 15cb 	LDS  R26,_t_S00F0001000
006725 91b0 15cc 	LDS  R27,_t_S00F0001000+1
006727 9180 15cd 	LDS  R24,_t_S00F0001000+2
006729 9190 15ce 	LDS  R25,_t_S00F0001000+3
00672b 940e 3dff 	CALL _TIMER_checkTimerExceed
00672d 9730      	SBIW R30,0
00672e f029      	BREQ _0x1E000F
                 ; 000F 0058                 {
                 ; 000F 0059                     batteryStatus   = current_status;
00672f 9310 147b 	STS  _batteryStatus,R17
                 ; 000F 005A                     t_flag          = 0;
006731 e0e0      	LDI  R30,LOW(0)
                 _0x1E005D:
006732 93e0 15cf 	STS  _t_flag_S00F0001000,R30
                 ; 000F 005B                 }
                 ; 000F 005C             }
                 _0x1E000F:
                 ; 000F 005D         }// -- battery alarm enable -- //
                 _0x1E0009:
                 ; 000F 005E         return 1;
006734 e0e1      	LDI  R30,LOW(1)
006735 e0f0      	LDI  R31,HIGH(1)
006736 c002      	RJMP _0x20E0057
                 ; 000F 005F     }// -- main power disconnect -- //
                 ; 000F 0060 
                 ; 000F 0061     return 0;
                 _0x20E0058:
006737 e0e0      	LDI  R30,LOW(0)
006738 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0057:
006739 9119      	LD   R17,Y+
00673a 9508      	RET
                 ; 000F 0062 }
                 ;/*============================================================*/
                 ;int updateCommStatus(void)
                 ; 000F 0065 {
                 _updateCommStatus:
                 ; 000F 0066     int res;
                 ; 000F 0067 
                 ; 000F 0068     if(!IO_LAN_CONNECT){
00673b 931a      	ST   -Y,R17
00673c 930a      	ST   -Y,R16
                 ;	res -> R16,R17
00673d 91e0 0100 	LDS  R30,256
00673f 940e ab3f 	CALL SUBOPT_0x1E5
006741 9730      	SBIW R30,0
006742 f091      	BREQ _0x1E0010
                 ; 000F 0069         lanStatus                       = COMM_LAN_DISCONNECT;
006743 e0e1      	LDI  R30,LOW(1)
006744 93e0 1481 	STS  _lanStatus,R30
                 ; 000F 006A 
                 ; 000F 006B         serverCommStatus                = UNKNOWN;
006746 efef      	LDI  R30,LOW(255)
006747 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 006C 
                 ; 000F 006D         commLostTimer                   = 0;                // -- re-initial -- //
006749 e0e0      	LDI  R30,LOW(0)
00674a 93e0 1421 	STS  _commLostTimer,R30
00674c 93e0 1422 	STS  _commLostTimer+1,R30
00674e 93e0 1423 	STS  _commLostTimer+2,R30
006750 93e0 1424 	STS  _commLostTimer+3,R30
                 ; 000F 006E         return 1;
006752 e0e1      	LDI  R30,LOW(1)
006753 e0f0      	LDI  R31,HIGH(1)
006754 c047      	RJMP _0x20E0056
                 ; 000F 006F     }
                 ; 000F 0070     else{
                 _0x1E0010:
                 ; 000F 0071         lanStatus                       = COMM_LAN_CONNECT;
006755 e0e0      	LDI  R30,LOW(0)
006756 93e0 1481 	STS  _lanStatus,R30
                 ; 000F 0072 
                 ; 000F 0073         if((commLostTimer != 0xFFFFFFFF) && (commLostTimer != 0)){
006758 940e a808 	CALL SUBOPT_0x159
00675a 940e a091 	CALL SUBOPT_0x2B
00675c f029      	BREQ _0x1E0013
00675d 940e a808 	CALL SUBOPT_0x159
00675f 940e b68a 	CALL __CPD02
006761 f409      	BRNE _0x1E0014
                 _0x1E0013:
006762 c00a      	RJMP _0x1E0012
                 _0x1E0014:
                 ; 000F 0074             printDebug("<updateCommStatus> LostTimer time left = %ld(%lX)\r\n",(commLostTimer-baseCounter),(commLostTimer-baseCounter));
                +
006763 e8e2     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 0 ) )
006764 e4f4     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 0 ) )
006765 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 0 ) )
006766 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 0 ) )
                 	__POINTD1FN _0x1E0000,0
006767 940e a818 	CALL SUBOPT_0x15B
006769 940e a818 	CALL SUBOPT_0x15B
00676b 940e a038 	CALL SUBOPT_0x1F
                 ; 000F 0075         }
                 ; 000F 0076 
                 ; 000F 0077         res = TIMER_checkTimerExceed(commLostTimer);
                 _0x1E0012:
00676d 940e a808 	CALL SUBOPT_0x159
00676f 940e 3dff 	CALL _TIMER_checkTimerExceed
006771 018f      	MOVW R16,R30
                 ; 000F 0078         if(res < 0){
006772 2311      	TST  R17
006773 f432      	BRPL _0x1E0015
                 ; 000F 0079             serverCommStatus            = UNKNOWN;              // -- unknown -- //
006774 efef      	LDI  R30,LOW(255)
006775 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 007A             return 0;
006777 e0e0      	LDI  R30,LOW(0)
006778 e0f0      	LDI  R31,HIGH(0)
006779 c022      	RJMP _0x20E0056
                 ; 000F 007B         }
                 ; 000F 007C         else{
                 _0x1E0015:
                 ; 000F 007D             if(res){
00677a 2e00      	MOV  R0,R16
00677b 2a01      	OR   R0,R17
00677c f081      	BREQ _0x1E0017
                 ; 000F 007E                 if(serverCommStatus != COMM_LOST){
00677d 91a0 1480 	LDS  R26,_serverCommStatus
00677f 30a2      	CPI  R26,LOW(0x2)
006780 f031      	BREQ _0x1E0018
                 ; 000F 007F                     printDebug("<updateCommStatus> Server Down!!!\r\n");
                +
006781 ebe6     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 52 ) )
006782 e4f4     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 52 ) )
006783 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 52 ) )
006784 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 52 ) )
                 	__POINTD1FN _0x1E0000,52
006785 940e 9f66 	CALL SUBOPT_0x2
                 ; 000F 0080                 }
                 ; 000F 0081                 serverCommStatus        = COMM_LOST;            // -- disconnect -- //
                 _0x1E0018:
006787 e0e2      	LDI  R30,LOW(2)
006788 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 0082                 return 1;
00678a e0e1      	LDI  R30,LOW(1)
00678b e0f0      	LDI  R31,HIGH(1)
00678c c00f      	RJMP _0x20E0056
                 ; 000F 0083             }
                 ; 000F 0084             else{
                 _0x1E0017:
                 ; 000F 0085                 if(serverCommStatus != COMM_NORMAL){
00678d 91e0 1480 	LDS  R30,_serverCommStatus
00678f 30e0      	CPI  R30,0
006790 f031      	BREQ _0x1E001A
                 ; 000F 0086                     printDebug("<updateCommStatus> Server Up!!!\r\n");
                +
006791 edea     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 88 ) )
006792 e4f4     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 88 ) )
006793 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 88 ) )
006794 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 88 ) )
                 	__POINTD1FN _0x1E0000,88
006795 940e 9f66 	CALL SUBOPT_0x2
                 ; 000F 0087                 }
                 ; 000F 0088                 serverCommStatus        = COMM_NORMAL;          // -- connect -- //
                 _0x1E001A:
006797 e0e0      	LDI  R30,LOW(0)
006798 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 0089                 return 0;
00679a e0e0      	LDI  R30,LOW(0)
00679b e0f0      	LDI  R31,HIGH(0)
                 ; 000F 008A             }
                 ; 000F 008B         }
                 ; 000F 008C     }
                 ; 000F 008D }
                 _0x20E0056:
00679c 9109      	LD   R16,Y+
00679d 9119      	LD   R17,Y+
00679e 9508      	RET
                 ;/*============================================================*/
                 ;int updateMemoryStatus(void)
                 ; 000F 0090 {
                 _updateMemoryStatus:
                 ; 000F 0091 //    if(env_config.memoryMin == 0)    // -- memory alarm disable --> always MEM_NORMAL -- //
                 ; 000F 0092 //    {
                 ; 000F 0093 //            memoryStatus        = MEM_NORMAL;
                 ; 000F 0094 //    }
                 ; 000F 0095 //    else
                 ; 000F 0096 //    {
                 ; 000F 0097         if(sdFreeSpace == 0)
00679f 940e ab44 	CALL SUBOPT_0x1E6
0067a1 f411      	BRNE _0x1E001B
                 ; 000F 0098         {
                 ; 000F 0099             memoryStatus    = MEM_ERROR;
0067a2 e0e2      	LDI  R30,LOW(2)
0067a3 c013      	RJMP _0x1E005E
                 ; 000F 009A         }
                 ; 000F 009B         else if((int)(sdFreeSpace/1024) < env_config.memoryMin)
                 _0x1E001B:
0067a4 940e a06a 	CALL SUBOPT_0x26
                +
0067a6 e0e0     +LDI R30 , LOW ( 0x400 )
0067a7 e0f4     +LDI R31 , HIGH ( 0x400 )
0067a8 e060     +LDI R22 , BYTE3 ( 0x400 )
0067a9 e070     +LDI R23 , BYTE4 ( 0x400 )
                 	__GETD1N 0x400
0067aa 940e b599 	CALL __DIVD21U
0067ac 01df      	MOVW R26,R30
                +
0067ad 91e0 1375+LDS R30 , _env_config + ( 16 )
0067af 91f0 1376+LDS R31 , _env_config + ( 16 ) + 1
                 	__GETW1MN _env_config,16
0067b1 17ae      	CP   R26,R30
0067b2 07bf      	CPC  R27,R31
0067b3 f410      	BRSH _0x1E001D
                 ; 000F 009C         {
                 ; 000F 009D             memoryStatus    = MEM_LOW;
0067b4 e0e1      	LDI  R30,LOW(1)
0067b5 c001      	RJMP _0x1E005E
                 ; 000F 009E         }
                 ; 000F 009F         else
                 _0x1E001D:
                 ; 000F 00A0         {
                 ; 000F 00A1             memoryStatus    = MEM_NORMAL;
0067b6 e0e0      	LDI  R30,LOW(0)
                 _0x1E005E:
0067b7 93e0 1482 	STS  _memoryStatus,R30
                 ; 000F 00A2         }
                 ; 000F 00A3 //    }// -- memory alarm enable -- //
                 ; 000F 00A4 
                 ; 000F 00A5     if( memoryStatus != MEM_NORMAL ){
0067b9 30e0      	CPI  R30,0
0067ba f019      	BREQ _0x1E001F
                 ; 000F 00A6         return 1;
0067bb e0e1      	LDI  R30,LOW(1)
0067bc e0f0      	LDI  R31,HIGH(1)
0067bd 9508      	RET
                 ; 000F 00A7     }
                 ; 000F 00A8     else{
                 _0x1E001F:
                 ; 000F 00A9         return 0;
0067be c1b4      	RJMP _0x20E0054
                 ; 000F 00AA     }
                 ; 000F 00AB }
                 ;/*============================================================*/
                 ;int updateSensorStatus(int ch)
                 ; 000F 00AE {
                 _updateSensorStatus:
                 ; 000F 00AF     if((ch<0) || (ch>=MAX_SENS_CHANNEL)){
0067bf 93ba      	ST   -Y,R27
0067c0 93aa      	ST   -Y,R26
                 ;	ch -> Y+0
0067c1 81a9      	LDD  R26,Y+1
0067c2 23aa      	TST  R26
0067c3 f022      	BRMI _0x1E0022
0067c4 81a8      	LD   R26,Y
0067c5 81b9      	LDD  R27,Y+1
0067c6 9715      	SBIW R26,5
0067c7 f05c      	BRLT _0x1E0021
                 _0x1E0022:
                 ; 000F 00B0         printDebug("<checkProbeAlarm> sensor channel out of range (%d)\r\n",ch);
                +
0067c8 efec     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 122 ) )
0067c9 e4f4     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 122 ) )
0067ca e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 122 ) )
0067cb e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 122 ) )
                 	__POINTD1FN _0x1E0000,122
0067cc 940e a670 	CALL SUBOPT_0x116
0067ce 940e a4fe 	CALL SUBOPT_0xD5
                 ; 000F 00B1         return 0;
0067d0 e0e0      	LDI  R30,LOW(0)
0067d1 e0f0      	LDI  R31,HIGH(0)
0067d2 c021      	RJMP _0x20E0055
                 ; 000F 00B2     }
                 ; 000F 00B3 
                 ; 000F 00B4     sensorStatus[ch] = sensor[ch].status;
                 _0x1E0021:
0067d3 940e ab4f 	CALL SUBOPT_0x1E7
                +
0067d5 2f7e     +MOV R23 , R30
0067d6 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
0067d7 81a8      	LD   R26,Y
0067d8 81b9      	LDD  R27,Y+1
0067d9 e0e5      	LDI  R30,LOW(5)
0067da 940e b563 	CALL __MULB1W2U
                +
0067dc 5aea     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
0067dd 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
0067de 81e0      	LD   R30,Z
                +
0067df 2fa7     +MOV R26 , R23
0067e0 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
0067e1 93ec      	ST   X,R30
                 ; 000F 00B5 
                 ; 000F 00B6     if(sensorStatus[ch] == SENS_ERR_UNKNOWN){
0067e2 940e ab4f 	CALL SUBOPT_0x1E7
0067e4 81a0      	LD   R26,Z
0067e5 3faf      	CPI  R26,LOW(0xFF)
0067e6 f419      	BRNE _0x1E0024
                 ; 000F 00B7         return 0;
0067e7 e0e0      	LDI  R30,LOW(0)
0067e8 e0f0      	LDI  R31,HIGH(0)
0067e9 c00a      	RJMP _0x20E0055
                 ; 000F 00B8     }
                 ; 000F 00B9     else if(sensorStatus[ch] != SENS_NORMAL){
                 _0x1E0024:
0067ea 940e ab4f 	CALL SUBOPT_0x1E7
0067ec 81e0      	LD   R30,Z
0067ed 30e0      	CPI  R30,0
0067ee f019      	BREQ _0x1E0026
                 ; 000F 00BA         //printDebug("<checkProbeAlarm> Channel %d ERR\r\n",ch);
                 ; 000F 00BB         return 1;
0067ef e0e1      	LDI  R30,LOW(1)
0067f0 e0f0      	LDI  R31,HIGH(1)
0067f1 c002      	RJMP _0x20E0055
                 ; 000F 00BC     }
                 ; 000F 00BD     else{
                 _0x1E0026:
                 ; 000F 00BE         //printDebug("<checkProbeAlarm> Channel %d OK\r\n",ch);
                 ; 000F 00BF         return 0;
0067f2 e0e0      	LDI  R30,LOW(0)
0067f3 e0f0      	LDI  R31,HIGH(0)
                 ; 000F 00C0     }
                 ; 000F 00C1 }
                 _0x20E0055:
0067f4 9622      	ADIW R28,2
0067f5 9508      	RET
                 ;/*============================================================*/
                 ;int updateDataStatus(int ch)
                 ; 000F 00C4 {
                 _updateDataStatus:
                 ; 000F 00C5     static TIMER t[MAX_SENS_CHANNEL];
                 ; 000F 00C6     static char flag_lower[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 000F 00C7     static char flag_upper[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 000F 00C8     int res = 0;
                 ; 000F 00C9 
                 ; 000F 00CA     if((ch<0) || (ch>=MAX_SENS_CHANNEL)){
0067f6 940e a285 	CALL SUBOPT_0x71
                 ;	ch -> Y+2
                 ;	res -> R16,R17
                +
0067f8 e000     +LDI R16 , LOW ( 0 )
0067f9 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
0067fa 81ab      	LDD  R26,Y+3
0067fb 23aa      	TST  R26
0067fc f022      	BRMI _0x1E0029
0067fd 81aa      	LDD  R26,Y+2
0067fe 81bb      	LDD  R27,Y+2+1
0067ff 9715      	SBIW R26,5
006800 f04c      	BRLT _0x1E0028
                 _0x1E0029:
                 ; 000F 00CB         printDebug("<updateDataStatus> ABORT: sensor channel out of range (%d)\r\n",ch);
                +
006801 e3e1     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 175 ) )
006802 e4f5     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 175 ) )
006803 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 175 ) )
006804 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 175 ) )
                 	__POINTD1FN _0x1E0000,175
006805 940e a58f 	CALL SUBOPT_0xEE
006807 940e b522 	CALL __CWD1
006809 c1de      	RJMP _0x20E0053
                 ; 000F 00CC         return 0;
                 ; 000F 00CD     }
                 ; 000F 00CE 
                 ; 000F 00CF     if(sensor[ch].status != SENS_NORMAL){
                 _0x1E0028:
00680a 940e a626 	CALL SUBOPT_0x108
                +
00680c 5aea     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
00680d 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
00680e 81e0      	LD   R30,Z
00680f 30e0      	CPI  R30,0
006810 f009      	BREQ _0x1E002B
                 ; 000F 00D0         //printDebug("<updateDataStatus> ABORT: sensor (%d) error\r\n",ch);
                 ; 000F 00D1         return 0;
006811 c1da      	RJMP _0x20E0052
                 ; 000F 00D2     }
                 ; 000F 00D3 
                 ; 000F 00D4     if(sensor[ch].value < sensor_config[ch].lowerLimit){
                 _0x1E002B:
006812 940e a626 	CALL SUBOPT_0x108
006814 940e a032 	CALL SUBOPT_0x1E
006816 937f      	PUSH R23
006817 936f      	PUSH R22
006818 93ff      	PUSH R31
006819 93ef      	PUSH R30
00681a 940e a5b2 	CALL SUBOPT_0xF5
                +
00681c 53e9     +SUBI R30 , LOW ( - _sensor_config - ( 9 ) )
00681d 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 9 ) )
                 	__ADDW1MN _sensor_config,9
00681e 01df      	MOVW R26,R30
00681f 940e b5fa 	CALL __GETD1P
006821 91af      	POP  R26
006822 91bf      	POP  R27
006823 918f      	POP  R24
006824 919f      	POP  R25
006825 940e b479 	CALL __CMPF12
006827 f538      	BRSH _0x1E002C
                 ; 000F 00D5 
                 ; 000F 00D6         if(!flag_lower[ch])
006828 940e ab54 	CALL SUBOPT_0x1E8
00682a 81e0      	LD   R30,Z
00682b 30e0      	CPI  R30,0
00682c f4a9      	BRNE _0x1E002D
                 ; 000F 00D7         {
                 ; 000F 00D8             TIMER_setTimer(&t[ch],sensor_config[ch].lowerDelay);
00682d 940e ab59 	CALL SUBOPT_0x1E9
00682f 940e ab5e 	CALL SUBOPT_0x1EA
006831 81ac      	LDD  R26,Y+4
006832 81bd      	LDD  R27,Y+4+1
006833 e1ed      	LDI  R30,LOW(29)
006834 940e b563 	CALL __MULB1W2U
                +
006836 53e5     +SUBI R30 , LOW ( - _sensor_config - ( 13 ) )
006837 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 13 ) )
                 	__ADDW1MN _sensor_config,13
006838 01df      	MOVW R26,R30
006839 940e a029 	CALL SUBOPT_0x1C
00683b 940e a02e 	CALL SUBOPT_0x1D
                 ; 000F 00D9             flag_lower[ch] = 1;
00683d 940e ab54 	CALL SUBOPT_0x1E8
00683f e0a1      	LDI  R26,LOW(1)
006840 83a0      	STD  Z+0,R26
                 ; 000F 00DA         }
                 ; 000F 00DB         else
006841 c00b      	RJMP _0x1E002E
                 _0x1E002D:
                 ; 000F 00DC         {
                 ; 000F 00DD             if(TIMER_checkTimerExceed(t[ch]))
006842 940e ab59 	CALL SUBOPT_0x1E9
006844 940e ab0f 	CALL SUBOPT_0x1DE
006846 940e a01e 	CALL SUBOPT_0x1A
006848 f021      	BREQ _0x1E002F
                 ; 000F 00DE             {
                 ; 000F 00DF                 dataStatus[ch]              |=  DATA_LOWER_LIMIT;
006849 940e ab62 	CALL SUBOPT_0x1EB
00684b 60e1      	ORI  R30,1
00684c 93ec      	ST   X,R30
                 ; 000F 00E0                 //printDebug("<updateDataStatus> Probe %d lowerDelayLimit[%02X]\r\n", ch+1, dataStatus[ch]);   /////
                 ; 000F 00E1             }
                 ; 000F 00E2         }
                 _0x1E002F:
                 _0x1E002E:
                 ; 000F 00E3         //dataStatus[ch]                      |=  DATA_LOWER_LIMIT;
                 ; 000F 00E4         res |= 1;
00684d 6001      	ORI  R16,LOW(1)
                 ; 000F 00E5 
                 ; 000F 00E6         //printDebug("<updateDataStatus> Probe %d lowerLimit[%02X] -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 00E7         //                ch+1,dataStatus[ch],sensor[ch].value,sensor_config[ch].lowerLimit);
                 ; 000F 00E8     }
                 ; 000F 00E9     else{
00684e c008      	RJMP _0x1E0030
                 _0x1E002C:
                 ; 000F 00EA         flag_lower[ch] = 0;
00684f 940e ab54 	CALL SUBOPT_0x1E8
006851 e0a0      	LDI  R26,LOW(0)
006852 83a0      	STD  Z+0,R26
                 ; 000F 00EB         dataStatus[ch]                      &=  ~DATA_LOWER_LIMIT;
006853 940e ab62 	CALL SUBOPT_0x1EB
006855 7fee      	ANDI R30,0xFE
006856 93ec      	ST   X,R30
                 ; 000F 00EC         //dataStatus[ch]                      &=  ~DATA_LOWER_DELAY;
                 ; 000F 00ED     }
                 _0x1E0030:
                 ; 000F 00EE 
                 ; 000F 00EF     if(sensor[ch].value < sensor_config[ch].lowerExtreme)
006857 940e a626 	CALL SUBOPT_0x108
006859 940e a032 	CALL SUBOPT_0x1E
00685b 937f      	PUSH R23
00685c 936f      	PUSH R22
00685d 93ff      	PUSH R31
00685e 93ef      	PUSH R30
00685f 940e a5b2 	CALL SUBOPT_0xF5
                +
006861 53e3     +SUBI R30 , LOW ( - _sensor_config - ( 15 ) )
006862 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 15 ) )
                 	__ADDW1MN _sensor_config,15
006863 01df      	MOVW R26,R30
006864 940e b5fa 	CALL __GETD1P
006866 91af      	POP  R26
006867 91bf      	POP  R27
006868 918f      	POP  R24
006869 919f      	POP  R25
00686a 940e b479 	CALL __CMPF12
00686c f430      	BRSH _0x1E0031
                 ; 000F 00F0     {
                 ; 000F 00F1         dataStatus[ch]                      |=  DATA_LOWER_EXTREME;
00686d 940e ab62 	CALL SUBOPT_0x1EB
00686f 60e2      	ORI  R30,2
006870 93ec      	ST   X,R30
                 ; 000F 00F2         res |= 1;
006871 6001      	ORI  R16,LOW(1)
                 ; 000F 00F3 
                 ; 000F 00F4         //printDebug("<updateDataStatus> Probe %d lowerExtreme[%02X] -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 00F5         //                ch+1,dataStatus[ch],sensor[ch].value,sensor_config[ch].lowerExtreme);
                 ; 000F 00F6     }
                 ; 000F 00F7     else
006872 c004      	RJMP _0x1E0032
                 _0x1E0031:
                 ; 000F 00F8     {
                 ; 000F 00F9         dataStatus[ch]                      &=  ~DATA_LOWER_EXTREME;
006873 940e ab62 	CALL SUBOPT_0x1EB
006875 7fed      	ANDI R30,0xFD
006876 93ec      	ST   X,R30
                 ; 000F 00FA     }
                 _0x1E0032:
                 ; 000F 00FB 
                 ; 000F 00FC     if(sensor[ch].value > sensor_config[ch].upperLimit)
006877 940e a626 	CALL SUBOPT_0x108
006879 940e a032 	CALL SUBOPT_0x1E
00687b 937f      	PUSH R23
00687c 936f      	PUSH R22
00687d 93ff      	PUSH R31
00687e 93ef      	PUSH R30
00687f 940e a5b2 	CALL SUBOPT_0xF5
                +
006881 52ef     +SUBI R30 , LOW ( - _sensor_config - ( 19 ) )
006882 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 19 ) )
                 	__ADDW1MN _sensor_config,19
006883 01df      	MOVW R26,R30
006884 940e b5fa 	CALL __GETD1P
006886 91af      	POP  R26
006887 91bf      	POP  R27
006888 918f      	POP  R24
006889 919f      	POP  R25
00688a 940e b479 	CALL __CMPF12
00688c f009      	BREQ PC+2
00688d f410      	BRCC PC+3
00688e 940c 68b7 	JMP  _0x1E0033
                 ; 000F 00FD     {
                 ; 000F 00FE         if(!flag_upper[ch])
006890 940e ab68 	CALL SUBOPT_0x1EC
006892 81e0      	LD   R30,Z
006893 30e0      	CPI  R30,0
006894 f4a9      	BRNE _0x1E0034
                 ; 000F 00FF         {
                 ; 000F 0100             TIMER_setTimer(&t[ch],sensor_config[ch].upperDelay);
006895 940e ab59 	CALL SUBOPT_0x1E9
006897 940e ab5e 	CALL SUBOPT_0x1EA
006899 81ac      	LDD  R26,Y+4
00689a 81bd      	LDD  R27,Y+4+1
00689b e1ed      	LDI  R30,LOW(29)
00689c 940e b563 	CALL __MULB1W2U
                +
00689e 52eb     +SUBI R30 , LOW ( - _sensor_config - ( 23 ) )
00689f 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 23 ) )
                 	__ADDW1MN _sensor_config,23
0068a0 01df      	MOVW R26,R30
0068a1 940e a029 	CALL SUBOPT_0x1C
0068a3 940e a02e 	CALL SUBOPT_0x1D
                 ; 000F 0101             flag_upper[ch] = 1;
0068a5 940e ab68 	CALL SUBOPT_0x1EC
0068a7 e0a1      	LDI  R26,LOW(1)
0068a8 83a0      	STD  Z+0,R26
                 ; 000F 0102         }
                 ; 000F 0103         else
0068a9 c00b      	RJMP _0x1E0035
                 _0x1E0034:
                 ; 000F 0104         {
                 ; 000F 0105             if(TIMER_checkTimerExceed(t[ch]))
0068aa 940e ab59 	CALL SUBOPT_0x1E9
0068ac 940e ab0f 	CALL SUBOPT_0x1DE
0068ae 940e a01e 	CALL SUBOPT_0x1A
0068b0 f021      	BREQ _0x1E0036
                 ; 000F 0106             {
                 ; 000F 0107                 dataStatus[ch]              |=  DATA_UPPER_LIMIT;
0068b1 940e ab62 	CALL SUBOPT_0x1EB
0068b3 60e4      	ORI  R30,4
0068b4 93ec      	ST   X,R30
                 ; 000F 0108             }
                 ; 000F 0109         }
                 _0x1E0036:
                 _0x1E0035:
                 ; 000F 010A         //dataStatus[ch]                      |=  DATA_UPPER_LIMIT;
                 ; 000F 010B         res |= 1;
0068b5 6001      	ORI  R16,LOW(1)
                 ; 000F 010C 
                 ; 000F 010D         //printDebug("<updateDataStatus> Probe %d upperLimit -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 010E         //                ch+1,sensor[ch].value,sensor_config[ch].upperLimit);
                 ; 000F 010F     }
                 ; 000F 0110     else
0068b6 c008      	RJMP _0x1E0037
                 _0x1E0033:
                 ; 000F 0111     {
                 ; 000F 0112         flag_upper[ch] = 0;
0068b7 940e ab68 	CALL SUBOPT_0x1EC
0068b9 e0a0      	LDI  R26,LOW(0)
0068ba 83a0      	STD  Z+0,R26
                 ; 000F 0113         dataStatus[ch]                      &=  ~DATA_UPPER_LIMIT;
0068bb 940e ab62 	CALL SUBOPT_0x1EB
0068bd 7feb      	ANDI R30,0xFB
0068be 93ec      	ST   X,R30
                 ; 000F 0114         //dataStatus[ch]                      &=  ~DATA_UPPER_DELAY;
                 ; 000F 0115     }
                 _0x1E0037:
                 ; 000F 0116 
                 ; 000F 0117     if(sensor[ch].value > sensor_config[ch].upperExtreme)
0068bf 940e a626 	CALL SUBOPT_0x108
0068c1 940e a032 	CALL SUBOPT_0x1E
0068c3 937f      	PUSH R23
0068c4 936f      	PUSH R22
0068c5 93ff      	PUSH R31
0068c6 93ef      	PUSH R30
0068c7 940e a5b2 	CALL SUBOPT_0xF5
                +
0068c9 52e9     +SUBI R30 , LOW ( - _sensor_config - ( 25 ) )
0068ca 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 25 ) )
                 	__ADDW1MN _sensor_config,25
0068cb 01df      	MOVW R26,R30
0068cc 940e b5fa 	CALL __GETD1P
0068ce 91af      	POP  R26
0068cf 91bf      	POP  R27
0068d0 918f      	POP  R24
0068d1 919f      	POP  R25
0068d2 940e b479 	CALL __CMPF12
0068d4 f009      	BREQ PC+2
0068d5 f410      	BRCC PC+3
0068d6 940c 68de 	JMP  _0x1E0038
                 ; 000F 0118     {
                 ; 000F 0119         dataStatus[ch]                      |=  DATA_UPPER_EXTREME;
0068d8 940e ab62 	CALL SUBOPT_0x1EB
0068da 60e8      	ORI  R30,8
0068db 93ec      	ST   X,R30
                 ; 000F 011A         res |= 1;
0068dc 6001      	ORI  R16,LOW(1)
                 ; 000F 011B 
                 ; 000F 011C         //printDebug("<updateDataStatus> Probe %d upperExtreme -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 011D         //                ch+1,sensor[ch].value,sensor_config[ch].upperExtreme);
                 ; 000F 011E     }
                 ; 000F 011F     else
0068dd c004      	RJMP _0x1E0039
                 _0x1E0038:
                 ; 000F 0120     {
                 ; 000F 0121         dataStatus[ch]                      &=  ~DATA_UPPER_EXTREME;
0068de 940e ab62 	CALL SUBOPT_0x1EB
0068e0 7fe7      	ANDI R30,0XF7
0068e1 93ec      	ST   X,R30
                 ; 000F 0122     }
                 _0x1E0039:
                 ; 000F 0123 
                 ; 000F 0124     return res;
0068e2 01f8      	MOVW R30,R16
0068e3 c10a      	RJMP _0x20E0051
                 ; 000F 0125 }
                 ;/*============================================================*/
                 ;int updateDinStatus(void)
                 ; 000F 0128 {
                 _updateDinStatus:
                 ; 000F 0129     static TIMER    t[USE_DIN]                  = {0,0};
                 ; 000F 012A     static char     lastDinCheck[USE_DIN]       = {UNKNOWN,UNKNOWN};   // -- initial with unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 000F 012B     static char     steadyState[USE_DIN]        = {0,0};
                 ; 000F 012C     char            currentState                = UNKNOWN;
                 ; 000F 012D     int             ch                          = 0;
                 ; 000F 012E     int             ret                         = 0;
                 ; 000F 012F 
                 ; 000F 0130     for(ch=0;ch<USE_DIN;ch++)
0068e4 940e b69a 	CALL __SAVELOCR6
                 ;	currentState -> R17
                 ;	ch -> R18,R19
                 ;	ret -> R20,R21
0068e6 ef1f      	LDI  R17,255
0068e7 940e 9f57 	CALL SUBOPT_0x0
                +
0068e9 e020     +LDI R18 , LOW ( 0 )
0068ea e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1E003C:
                +
0068eb 3022     +CPI R18 , LOW ( 2 )
0068ec e0e0     +LDI R30 , HIGH ( 2 )
0068ed 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
0068ee f014      	BRLT PC+3
0068ef 940c 695d 	JMP _0x1E003D
                 ; 000F 0131     {
                 ; 000F 0132         if(din_config[ch].channelEnable == 0x01)
0068f1 940e 9fe7 	CALL SUBOPT_0x13
0068f3 81a0      	LD   R26,Z
0068f4 30a1      	CPI  R26,LOW(0x1)
0068f5 f011      	BREQ PC+3
0068f6 940c 695a 	JMP _0x1E003E
                 ; 000F 0133         {
                 ; 000F 0134             switch(ch){
0068f8 01f9      	MOVW R30,R18
                 ; 000F 0135                 case 0  : currentState = DIN1;  break;
0068f9 9730      	SBIW R30,0
0068fa f441      	BRNE _0x1E0042
0068fb 91e0 0103 	LDS  R30,259
0068fd 940e ab3f 	CALL SUBOPT_0x1E5
0068ff 940e b536 	CALL __LNEGW1
006901 2f1e      	MOV  R17,R30
006902 c019      	RJMP _0x1E0041
                 ; 000F 0136                 case 1  : currentState = DIN2;  break;
                 _0x1E0042:
006903 30e1      	CPI  R30,LOW(0x1)
006904 e0a0      	LDI  R26,HIGH(0x1)
006905 07fa      	CPC  R31,R26
006906 f451      	BRNE _0x1E0044
006907 91e0 0103 	LDS  R30,259
006909 70e8      	ANDI R30,LOW(0x8)
00690a e0f0      	LDI  R31,0
00690b 940e b4f3 	CALL __ASRW3
00690d 940e b536 	CALL __LNEGW1
00690f 2f1e      	MOV  R17,R30
006910 c00b      	RJMP _0x1E0041
                 ; 000F 0137                 default : printDebug("<updateDinStatus> channel[%d] out of range\r\n",ch); return 0;
                 _0x1E0044:
                +
006911 e6ee     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 236 ) )
006912 e4f5     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 236 ) )
006913 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 236 ) )
006914 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 236 ) )
                 	__POINTD1FN _0x1E0000,236
006915 940e 9fcd 	CALL SUBOPT_0xF
006917 940e 9fd5 	CALL SUBOPT_0x10
006919 940e a238 	CALL SUBOPT_0x64
00691b c13c      	RJMP _0x20E004E
                 ; 000F 0138             }
                 _0x1E0041:
                 ; 000F 0139 
                 ; 000F 013A             if(currentState != lastDinCheck[ch])
00691c efa7      	LDI  R26,LOW(_lastDinCheck_S00F0006000)
00691d e1b5      	LDI  R27,HIGH(_lastDinCheck_S00F0006000)
00691e 0fa2      	ADD  R26,R18
00691f 1fb3      	ADC  R27,R19
006920 91ec      	LD   R30,X
006921 17e1      	CP   R30,R17
006922 f081      	BREQ _0x1E0045
                 ; 000F 013B             {
                 ; 000F 013C                 TIMER_setTimer(&t[ch],1);
006923 01f9      	MOVW R30,R18
006924 eeaf      	LDI  R26,LOW(_t_S00F0006000)
006925 e1b5      	LDI  R27,HIGH(_t_S00F0006000)
006926 940e ab5e 	CALL SUBOPT_0x1EA
                +
006928 e0a1     +LDI R26 , LOW ( 0x1 )
006929 e0b0     +LDI R27 , HIGH ( 0x1 )
00692a e080     +LDI R24 , BYTE3 ( 0x1 )
00692b e090     +LDI R25 , BYTE4 ( 0x1 )
                 	__GETD2N 0x1
00692c 940e 3e15 	CALL _TIMER_setTimer
                 ; 000F 013D                 lastDinCheck[ch]    = currentState;
00692e 01f9      	MOVW R30,R18
00692f 50e9      	SUBI R30,LOW(-_lastDinCheck_S00F0006000)
006930 4efa      	SBCI R31,HIGH(-_lastDinCheck_S00F0006000)
006931 8310      	ST   Z,R17
                 ; 000F 013E                 steadyState[ch]     = 0;
006932 c023      	RJMP _0x1E005F
                 ; 000F 013F             }
                 ; 000F 0140             else if(!steadyState[ch])
                 _0x1E0045:
006933 efa9      	LDI  R26,LOW(_steadyState_S00F0006000)
006934 e1b5      	LDI  R27,HIGH(_steadyState_S00F0006000)
006935 940e 9fbf 	CALL SUBOPT_0xD
006937 f511      	BRNE _0x1E0047
                 ; 000F 0141             {
                 ; 000F 0142                 if(TIMER_checkTimerExceed(t[ch])){
006938 01f9      	MOVW R30,R18
006939 eeaf      	LDI  R26,LOW(_t_S00F0006000)
00693a e1b5      	LDI  R27,HIGH(_t_S00F0006000)
00693b 940e ab0f 	CALL SUBOPT_0x1DE
00693d 940e a01e 	CALL SUBOPT_0x1A
00693f f0b1      	BREQ _0x1E0048
                 ; 000F 0143 
                 ; 000F 0144                     steadyState[ch] = 1;
006940 efa9      	LDI  R26,LOW(_steadyState_S00F0006000)
006941 e1b5      	LDI  R27,HIGH(_steadyState_S00F0006000)
006942 0fa2      	ADD  R26,R18
006943 1fb3      	ADC  R27,R19
006944 e0e1      	LDI  R30,LOW(1)
006945 93ec      	ST   X,R30
                 ; 000F 0145 
                 ; 000F 0146                     if(currentState){
006946 3010      	CPI  R17,0
006947 f029      	BREQ _0x1E0049
                 ; 000F 0147                         dinStatus[ch]   = DIN_RISING;
006948 e7ac      	LDI  R26,LOW(_dinStatus)
006949 e1b4      	LDI  R27,HIGH(_dinStatus)
00694a 0fa2      	ADD  R26,R18
00694b 1fb3      	ADC  R27,R19
00694c c005      	RJMP _0x1E0060
                 ; 000F 0148                     }
                 ; 000F 0149                     else{
                 _0x1E0049:
                 ; 000F 014A                         dinStatus[ch]   = DIN_FALLING;
00694d e7ac      	LDI  R26,LOW(_dinStatus)
00694e e1b4      	LDI  R27,HIGH(_dinStatus)
00694f 0fa2      	ADD  R26,R18
006950 1fb3      	ADC  R27,R19
006951 e0e0      	LDI  R30,LOW(0)
                 _0x1E0060:
006952 93ec      	ST   X,R30
                 ; 000F 014B                     }
                 ; 000F 014C 
                 ; 000F 014D                     ret += 1;
                +
006953 5f4f     +SUBI R20 , LOW ( - 1 )
006954 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 000F 014E                 }
                 ; 000F 014F                 else{
006955 c004      	RJMP _0x1E004B
                 _0x1E0048:
                 ; 000F 0150                     steadyState[ch] = 0;
                 _0x1E005F:
006956 efa9      	LDI  R26,LOW(_steadyState_S00F0006000)
006957 e1b5      	LDI  R27,HIGH(_steadyState_S00F0006000)
006958 940e 9fda 	CALL SUBOPT_0x11
                 ; 000F 0151                 }
                 _0x1E004B:
                 ; 000F 0152             }
                 ; 000F 0153         }
                 _0x1E0047:
                 ; 000F 0154     }
                 _0x1E003E:
                +
00695a 5f2f     +SUBI R18 , LOW ( - 1 )
00695b 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00695c cf8e      	RJMP _0x1E003C
                 _0x1E003D:
                 ; 000F 0155 
                 ; 000F 0156     return ret;
00695d 01fa      	MOVW R30,R20
00695e 940e b6a1 	CALL __LOADLOCR6
006960 c0f7      	RJMP _0x20E004E
                 ; 000F 0157 }
                 ;/*============================================================*/
                 ;int updateDoutStatus(void)
                 ; 000F 015A {
                 _updateDoutStatus:
                 ; 000F 015B     if(d_out[0]){   doutStatus[0]        = DOUT_HIGH; }
006961 91e0 143c 	LDS  R30,_d_out
006963 30e0      	CPI  R30,0
006964 f011      	BREQ _0x1E004C
006965 e0e1      	LDI  R30,LOW(1)
006966 c001      	RJMP _0x1E0061
                 ; 000F 015C     else{           doutStatus[0]        = DOUT_LOW; }
                 _0x1E004C:
006967 e0e0      	LDI  R30,LOW(0)
                 _0x1E0061:
006968 93e0 147e 	STS  _doutStatus,R30
                 ; 000F 015D 
                 ; 000F 015E     if(d_out[1]){   doutStatus[1]        = DOUT_HIGH; }
                +
00696a 91e0 143d+LDS R30 , _d_out + ( 1 )
                 	__GETB1MN _d_out,1
00696c 30e0      	CPI  R30,0
00696d f011      	BREQ _0x1E004E
00696e e0e1      	LDI  R30,LOW(1)
00696f c001      	RJMP _0x1E0062
                 ; 000F 015F     else{           doutStatus[1]        = DOUT_LOW; }
                 _0x1E004E:
006970 e0e0      	LDI  R30,LOW(0)
                 _0x1E0062:
                +
006971 93e0 147f+STS _doutStatus + ( 1 ) , R30
                 	__PUTB1MN _doutStatus,1
                 ; 000F 0160 
                 ; 000F 0161     return 0;
                 _0x20E0054:
006973 e0e0      	LDI  R30,LOW(0)
006974 e0f0      	LDI  R31,HIGH(0)
006975 9508      	RET
                 ; 000F 0162 }
                 ;/*============================================================*/
                 ;int getDeviceState(unsigned short *state)
                 ; 000F 0165 {
                 _getDeviceState:
                 ; 000F 0166     int     i   = 0;
                 ; 000F 0167 
                 ; 000F 0168     *state      = 0x00;
006976 940e a285 	CALL SUBOPT_0x71
                 ;	*state -> Y+2
                 ;	i -> R16,R17
                +
006978 e000     +LDI R16 , LOW ( 0 )
006979 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00697a 81aa      	LDD  R26,Y+2
00697b 81bb      	LDD  R27,Y+2+1
00697c 940e a5dc 	CALL SUBOPT_0xFC
                 ; 000F 0169 
                 ; 000F 016A     if(isDeviceConfig()){
00697e 940e 4eab 	CALL _isDeviceConfig
006980 9730      	SBIW R30,0
006981 f031      	BREQ _0x1E0050
                 ; 000F 016B         *state |= (1 << 15);
006982 81aa      	LDD  R26,Y+2
006983 81bb      	LDD  R27,Y+2+1
006984 91ed      	LD   R30,X+
006985 91fd      	LD   R31,X+
006986 68f0      	ORI  R31,HIGH(0x8000)
006987 c005      	RJMP _0x1E0063
                 ; 000F 016C     }
                 ; 000F 016D     else{
                 _0x1E0050:
                 ; 000F 016E         *state &= ~(1 << 15);
006988 81aa      	LDD  R26,Y+2
006989 81bb      	LDD  R27,Y+2+1
00698a 91ed      	LD   R30,X+
00698b 91fd      	LD   R31,X+
00698c 77ff      	ANDI R31,HIGH(0x7FFF)
                 _0x1E0063:
00698d 93fe      	ST   -X,R31
00698e 93ee      	ST   -X,R30
                 ; 000F 016F     }
                 ; 000F 0170 
                 ; 000F 0171     if(operating_config.deviceEnable){
                +
00698f 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
006991 30e0      	CPI  R30,0
006992 f031      	BREQ _0x1E0052
                 ; 000F 0172         *state |= (1 << 14);
006993 81aa      	LDD  R26,Y+2
006994 81bb      	LDD  R27,Y+2+1
006995 91ed      	LD   R30,X+
006996 91fd      	LD   R31,X+
006997 64f0      	ORI  R31,HIGH(0x4000)
006998 c005      	RJMP _0x1E0064
                 ; 000F 0173     }
                 ; 000F 0174     else{
                 _0x1E0052:
                 ; 000F 0175         *state &= ~(1 << 14);
006999 81aa      	LDD  R26,Y+2
00699a 81bb      	LDD  R27,Y+2+1
00699b 91ed      	LD   R30,X+
00699c 91fd      	LD   R31,X+
00699d 7bff      	ANDI R31,HIGH(0xBFFF)
                 _0x1E0064:
00699e 93fe      	ST   -X,R31
00699f 93ee      	ST   -X,R30
                 ; 000F 0176     }
                 ; 000F 0177 
                 ; 000F 0178     if(operating_config.mode == MODE_REALTIME){
0069a0 91a0 11b6 	LDS  R26,_operating_config
0069a2 31a0      	CPI  R26,LOW(0x10)
0069a3 f431      	BRNE _0x1E0054
                 ; 000F 0179         *state |= (2 << 10);
0069a4 81aa      	LDD  R26,Y+2
0069a5 81bb      	LDD  R27,Y+2+1
0069a6 91ed      	LD   R30,X+
0069a7 91fd      	LD   R31,X+
0069a8 60f8      	ORI  R31,HIGH(0x800)
0069a9 c005      	RJMP _0x1E0065
                 ; 000F 017A     }
                 ; 000F 017B     else{
                 _0x1E0054:
                 ; 000F 017C         *state |= (1 << 10);
0069aa 81aa      	LDD  R26,Y+2
0069ab 81bb      	LDD  R27,Y+2+1
0069ac 91ed      	LD   R30,X+
0069ad 91fd      	LD   R31,X+
0069ae 60f4      	ORI  R31,HIGH(0x400)
                 _0x1E0065:
0069af 93fe      	ST   -X,R31
0069b0 93ee      	ST   -X,R30
                 ; 000F 017D     }
                 ; 000F 017E 
                 ; 000F 017F     if(operating_config.alarmEnable){
                +
0069b1 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
0069b3 30e0      	CPI  R30,0
0069b4 f031      	BREQ _0x1E0056
                 ; 000F 0180         *state |= (2 << 8);
0069b5 81aa      	LDD  R26,Y+2
0069b6 81bb      	LDD  R27,Y+2+1
0069b7 91ed      	LD   R30,X+
0069b8 91fd      	LD   R31,X+
0069b9 60f2      	ORI  R31,HIGH(0x200)
0069ba c005      	RJMP _0x1E0066
                 ; 000F 0181     }
                 ; 000F 0182     else{
                 _0x1E0056:
                 ; 000F 0183         *state |= (1 << 8);
0069bb 81aa      	LDD  R26,Y+2
0069bc 81bb      	LDD  R27,Y+2+1
0069bd 91ed      	LD   R30,X+
0069be 91fd      	LD   R31,X+
0069bf 60f1      	ORI  R31,HIGH(0x100)
                 _0x1E0066:
0069c0 93fe      	ST   -X,R31
0069c1 93ee      	ST   -X,R30
                 ; 000F 0184     }
                 ; 000F 0185 
                 ; 000F 0186     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
0069c2 e000     +LDI R16 , LOW ( 0 )
0069c3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1E0059:
                +
0069c4 3005     +CPI R16 , LOW ( 5 )
0069c5 e0e0     +LDI R30 , HIGH ( 5 )
0069c6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0069c7 f4c4      	BRGE _0x1E005A
                 ; 000F 0187     {
                 ; 000F 0188         if(operating_config.sensorEnable[i]){
                +
0069c8 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
0069c9 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
0069ca 0fe0      	ADD  R30,R16
0069cb 1ff1      	ADC  R31,R17
0069cc 81e0      	LD   R30,Z
0069cd 30e0      	CPI  R30,0
0069ce f029      	BREQ _0x1E005B
                 ; 000F 0189             *state |= (1 << (4-i) );
0069cf 940e ab6d 	CALL SUBOPT_0x1ED
0069d1 2be6      	OR   R30,R22
0069d2 2bf7      	OR   R31,R23
0069d3 c006      	RJMP _0x1E0067
                 ; 000F 018A         }
                 ; 000F 018B         else{
                 _0x1E005B:
                 ; 000F 018C             *state &= ~(1 << (4-i) );
0069d4 940e ab6d 	CALL SUBOPT_0x1ED
0069d6 95e0      	COM  R30
0069d7 95f0      	COM  R31
0069d8 23e6      	AND  R30,R22
0069d9 23f7      	AND  R31,R23
                 _0x1E0067:
0069da 01dc      	MOVW R26,R24
0069db 93ed      	ST   X+,R30
0069dc 93fc      	ST   X,R31
                 ; 000F 018D         }
                 ; 000F 018E     }
                +
0069dd 5f0f     +SUBI R16 , LOW ( - 1 )
0069de 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0069df cfe4      	RJMP _0x1E0059
                 _0x1E005A:
                 ; 000F 018F 
                 ; 000F 0190     printDebug("<getDeviceState> state = [0x%04X]\r\n",*state);
                +
0069e0 e9eb     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 281 ) )
0069e1 e4f5     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 281 ) )
0069e2 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 281 ) )
0069e3 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 281 ) )
                 	__POINTD1FN _0x1E0000,281
0069e4 940e a6e3 	CALL SUBOPT_0x12C
0069e6 940e a029 	CALL SUBOPT_0x1C
                 _0x20E0053:
0069e8 940e b62a 	CALL __PUTPARD1
0069ea 940e 9fd5 	CALL SUBOPT_0x10
                 ; 000F 0191 
                 ; 000F 0192     return 0;
                 _0x20E0052:
0069ec e0e0      	LDI  R30,LOW(0)
0069ed e0f0      	LDI  R31,HIGH(0)
                 _0x20E0051:
0069ee 8119      	LDD  R17,Y+1
0069ef 8108      	LDD  R16,Y+0
0069f0 9624      	ADIW R28,4
0069f1 9508      	RET
                 ; 000F 0193 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "eventqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct event_record_st eventQ[MAX_EVENT_QUEUE];
                 ;int last_wr_eventQ = 0;
                 ;int last_rd_eventQ = 0;
                 ;int eventQ_len = 0;
                 ;
                 ;/*============================================================*/
                 ;int addEventQueue(unsigned long int timestamp, unsigned char eventID, unsigned char eventStatus)
                 ; 0010 000D {
                 
                 	.CSEG
                 _addEventQueue:
                 ; 0010 000E     if(eventQ_len == MAX_EVENT_QUEUE){
0069f2 93aa      	ST   -Y,R26
                 ;	timestamp -> Y+2
                 ;	eventID -> Y+1
                 ;	eventStatus -> Y+0
0069f3 91a0 1677 	LDS  R26,_eventQ_len
0069f5 91b0 1678 	LDS  R27,_eventQ_len+1
0069f7 9754      	SBIW R26,20
0069f8 f419      	BRNE _0x200003
                 ; 0010 000F         return -1;
0069f9 efef      	LDI  R30,LOW(65535)
0069fa efff      	LDI  R31,HIGH(65535)
0069fb c05c      	RJMP _0x20E004E
                 ; 0010 0010     }
                 ; 0010 0011 
                 ; 0010 0012     eventQ[last_wr_eventQ].timestamp        = timestamp;
                 _0x200003:
0069fc 940e ab7b 	CALL SUBOPT_0x1EE
0069fe 50e5      	SUBI R30,LOW(-_eventQ)
0069ff 4efa      	SBCI R31,HIGH(-_eventQ)
006a00 940e a3b4 	CALL SUBOPT_0xA1
006a02 940e aaf1 	CALL SUBOPT_0x1D8
                 ; 0010 0013     eventQ[last_wr_eventQ].eventID          = eventID;
006a04 940e ab7b 	CALL SUBOPT_0x1EE
                +
006a06 50e1     +SUBI R30 , LOW ( - _eventQ - ( 4 ) )
006a07 4efa     +SBCI R31 , HIGH ( - _eventQ - ( 4 ) )
                 	__ADDW1MN _eventQ,4
006a08 81a9      	LDD  R26,Y+1
006a09 83a0      	STD  Z+0,R26
                 ; 0010 0014     eventQ[last_wr_eventQ].eventStatus      = eventStatus;
006a0a 940e ab7b 	CALL SUBOPT_0x1EE
                +
006a0c 50e0     +SUBI R30 , LOW ( - _eventQ - ( 5 ) )
006a0d 4efa     +SBCI R31 , HIGH ( - _eventQ - ( 5 ) )
                 	__ADDW1MN _eventQ,5
006a0e 81a8      	LD   R26,Y
006a0f 83a0      	STD  Z+0,R26
                 ; 0010 0015 
                 ; 0010 0016     last_wr_eventQ = (last_wr_eventQ + 1) % MAX_EVENT_QUEUE;
006a10 91a0 1673 	LDS  R26,_last_wr_eventQ
006a12 91b0 1674 	LDS  R27,_last_wr_eventQ+1
006a14 9611      	ADIW R26,1
006a15 e1e4      	LDI  R30,LOW(20)
006a16 e0f0      	LDI  R31,HIGH(20)
006a17 940e b5ca 	CALL __MODW21
006a19 93e0 1673 	STS  _last_wr_eventQ,R30
006a1b 93f0 1674 	STS  _last_wr_eventQ+1,R31
                 ; 0010 0017 
                 ; 0010 0018     eventQ_len++;
006a1d e7a7      	LDI  R26,LOW(_eventQ_len)
006a1e e1b6      	LDI  R27,HIGH(_eventQ_len)
006a1f 91ed      	LD   R30,X+
006a20 91fd      	LD   R31,X+
006a21 9631      	ADIW R30,1
006a22 c031      	RJMP _0x20E004F
                 ; 0010 0019 
                 ; 0010 001A     return 0;
                 ; 0010 001B }
                 ;/*============================================================*/
                 ;int fetchEventQueue(unsigned long int *timestamp, unsigned char *eventID, unsigned char *eventStatus)
                 ; 0010 001E {
                 _fetchEventQueue:
                 ; 0010 001F     if(eventQ_len == 0){
006a23 93ba      	ST   -Y,R27
006a24 93aa      	ST   -Y,R26
                 ;	*timestamp -> Y+4
                 ;	*eventID -> Y+2
                 ;	*eventStatus -> Y+0
006a25 91e0 1677 	LDS  R30,_eventQ_len
006a27 91f0 1678 	LDS  R31,_eventQ_len+1
006a29 9730      	SBIW R30,0
006a2a f419      	BRNE _0x200004
                 ; 0010 0020         return -1;
006a2b efef      	LDI  R30,LOW(65535)
006a2c efff      	LDI  R31,HIGH(65535)
006a2d c02a      	RJMP _0x20E004E
                 ; 0010 0021     }
                 ; 0010 0022 
                 ; 0010 0023     *timestamp      =   eventQ[last_rd_eventQ].timestamp;
                 _0x200004:
006a2e 940e ab83 	CALL SUBOPT_0x1EF
006a30 50e5      	SUBI R30,LOW(-_eventQ)
006a31 4efa      	SBCI R31,HIGH(-_eventQ)
006a32 940e ab25 	CALL SUBOPT_0x1E2
                 ; 0010 0024     *eventID        =   eventQ[last_rd_eventQ].eventID;
006a34 940e ab83 	CALL SUBOPT_0x1EF
                +
006a36 50e1     +SUBI R30 , LOW ( - _eventQ - ( 4 ) )
006a37 4efa     +SBCI R31 , HIGH ( - _eventQ - ( 4 ) )
                 	__ADDW1MN _eventQ,4
006a38 81e0      	LD   R30,Z
006a39 81aa      	LDD  R26,Y+2
006a3a 81bb      	LDD  R27,Y+2+1
006a3b 93ec      	ST   X,R30
                 ; 0010 0025     *eventStatus    =   eventQ[last_rd_eventQ].eventStatus;
006a3c 940e ab83 	CALL SUBOPT_0x1EF
                +
006a3e 50e0     +SUBI R30 , LOW ( - _eventQ - ( 5 ) )
006a3f 4efa     +SBCI R31 , HIGH ( - _eventQ - ( 5 ) )
                 	__ADDW1MN _eventQ,5
006a40 940e ab8b 	CALL SUBOPT_0x1F0
                 ; 0010 0026 
                 ; 0010 0027     last_rd_eventQ  = (last_rd_eventQ + 1) % MAX_EVENT_QUEUE;
006a42 91a0 1675 	LDS  R26,_last_rd_eventQ
006a44 91b0 1676 	LDS  R27,_last_rd_eventQ+1
006a46 9611      	ADIW R26,1
006a47 e1e4      	LDI  R30,LOW(20)
006a48 e0f0      	LDI  R31,HIGH(20)
006a49 940e b5ca 	CALL __MODW21
006a4b 93e0 1675 	STS  _last_rd_eventQ,R30
006a4d 93f0 1676 	STS  _last_rd_eventQ+1,R31
                 ; 0010 0028 
                 ; 0010 0029     eventQ_len--;
006a4f e7a7      	LDI  R26,LOW(_eventQ_len)
006a50 e1b6      	LDI  R27,HIGH(_eventQ_len)
                 _0x20E0050:
006a51 91ed      	LD   R30,X+
006a52 91fd      	LD   R31,X+
006a53 9731      	SBIW R30,1
                 _0x20E004F:
006a54 93fe      	ST   -X,R31
006a55 93ee      	ST   -X,R30
                 ; 0010 002A     return 0;
006a56 e0e0      	LDI  R30,LOW(0)
006a57 e0f0      	LDI  R31,HIGH(0)
                 _0x20E004E:
006a58 9626      	ADIW R28,6
006a59 9508      	RET
                 ; 0010 002B }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "alarm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;/*eeprom*/ char sensorAlarm[MAX_SENS_CHANNEL]   = {SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL};        // -- oled -- //
                 ;/*eeprom*/ char dataAlarm[MAX_SENS_CHANNEL]     = {DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL};        // -- oled -- //
                 ;/*eeprom*/ char dinAlarm[MAX_DI_CHANNEL]        = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,     // -- oled -- //
                 ;                                               UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 
                 	.DSEG
                 ;/*eeprom*/ char ainAlarm[MAX_AI_CHANNEL]        = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,
                 ;                                               UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;/*eeprom*/ char muteAlarm                       = UNKNOWN;
                 ;/*eeprom*/ char mtncAlarm                       = MTNC_NORMAL;
                 ;/*eeprom*/ char powerSrcAlarm                   = PWR_NORMAL;
                 ;/*eeprom*/ char batteryAlarm                    = BATT_NORMAL;                                                          // -- oled -- //
                 ;/*eeprom*/ char communicationAlarm              = COMM_NORMAL;
                 ;/*eeprom*/ char memoryAlarm                     = MEM_NORMAL;                                                           // -- oled -- //
                 ;/*eeprom*/ char gsmAlarm                        = GSM_NORMAL;
                 ;/*eeprom*/ char gsmBalanceAlarm                 = GBAL_NORMAL;
                 ;
                 ;/*============================================================*/
                 ;/**************************************************************/
                 ;/**************** Alarm Indicating decision *******************/
                 ;/**************************************************************/
                 ;int checkAlarm(char *srcList,int srcLen)
                 ; 0011 001B {
                 
                 	.CSEG
                 _checkAlarm:
                 ; 0011 001C     int i=0, res=0, tmp=0;
                 ; 0011 001D 
                 ; 0011 001E     for(i=0;i<srcLen;i++)
006a5a 93ba      	ST   -Y,R27
006a5b 93aa      	ST   -Y,R26
006a5c 940e a079 	CALL SUBOPT_0x28
                 ;	*srcList -> Y+8
                 ;	srcLen -> Y+6
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                 ;	tmp -> R20,R21
                +
006a5e e000     +LDI R16 , LOW ( 0 )
006a5f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x220006:
006a60 81ee      	LDD  R30,Y+6
006a61 81ff      	LDD  R31,Y+6+1
006a62 170e      	CP   R16,R30
006a63 071f      	CPC  R17,R31
006a64 f46c      	BRGE _0x220007
                 ; 0011 001F     {
                 ; 0011 0020         tmp  = checkAlarmFromSrc(srcList[i]);
006a65 01f8      	MOVW R30,R16
006a66 85a8      	LDD  R26,Y+8
006a67 85b9      	LDD  R27,Y+8+1
006a68 0fae      	ADD  R26,R30
006a69 1fbf      	ADC  R27,R31
006a6a 91ac      	LD   R26,X
006a6b d00b      	RCALL _checkAlarmFromSrc
006a6c 01af      	MOVW R20,R30
                 ; 0011 0021         res |= tmp;
                +
006a6d 2b24     +OR R18 , R20
006a6e 2b35     +OR R19 , R21
                 	__ORWRR 18,19,20,21
                 ; 0011 0022         //printDebug("<checkAlarm> SRC[0x%02X] -> %d\r\n",srcList[i],tmp);
                 ; 0011 0023     }
                +
006a6f 5f0f     +SUBI R16 , LOW ( - 1 )
006a70 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006a71 cfee      	RJMP _0x220006
                 _0x220007:
                 ; 0011 0024 
                 ; 0011 0025     return res;
006a72 01f9      	MOVW R30,R18
006a73 940e b6a1 	CALL __LOADLOCR6
                 _0x20E004D:
006a75 962a      	ADIW R28,10
006a76 9508      	RET
                 ; 0011 0026 }
                 ;/*============================================================*/
                 ;int checkAlarmFromSrc(char alarmSrc)
                 ; 0011 0029 {
                 _checkAlarmFromSrc:
                 ; 0011 002A     int i   = 0;
                 ; 0011 002B     int res = 0;
                 ; 0011 002C 
                 ; 0011 002D     switch(alarmSrc)
006a77 93aa      	ST   -Y,R26
006a78 940e b69c 	CALL __SAVELOCR4
                 ;	alarmSrc -> Y+4
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                +
006a7a e000     +LDI R16 , LOW ( 0 )
006a7b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
006a7c e020     +LDI R18 , LOW ( 0 )
006a7d e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
006a7e 81ec      	LDD  R30,Y+4
006a7f e0f0      	LDI  R31,0
                 ; 0011 002E     {
                 ; 0011 002F         case SRC_SENS1_EVENT             :  if(((sensorStatus[0]!= SENS_NORMAL) && (sensorStatus[0] != SENS_ERR_UNKNOWN)) ||
006a80 3ce0      	CPI  R30,LOW(0xC0)
006a81 e0a0      	LDI  R26,HIGH(0xC0)
006a82 07fa      	CPC  R31,R26
006a83 f469      	BRNE _0x22000B
                 ; 0011 0030                                                 (dataStatus[0]  != DATA_NORMAL))        res = 1;    break;
006a84 91a0 146f 	LDS  R26,_sensorStatus
006a86 30a0      	CPI  R26,LOW(0x0)
006a87 f011      	BREQ _0x22000D
006a88 3faf      	CPI  R26,LOW(0xFF)
006a89 f421      	BRNE _0x22000F
                 _0x22000D:
006a8a 91a0 1474 	LDS  R26,_dataStatus
006a8c 30a0      	CPI  R26,LOW(0x0)
006a8d f011      	BREQ _0x22000C
                 _0x22000F:
                +
006a8e e021     +LDI R18 , LOW ( 1 )
006a8f e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22000C:
006a90 c2b7      	RJMP _0x22000A
                 ; 0011 0031         case SRC_SENS1_LOWER             :  if(dataStatus[0]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x22000B:
006a91 3ce1      	CPI  R30,LOW(0xC1)
006a92 e0a0      	LDI  R26,HIGH(0xC1)
006a93 07fa      	CPC  R31,R26
006a94 f439      	BRNE _0x220011
006a95 91e0 1474 	LDS  R30,_dataStatus
006a97 70e1      	ANDI R30,LOW(0x1)
006a98 f011      	BREQ _0x220012
                +
006a99 e021     +LDI R18 , LOW ( 1 )
006a9a e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220012:
006a9b c2ac      	RJMP _0x22000A
                 ; 0011 0032         case SRC_SENS1_LOWERDELAY        :  if(dataStatus[0]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220011:
006a9c 3ce2      	CPI  R30,LOW(0xC2)
006a9d e0a0      	LDI  R26,HIGH(0xC2)
006a9e 07fa      	CPC  R31,R26
006a9f f439      	BRNE _0x220013
006aa0 91e0 1474 	LDS  R30,_dataStatus
006aa2 71e1      	ANDI R30,LOW(0x11)
006aa3 f011      	BREQ _0x220014
                +
006aa4 e021     +LDI R18 , LOW ( 1 )
006aa5 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220014:
006aa6 c2a1      	RJMP _0x22000A
                 ; 0011 0033         case SRC_SENS1_LOWEREXTREME      :  if(dataStatus[0]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220013:
006aa7 3ce3      	CPI  R30,LOW(0xC3)
006aa8 e0a0      	LDI  R26,HIGH(0xC3)
006aa9 07fa      	CPC  R31,R26
006aaa f439      	BRNE _0x220015
006aab 91e0 1474 	LDS  R30,_dataStatus
006aad 70e2      	ANDI R30,LOW(0x2)
006aae f011      	BREQ _0x220016
                +
006aaf e021     +LDI R18 , LOW ( 1 )
006ab0 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220016:
006ab1 c296      	RJMP _0x22000A
                 ; 0011 0034         case SRC_SENS1_UPPER             :  if(dataStatus[0]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220015:
006ab2 3ce4      	CPI  R30,LOW(0xC4)
006ab3 e0a0      	LDI  R26,HIGH(0xC4)
006ab4 07fa      	CPC  R31,R26
006ab5 f439      	BRNE _0x220017
006ab6 91e0 1474 	LDS  R30,_dataStatus
006ab8 70e4      	ANDI R30,LOW(0x4)
006ab9 f011      	BREQ _0x220018
                +
006aba e021     +LDI R18 , LOW ( 1 )
006abb e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220018:
006abc c28b      	RJMP _0x22000A
                 ; 0011 0035         case SRC_SENS1_UPPERDELAY        :  if(dataStatus[0]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220017:
006abd 3ce5      	CPI  R30,LOW(0xC5)
006abe e0a0      	LDI  R26,HIGH(0xC5)
006abf 07fa      	CPC  R31,R26
006ac0 f439      	BRNE _0x220019
006ac1 91e0 1474 	LDS  R30,_dataStatus
006ac3 71e4      	ANDI R30,LOW(0x14)
006ac4 f011      	BREQ _0x22001A
                +
006ac5 e021     +LDI R18 , LOW ( 1 )
006ac6 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001A:
006ac7 c280      	RJMP _0x22000A
                 ; 0011 0036         case SRC_SENS1_UPPEREXTREME      :  if(dataStatus[0]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220019:
006ac8 3ce6      	CPI  R30,LOW(0xC6)
006ac9 e0a0      	LDI  R26,HIGH(0xC6)
006aca 07fa      	CPC  R31,R26
006acb f439      	BRNE _0x22001B
006acc 91e0 1474 	LDS  R30,_dataStatus
006ace 70e8      	ANDI R30,LOW(0x8)
006acf f011      	BREQ _0x22001C
                +
006ad0 e021     +LDI R18 , LOW ( 1 )
006ad1 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001C:
006ad2 c275      	RJMP _0x22000A
                 ; 0011 0037         case SRC_SENS1_ERROR             :  if((sensorStatus[0] != SENS_NORMAL) &&
                 _0x22001B:
006ad3 3ce7      	CPI  R30,LOW(0xC7)
006ad4 e0a0      	LDI  R26,HIGH(0xC7)
006ad5 07fa      	CPC  R31,R26
006ad6 f451      	BRNE _0x22001D
                 ; 0011 0038                                                (sensorStatus[0] != SENS_ERR_UNKNOWN))   res = 1;    break;
006ad7 91a0 146f 	LDS  R26,_sensorStatus
006ad9 30a0      	CPI  R26,LOW(0x0)
006ada f011      	BREQ _0x22001F
006adb 3faf      	CPI  R26,LOW(0xFF)
006adc f409      	BRNE _0x220020
                 _0x22001F:
006add c002      	RJMP _0x22001E
                 _0x220020:
                +
006ade e021     +LDI R18 , LOW ( 1 )
006adf e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001E:
006ae0 c267      	RJMP _0x22000A
                 ; 0011 0039 
                 ; 0011 003A         case SRC_SENS2_EVENT             :  if(((sensorStatus[1]!= SENS_NORMAL) && (sensorStatus[1] != SENS_ERR_UNKNOWN)) ||
                 _0x22001D:
006ae1 3ce8      	CPI  R30,LOW(0xC8)
006ae2 e0a0      	LDI  R26,HIGH(0xC8)
006ae3 07fa      	CPC  R31,R26
006ae4 f479      	BRNE _0x220021
                 ; 0011 003B                                                 (dataStatus[1]  != DATA_NORMAL))        res = 1;    break;
                +
006ae5 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
006ae7 30a0      	CPI  R26,LOW(0x0)
006ae8 f021      	BREQ _0x220023
                +
006ae9 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
006aeb 3faf      	CPI  R26,LOW(0xFF)
006aec f421      	BRNE _0x220025
                 _0x220023:
                +
006aed 91a0 1475+LDS R26 , _dataStatus + ( 1 )
                 	__GETB2MN _dataStatus,1
006aef 30a0      	CPI  R26,LOW(0x0)
006af0 f011      	BREQ _0x220022
                 _0x220025:
                +
006af1 e021     +LDI R18 , LOW ( 1 )
006af2 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220022:
006af3 c254      	RJMP _0x22000A
                 ; 0011 003C         case SRC_SENS2_LOWER             :  if(dataStatus[1]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220021:
006af4 3ce9      	CPI  R30,LOW(0xC9)
006af5 e0a0      	LDI  R26,HIGH(0xC9)
006af6 07fa      	CPC  R31,R26
006af7 f439      	BRNE _0x220027
                +
006af8 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
006afa 70e1      	ANDI R30,LOW(0x1)
006afb f011      	BREQ _0x220028
                +
006afc e021     +LDI R18 , LOW ( 1 )
006afd e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220028:
006afe c249      	RJMP _0x22000A
                 ; 0011 003D         case SRC_SENS2_LOWERDELAY        :  if(dataStatus[1]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220027:
006aff 3cea      	CPI  R30,LOW(0xCA)
006b00 e0a0      	LDI  R26,HIGH(0xCA)
006b01 07fa      	CPC  R31,R26
006b02 f439      	BRNE _0x220029
                +
006b03 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
006b05 71e1      	ANDI R30,LOW(0x11)
006b06 f011      	BREQ _0x22002A
                +
006b07 e021     +LDI R18 , LOW ( 1 )
006b08 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002A:
006b09 c23e      	RJMP _0x22000A
                 ; 0011 003E         case SRC_SENS2_LOWEREXTREME      :  if(dataStatus[1]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220029:
006b0a 3ceb      	CPI  R30,LOW(0xCB)
006b0b e0a0      	LDI  R26,HIGH(0xCB)
006b0c 07fa      	CPC  R31,R26
006b0d f439      	BRNE _0x22002B
                +
006b0e 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
006b10 70e2      	ANDI R30,LOW(0x2)
006b11 f011      	BREQ _0x22002C
                +
006b12 e021     +LDI R18 , LOW ( 1 )
006b13 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002C:
006b14 c233      	RJMP _0x22000A
                 ; 0011 003F         case SRC_SENS2_UPPER             :  if(dataStatus[1]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x22002B:
006b15 3cec      	CPI  R30,LOW(0xCC)
006b16 e0a0      	LDI  R26,HIGH(0xCC)
006b17 07fa      	CPC  R31,R26
006b18 f439      	BRNE _0x22002D
                +
006b19 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
006b1b 70e4      	ANDI R30,LOW(0x4)
006b1c f011      	BREQ _0x22002E
                +
006b1d e021     +LDI R18 , LOW ( 1 )
006b1e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002E:
006b1f c228      	RJMP _0x22000A
                 ; 0011 0040         case SRC_SENS2_UPPERDELAY        :  if(dataStatus[1]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x22002D:
006b20 3ced      	CPI  R30,LOW(0xCD)
006b21 e0a0      	LDI  R26,HIGH(0xCD)
006b22 07fa      	CPC  R31,R26
006b23 f439      	BRNE _0x22002F
                +
006b24 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
006b26 71e4      	ANDI R30,LOW(0x14)
006b27 f011      	BREQ _0x220030
                +
006b28 e021     +LDI R18 , LOW ( 1 )
006b29 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220030:
006b2a c21d      	RJMP _0x22000A
                 ; 0011 0041         case SRC_SENS2_UPPEREXTREME      :  if(dataStatus[1]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x22002F:
006b2b 3cee      	CPI  R30,LOW(0xCE)
006b2c e0a0      	LDI  R26,HIGH(0xCE)
006b2d 07fa      	CPC  R31,R26
006b2e f439      	BRNE _0x220031
                +
006b2f 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
006b31 70e8      	ANDI R30,LOW(0x8)
006b32 f011      	BREQ _0x220032
                +
006b33 e021     +LDI R18 , LOW ( 1 )
006b34 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220032:
006b35 c212      	RJMP _0x22000A
                 ; 0011 0042         case SRC_SENS2_ERROR             :  if((sensorStatus[1] != SENS_NORMAL) &&
                 _0x220031:
006b36 3cef      	CPI  R30,LOW(0xCF)
006b37 e0a0      	LDI  R26,HIGH(0xCF)
006b38 07fa      	CPC  R31,R26
006b39 f461      	BRNE _0x220033
                 ; 0011 0043                                                (sensorStatus[1] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
006b3a 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
006b3c 30a0      	CPI  R26,LOW(0x0)
006b3d f021      	BREQ _0x220035
                +
006b3e 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
006b40 3faf      	CPI  R26,LOW(0xFF)
006b41 f409      	BRNE _0x220036
                 _0x220035:
006b42 c002      	RJMP _0x220034
                 _0x220036:
                +
006b43 e021     +LDI R18 , LOW ( 1 )
006b44 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220034:
006b45 c202      	RJMP _0x22000A
                 ; 0011 0044 
                 ; 0011 0045         case SRC_SENS3_EVENT             :  if(((sensorStatus[2]!= SENS_NORMAL) && (sensorStatus[2] != SENS_ERR_UNKNOWN)) ||
                 _0x220033:
006b46 3de0      	CPI  R30,LOW(0xD0)
006b47 e0a0      	LDI  R26,HIGH(0xD0)
006b48 07fa      	CPC  R31,R26
006b49 f479      	BRNE _0x220037
                 ; 0011 0046                                                 (dataStatus[2]  != DATA_NORMAL))        res = 1;    break;
                +
006b4a 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
006b4c 30a0      	CPI  R26,LOW(0x0)
006b4d f021      	BREQ _0x220039
                +
006b4e 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
006b50 3faf      	CPI  R26,LOW(0xFF)
006b51 f421      	BRNE _0x22003B
                 _0x220039:
                +
006b52 91a0 1476+LDS R26 , _dataStatus + ( 2 )
                 	__GETB2MN _dataStatus,2
006b54 30a0      	CPI  R26,LOW(0x0)
006b55 f011      	BREQ _0x220038
                 _0x22003B:
                +
006b56 e021     +LDI R18 , LOW ( 1 )
006b57 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220038:
006b58 c1ef      	RJMP _0x22000A
                 ; 0011 0047         case SRC_SENS3_LOWER             :  if(dataStatus[2]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220037:
006b59 3de1      	CPI  R30,LOW(0xD1)
006b5a e0a0      	LDI  R26,HIGH(0xD1)
006b5b 07fa      	CPC  R31,R26
006b5c f439      	BRNE _0x22003D
                +
006b5d 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
006b5f 70e1      	ANDI R30,LOW(0x1)
006b60 f011      	BREQ _0x22003E
                +
006b61 e021     +LDI R18 , LOW ( 1 )
006b62 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22003E:
006b63 c1e4      	RJMP _0x22000A
                 ; 0011 0048         case SRC_SENS3_LOWERDELAY        :  if(dataStatus[2]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x22003D:
006b64 3de2      	CPI  R30,LOW(0xD2)
006b65 e0a0      	LDI  R26,HIGH(0xD2)
006b66 07fa      	CPC  R31,R26
006b67 f439      	BRNE _0x22003F
                +
006b68 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
006b6a 71e1      	ANDI R30,LOW(0x11)
006b6b f011      	BREQ _0x220040
                +
006b6c e021     +LDI R18 , LOW ( 1 )
006b6d e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220040:
006b6e c1d9      	RJMP _0x22000A
                 ; 0011 0049         case SRC_SENS3_LOWEREXTREME      :  if(dataStatus[2]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x22003F:
006b6f 3de3      	CPI  R30,LOW(0xD3)
006b70 e0a0      	LDI  R26,HIGH(0xD3)
006b71 07fa      	CPC  R31,R26
006b72 f439      	BRNE _0x220041
                +
006b73 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
006b75 70e2      	ANDI R30,LOW(0x2)
006b76 f011      	BREQ _0x220042
                +
006b77 e021     +LDI R18 , LOW ( 1 )
006b78 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220042:
006b79 c1ce      	RJMP _0x22000A
                 ; 0011 004A         case SRC_SENS3_UPPER             :  if(dataStatus[2]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220041:
006b7a 3de4      	CPI  R30,LOW(0xD4)
006b7b e0a0      	LDI  R26,HIGH(0xD4)
006b7c 07fa      	CPC  R31,R26
006b7d f439      	BRNE _0x220043
                +
006b7e 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
006b80 70e4      	ANDI R30,LOW(0x4)
006b81 f011      	BREQ _0x220044
                +
006b82 e021     +LDI R18 , LOW ( 1 )
006b83 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220044:
006b84 c1c3      	RJMP _0x22000A
                 ; 0011 004B         case SRC_SENS3_UPPERDELAY        :  if(dataStatus[2]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220043:
006b85 3de5      	CPI  R30,LOW(0xD5)
006b86 e0a0      	LDI  R26,HIGH(0xD5)
006b87 07fa      	CPC  R31,R26
006b88 f439      	BRNE _0x220045
                +
006b89 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
006b8b 71e4      	ANDI R30,LOW(0x14)
006b8c f011      	BREQ _0x220046
                +
006b8d e021     +LDI R18 , LOW ( 1 )
006b8e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220046:
006b8f c1b8      	RJMP _0x22000A
                 ; 0011 004C         case SRC_SENS3_UPPEREXTREME      :  if(dataStatus[2]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220045:
006b90 3de6      	CPI  R30,LOW(0xD6)
006b91 e0a0      	LDI  R26,HIGH(0xD6)
006b92 07fa      	CPC  R31,R26
006b93 f439      	BRNE _0x220047
                +
006b94 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
006b96 70e8      	ANDI R30,LOW(0x8)
006b97 f011      	BREQ _0x220048
                +
006b98 e021     +LDI R18 , LOW ( 1 )
006b99 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220048:
006b9a c1ad      	RJMP _0x22000A
                 ; 0011 004D         case SRC_SENS3_ERROR             :  if((sensorStatus[2] != SENS_NORMAL) &&
                 _0x220047:
006b9b 3de7      	CPI  R30,LOW(0xD7)
006b9c e0a0      	LDI  R26,HIGH(0xD7)
006b9d 07fa      	CPC  R31,R26
006b9e f461      	BRNE _0x220049
                 ; 0011 004E                                                (sensorStatus[2] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
006b9f 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
006ba1 30a0      	CPI  R26,LOW(0x0)
006ba2 f021      	BREQ _0x22004B
                +
006ba3 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
006ba5 3faf      	CPI  R26,LOW(0xFF)
006ba6 f409      	BRNE _0x22004C
                 _0x22004B:
006ba7 c002      	RJMP _0x22004A
                 _0x22004C:
                +
006ba8 e021     +LDI R18 , LOW ( 1 )
006ba9 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22004A:
006baa c19d      	RJMP _0x22000A
                 ; 0011 004F 
                 ; 0011 0050         case SRC_SENS4_EVENT             :  if(((sensorStatus[3]!= SENS_NORMAL) && (sensorStatus[3] != SENS_ERR_UNKNOWN)) ||
                 _0x220049:
006bab 3de8      	CPI  R30,LOW(0xD8)
006bac e0a0      	LDI  R26,HIGH(0xD8)
006bad 07fa      	CPC  R31,R26
006bae f479      	BRNE _0x22004D
                 ; 0011 0051                                                 (dataStatus[3]  != DATA_NORMAL))        res = 1;    break;
                +
006baf 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
006bb1 30a0      	CPI  R26,LOW(0x0)
006bb2 f021      	BREQ _0x22004F
                +
006bb3 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
006bb5 3faf      	CPI  R26,LOW(0xFF)
006bb6 f421      	BRNE _0x220051
                 _0x22004F:
                +
006bb7 91a0 1477+LDS R26 , _dataStatus + ( 3 )
                 	__GETB2MN _dataStatus,3
006bb9 30a0      	CPI  R26,LOW(0x0)
006bba f011      	BREQ _0x22004E
                 _0x220051:
                +
006bbb e021     +LDI R18 , LOW ( 1 )
006bbc e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22004E:
006bbd c18a      	RJMP _0x22000A
                 ; 0011 0052         case SRC_SENS4_LOWER             :  if(dataStatus[3]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x22004D:
006bbe 3de9      	CPI  R30,LOW(0xD9)
006bbf e0a0      	LDI  R26,HIGH(0xD9)
006bc0 07fa      	CPC  R31,R26
006bc1 f439      	BRNE _0x220053
                +
006bc2 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
006bc4 70e1      	ANDI R30,LOW(0x1)
006bc5 f011      	BREQ _0x220054
                +
006bc6 e021     +LDI R18 , LOW ( 1 )
006bc7 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220054:
006bc8 c17f      	RJMP _0x22000A
                 ; 0011 0053         case SRC_SENS4_LOWERDELAY        :  if(dataStatus[3]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220053:
006bc9 3dea      	CPI  R30,LOW(0xDA)
006bca e0a0      	LDI  R26,HIGH(0xDA)
006bcb 07fa      	CPC  R31,R26
006bcc f439      	BRNE _0x220055
                +
006bcd 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
006bcf 71e1      	ANDI R30,LOW(0x11)
006bd0 f011      	BREQ _0x220056
                +
006bd1 e021     +LDI R18 , LOW ( 1 )
006bd2 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220056:
006bd3 c174      	RJMP _0x22000A
                 ; 0011 0054         case SRC_SENS4_LOWEREXTREME      :  if(dataStatus[3]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220055:
006bd4 3deb      	CPI  R30,LOW(0xDB)
006bd5 e0a0      	LDI  R26,HIGH(0xDB)
006bd6 07fa      	CPC  R31,R26
006bd7 f439      	BRNE _0x220057
                +
006bd8 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
006bda 70e2      	ANDI R30,LOW(0x2)
006bdb f011      	BREQ _0x220058
                +
006bdc e021     +LDI R18 , LOW ( 1 )
006bdd e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220058:
006bde c169      	RJMP _0x22000A
                 ; 0011 0055         case SRC_SENS4_UPPER             :  if(dataStatus[3]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220057:
006bdf 3dec      	CPI  R30,LOW(0xDC)
006be0 e0a0      	LDI  R26,HIGH(0xDC)
006be1 07fa      	CPC  R31,R26
006be2 f439      	BRNE _0x220059
                +
006be3 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
006be5 70e4      	ANDI R30,LOW(0x4)
006be6 f011      	BREQ _0x22005A
                +
006be7 e021     +LDI R18 , LOW ( 1 )
006be8 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005A:
006be9 c15e      	RJMP _0x22000A
                 ; 0011 0056         case SRC_SENS4_UPPERDELAY        :  if(dataStatus[3]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220059:
006bea 3ded      	CPI  R30,LOW(0xDD)
006beb e0a0      	LDI  R26,HIGH(0xDD)
006bec 07fa      	CPC  R31,R26
006bed f439      	BRNE _0x22005B
                +
006bee 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
006bf0 71e4      	ANDI R30,LOW(0x14)
006bf1 f011      	BREQ _0x22005C
                +
006bf2 e021     +LDI R18 , LOW ( 1 )
006bf3 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005C:
006bf4 c153      	RJMP _0x22000A
                 ; 0011 0057         case SRC_SENS4_UPPEREXTREME      :  if(dataStatus[3]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x22005B:
006bf5 3dee      	CPI  R30,LOW(0xDE)
006bf6 e0a0      	LDI  R26,HIGH(0xDE)
006bf7 07fa      	CPC  R31,R26
006bf8 f439      	BRNE _0x22005D
                +
006bf9 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
006bfb 70e8      	ANDI R30,LOW(0x8)
006bfc f011      	BREQ _0x22005E
                +
006bfd e021     +LDI R18 , LOW ( 1 )
006bfe e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005E:
006bff c148      	RJMP _0x22000A
                 ; 0011 0058         case SRC_SENS4_ERROR             :  if((sensorStatus[3] != SENS_NORMAL) &&
                 _0x22005D:
006c00 3def      	CPI  R30,LOW(0xDF)
006c01 e0a0      	LDI  R26,HIGH(0xDF)
006c02 07fa      	CPC  R31,R26
006c03 f461      	BRNE _0x22005F
                 ; 0011 0059                                                (sensorStatus[3] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
006c04 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
006c06 30a0      	CPI  R26,LOW(0x0)
006c07 f021      	BREQ _0x220061
                +
006c08 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
006c0a 3faf      	CPI  R26,LOW(0xFF)
006c0b f409      	BRNE _0x220062
                 _0x220061:
006c0c c002      	RJMP _0x220060
                 _0x220062:
                +
006c0d e021     +LDI R18 , LOW ( 1 )
006c0e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220060:
006c0f c138      	RJMP _0x22000A
                 ; 0011 005A 
                 ; 0011 005B         case SRC_SENS5_EVENT             :  if(((sensorStatus[4]!= SENS_NORMAL) && (sensorStatus[4] != SENS_ERR_UNKNOWN)) ||
                 _0x22005F:
006c10 3ee0      	CPI  R30,LOW(0xE0)
006c11 e0a0      	LDI  R26,HIGH(0xE0)
006c12 07fa      	CPC  R31,R26
006c13 f479      	BRNE _0x220063
                 ; 0011 005C                                                 (dataStatus[4]  != DATA_NORMAL))        res = 1;    break;
                +
006c14 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
006c16 30a0      	CPI  R26,LOW(0x0)
006c17 f021      	BREQ _0x220065
                +
006c18 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
006c1a 3faf      	CPI  R26,LOW(0xFF)
006c1b f421      	BRNE _0x220067
                 _0x220065:
                +
006c1c 91a0 1478+LDS R26 , _dataStatus + ( 4 )
                 	__GETB2MN _dataStatus,4
006c1e 30a0      	CPI  R26,LOW(0x0)
006c1f f011      	BREQ _0x220064
                 _0x220067:
                +
006c20 e021     +LDI R18 , LOW ( 1 )
006c21 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220064:
006c22 c125      	RJMP _0x22000A
                 ; 0011 005D         case SRC_SENS5_LOWER             :  if(dataStatus[4]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220063:
006c23 3ee1      	CPI  R30,LOW(0xE1)
006c24 e0a0      	LDI  R26,HIGH(0xE1)
006c25 07fa      	CPC  R31,R26
006c26 f439      	BRNE _0x220069
                +
006c27 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
006c29 70e1      	ANDI R30,LOW(0x1)
006c2a f011      	BREQ _0x22006A
                +
006c2b e021     +LDI R18 , LOW ( 1 )
006c2c e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006A:
006c2d c11a      	RJMP _0x22000A
                 ; 0011 005E         case SRC_SENS5_LOWERDELAY        :  if(dataStatus[4]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220069:
006c2e 3ee2      	CPI  R30,LOW(0xE2)
006c2f e0a0      	LDI  R26,HIGH(0xE2)
006c30 07fa      	CPC  R31,R26
006c31 f439      	BRNE _0x22006B
                +
006c32 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
006c34 71e1      	ANDI R30,LOW(0x11)
006c35 f011      	BREQ _0x22006C
                +
006c36 e021     +LDI R18 , LOW ( 1 )
006c37 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006C:
006c38 c10f      	RJMP _0x22000A
                 ; 0011 005F         case SRC_SENS5_LOWEREXTREME      :  if(dataStatus[4]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x22006B:
006c39 3ee3      	CPI  R30,LOW(0xE3)
006c3a e0a0      	LDI  R26,HIGH(0xE3)
006c3b 07fa      	CPC  R31,R26
006c3c f439      	BRNE _0x22006D
                +
006c3d 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
006c3f 70e2      	ANDI R30,LOW(0x2)
006c40 f011      	BREQ _0x22006E
                +
006c41 e021     +LDI R18 , LOW ( 1 )
006c42 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006E:
006c43 c104      	RJMP _0x22000A
                 ; 0011 0060         case SRC_SENS5_UPPER             :  if(dataStatus[4]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x22006D:
006c44 3ee4      	CPI  R30,LOW(0xE4)
006c45 e0a0      	LDI  R26,HIGH(0xE4)
006c46 07fa      	CPC  R31,R26
006c47 f439      	BRNE _0x22006F
                +
006c48 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
006c4a 70e4      	ANDI R30,LOW(0x4)
006c4b f011      	BREQ _0x220070
                +
006c4c e021     +LDI R18 , LOW ( 1 )
006c4d e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220070:
006c4e c0f9      	RJMP _0x22000A
                 ; 0011 0061         case SRC_SENS5_UPPERDELAY        :  if(dataStatus[4]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x22006F:
006c4f 3ee5      	CPI  R30,LOW(0xE5)
006c50 e0a0      	LDI  R26,HIGH(0xE5)
006c51 07fa      	CPC  R31,R26
006c52 f439      	BRNE _0x220071
                +
006c53 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
006c55 71e4      	ANDI R30,LOW(0x14)
006c56 f011      	BREQ _0x220072
                +
006c57 e021     +LDI R18 , LOW ( 1 )
006c58 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220072:
006c59 c0ee      	RJMP _0x22000A
                 ; 0011 0062         case SRC_SENS5_UPPEREXTREME      :  if(dataStatus[4]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220071:
006c5a 3ee6      	CPI  R30,LOW(0xE6)
006c5b e0a0      	LDI  R26,HIGH(0xE6)
006c5c 07fa      	CPC  R31,R26
006c5d f439      	BRNE _0x220073
                +
006c5e 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
006c60 70e8      	ANDI R30,LOW(0x8)
006c61 f011      	BREQ _0x220074
                +
006c62 e021     +LDI R18 , LOW ( 1 )
006c63 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220074:
006c64 c0e3      	RJMP _0x22000A
                 ; 0011 0063         case SRC_SENS5_ERROR             :  if((sensorStatus[4] != SENS_NORMAL) &&
                 _0x220073:
006c65 3ee7      	CPI  R30,LOW(0xE7)
006c66 e0a0      	LDI  R26,HIGH(0xE7)
006c67 07fa      	CPC  R31,R26
006c68 f461      	BRNE _0x220075
                 ; 0011 0064                                                (sensorStatus[4] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
006c69 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
006c6b 30a0      	CPI  R26,LOW(0x0)
006c6c f021      	BREQ _0x220077
                +
006c6d 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
006c6f 3faf      	CPI  R26,LOW(0xFF)
006c70 f409      	BRNE _0x220078
                 _0x220077:
006c71 c002      	RJMP _0x220076
                 _0x220078:
                +
006c72 e021     +LDI R18 , LOW ( 1 )
006c73 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220076:
006c74 c0d3      	RJMP _0x22000A
                 ; 0011 0065 
                 ; 0011 0066         case SRC_DI_EVENT_ANY            :  break;
                 _0x220075:
006c75 37e1      	CPI  R30,LOW(0x71)
006c76 e0a0      	LDI  R26,HIGH(0x71)
006c77 07fa      	CPC  R31,R26
006c78 f409      	BRNE _0x220079
006c79 c0ce      	RJMP _0x22000A
                 ; 0011 0067         case SRC_DI_RISING_ANY           :  for(i=0;i<USE_DIN;i++){
                 _0x220079:
006c7a 37e2      	CPI  R30,LOW(0x72)
006c7b e0a0      	LDI  R26,HIGH(0x72)
006c7c 07fa      	CPC  R31,R26
006c7d f481      	BRNE _0x22007A
                +
006c7e e000     +LDI R16 , LOW ( 0 )
006c7f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
006c80 3002     +CPI R16 , LOW ( 2 )
006c81 e0e0     +LDI R30 , HIGH ( 2 )
006c82 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
006c83 f44c      	BRGE _0x22007D
                 ; 0011 0068                                                 if(dinStatus[i] == DIN_RISING)          res = 1;    break;
006c84 e7ac      	LDI  R26,LOW(_dinStatus)
006c85 e1b4      	LDI  R27,HIGH(_dinStatus)
006c86 0fa0      	ADD  R26,R16
006c87 1fb1      	ADC  R27,R17
006c88 91ac      	LD   R26,X
006c89 30a1      	CPI  R26,LOW(0x1)
006c8a f411      	BRNE _0x22007E
                +
006c8b e021     +LDI R18 , LOW ( 1 )
006c8c e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22007E:
                 ; 0011 0069                                             }
                 _0x22007D:
                 ; 0011 006A                                             break;
006c8d c0ba      	RJMP _0x22000A
                 ; 0011 006B         case SRC_DI_FALLING_ANY          :  for(i=0;i<USE_DIN;i++){
                 _0x22007A:
006c8e 37e3      	CPI  R30,LOW(0x73)
006c8f e0a0      	LDI  R26,HIGH(0x73)
006c90 07fa      	CPC  R31,R26
006c91 f481      	BRNE _0x22007F
                +
006c92 e000     +LDI R16 , LOW ( 0 )
006c93 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
006c94 3002     +CPI R16 , LOW ( 2 )
006c95 e0e0     +LDI R30 , HIGH ( 2 )
006c96 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
006c97 f44c      	BRGE _0x220082
                 ; 0011 006C                                                 if(dinStatus[i] == DIN_FALLING)         res = 1;    break;
006c98 e7ac      	LDI  R26,LOW(_dinStatus)
006c99 e1b4      	LDI  R27,HIGH(_dinStatus)
006c9a 0fa0      	ADD  R26,R16
006c9b 1fb1      	ADC  R27,R17
006c9c 91ec      	LD   R30,X
006c9d 30e0      	CPI  R30,0
006c9e f411      	BRNE _0x220083
                +
006c9f e021     +LDI R18 , LOW ( 1 )
006ca0 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220083:
                 ; 0011 006D                                             }
                 _0x220082:
                 ; 0011 006E                                             break;
006ca1 c0a6      	RJMP _0x22000A
                 ; 0011 006F 
                 ; 0011 0070         case SRC_DI_EVENT(0)             :  break;
                 _0x22007F:
006ca2 34e0      	CPI  R30,LOW(0x40)
006ca3 e0a0      	LDI  R26,HIGH(0x40)
006ca4 07fa      	CPC  R31,R26
006ca5 f409      	BRNE _0x220084
006ca6 c0a1      	RJMP _0x22000A
                 ; 0011 0071         case SRC_DI_RISING(0)            :  if(dinStatus[0] == DIN_RISING) {
                 _0x220084:
006ca7 35e0      	CPI  R30,LOW(0x50)
006ca8 e0a0      	LDI  R26,HIGH(0x50)
006ca9 07fa      	CPC  R31,R26
006caa f439      	BRNE _0x220085
006cab 91a0 147c 	LDS  R26,_dinStatus
006cad 30a1      	CPI  R26,LOW(0x1)
006cae f411      	BRNE _0x220086
                 ; 0011 0072                                                 res = 1;
                +
006caf e021     +LDI R18 , LOW ( 1 )
006cb0 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 ; 0011 0073 //                                                printDebug("DIN1 Rising Alarm \r\n");
                 ; 0011 0074                                             }
                 ; 0011 0075                                             break;
                 _0x220086:
006cb1 c096      	RJMP _0x22000A
                 ; 0011 0076         case SRC_DI_FALLING(0)           :  if(dinStatus[0]     == DIN_FALLING)         res = 1;    break;
                 _0x220085:
006cb2 36e0      	CPI  R30,LOW(0x60)
006cb3 e0a0      	LDI  R26,HIGH(0x60)
006cb4 07fa      	CPC  R31,R26
006cb5 f439      	BRNE _0x220087
006cb6 91e0 147c 	LDS  R30,_dinStatus
006cb8 30e0      	CPI  R30,0
006cb9 f411      	BRNE _0x220088
                +
006cba e021     +LDI R18 , LOW ( 1 )
006cbb e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220088:
006cbc c08b      	RJMP _0x22000A
                 ; 0011 0077 
                 ; 0011 0078         case SRC_DI_EVENT(1)             :  break;
                 _0x220087:
006cbd 34e1      	CPI  R30,LOW(0x41)
006cbe e0a0      	LDI  R26,HIGH(0x41)
006cbf 07fa      	CPC  R31,R26
006cc0 f409      	BRNE _0x220089
006cc1 c086      	RJMP _0x22000A
                 ; 0011 0079         case SRC_DI_RISING(1)            :  if(dinStatus[1]     == DIN_RISING)          res = 1;    break;
                 _0x220089:
006cc2 35e1      	CPI  R30,LOW(0x51)
006cc3 e0a0      	LDI  R26,HIGH(0x51)
006cc4 07fa      	CPC  R31,R26
006cc5 f439      	BRNE _0x22008A
                +
006cc6 91a0 147d+LDS R26 , _dinStatus + ( 1 )
                 	__GETB2MN _dinStatus,1
006cc8 30a1      	CPI  R26,LOW(0x1)
006cc9 f411      	BRNE _0x22008B
                +
006cca e021     +LDI R18 , LOW ( 1 )
006ccb e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22008B:
006ccc c07b      	RJMP _0x22000A
                 ; 0011 007A         case SRC_DI_FALLING(1)           :  if(dinStatus[1]     == DIN_FALLING)         res = 1;    break;
                 _0x22008A:
006ccd 36e1      	CPI  R30,LOW(0x61)
006cce e0a0      	LDI  R26,HIGH(0x61)
006ccf 07fa      	CPC  R31,R26
006cd0 f439      	BRNE _0x22008C
                +
006cd1 91e0 147d+LDS R30 , _dinStatus + ( 1 )
                 	__GETB1MN _dinStatus,1
006cd3 30e0      	CPI  R30,0
006cd4 f411      	BRNE _0x22008D
                +
006cd5 e021     +LDI R18 , LOW ( 1 )
006cd6 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22008D:
006cd7 c070      	RJMP _0x22000A
                 ; 0011 007B 
                 ; 0011 007C         case SRC_MUTE_ALARM              :  break;
                 _0x22008C:
006cd8 38e0      	CPI  R30,LOW(0x80)
006cd9 e0a0      	LDI  R26,HIGH(0x80)
006cda 07fa      	CPC  R31,R26
006cdb f409      	BRNE _0x22008E
006cdc c06b      	RJMP _0x22000A
                 ; 0011 007D         case SRC_MIP                     :  // --- wait for menu MIP --- //
                 _0x22008E:
006cdd 38e1      	CPI  R30,LOW(0x81)
006cde e0a0      	LDI  R26,HIGH(0x81)
006cdf 07fa      	CPC  R31,R26
006ce0 f409      	BRNE _0x22008F
                 ; 0011 007E                                             break;
006ce1 c066      	RJMP _0x22000A
                 ; 0011 007F         case SRC_POWER_DOWN              :  if(powerSrcStatus   == PWR_DOWN)            res = 1;    break;
                 _0x22008F:
006ce2 38e2      	CPI  R30,LOW(0x82)
006ce3 e0a0      	LDI  R26,HIGH(0x82)
006ce4 07fa      	CPC  R31,R26
006ce5 f439      	BRNE _0x220090
006ce6 91a0 147a 	LDS  R26,_powerSrcStatus
006ce8 30a1      	CPI  R26,LOW(0x1)
006ce9 f411      	BRNE _0x220091
                +
006cea e021     +LDI R18 , LOW ( 1 )
006ceb e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220091:
006cec c05b      	RJMP _0x22000A
                 ; 0011 0080         case SRC_LOW_BATTERY             :  if(batteryStatus    == BATT_LOW)            res = 1;    break;
                 _0x220090:
006ced 38e3      	CPI  R30,LOW(0x83)
006cee e0a0      	LDI  R26,HIGH(0x83)
006cef 07fa      	CPC  R31,R26
006cf0 f439      	BRNE _0x220092
006cf1 91a0 147b 	LDS  R26,_batteryStatus
006cf3 30a1      	CPI  R26,LOW(0x1)
006cf4 f411      	BRNE _0x220093
                +
006cf5 e021     +LDI R18 , LOW ( 1 )
006cf6 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220093:
006cf7 c050      	RJMP _0x22000A
                 ; 0011 0081         case SRC_LOW_COMM_SIGNAL         :  break;
                 _0x220092:
006cf8 38e4      	CPI  R30,LOW(0x84)
006cf9 e0a0      	LDI  R26,HIGH(0x84)
006cfa 07fa      	CPC  R31,R26
006cfb f409      	BRNE _0x220094
006cfc c04b      	RJMP _0x22000A
                 ; 0011 0082         case SRC_LOW_MEMORY              :  if(memoryAlarm      == MEM_LOW)             res = 1;    break;
                 _0x220094:
006cfd 38e5      	CPI  R30,LOW(0x85)
006cfe e0a0      	LDI  R26,HIGH(0x85)
006cff 07fa      	CPC  R31,R26
006d00 f439      	BRNE _0x220095
006d01 91a0 14a7 	LDS  R26,_memoryAlarm
006d03 30a1      	CPI  R26,LOW(0x1)
006d04 f411      	BRNE _0x220096
                +
006d05 e021     +LDI R18 , LOW ( 1 )
006d06 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220096:
006d07 c040      	RJMP _0x22000A
                 ; 0011 0083         case SRC_MEMORY_ERROR            :  if(memoryAlarm      == MEM_ERROR)           res = 1;    break;
                 _0x220095:
006d08 38e6      	CPI  R30,LOW(0x86)
006d09 e0a0      	LDI  R26,HIGH(0x86)
006d0a 07fa      	CPC  R31,R26
006d0b f439      	BRNE _0x220097
006d0c 91a0 14a7 	LDS  R26,_memoryAlarm
006d0e 30a2      	CPI  R26,LOW(0x2)
006d0f f411      	BRNE _0x220098
                +
006d10 e021     +LDI R18 , LOW ( 1 )
006d11 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220098:
006d12 c035      	RJMP _0x22000A
                 ; 0011 0084         case SRC_LOST_OF_COMM            :  if(serverCommStatus == COMM_LOST) {
                 _0x220097:
006d13 38e7      	CPI  R30,LOW(0x87)
006d14 e0a0      	LDI  R26,HIGH(0x87)
006d15 07fa      	CPC  R31,R26
006d16 f439      	BRNE _0x220099
006d17 91a0 1480 	LDS  R26,_serverCommStatus
006d19 30a2      	CPI  R26,LOW(0x2)
006d1a f411      	BRNE _0x22009A
                 ; 0011 0085                                                 res = 1;
                +
006d1b e021     +LDI R18 , LOW ( 1 )
006d1c e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 ; 0011 0086 //                                                printDebug("Comm Lost Alarm \r\n");
                 ; 0011 0087                                             }
                 ; 0011 0088 //                                            printDebug("Check Comm Lost \r\n");
                 ; 0011 0089                                             break;
                 _0x22009A:
006d1d c02a      	RJMP _0x22000A
                 ; 0011 008A         case SRC_GSM_LOW_SIGNAL          :
                 _0x220099:
006d1e 39e0      	CPI  R30,LOW(0x90)
006d1f e0a0      	LDI  R26,HIGH(0x90)
006d20 07fa      	CPC  R31,R26
006d21 f021      	BREQ _0x22009C
                 ; 0011 008B         case SRC_GSM_DATE_EXPIRED        :
006d22 39e1      	CPI  R30,LOW(0x91)
006d23 e0a0      	LDI  R26,HIGH(0x91)
006d24 07fa      	CPC  R31,R26
006d25 f409      	BRNE _0x22009D
                 _0x22009C:
                 ; 0011 008C         case SRC_GSM_NO_OPERATOR         :
006d26 c004      	RJMP _0x22009E
                 _0x22009D:
006d27 39e2      	CPI  R30,LOW(0x92)
006d28 e0a0      	LDI  R26,HIGH(0x92)
006d29 07fa      	CPC  R31,R26
006d2a f409      	BRNE _0x22009F
                 _0x22009E:
                 ; 0011 008D         case SRC_GSM_TOP_UP              :
006d2b c004      	RJMP _0x2200A0
                 _0x22009F:
006d2c 39e3      	CPI  R30,LOW(0x93)
006d2d e0a0      	LDI  R26,HIGH(0x93)
006d2e 07fa      	CPC  R31,R26
006d2f f409      	BRNE _0x2200A1
                 _0x2200A0:
                 ; 0011 008E         case SRC_GSM_LOW_BALANCE         :
006d30 c004      	RJMP _0x2200A2
                 _0x2200A1:
006d31 39e4      	CPI  R30,LOW(0x94)
006d32 e0a0      	LDI  R26,HIGH(0x94)
006d33 07fa      	CPC  R31,R26
006d34 f409      	BRNE _0x2200A3
                 _0x2200A2:
                 ; 0011 008F         case SRC_GSM_UNKNOWN_FAILURE     :  printDebug("<checkAlarmFromSrc> GSM Not support yet [0x%02X]\r\n",alarmSrc);
006d35 c004      	RJMP _0x2200A4
                 _0x2200A3:
006d36 39ef      	CPI  R30,LOW(0x9F)
006d37 e0a0      	LDI  R26,HIGH(0x9F)
006d38 07fa      	CPC  R31,R26
006d39 f429      	BRNE _0x2200A6
                 _0x2200A4:
                +
006d3a efe2     +LDI R30 , LOW ( 2 * _0x220000 + ( 0 ) )
006d3b e4f5     +LDI R31 , HIGH ( 2 * _0x220000 + ( 0 ) )
006d3c e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 0 ) )
006d3d e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 0 ) )
                 	__POINTD1FN _0x220000,0
006d3e c004      	RJMP _0x2200F1
                 ; 0011 0090                                             break;
                 ; 0011 0091 
                 ; 0011 0092         default                          :  printDebug("<checkAlarmFromSrc> alarmSrc unknown [0x%02X]\r\n",alarmSrc);
                 _0x2200A6:
                +
006d3f e2e5     +LDI R30 , LOW ( 2 * _0x220000 + ( 51 ) )
006d40 e4f6     +LDI R31 , HIGH ( 2 * _0x220000 + ( 51 ) )
006d41 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 51 ) )
006d42 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 51 ) )
                 	__POINTD1FN _0x220000,51
                 _0x2200F1:
006d43 940e b62a 	CALL __PUTPARD1
006d45 85e8      	LDD  R30,Y+8
006d46 940e a073 	CALL SUBOPT_0x27
                 ; 0011 0093                                             break;
                 ; 0011 0094     }
                 _0x22000A:
                 ; 0011 0095 
                 ; 0011 0096     return res;
006d48 01f9      	MOVW R30,R18
006d49 940e b6a3 	CALL __LOADLOCR4
006d4b 9625      	ADIW R28,5
006d4c 9508      	RET
                 ; 0011 0097 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Send Alarm Detection **********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int checkSendMIPAlarm(unsigned char *code)
                 ; 0011 009F {
                 _checkSendMIPAlarm:
                 ; 0011 00A0     if(mtncStatus != mtncAlarm)
006d4d 93ba      	ST   -Y,R27
006d4e 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
006d4f 91e0 1689 	LDS  R30,_mtncAlarm
006d51 91a0 1479 	LDS  R26,_mtncStatus
006d53 17ea      	CP   R30,R26
006d54 f061      	BREQ _0x2200A7
                 ; 0011 00A1     {
                 ; 0011 00A2         mtncAlarm   = mtncStatus;
006d55 91e0 1479 	LDS  R30,_mtncStatus
006d57 93e0 1689 	STS  _mtncAlarm,R30
                 ; 0011 00A3         *code       = mtncStatus;
006d59 91e0 1479 	LDS  R30,_mtncStatus
006d5b 81a8      	LD   R26,Y
006d5c 81b9      	LDD  R27,Y+1
006d5d 93ec      	ST   X,R30
                 ; 0011 00A4         return 1;
006d5e e0e1      	LDI  R30,LOW(1)
006d5f e0f0      	LDI  R31,HIGH(1)
006d60 c0fe      	RJMP _0x20E004B
                 ; 0011 00A5     }
                 ; 0011 00A6 
                 ; 0011 00A7     return 0;
                 _0x2200A7:
006d61 c0fb      	RJMP _0x20E004C
                 ; 0011 00A8 }
                 ;/*============================================================*/
                 ;int checkSendPowerAlarm(unsigned char *code)
                 ; 0011 00AB {
                 _checkSendPowerAlarm:
                 ; 0011 00AC     static TIMER    t           = 0;
                 ; 0011 00AD     static char     t_flag      = 0;
                 ; 0011 00AE     static char     lastCheck   = 0x69;   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 00AF 
                 ; 0011 00B0     if(powerSrcStatus != powerSrcAlarm)
006d62 93ba      	ST   -Y,R27
006d63 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
006d64 91e0 168a 	LDS  R30,_powerSrcAlarm
006d66 91a0 147a 	LDS  R26,_powerSrcStatus
006d68 17ea      	CP   R30,R26
006d69 f411      	BRNE PC+3
006d6a 940c 6daa 	JMP _0x2200A9
                 ; 0011 00B1     {
                 ; 0011 00B2         if(powerSrcStatus != lastCheck){
006d6c 91e0 1693 	LDS  R30,_lastCheck_S0110003000
006d6e 17ea      	CP   R30,R26
006d6f f039      	BREQ _0x2200AA
                 ; 0011 00B3             t_flag      = 0;
006d70 e0e0      	LDI  R30,LOW(0)
006d71 93e0 1692 	STS  _t_flag_S0110003000,R30
                 ; 0011 00B4             lastCheck   = powerSrcStatus;
006d73 91e0 147a 	LDS  R30,_powerSrcStatus
006d75 93e0 1693 	STS  _lastCheck_S0110003000,R30
                 ; 0011 00B5         }
                 ; 0011 00B6 
                 ; 0011 00B7         if(!t_flag){
                 _0x2200AA:
006d77 91e0 1692 	LDS  R30,_t_flag_S0110003000
006d79 30e0      	CPI  R30,0
006d7a f4a9      	BRNE _0x2200AB
                 ; 0011 00B8             if(powerSrcStatus == PWR_DOWN){
006d7b 91a0 147a 	LDS  R26,_powerSrcStatus
006d7d 30a1      	CPI  R26,LOW(0x1)
006d7e f429      	BRNE _0x2200AC
                 ; 0011 00B9                 TIMER_setTimer(&t,30);
006d7f e8ee      	LDI  R30,LOW(_t_S0110003000)
006d80 e1f6      	LDI  R31,HIGH(_t_S0110003000)
006d81 940e a811 	CALL SUBOPT_0x15A
006d83 c006      	RJMP _0x2200F2
                 ; 0011 00BA             }
                 ; 0011 00BB             else{
                 _0x2200AC:
                 ; 0011 00BC                 TIMER_setTimer(&t,3);
006d84 e8ee      	LDI  R30,LOW(_t_S0110003000)
006d85 e1f6      	LDI  R31,HIGH(_t_S0110003000)
006d86 93fa      	ST   -Y,R31
006d87 93ea      	ST   -Y,R30
006d88 940e ab90 	CALL SUBOPT_0x1F1
                 _0x2200F2:
006d8a 940e 3e15 	CALL _TIMER_setTimer
                 ; 0011 00BD             }
                 ; 0011 00BE             t_flag              = 1;
006d8c e0e1      	LDI  R30,LOW(1)
006d8d 93e0 1692 	STS  _t_flag_S0110003000,R30
                 ; 0011 00BF         }
                 ; 0011 00C0         else{
006d8f c019      	RJMP _0x2200AE
                 _0x2200AB:
                 ; 0011 00C1             if(TIMER_checkTimerExceed(t))
006d90 91a0 168e 	LDS  R26,_t_S0110003000
006d92 91b0 168f 	LDS  R27,_t_S0110003000+1
006d94 9180 1690 	LDS  R24,_t_S0110003000+2
006d96 9190 1691 	LDS  R25,_t_S0110003000+3
006d98 940e 3dff 	CALL _TIMER_checkTimerExceed
006d9a 9730      	SBIW R30,0
006d9b f069      	BREQ _0x2200AF
                 ; 0011 00C2             {
                 ; 0011 00C3                 powerSrcAlarm   = powerSrcStatus;
006d9c 91e0 147a 	LDS  R30,_powerSrcStatus
006d9e 93e0 168a 	STS  _powerSrcAlarm,R30
                 ; 0011 00C4 
                 ; 0011 00C5                 *code           = powerSrcStatus;
006da0 91e0 147a 	LDS  R30,_powerSrcStatus
006da2 940e ab95 	CALL SUBOPT_0x1F2
                 ; 0011 00C6 
                 ; 0011 00C7                 t_flag          = 0;
006da4 93e0 1692 	STS  _t_flag_S0110003000,R30
                 ; 0011 00C8                 return 1;
006da6 e0e1      	LDI  R30,LOW(1)
006da7 e0f0      	LDI  R31,HIGH(1)
006da8 c0b6      	RJMP _0x20E004B
                 ; 0011 00C9             }
                 ; 0011 00CA         }
                 _0x2200AF:
                 _0x2200AE:
                 ; 0011 00CB     }
                 ; 0011 00CC     else
006da9 c003      	RJMP _0x2200B0
                 _0x2200A9:
                 ; 0011 00CD     {
                 ; 0011 00CE         t_flag = 0;
006daa e0e0      	LDI  R30,LOW(0)
006dab 93e0 1692 	STS  _t_flag_S0110003000,R30
                 ; 0011 00CF     }
                 _0x2200B0:
                 ; 0011 00D0 
                 ; 0011 00D1     return 0;
006dad c0af      	RJMP _0x20E004C
                 ; 0011 00D2 }
                 ;/*============================================================*/
                 ;int checkSendBatteryAlarm(unsigned char *code)
                 ; 0011 00D5 {
                 _checkSendBatteryAlarm:
                 ; 0011 00D6     static TIMER    t           = 0;
                 ; 0011 00D7     static char     t_flag      = 0;
                 ; 0011 00D8     static char     lastCheck   = 0x69;   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 00D9 
                 ; 0011 00DA     if(env_config.batteryLevel > 0)
006dae 93ba      	ST   -Y,R27
006daf 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
                +
006db0 91a0 136b+LDS R26 , _env_config + ( 6 )
006db2 91b0 136c+LDS R27 , _env_config + ( 6 ) + 1
006db4 9180 136d+LDS R24 , _env_config + ( 6 ) + 2
006db6 9190 136e+LDS R25 , _env_config + ( 6 ) + 3
                 	__GETD2MN _env_config,6
006db8 940e b68a 	CALL __CPD02
006dba f5dc      	BRGE _0x2200B2
                 ; 0011 00DB     {
                 ; 0011 00DC         if(batteryStatus != batteryAlarm)
006dbb 91e0 14a6 	LDS  R30,_batteryAlarm
006dbd 91a0 147b 	LDS  R26,_batteryStatus
006dbf 17ea      	CP   R30,R26
006dc0 f189      	BREQ _0x2200B3
                 ; 0011 00DD         {
                 ; 0011 00DE             if(batteryStatus != lastCheck)
006dc1 91e0 1699 	LDS  R30,_lastCheck_S0110004000
006dc3 17ea      	CP   R30,R26
006dc4 f039      	BREQ _0x2200B4
                 ; 0011 00DF             {
                 ; 0011 00E0                 t_flag      = 0;
006dc5 e0e0      	LDI  R30,LOW(0)
006dc6 93e0 1698 	STS  _t_flag_S0110004000,R30
                 ; 0011 00E1                 lastCheck   = batteryStatus;
006dc8 91e0 147b 	LDS  R30,_batteryStatus
006dca 93e0 1699 	STS  _lastCheck_S0110004000,R30
                 ; 0011 00E2             }
                 ; 0011 00E3 
                 ; 0011 00E4             if(!t_flag)
                 _0x2200B4:
006dcc 91e0 1698 	LDS  R30,_t_flag_S0110004000
006dce 30e0      	CPI  R30,0
006dcf f441      	BRNE _0x2200B5
                 ; 0011 00E5             {
                 ; 0011 00E6                 if(batteryStatus == BATT_LOW){
                 ; 0011 00E7                     TIMER_setTimer(&t,10);
                 ; 0011 00E8                 }
                 ; 0011 00E9                 else{
                 ; 0011 00EA                     TIMER_setTimer(&t,10);
                 _0x2200F3:
006dd0 e9e4      	LDI  R30,LOW(_t_S0110004000)
006dd1 e1f6      	LDI  R31,HIGH(_t_S0110004000)
006dd2 940e a062 	CALL SUBOPT_0x25
                 ; 0011 00EB                 }
                 ; 0011 00EC                 t_flag              = 1;
006dd4 e0e1      	LDI  R30,LOW(1)
006dd5 93e0 1698 	STS  _t_flag_S0110004000,R30
                 ; 0011 00ED             }
                 ; 0011 00EE             else
006dd7 c019      	RJMP _0x2200B8
                 _0x2200B5:
                 ; 0011 00EF             {
                 ; 0011 00F0                 if(TIMER_checkTimerExceed(t))
006dd8 91a0 1694 	LDS  R26,_t_S0110004000
006dda 91b0 1695 	LDS  R27,_t_S0110004000+1
006ddc 9180 1696 	LDS  R24,_t_S0110004000+2
006dde 9190 1697 	LDS  R25,_t_S0110004000+3
006de0 940e 3dff 	CALL _TIMER_checkTimerExceed
006de2 9730      	SBIW R30,0
006de3 f069      	BREQ _0x2200B9
                 ; 0011 00F1                 {
                 ; 0011 00F2                     batteryAlarm   = batteryStatus;
006de4 91e0 147b 	LDS  R30,_batteryStatus
006de6 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 00F3 
                 ; 0011 00F4                     *code           = batteryStatus;
006de8 91e0 147b 	LDS  R30,_batteryStatus
006dea 940e ab95 	CALL SUBOPT_0x1F2
                 ; 0011 00F5 
                 ; 0011 00F6                     t_flag          = 0;
006dec 93e0 1698 	STS  _t_flag_S0110004000,R30
                 ; 0011 00F7                     return 1;
006dee e0e1      	LDI  R30,LOW(1)
006def e0f0      	LDI  R31,HIGH(1)
006df0 c06e      	RJMP _0x20E004B
                 ; 0011 00F8                 }
                 ; 0011 00F9             }
                 _0x2200B9:
                 _0x2200B8:
                 ; 0011 00FA         }
                 ; 0011 00FB         else
006df1 c003      	RJMP _0x2200BA
                 _0x2200B3:
                 ; 0011 00FC         {
                 ; 0011 00FD             t_flag = 0;
006df2 e0e0      	LDI  R30,LOW(0)
006df3 93e0 1698 	STS  _t_flag_S0110004000,R30
                 ; 0011 00FE         }
                 _0x2200BA:
                 ; 0011 00FF     }
                 ; 0011 0100     else                                // -- battery alarm disable -- //
006df5 c018      	RJMP _0x2200BB
                 _0x2200B2:
                 ; 0011 0101     {
                 ; 0011 0102         t           = 0;
006df6 e0e0      	LDI  R30,LOW(0)
006df7 93e0 1694 	STS  _t_S0110004000,R30
006df9 93e0 1695 	STS  _t_S0110004000+1,R30
006dfb 93e0 1696 	STS  _t_S0110004000+2,R30
006dfd 93e0 1697 	STS  _t_S0110004000+3,R30
                 ; 0011 0103         t_flag      = 0;
006dff 93e0 1698 	STS  _t_flag_S0110004000,R30
                 ; 0011 0104         lastCheck   = 0x69;
006e01 e6e9      	LDI  R30,LOW(105)
006e02 93e0 1699 	STS  _lastCheck_S0110004000,R30
                 ; 0011 0105         if(batteryAlarm != BATT_NORMAL)
006e04 91e0 14a6 	LDS  R30,_batteryAlarm
006e06 30e0      	CPI  R30,0
006e07 f031      	BREQ _0x2200BC
                 ; 0011 0106         {
                 ; 0011 0107             batteryAlarm    = BATT_NORMAL;
006e08 e0e0      	LDI  R30,LOW(0)
006e09 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 0108             *code           = BATT_NORMAL;
006e0b 940e ab9a 	CALL SUBOPT_0x1F3
                 ; 0011 0109             return 1;
006e0d c051      	RJMP _0x20E004B
                 ; 0011 010A         }
                 ; 0011 010B     }
                 _0x2200BC:
                 _0x2200BB:
                 ; 0011 010C 
                 ; 0011 010D     return 0;
006e0e c04e      	RJMP _0x20E004C
                 ; 0011 010E }
                 ;/*============================================================*/
                 ;int checkSendMemoryAlarm(unsigned char *code)
                 ; 0011 0111 {
                 _checkSendMemoryAlarm:
                 ; 0011 0112     static TIMER    t      = 0;
                 ; 0011 0113     static char     t_flag = 0;
                 ; 0011 0114 
                 ; 0011 0115     if(env_config.memoryMin > 0)
006e0f 93ba      	ST   -Y,R27
006e10 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
                +
006e11 91a0 1375+LDS R26 , _env_config + ( 16 )
006e13 91b0 1376+LDS R27 , _env_config + ( 16 ) + 1
                 	__GETW2MN _env_config,16
006e15 940e b682 	CALL __CPW02
006e17 f580      	BRSH _0x2200BD
                 ; 0011 0116     {
                 ; 0011 0117         if(memoryStatus != memoryAlarm)
006e18 91e0 14a7 	LDS  R30,_memoryAlarm
006e1a 91a0 1482 	LDS  R26,_memoryStatus
006e1c 17ea      	CP   R30,R26
006e1d f131      	BREQ _0x2200BE
                 ; 0011 0118         {
                 ; 0011 0119             if(!t_flag){
006e1e 91e0 169e 	LDS  R30,_t_flag_S0110005000
006e20 30e0      	CPI  R30,0
006e21 f441      	BRNE _0x2200BF
                 ; 0011 011A                 TIMER_setTimer(&t,15);
006e22 e9ea      	LDI  R30,LOW(_t_S0110005000)
006e23 e1f6      	LDI  R31,HIGH(_t_S0110005000)
006e24 940e a099 	CALL SUBOPT_0x2C
                 ; 0011 011B                 t_flag          = 1;
006e26 e0e1      	LDI  R30,LOW(1)
006e27 93e0 169e 	STS  _t_flag_S0110005000,R30
                 ; 0011 011C             }
                 ; 0011 011D             else{
006e29 c019      	RJMP _0x2200C0
                 _0x2200BF:
                 ; 0011 011E                 if(TIMER_checkTimerExceed(t))
006e2a 91a0 169a 	LDS  R26,_t_S0110005000
006e2c 91b0 169b 	LDS  R27,_t_S0110005000+1
006e2e 9180 169c 	LDS  R24,_t_S0110005000+2
006e30 9190 169d 	LDS  R25,_t_S0110005000+3
006e32 940e 3dff 	CALL _TIMER_checkTimerExceed
006e34 9730      	SBIW R30,0
006e35 f069      	BREQ _0x2200C1
                 ; 0011 011F                 {
                 ; 0011 0120                     memoryAlarm     = memoryStatus;
006e36 91e0 1482 	LDS  R30,_memoryStatus
006e38 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 0121 
                 ; 0011 0122                     *code           = memoryStatus;
006e3a 91e0 1482 	LDS  R30,_memoryStatus
006e3c 940e ab95 	CALL SUBOPT_0x1F2
                 ; 0011 0123 
                 ; 0011 0124                     t_flag          = 0;
006e3e 93e0 169e 	STS  _t_flag_S0110005000,R30
                 ; 0011 0125 
                 ; 0011 0126                     return 1;
006e40 e0e1      	LDI  R30,LOW(1)
006e41 e0f0      	LDI  R31,HIGH(1)
006e42 c01c      	RJMP _0x20E004B
                 ; 0011 0127                 }
                 ; 0011 0128             }
                 _0x2200C1:
                 _0x2200C0:
                 ; 0011 0129         }
                 ; 0011 012A         else{
006e43 c003      	RJMP _0x2200C2
                 _0x2200BE:
                 ; 0011 012B             t_flag              = 0;
006e44 e0e0      	LDI  R30,LOW(0)
006e45 93e0 169e 	STS  _t_flag_S0110005000,R30
                 ; 0011 012C         }
                 _0x2200C2:
                 ; 0011 012D     }
                 ; 0011 012E     else                                // -- battery alarm disable -- //
006e47 c015      	RJMP _0x2200C3
                 _0x2200BD:
                 ; 0011 012F     {
                 ; 0011 0130         t           = 0;
006e48 e0e0      	LDI  R30,LOW(0)
006e49 93e0 169a 	STS  _t_S0110005000,R30
006e4b 93e0 169b 	STS  _t_S0110005000+1,R30
006e4d 93e0 169c 	STS  _t_S0110005000+2,R30
006e4f 93e0 169d 	STS  _t_S0110005000+3,R30
                 ; 0011 0131         t_flag      = 0;
006e51 93e0 169e 	STS  _t_flag_S0110005000,R30
                 ; 0011 0132         if(batteryAlarm != MEM_NORMAL)
006e53 91e0 14a6 	LDS  R30,_batteryAlarm
006e55 30e0      	CPI  R30,0
006e56 f031      	BREQ _0x2200C4
                 ; 0011 0133         {
                 ; 0011 0134             memoryAlarm     = MEM_NORMAL;
006e57 e0e0      	LDI  R30,LOW(0)
006e58 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 0135             *code           = MEM_NORMAL;
006e5a 940e ab9a 	CALL SUBOPT_0x1F3
                 ; 0011 0136             return 1;
006e5c c002      	RJMP _0x20E004B
                 ; 0011 0137         }
                 ; 0011 0138     }
                 _0x2200C4:
                 _0x2200C3:
                 ; 0011 0139 
                 ; 0011 013A     return 0;
                 _0x20E004C:
006e5d e0e0      	LDI  R30,LOW(0)
006e5e e0f0      	LDI  R31,HIGH(0)
                 _0x20E004B:
006e5f 9622      	ADIW R28,2
006e60 9508      	RET
                 ; 0011 013B }
                 ;/*============================================================*/
                 ;int checkSendDinAlarm(int ch, unsigned char *code)
                 ; 0011 013E {
                 _checkSendDinAlarm:
                 ; 0011 013F     static TIMER    t[USE_DIN]         = {0,0};
                 ; 0011 0140     static char     t_flag[USE_DIN]    = {0,0};
                 ; 0011 0141     static char     lastCheck[USE_DIN] = {0x69,0x69};   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 0142 
                 ; 0011 0143     if((ch < 0) || (ch >= USE_DIN)){
006e61 940e a5a3 	CALL SUBOPT_0xF2
                 ;	ch -> Y+2
                 ;	*code -> Y+0
006e63 f022      	BRMI _0x2200C7
006e64 81aa      	LDD  R26,Y+2
006e65 81bb      	LDD  R27,Y+2+1
006e66 9712      	SBIW R26,2
006e67 f064      	BRLT _0x2200C6
                 _0x2200C7:
                 ; 0011 0144         printDebug("<checkSendDinAlarm> channel out of range [%d]\r\n",ch);
                +
006e68 e5e5     +LDI R30 , LOW ( 2 * _0x220000 + ( 99 ) )
006e69 e4f6     +LDI R31 , HIGH ( 2 * _0x220000 + ( 99 ) )
006e6a e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 99 ) )
006e6b e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 99 ) )
                 	__POINTD1FN _0x220000,99
006e6c 940e a58f 	CALL SUBOPT_0xEE
006e6e 940e a4fe 	CALL SUBOPT_0xD5
                 ; 0011 0145         return 0;
006e70 e0e0      	LDI  R30,LOW(0)
006e71 e0f0      	LDI  R31,HIGH(0)
006e72 940c 71f1 	JMP  _0x20E0042
                 ; 0011 0146     }
                 ; 0011 0147 
                 ; 0011 0148     if(dinStatus[ch] != dinAlarm[ch])
                 _0x2200C6:
006e74 940e aba1 	CALL SUBOPT_0x1F4
006e76 56ea      	SUBI R30,LOW(-_dinAlarm)
006e77 4efb      	SBCI R31,HIGH(-_dinAlarm)
006e78 81e0      	LD   R30,Z
006e79 17ea      	CP   R30,R26
006e7a f411      	BRNE PC+3
006e7b 940c 6ec1 	JMP _0x2200C9
                 ; 0011 0149     {
                 ; 0011 014A         if(dinStatus[ch] != lastCheck[ch]){
006e7d 940e aba1 	CALL SUBOPT_0x1F4
006e7f 55e7      	SUBI R30,LOW(-_lastCheck_S0110006000)
006e80 4ef9      	SBCI R31,HIGH(-_lastCheck_S0110006000)
006e81 81e0      	LD   R30,Z
006e82 17ea      	CP   R30,R26
006e83 f051      	BREQ _0x2200CA
                 ; 0011 014B             t_flag[ch]          = 0;
006e84 940e aba9 	CALL SUBOPT_0x1F5
006e86 e0a0      	LDI  R26,LOW(0)
006e87 83a0      	STD  Z+0,R26
                 ; 0011 014C             lastCheck[ch]       = dinStatus[ch];
006e88 81aa      	LDD  R26,Y+2
006e89 81bb      	LDD  R27,Y+2+1
006e8a 55a7      	SUBI R26,LOW(-_lastCheck_S0110006000)
006e8b 4eb9      	SBCI R27,HIGH(-_lastCheck_S0110006000)
006e8c 940e abae 	CALL SUBOPT_0x1F6
                 ; 0011 014D         }
                 ; 0011 014E 
                 ; 0011 014F         if(!t_flag[ch]){
                 _0x2200CA:
006e8e 940e aba9 	CALL SUBOPT_0x1F5
006e90 81e0      	LD   R30,Z
006e91 30e0      	CPI  R30,0
006e92 f489      	BRNE _0x2200CB
                 ; 0011 0150             TIMER_setTimer(&t[ch],5);
006e93 81ea      	LDD  R30,Y+2
006e94 81fb      	LDD  R31,Y+2+1
006e95 e9af      	LDI  R26,LOW(_t_S0110006000)
006e96 e1b6      	LDI  R27,HIGH(_t_S0110006000)
006e97 940e ab5e 	CALL SUBOPT_0x1EA
                +
006e99 e0a5     +LDI R26 , LOW ( 0x5 )
006e9a e0b0     +LDI R27 , HIGH ( 0x5 )
006e9b e080     +LDI R24 , BYTE3 ( 0x5 )
006e9c e090     +LDI R25 , BYTE4 ( 0x5 )
                 	__GETD2N 0x5
006e9d 940e 3e15 	CALL _TIMER_setTimer
                 ; 0011 0151             t_flag[ch]          = 1;
006e9f 940e aba9 	CALL SUBOPT_0x1F5
006ea1 e0a1      	LDI  R26,LOW(1)
006ea2 83a0      	STD  Z+0,R26
                 ; 0011 0152         }
                 ; 0011 0153         else{
006ea3 c01c      	RJMP _0x2200CC
                 _0x2200CB:
                 ; 0011 0154             if(TIMER_checkTimerExceed(t[ch]))
006ea4 81ea      	LDD  R30,Y+2
006ea5 81fb      	LDD  R31,Y+2+1
006ea6 e9af      	LDI  R26,LOW(_t_S0110006000)
006ea7 e1b6      	LDI  R27,HIGH(_t_S0110006000)
006ea8 940e ab0f 	CALL SUBOPT_0x1DE
006eaa 940e a01e 	CALL SUBOPT_0x1A
006eac f099      	BREQ _0x2200CD
                 ; 0011 0155             {
                 ; 0011 0156                 dinAlarm[ch]    = dinStatus[ch];
006ead 81aa      	LDD  R26,Y+2
006eae 81bb      	LDD  R27,Y+2+1
006eaf 56aa      	SUBI R26,LOW(-_dinAlarm)
006eb0 4ebb      	SBCI R27,HIGH(-_dinAlarm)
006eb1 940e abae 	CALL SUBOPT_0x1F6
                 ; 0011 0157                 *code           = dinStatus[ch];
006eb3 81ea      	LDD  R30,Y+2
006eb4 81fb      	LDD  R31,Y+2+1
006eb5 58e4      	SUBI R30,LOW(-_dinStatus)
006eb6 4efb      	SBCI R31,HIGH(-_dinStatus)
006eb7 940e ab8b 	CALL SUBOPT_0x1F0
                 ; 0011 0158                 t_flag[ch]      = 0;
006eb9 940e aba9 	CALL SUBOPT_0x1F5
006ebb e0a0      	LDI  R26,LOW(0)
006ebc 83a0      	STD  Z+0,R26
                 ; 0011 0159                 return 1;
006ebd e0e1      	LDI  R30,LOW(1)
006ebe e0f0      	LDI  R31,HIGH(1)
006ebf c331      	RJMP _0x20E0042
                 ; 0011 015A             }
                 ; 0011 015B         }
                 _0x2200CD:
                 _0x2200CC:
                 ; 0011 015C     }
                 ; 0011 015D     else{
006ec0 c004      	RJMP _0x2200CE
                 _0x2200C9:
                 ; 0011 015E         t_flag[ch]              =   0;
006ec1 940e aba9 	CALL SUBOPT_0x1F5
006ec3 e0a0      	LDI  R26,LOW(0)
006ec4 83a0      	STD  Z+0,R26
                 ; 0011 015F     }
                 _0x2200CE:
                 ; 0011 0160 
                 ; 0011 0161     return 0;
006ec5 e0e0      	LDI  R30,LOW(0)
006ec6 e0f0      	LDI  R31,HIGH(0)
006ec7 c329      	RJMP _0x20E0042
                 ; 0011 0162 }
                 ;/*============================================================*/
                 ;int checkSendSensorAlarm(int ch, unsigned char *code)
                 ; 0011 0165 {
                 _checkSendSensorAlarm:
                 ; 0011 0166     static TIMER    t[MAX_SENS_CHANNEL]         = {0,0,0,0,0};
                 ; 0011 0167     static char     t_flag[MAX_SENS_CHANNEL]    = {0,0,0,0,0};
                 ; 0011 0168     static char     lastCheck[MAX_SENS_CHANNEL] = {0x69,0x69,0x69,0x69,0x69};   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 0169 
                 ; 0011 016A     if(sensorStatus[ch] != sensorAlarm[ch])
006ec8 940e abb5 	CALL SUBOPT_0x1F7
                 ;	ch -> Y+2
                 ;	*code -> Y+0
006eca 59e1      	SUBI R30,LOW(-_sensorStatus)
006ecb 4efb      	SBCI R31,HIGH(-_sensorStatus)
006ecc 81a0      	LD   R26,Z
006ecd 81ea      	LDD  R30,Y+2
006ece 81fb      	LDD  R31,Y+2+1
006ecf 57e4      	SUBI R30,LOW(-_sensorAlarm)
006ed0 4efb      	SBCI R31,HIGH(-_sensorAlarm)
006ed1 81e0      	LD   R30,Z
006ed2 17ea      	CP   R30,R26
006ed3 f411      	BRNE PC+3
006ed4 940c 6f25 	JMP _0x2200D0
                 ; 0011 016B     {
                 ; 0011 016C         if(sensorStatus[ch] != lastCheck[ch]){
006ed6 940e abba 	CALL SUBOPT_0x1F8
006ed8 81a0      	LD   R26,Z
006ed9 81ea      	LDD  R30,Y+2
006eda 81fb      	LDD  R31,Y+2+1
006edb 53ec      	SUBI R30,LOW(-_lastCheck_S0110007000)
006edc 4ef9      	SBCI R31,HIGH(-_lastCheck_S0110007000)
006edd 81e0      	LD   R30,Z
006ede 17ea      	CP   R30,R26
006edf f061      	BREQ _0x2200D1
                 ; 0011 016D             t_flag[ch]          = 0;
006ee0 940e abbf 	CALL SUBOPT_0x1F9
006ee2 e0a0      	LDI  R26,LOW(0)
006ee3 83a0      	STD  Z+0,R26
                 ; 0011 016E             lastCheck[ch]       = sensorStatus[ch];
006ee4 81aa      	LDD  R26,Y+2
006ee5 81bb      	LDD  R27,Y+2+1
006ee6 53ac      	SUBI R26,LOW(-_lastCheck_S0110007000)
006ee7 4eb9      	SBCI R27,HIGH(-_lastCheck_S0110007000)
006ee8 940e abba 	CALL SUBOPT_0x1F8
006eea 81e0      	LD   R30,Z
006eeb 93ec      	ST   X,R30
                 ; 0011 016F         }
                 ; 0011 0170 
                 ; 0011 0171         if(!t_flag[ch]){
                 _0x2200D1:
006eec 940e abbf 	CALL SUBOPT_0x1F9
006eee 81e0      	LD   R30,Z
006eef 30e0      	CPI  R30,0
006ef0 f4b9      	BRNE _0x2200D2
                 ; 0011 0172             if(sensorStatus[ch] == SENS_ERR_UNKNOWN){
006ef1 940e abba 	CALL SUBOPT_0x1F8
006ef3 81a0      	LD   R26,Z
006ef4 3faf      	CPI  R26,LOW(0xFF)
006ef5 f439      	BRNE _0x2200D3
                 ; 0011 0173                 TIMER_setTimer(&t[ch],30);
006ef6 940e abc4 	CALL SUBOPT_0x1FA
                +
006ef8 e1ae     +LDI R26 , LOW ( 0x1E )
006ef9 e0b0     +LDI R27 , HIGH ( 0x1E )
006efa e080     +LDI R24 , BYTE3 ( 0x1E )
006efb e090     +LDI R25 , BYTE4 ( 0x1E )
                 	__GETD2N 0x1E
006efc c004      	RJMP _0x2200F4
                 ; 0011 0174             }
                 ; 0011 0175             else{
                 _0x2200D3:
                 ; 0011 0176                 TIMER_setTimer(&t[ch],3);
006efd 940e abc4 	CALL SUBOPT_0x1FA
006eff 940e ab90 	CALL SUBOPT_0x1F1
                 _0x2200F4:
006f01 940e 3e15 	CALL _TIMER_setTimer
                 ; 0011 0177             }
                 ; 0011 0178             t_flag[ch]          = 1;
006f03 940e abbf 	CALL SUBOPT_0x1F9
006f05 e0a1      	LDI  R26,LOW(1)
006f06 83a0      	STD  Z+0,R26
                 ; 0011 0179         }
                 ; 0011 017A         else{
006f07 c01c      	RJMP _0x2200D5
                 _0x2200D2:
                 ; 0011 017B             if(TIMER_checkTimerExceed(t[ch]))
006f08 81ea      	LDD  R30,Y+2
006f09 81fb      	LDD  R31,Y+2+1
006f0a eaab      	LDI  R26,LOW(_t_S0110007000)
006f0b e1b6      	LDI  R27,HIGH(_t_S0110007000)
006f0c 940e ab0f 	CALL SUBOPT_0x1DE
006f0e 940e a01e 	CALL SUBOPT_0x1A
006f10 f099      	BREQ _0x2200D6
                 ; 0011 017C             {
                 ; 0011 017D                 sensorAlarm[ch] = sensorStatus[ch];
006f11 81aa      	LDD  R26,Y+2
006f12 81bb      	LDD  R27,Y+2+1
006f13 57a4      	SUBI R26,LOW(-_sensorAlarm)
006f14 4ebb      	SBCI R27,HIGH(-_sensorAlarm)
006f15 940e abba 	CALL SUBOPT_0x1F8
006f17 81e0      	LD   R30,Z
006f18 93ec      	ST   X,R30
                 ; 0011 017E 
                 ; 0011 017F                 *code           = sensorStatus[ch];
006f19 940e abba 	CALL SUBOPT_0x1F8
006f1b 940e ab8b 	CALL SUBOPT_0x1F0
                 ; 0011 0180 
                 ; 0011 0181                 t_flag[ch]      = 0;
006f1d 940e abbf 	CALL SUBOPT_0x1F9
006f1f e0a0      	LDI  R26,LOW(0)
006f20 83a0      	STD  Z+0,R26
                 ; 0011 0182                 return 1;
006f21 e0e1      	LDI  R30,LOW(1)
006f22 e0f0      	LDI  R31,HIGH(1)
006f23 c2cd      	RJMP _0x20E0042
                 ; 0011 0183             }
                 ; 0011 0184         }
                 _0x2200D6:
                 _0x2200D5:
                 ; 0011 0185     }
                 ; 0011 0186     else{
006f24 c004      	RJMP _0x2200D7
                 _0x2200D0:
                 ; 0011 0187         t_flag[ch]              =   0;
006f25 940e abbf 	CALL SUBOPT_0x1F9
006f27 e0a0      	LDI  R26,LOW(0)
006f28 83a0      	STD  Z+0,R26
                 ; 0011 0188     }
                 _0x2200D7:
                 ; 0011 0189 
                 ; 0011 018A     return 0;
006f29 e0e0      	LDI  R30,LOW(0)
006f2a e0f0      	LDI  R31,HIGH(0)
006f2b c2c5      	RJMP _0x20E0042
                 ; 0011 018B 
                 ; 0011 018C     /*
                 ; 0011 018D     if(sensorStatus[ch] != sensorAlarm[ch])
                 ; 0011 018E     {
                 ; 0011 018F         sensorAlarm[ch] = sensorStatus[ch];
                 ; 0011 0190 
                 ; 0011 0191         *code           = sensorStatus[ch];
                 ; 0011 0192 
                 ; 0011 0193         return 1;
                 ; 0011 0194     }
                 ; 0011 0195     */
                 ; 0011 0196 
                 ; 0011 0197     /*
                 ; 0011 0198     // -- mask for an error and compare with reported alarm -- //
                 ; 0011 0199     if((sensorStatus[ch] & SENS_ERR_LOWER_BOUND) != (sensorAlarm[ch] & SENS_ERR_LOWER_BOUND))
                 ; 0011 019A     {
                 ; 0011 019B         // -- check if it's an error or recover -- //
                 ; 0011 019C         if( (sensorStatus[ch] & SENS_ERR_LOWER_BOUND) == SENS_ERR_LOWER_BOUND )     // -- error -- //
                 ; 0011 019D         {
                 ; 0011 019E 
                 ; 0011 019F         }
                 ; 0011 01A0         else                                                                        // -- recover -- //
                 ; 0011 01A1         {
                 ; 0011 01A2 
                 ; 0011 01A3         }
                 ; 0011 01A4         sensorAlarm[ch] = sensorStatus[ch];
                 ; 0011 01A5 
                 ; 0011 01A6         *code           = sensorStatus[ch];
                 ; 0011 01A7 
                 ; 0011 01A8         return 1;
                 ; 0011 01A9     }
                 ; 0011 01AA 
                 ; 0011 01AB     return 0;
                 ; 0011 01AC     */
                 ; 0011 01AD }
                 ;/*============================================================*/
                 ;int checkSendDataAlarm(int ch, unsigned char *code)
                 ; 0011 01B0 {
                 _checkSendDataAlarm:
                 ; 0011 01B1     static TIMER    t[MAX_SENS_CHANNEL]      = {0,0,0,0,0};
                 ; 0011 01B2     static char     t_flag[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 0011 01B3 
                 ; 0011 01B4     if(dataStatus[ch] != dataAlarm[ch])
006f2c 940e abb5 	CALL SUBOPT_0x1F7
                 ;	ch -> Y+2
                 ;	*code -> Y+0
006f2e 58ec      	SUBI R30,LOW(-_dataStatus)
006f2f 4efb      	SBCI R31,HIGH(-_dataStatus)
006f30 81a0      	LD   R26,Z
006f31 81ea      	LDD  R30,Y+2
006f32 81fb      	LDD  R31,Y+2+1
006f33 56ef      	SUBI R30,LOW(-_dataAlarm)
006f34 4efb      	SBCI R31,HIGH(-_dataAlarm)
006f35 81e0      	LD   R30,Z
006f36 17ea      	CP   R30,R26
006f37 f411      	BRNE PC+3
006f38 940c 6f7e 	JMP _0x2200D8
                 ; 0011 01B5     {
                 ; 0011 01B6         if(!t_flag[ch]){
006f3a 940e abc9 	CALL SUBOPT_0x1FB
006f3c 81e0      	LD   R30,Z
006f3d 30e0      	CPI  R30,0
006f3e f479      	BRNE _0x2200D9
                 ; 0011 01B7             TIMER_setTimer(&t[ch],3);
006f3f 81ea      	LDD  R30,Y+2
006f40 81fb      	LDD  R31,Y+2+1
006f41 eca9      	LDI  R26,LOW(_t_S0110008000)
006f42 e1b6      	LDI  R27,HIGH(_t_S0110008000)
006f43 940e ab5e 	CALL SUBOPT_0x1EA
006f45 940e ab90 	CALL SUBOPT_0x1F1
006f47 940e 3e15 	CALL _TIMER_setTimer
                 ; 0011 01B8             t_flag[ch]          = 1;
006f49 940e abc9 	CALL SUBOPT_0x1FB
006f4b e0a1      	LDI  R26,LOW(1)
006f4c 83a0      	STD  Z+0,R26
                 ; 0011 01B9 //            printDebug("<checkSendDataAlarm> Probe %d dataAlarm[0x%02X] != dataStatus[0x%02X]\r\n",ch+1,dataAlarm[ch],dataStatus[ch]);
                 ; 0011 01BA         }
                 ; 0011 01BB         else{
006f4d c02f      	RJMP _0x2200DA
                 _0x2200D9:
                 ; 0011 01BC             if(TIMER_checkTimerExceed(t[ch]))
006f4e 81ea      	LDD  R30,Y+2
006f4f 81fb      	LDD  R31,Y+2+1
006f50 eca9      	LDI  R26,LOW(_t_S0110008000)
006f51 e1b6      	LDI  R27,HIGH(_t_S0110008000)
006f52 940e ab0f 	CALL SUBOPT_0x1DE
006f54 940e a01e 	CALL SUBOPT_0x1A
006f56 f131      	BREQ _0x2200DB
                 ; 0011 01BD             {
                 ; 0011 01BE                 dataAlarm[ch]   = dataStatus[ch];
006f57 81aa      	LDD  R26,Y+2
006f58 81bb      	LDD  R27,Y+2+1
006f59 56af      	SUBI R26,LOW(-_dataAlarm)
006f5a 4ebb      	SBCI R27,HIGH(-_dataAlarm)
006f5b 81ea      	LDD  R30,Y+2
006f5c 81fb      	LDD  R31,Y+2+1
006f5d 58ec      	SUBI R30,LOW(-_dataStatus)
006f5e 4efb      	SBCI R31,HIGH(-_dataStatus)
006f5f 81e0      	LD   R30,Z
006f60 93ec      	ST   X,R30
                 ; 0011 01BF 
                 ; 0011 01C0                 *code           = dataStatus[ch];
006f61 81ea      	LDD  R30,Y+2
006f62 81fb      	LDD  R31,Y+2+1
006f63 58ec      	SUBI R30,LOW(-_dataStatus)
006f64 4efb      	SBCI R31,HIGH(-_dataStatus)
006f65 940e ab8b 	CALL SUBOPT_0x1F0
                 ; 0011 01C1 
                 ; 0011 01C2                 t_flag[ch]      = 0;
006f67 940e abc9 	CALL SUBOPT_0x1FB
006f69 e0a0      	LDI  R26,LOW(0)
006f6a 83a0      	STD  Z+0,R26
                 ; 0011 01C3 
                 ; 0011 01C4                 printDebug("<checkSendDataAlarm> Probe %d dataAlarm[0x%02X]\r\n",ch+1,dataAlarm[ch]);
                +
006f6b e8e5     +LDI R30 , LOW ( 2 * _0x220000 + ( 147 ) )
006f6c e4f6     +LDI R31 , HIGH ( 2 * _0x220000 + ( 147 ) )
006f6d e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 147 ) )
006f6e e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 147 ) )
                 	__POINTD1FN _0x220000,147
006f6f 940e a58f 	CALL SUBOPT_0xEE
006f71 9631      	ADIW R30,1
006f72 940e b522 	CALL __CWD1
006f74 940e a654 	CALL SUBOPT_0x110
006f76 56ef      	SUBI R30,LOW(-_dataAlarm)
006f77 4efb      	SBCI R31,HIGH(-_dataAlarm)
006f78 940e abce 	CALL SUBOPT_0x1FC
                 ; 0011 01C5 
                 ; 0011 01C6                 return 1;
006f7a e0e1      	LDI  R30,LOW(1)
006f7b e0f0      	LDI  R31,HIGH(1)
006f7c c274      	RJMP _0x20E0042
                 ; 0011 01C7             }
                 ; 0011 01C8         }
                 _0x2200DB:
                 _0x2200DA:
                 ; 0011 01C9     }
                 ; 0011 01CA     else{
006f7d c004      	RJMP _0x2200DC
                 _0x2200D8:
                 ; 0011 01CB         t_flag[ch]              = 0;
006f7e 940e abc9 	CALL SUBOPT_0x1FB
006f80 e0a0      	LDI  R26,LOW(0)
006f81 83a0      	STD  Z+0,R26
                 ; 0011 01CC     }
                 _0x2200DC:
                 ; 0011 01CD 
                 ; 0011 01CE     return 0;
006f82 e0e0      	LDI  R30,LOW(0)
006f83 e0f0      	LDI  R31,HIGH(0)
006f84 c26c      	RJMP _0x20E0042
                 ; 0011 01CF 
                 ; 0011 01D0     /*
                 ; 0011 01D1     if(dataStatus[ch] != dataAlarm[ch])
                 ; 0011 01D2     {
                 ; 0011 01D3         dataAlarm[ch]   = dataStatus[ch];
                 ; 0011 01D4 
                 ; 0011 01D5         *code           = dataStatus[ch];
                 ; 0011 01D6 
                 ; 0011 01D7         return 1;
                 ; 0011 01D8     }
                 ; 0011 01D9     */
                 ; 0011 01DA 
                 ; 0011 01DB }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Alarm Mute Management *********************/
                 ;/**************************************************************/
                 ;char muteMode   = 0;
                 ;TIMER muteAlarmExpired  = 0xFFFFFFFF;       // -- initial with maximum TIMER value -- //
                 
                 	.DSEG
                 ;/*============================================================*/
                 ;int ALARM_mute(unsigned long int period)
                 ; 0011 01E5 {
                 
                 	.CSEG
                 _ALARM_mute:
                 ; 0011 01E6     if(period == 0){
006f85 940e a299 	CALL SUBOPT_0x74
                 ;	period -> Y+0
006f87 f431      	BRNE _0x2200DE
                 ; 0011 01E7         muteAlarmExpired    = 0xFFFFFFFF;
006f88 940e a054 	CALL SUBOPT_0x23
006f8a 940e a059 	CALL SUBOPT_0x24
                 ; 0011 01E8         muteMode            = MUTE_PERMAMENT;
006f8c e0e1      	LDI  R30,LOW(1)
006f8d c009      	RJMP _0x2200F5
                 ; 0011 01E9     }
                 ; 0011 01EA     else{
                 _0x2200DE:
                 ; 0011 01EB         TIMER_setTimer(&muteAlarmExpired,period);
006f8e e8e7      	LDI  R30,LOW(_muteAlarmExpired)
006f8f e1f4      	LDI  R31,HIGH(_muteAlarmExpired)
006f90 93fa      	ST   -Y,R31
006f91 93ea      	ST   -Y,R30
006f92 940e a3b4 	CALL SUBOPT_0xA1
006f94 940e 3e15 	CALL _TIMER_setTimer
                 ; 0011 01EC         muteMode            = MUTE_TEMPORARY;
006f96 e0e2      	LDI  R30,LOW(2)
                 _0x2200F5:
006f97 93e0 148b 	STS  _muteMode,R30
                 ; 0011 01ED     }
                 ; 0011 01EE 
                 ; 0011 01EF     return 0;
006f99 e0e0      	LDI  R30,LOW(0)
006f9a e0f0      	LDI  R31,HIGH(0)
006f9b c255      	RJMP _0x20E0042
                 ; 0011 01F0 }
                 ;/*============================================================*/
                 ;int ALARM_checkMuteExpired(void)
                 ; 0011 01F3 {
                 _ALARM_checkMuteExpired:
                 ; 0011 01F4     switch(muteMode){
006f9c 91e0 148b 	LDS  R30,_muteMode
006f9e 940e a93c 	CALL SUBOPT_0x18C
                 ; 0011 01F5         case MUTE_PERMAMENT :   return 0;
006fa0 f0f1      	BREQ _0x20E0049
                 ; 0011 01F6                                 break;
                 ; 0011 01F7         case MUTE_TEMPORARY :   if( TIMER_checkTimerExceed(muteAlarmExpired) ){
006fa1 30e2      	CPI  R30,LOW(0x2)
006fa2 e0a0      	LDI  R26,HIGH(0x2)
006fa3 07fa      	CPC  R31,R26
006fa4 f469      	BRNE _0x2200E7
006fa5 91a0 1487 	LDS  R26,_muteAlarmExpired
006fa7 91b0 1488 	LDS  R27,_muteAlarmExpired+1
006fa9 9180 1489 	LDS  R24,_muteAlarmExpired+2
006fab 9190 148a 	LDS  R25,_muteAlarmExpired+3
006fad 940e 3dff 	CALL _TIMER_checkTimerExceed
006faf 9730      	SBIW R30,0
006fb0 f459      	BRNE _0x20E004A
                 ; 0011 01F8                                     return 1;
                 ; 0011 01F9                                 }
                 ; 0011 01FA                                 else{
                 ; 0011 01FB                                     return 0;
006fb1 c00d      	RJMP _0x20E0049
                 ; 0011 01FC                                 }
                 ; 0011 01FD                                 break;
                 ; 0011 01FE         default :               printDebug("<ALARM_checkMuteExpired> invalid muteMode (%d)\r\n", muteMode);
                 _0x2200E7:
                +
006fb2 ebe7     +LDI R30 , LOW ( 2 * _0x220000 + ( 197 ) )
006fb3 e4f6     +LDI R31 , HIGH ( 2 * _0x220000 + ( 197 ) )
006fb4 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 197 ) )
006fb5 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 197 ) )
                 	__POINTD1FN _0x220000,197
006fb6 940e b62a 	CALL __PUTPARD1
006fb8 91e0 148b 	LDS  R30,_muteMode
006fba 940e a073 	CALL SUBOPT_0x27
                 ; 0011 01FF                                 return 1;
                 _0x20E004A:
006fbc e0e1      	LDI  R30,LOW(1)
006fbd e0f0      	LDI  R31,HIGH(1)
006fbe 9508      	RET
                 ; 0011 0200     }
                 ; 0011 0201     return 0;
                 _0x20E0049:
006fbf e0e0      	LDI  R30,LOW(0)
006fc0 e0f0      	LDI  R31,HIGH(0)
006fc1 9508      	RET
                 ; 0011 0202 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Sevice Alarm Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void resetAlarm(void)
                 ; 0011 020A {
                 _resetAlarm:
                 ; 0011 020B     int i;
                 ; 0011 020C 
                 ; 0011 020D     for(i=0;i<MAX_SENS_CHANNEL;i++){
006fc2 940e a325 	CALL SUBOPT_0x86
                 ;	i -> R16,R17
                 _0x2200E9:
                +
006fc4 3005     +CPI R16 , LOW ( 5 )
006fc5 e0e0     +LDI R30 , HIGH ( 5 )
006fc6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
006fc7 f45c      	BRGE _0x2200EA
                 ; 0011 020E         sensorAlarm[i]      =   SENS_NORMAL;
006fc8 e8ac      	LDI  R26,LOW(_sensorAlarm)
006fc9 e1b4      	LDI  R27,HIGH(_sensorAlarm)
006fca 940e a715 	CALL SUBOPT_0x135
                 ; 0011 020F         dataAlarm[i]        =   DATA_NORMAL;
006fcc e9a1      	LDI  R26,LOW(_dataAlarm)
006fcd e1b4      	LDI  R27,HIGH(_dataAlarm)
006fce 940e a715 	CALL SUBOPT_0x135
                 ; 0011 0210     }
                +
006fd0 5f0f     +SUBI R16 , LOW ( - 1 )
006fd1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006fd2 cff1      	RJMP _0x2200E9
                 _0x2200EA:
                 ; 0011 0211     for(i=0;i<MAX_DI_CHANNEL;i++){
                +
006fd3 e000     +LDI R16 , LOW ( 0 )
006fd4 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2200EC:
                +
006fd5 3100     +CPI R16 , LOW ( 16 )
006fd6 e0e0     +LDI R30 , HIGH ( 16 )
006fd7 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
006fd8 f44c      	BRGE _0x2200ED
                 ; 0011 0212         dinAlarm[i]         =   UNKNOWN;
006fd9 e9a6      	LDI  R26,LOW(_dinAlarm)
006fda e1b4      	LDI  R27,HIGH(_dinAlarm)
006fdb 0fa0      	ADD  R26,R16
006fdc 1fb1      	ADC  R27,R17
006fdd efef      	LDI  R30,LOW(255)
006fde 93ec      	ST   X,R30
                 ; 0011 0213     }
                +
006fdf 5f0f     +SUBI R16 , LOW ( - 1 )
006fe0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006fe1 cff3      	RJMP _0x2200EC
                 _0x2200ED:
                 ; 0011 0214     for(i=0;i<MAX_AI_CHANNEL;i++){
                +
006fe2 e000     +LDI R16 , LOW ( 0 )
006fe3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2200EF:
                +
006fe4 3100     +CPI R16 , LOW ( 16 )
006fe5 e0e0     +LDI R30 , HIGH ( 16 )
006fe6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
006fe7 f44c      	BRGE _0x2200F0
                 ; 0011 0215         ainAlarm[i]         =   UNKNOWN;
006fe8 e7a9      	LDI  R26,LOW(_ainAlarm)
006fe9 e1b6      	LDI  R27,HIGH(_ainAlarm)
006fea 0fa0      	ADD  R26,R16
006feb 1fb1      	ADC  R27,R17
006fec efef      	LDI  R30,LOW(255)
006fed 93ec      	ST   X,R30
                 ; 0011 0216     }
                +
006fee 5f0f     +SUBI R16 , LOW ( - 1 )
006fef 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006ff0 cff3      	RJMP _0x2200EF
                 _0x2200F0:
                 ; 0011 0217     muteAlarm                       = UNKNOWN;
006ff1 efef      	LDI  R30,LOW(255)
006ff2 2e6e      	MOV  R6,R30
                 ; 0011 0218     mtncAlarm                       = MTNC_NORMAL;
006ff3 e0e0      	LDI  R30,LOW(0)
006ff4 93e0 1689 	STS  _mtncAlarm,R30
                 ; 0011 0219     powerSrcAlarm                   = PWR_NORMAL;
006ff6 93e0 168a 	STS  _powerSrcAlarm,R30
                 ; 0011 021A     batteryAlarm                    = BATT_NORMAL;
006ff8 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 021B     communicationAlarm              = COMM_NORMAL;
006ffa 93e0 168b 	STS  _communicationAlarm,R30
                 ; 0011 021C     memoryAlarm                     = MEM_NORMAL;
006ffc 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 021D     gsmAlarm                        = GSM_NORMAL;
006ffe 93e0 168c 	STS  _gsmAlarm,R30
                 ; 0011 021E     gsmBalanceAlarm                 = GBAL_NORMAL;
007000 93e0 168d 	STS  _gsmBalanceAlarm,R30
                 ; 0011 021F 
                 ; 0011 0220 }
007002 c240      	RJMP _0x20E0040
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "oled.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "status.h"
                 ;#include "alarm.h"
                 ;#include "sensor.h"
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "debug.h"
                 ;
                 ;/**************************************************************/
                 ;/***************** OLED Service Page Function *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void OLED_showDateTime(int timezone)
                 ; 0012 0013 {
                 
                 	.CSEG
                 ; 0012 0014     struct  rtc_structure   currentTime;
                 ; 0012 0015 
                 ; 0012 0016     RTC_getDateTime(&currentTime,timezone);
                 ;	timezone -> Y+26
                 ;	currentTime -> Y+0
                 ; 0012 0017     printOLED("DT%02d-%02d-%04d",currentTime.date,currentTime.month,currentTime.year);
                 ; 0012 0018     printOLED("TM%02d:%02d",currentTime.hour,currentTime.min);
                 ; 0012 0019 
                 ; 0012 001A }
                 ;/*============================================================*/
                 ;void OLED_showSensorValue(void)
                 ; 0012 001D {
                 ; 0012 001E     int i;
                 ; 0012 001F 
                 ; 0012 0020     for(i=0;i<MAX_SENS_CHANNEL;i++)
                 ;	i -> R16,R17
                 ; 0012 0021     {
                 ; 0012 0022 
                 ; 0012 0023         if( operating_config.sensorEnable[i] ){
                 ; 0012 0024 
                 ; 0012 0025             switch (sensor[i].status)
                 ; 0012 0026             {
                 ; 0012 0027                 case SENS_NORMAL            :   printOLED("DV%1d%.1f",i+1,sensor[i].value);
                 ; 0012 0028                                                 break;
                 ; 0012 0029                 case SENS_ERR_LOWER_BOUND   :   printOLED("DV%1dERRLB",i+1);
                 ; 0012 002A                                                 break;
                 ; 0012 002B                 case SENS_ERR_UPPER_BOUND   :   printOLED("DV%1dERRUB",i+1);
                 ; 0012 002C                                                 break;
                 ; 0012 002D                 case SENS_ERR_DISCONNECT    :   printOLED("DV%1dERRNC",i+1);
                 ; 0012 002E                                                 break;
                 ; 0012 002F                 case SENS_ERR_SHORT         :   printOLED("DV%1dERRSH",i+1);
                 ; 0012 0030                                                 break;
                 ; 0012 0031                 case SENS_ERR_UNKNOWN       :   printOLED("DV%1dDETECTING",i+1);
                 ; 0012 0032                                                 break;
                 ; 0012 0033                 default                     :   printDebug("<OLED_showSensorValue> sensor[%d].status unknown [0x%02X]\r\n",i+1,sensor[i].status);
                 ; 0012 0034                                                 return;
                 ; 0012 0035             }
                 ; 0012 0036         }
                 ; 0012 0037         else{
                 ; 0012 0038             printOLED("DV%1dN/A",i+1);
                 ; 0012 0039         }
                 ; 0012 003A     }
                 ; 0012 003B 
                 ; 0012 003C     return;
                 ; 0012 003D 
                 ; 0012 003E }
                 ;/*============================================================*/
                 ;void OLED_showPowerStatus(char pwrSrc,float batLevel)
                 ; 0012 0041 {
                 ; 0012 0042 
                 ; 0012 0043     if(pwrSrc == PWR_NORMAL){
                 ;	pwrSrc -> Y+4
                 ;	batLevel -> Y+0
                 ; 0012 0044         printOLED("CG1");
                 ; 0012 0045     }
                 ; 0012 0046     else{
                 ; 0012 0047         //printDebug("<OLED_showPowerStatus> batt = %f\r\n",batLevel);
                 ; 0012 0048         if(batLevel < 3.0){
                 ; 0012 0049             printOLED("BL0");
                 ; 0012 004A         }
                 ; 0012 004B         else if((batLevel >= 3.0) && (batLevel < 3.3)){
                 ; 0012 004C             printOLED("BL1");
                 ; 0012 004D         }
                 ; 0012 004E         else if((batLevel >= 3.3) && (batLevel < 3.7)){
                 ; 0012 004F             printOLED("BL2");
                 ; 0012 0050         }
                 ; 0012 0051         else if((batLevel >= 3.7) && (batLevel < 4.0)){
                 ; 0012 0052             printOLED("BL3");
                 ; 0012 0053         }
                 ; 0012 0054         else if(batLevel >= 4.0){
                 ; 0012 0055             printOLED("BL4");
                 ; 0012 0056         }
                 ; 0012 0057     }
                 ; 0012 0058 }
                 ;/*============================================================*/
                 ;void OLED_showInputStatus(int ch,char state)
                 ; 0012 005B {
                 ; 0012 005C     if((ch < 0) || (ch >= 8)){
                 ;	ch -> Y+1
                 ;	state -> Y+0
                 ; 0012 005D         printDebug("<OLED_showInputStatus> ERR: ch value out of range.!!\r\n");
                 ; 0012 005E         return;
                 ; 0012 005F     }
                 ; 0012 0060 
                 ; 0012 0061     if(din_config[ch].channelEnable != 0x01){
                 ; 0012 0062         return;
                 ; 0012 0063     }
                 ; 0012 0064 
                 ; 0012 0065     if((state != DIN_FALLING) && (state != DIN_RISING)){
                 ; 0012 0066         //printDebug("<OLED_showInputStatus> ERR: state invalid [0x%02X]!!\r\n",state);
                 ; 0012 0067         return;
                 ; 0012 0068     }
                 ; 0012 0069 
                 ; 0012 006A     printOLED("IP%1d%1d",ch,state);
                 ; 0012 006B }
                 ;/*============================================================*/
                 ;void OLED_showOutputStatus(int ch,char state)
                 ; 0012 006E {
                 ; 0012 006F     if((ch < 0) || (ch >= 8)){
                 ;	ch -> Y+1
                 ;	state -> Y+0
                 ; 0012 0070         printDebug("<OLED_showOutputStatus> ERR: ch value out of range.!!\r\n");
                 ; 0012 0071         return;
                 ; 0012 0072     }
                 ; 0012 0073 
                 ; 0012 0074     if(dout_config[ch].channelEnable != 0x01){
                 ; 0012 0075         return;
                 ; 0012 0076     }
                 ; 0012 0077 
                 ; 0012 0078     if((state != LOW) && (state != HIGH)){
                 ; 0012 0079         //printDebug("<OLED_showInputStatus> ERR: state invalid [0x%02X]!!\r\n",state);
                 ; 0012 007A         return;
                 ; 0012 007B     }
                 ; 0012 007C 
                 ; 0012 007D     printOLED("OP%1d%1d",ch,state);
                 ; 0012 007E }
                 ;/*============================================================*/
                 ;void OLED_showServerCommStatus(char state)
                 ; 0012 0081 {
                 ; 0012 0082     printOLED("SC%1d",state);
                 ;	state -> Y+0
                 ; 0012 0083 }
                 ;/*============================================================*/
                 ;void OLED_showLanStatus(char state)
                 ; 0012 0086 {
                 ; 0012 0087     printOLED("LC%1d",state);
                 ;	state -> Y+0
                 ; 0012 0088 }
                 ;/*============================================================*/
                 ;void OLED_showBuzzerStatus(char state)
                 ; 0012 008B {
                 ; 0012 008C     printOLED("BZ%1d",state);
                 ;	state -> Y+0
                 ; 0012 008D }
                 ;/*============================================================*/
                 ;void OLED_showMemoryStatus(char state)
                 ; 0012 0090 {
                 ; 0012 0091     printOLED("MS%1d",state);
                 ;	state -> Y+0
                 ; 0012 0092 }
                 ;/*============================================================*/
                 ;void OLED_showAlarmStatus(void)
                 ; 0012 0095 {
                 ; 0012 0096     int     i=0;
                 ; 0012 0097     char    flagSens[5],flagData[5],flagBatt,flagMemo;
                 ; 0012 0098 
                 ; 0012 0099     for(i=0;i<MAX_SENS_CHANNEL;i++)
                 ;	i -> R16,R17
                 ;	flagSens -> Y+9
                 ;	flagData -> Y+4
                 ;	flagBatt -> R19
                 ;	flagMemo -> R18
                 ; 0012 009A     {
                 ; 0012 009B         if(operating_config.sensorEnable[i]){
                 ; 0012 009C 
                 ; 0012 009D             flagSens[i]         = sensorAlarm[i] ? 1:0;
                 ; 0012 009E 
                 ; 0012 009F             if(sensor_config[i].alarmEnable){
                 ; 0012 00A0                 flagData[i]     = dataAlarm[i] ? 1:0;
                 ; 0012 00A1             }
                 ; 0012 00A2             else{
                 ; 0012 00A3                 flagData[i]     = 0;
                 ; 0012 00A4             }
                 ; 0012 00A5         }
                 ; 0012 00A6         else{
                 ; 0012 00A7             flagSens[i]         = 0;
                 ; 0012 00A8             flagData[i]         = 0;
                 ; 0012 00A9         }
                 ; 0012 00AA 
                 ; 0012 00AB     }
                 ; 0012 00AC 
                 ; 0012 00AD     if(env_config.batteryLevel > 0){
                 ; 0012 00AE         flagBatt                = batteryAlarm ? 1:0;
                 ; 0012 00AF     }
                 ; 0012 00B0     else{
                 ; 0012 00B1         flagBatt                = 0;
                 ; 0012 00B2     }
                 ; 0012 00B3 
                 ; 0012 00B4     if(env_config.memoryMin > 0){
                 ; 0012 00B5         flagMemo                = memoryAlarm ? 1:0;
                 ; 0012 00B6     }
                 ; 0012 00B7     else{
                 ; 0012 00B8         flagMemo                = 0;
                 ; 0012 00B9     }
                 ; 0012 00BA 
                 ; 0012 00BB     printOLED("AL%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d",
                 ; 0012 00BC         flagSens[0],flagSens[1],flagSens[2],flagSens[3],flagSens[4],
                 ; 0012 00BD         flagData[0],flagData[1],flagData[2],flagData[3],flagData[4],
                 ; 0012 00BE         flagBatt,flagMemo);
                 ; 0012 00BF 
                 ; 0012 00C0     return;
                 ; 0012 00C1 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*************** OLED Low Level Communication *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void printOLED(flash char *fmtstr, ...)
                 ; 0012 00C9 {
                 ; 0012 00CA     TIMER   timeout;
                 ; 0012 00CB 
                 ; 0012 00CC     char strcmd[60];
                 ; 0012 00CD 
                 ; 0012 00CE     va_list argptr;
                 ; 0012 00CF 
                 ; 0012 00D0     va_start(argptr, fmtstr);
                 ;	*fmtstr -> Y+66
                 ;	timeout -> Y+62
                 ;	strcmd -> Y+2
                 ;	*argptr -> R16,R17
                 ; 0012 00D1     vsprintf(strcmd,fmtstr,argptr);
                 ; 0012 00D2     va_end(argptr);
                 ; 0012 00D3 
                 ; 0012 00D4 //    if ( (strstr(strcmd,"DV") != NULL) ){
                 ; 0012 00D5 //        printDebug("\r\n--%s--\r\n",strcmd);
                 ; 0012 00D6 //    }
                 ; 0012 00D7 
                 ; 0012 00D8     flag_oled_ack = 0;
                 ; 0012 00D9 
                 ; 0012 00DA     putchar2(0x01);
                 ; 0012 00DB     send_uart(2,strcmd);
                 ; 0012 00DC     putchar2(0x04);
                 ; 0012 00DD 
                 ; 0012 00DE     TIMER_setTimer(&timeout, 3);
                 ; 0012 00DF 
                 ; 0012 00E0     /*bongkot OLED assume flag_oled_ack = 1(OLED has connect and ack);*/
                 ; 0012 00E1     flag_oled_ack = 1;
                 ; 0012 00E2     while( (!flag_oled_ack) && !TIMER_checkTimerExceed(timeout));
                 ; 0012 00E3 
                 ; 0012 00E4     if(!flag_oled_ack){
                 ; 0012 00E5         printDebug("\r\n!!!! OLED Error !!!!\r\n");
                 ; 0012 00E6     }
                 ; 0012 00E7 
                 ; 0012 00E8 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** OLED Hardare Management *******************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void OLED_reset(void)
                 ; 0012 00F0 {
                 _OLED_reset:
                 ; 0012 00F1     OLED_RESET = 0;            // Active SOLED Reset
007003 98a5      	CBI  0x14,5
                 ; 0012 00F2     delay_ms(1);
007004 940e a244 	CALL SUBOPT_0x67
007006 940e b2e6 	CALL _delay_ms
                 ; 0012 00F3     OLED_RESET = 1;            // Dective SOLED Reset for start use.
007008 9aa5      	SBI  0x14,5
                 ; 0012 00F4     delay_ms(1);
007009 940e a244 	CALL SUBOPT_0x67
00700b 940e b2e6 	CALL _delay_ms
                 ; 0012 00F5 
                 ; 0012 00F6 }
00700d 9508      	RET
                 ;/*============================================================*/
                 ;void init_oled(void)
                 ; 0012 00F9 {
                 _init_oled:
                 ; 0012 00FA     printDebug("Initializing OLED.. ");
                +
00700e e8e0     +LDI R30 , LOW ( 2 * _0x240000 + ( 408 ) )
00700f e4f8     +LDI R31 , HIGH ( 2 * _0x240000 + ( 408 ) )
007010 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 408 ) )
007011 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 408 ) )
                 	__POINTD1FN _0x240000,408
007012 940e 9f66 	CALL SUBOPT_0x2
                 ; 0012 00FB     flag_oled_ack = 0;
007014 98f0      	CBI  0x1E,0
                 ; 0012 00FC     OLED_reset();
007015 dfed      	RCALL _OLED_reset
                 ; 0012 00FD     printDebug("OK\r\n");
                +
007016 e9e5     +LDI R30 , LOW ( 2 * _0x240000 + ( 429 ) )
007017 e4f8     +LDI R31 , HIGH ( 2 * _0x240000 + ( 429 ) )
007018 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 429 ) )
007019 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 429 ) )
                 	__POINTD1FN _0x240000,429
00701a 940e b62a 	CALL __PUTPARD1
00701c e080      	LDI  R24,0
00701d 940e 7ca0 	CALL _printDebug
00701f c1d1      	RJMP _0x20E0042
                 ; 0012 00FE }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;#include "memcard.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned long int sdFreeSpace = 0;
                 ;
                 ;/*============================================================*/
                 ;/* will hold the information for logical drive 0: */
                 ;FATFS fat;
                 ;/* pointer to the FATFS type structure */
                 ;FATFS *pfat;
                 ;/* root path */
                 ;char root_path[] = "0:/";
                 
                 	.DSEG
                 ;/*============================================================*/        /* error message list */
                 ;flash char * flash error_msg[]= {   "", /* not used */
                 ;                                    "FR_DISK_ERR",
                 ;                                    "FR_INT_ERR",
                 ;                                    "FR_NOT_READY",
                 ;                                    "FR_NO_FILE",
                 ;                                    "FR_NO_PATH",
                 ;                                    "FR_INVALID_NAME",
                 ;                                    "FR_DENIED",
                 ;                                    "FR_EXIST",
                 ;                                    "FR_INVALID_OBJECT",
                 ;                                    "FR_WRITE_PROTECTED",
                 ;                                    "FR_INVALID_DRIVE",
                 ;                                    "FR_NOT_ENABLED",
                 ;                                    "FR_NO_FILESYSTEM",
                 ;                                    "FR_MKFS_ABORTED",
                 ;                                    "FR_TIMEOUT"  };
                 ;/*============================================================*/        /* display error message and stop */
                 ;void error(FRESULT res)
                 ; 0013 0023 {
                 
                 	.CSEG
                 _error:
                 ; 0013 0024     if ((res>=FR_DISK_ERR) && (res<=FR_TIMEOUT))        printDebug("<ERR> %p.\r\n",error_msg[res]);     return;
007020 93aa      	ST   -Y,R26
                 ;	res -> Y+0
007021 81a8      	LD   R26,Y
007022 30a1      	CPI  R26,LOW(0x1)
007023 f010      	BRLO _0x260005
007024 31a0      	CPI  R26,LOW(0x10)
007025 f008      	BRLO _0x260006
                 _0x260005:
007026 c017      	RJMP _0x260004
                 _0x260006:
                +
007027 e6ed     +LDI R30 , LOW ( 2 * _0x260000 + ( 207 ) )
007028 e4f9     +LDI R31 , HIGH ( 2 * _0x260000 + ( 207 ) )
007029 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 207 ) )
00702a e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 207 ) )
                 	__POINTD1FN _0x260000,207
00702b 940e b62a 	CALL __PUTPARD1
00702d 81ec      	LDD  R30,Y+4
00702e efa6      	LDI  R26,LOW(_error_msg*2)
00702f e0b0      	LDI  R27,HIGH(_error_msg*2)
007030 e080      	LDI  R24,BYTE3(_error_msg*2)
007031 27ff      	CLR  R31
007032 2766      	CLR  R22
007033 2777      	CLR  R23
007034 940e b508 	CALL __LSLD1
007036 940e b508 	CALL __LSLD1
007038 940e b49d 	CALL __ADDD12
00703a 940e b60f 	CALL __GETD1PF
00703c 940e a8c3 	CALL SUBOPT_0x174
                 _0x260004:
00703e 9621      	ADIW R28,1
00703f 9508      	RET
                 ; 0013 0025 }
                 ;/*============================================================*/
                 ;int SD_writeData(FIL *file, unsigned long int start, unsigned char *data, unsigned int len)
                 ; 0013 0028 {
                 _SD_writeData:
                 ; 0013 0029     FRESULT         res;
                 ; 0013 002A     unsigned int    actual_write;
                 ; 0013 002B 
                 ; 0013 002C     if(sdFreeSpace == 0){ printDebug("<SD_writeData> SD Card not ready\r\n");       return -1;}
007040 940e a279 	CALL SUBOPT_0x6F
                 ;	*file -> Y+12
                 ;	start -> Y+8
                 ;	*data -> Y+6
                 ;	len -> Y+4
                 ;	res -> R17
                 ;	actual_write -> R18,R19
007042 940e ab44 	CALL SUBOPT_0x1E6
007044 f449      	BRNE _0x260007
                +
007045 e7e9     +LDI R30 , LOW ( 2 * _0x260000 + ( 219 ) )
007046 e4f9     +LDI R31 , HIGH ( 2 * _0x260000 + ( 219 ) )
007047 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 219 ) )
007048 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 219 ) )
                 	__POINTD1FN _0x260000,219
007049 940e 9f66 	CALL SUBOPT_0x2
00704b efef      	LDI  R30,LOW(65535)
00704c efff      	LDI  R31,HIGH(65535)
00704d c091      	RJMP _0x20E0047
                 ; 0013 002D 
                 ; 0013 002E     res = f_lseek(file,start);
                 _0x260007:
00704e 940e abd4 	CALL SUBOPT_0x1FD
                 ; 0013 002F     if(res != FR_OK){
007050 f059      	BREQ _0x260008
                 ; 0013 0030         printDebug("<SD_writeData> f_lseek(%u) failed!!\r\n", start);
                +
007051 e9ec     +LDI R30 , LOW ( 2 * _0x260000 + ( 254 ) )
007052 e4f9     +LDI R31 , HIGH ( 2 * _0x260000 + ( 254 ) )
007053 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 254 ) )
007054 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 254 ) )
                 	__POINTD1FN _0x260000,254
007055 940e a2c2 	CALL SUBOPT_0x7B
007057 940e a8c3 	CALL SUBOPT_0x174
                 ; 0013 0031         error(res);
007059 940e abdf 	CALL SUBOPT_0x1FE
                 ; 0013 0032         return -1;
00705b c083      	RJMP _0x20E0047
                 ; 0013 0033     }
                 ; 0013 0034 
                 ; 0013 0035     res = f_write(file,data,len,&actual_write);
                 _0x260008:
00705c 85ec      	LDD  R30,Y+12
00705d 85fd      	LDD  R31,Y+12+1
00705e 940e aa50 	CALL SUBOPT_0x1BF
007060 940e a8ec 	CALL SUBOPT_0x17D
007062 b7ad      	IN   R26,SPL
007063 b7be      	IN   R27,SPH
007064 9711      	SBIW R26,1
007065 933f      	PUSH R19
007066 932f      	PUSH R18
007067 940e 966f 	CALL _f_write
007069 912f      	POP  R18
00706a 913f      	POP  R19
00706b 2f1e      	MOV  R17,R30
                 ; 0013 0036     if(res != FR_OK){
00706c 3010      	CPI  R17,0
00706d f089      	BREQ _0x260009
                 ; 0013 0037         printDebug("<SD_writeData> f_write() failed\r\n");
                +
00706e ece2     +LDI R30 , LOW ( 2 * _0x260000 + ( 292 ) )
00706f e4f9     +LDI R31 , HIGH ( 2 * _0x260000 + ( 292 ) )
007070 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 292 ) )
007071 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 292 ) )
                 	__POINTD1FN _0x260000,292
007072 940e 9f66 	CALL SUBOPT_0x2
                 ; 0013 0038         print_payload(data,len);
007074 940e a78a 	CALL SUBOPT_0x144
007076 81ae      	LDD  R26,Y+6
007077 81bf      	LDD  R27,Y+6+1
007078 940e 7d2a 	CALL _print_payload
                 ; 0013 0039         error(res);
00707a 2fa1      	MOV  R26,R17
00707b dfa4      	RCALL _error
                 ; 0013 003A         return -2;
00707c efee      	LDI  R30,LOW(65534)
00707d efff      	LDI  R31,HIGH(65534)
00707e c060      	RJMP _0x20E0047
                 ; 0013 003B     }
                 ; 0013 003C 
                 ; 0013 003D     if(actual_write != len){
                 _0x260009:
00707f 81ec      	LDD  R30,Y+4
007080 81fd      	LDD  R31,Y+4+1
007081 17e2      	CP   R30,R18
007082 07f3      	CPC  R31,R19
007083 f069      	BREQ _0x26000A
                 ; 0013 003E         printDebug("<SD_writeData> actual_write[%u] != len[%u]\r\n",actual_write,len);
                +
007084 eee4     +LDI R30 , LOW ( 2 * _0x260000 + ( 326 ) )
007085 e4f9     +LDI R31 , HIGH ( 2 * _0x260000 + ( 326 ) )
007086 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 326 ) )
007087 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 326 ) )
                 	__POINTD1FN _0x260000,326
007088 940e abe5 	CALL SUBOPT_0x1FF
00708a 85ec      	LDD  R30,Y+12
00708b 85fd      	LDD  R31,Y+12+1
00708c 940e a6c7 	CALL SUBOPT_0x127
                 ; 0013 003F         return -3; // -- the caller should roll back the last data -- //
00708e efed      	LDI  R30,LOW(65533)
00708f efff      	LDI  R31,HIGH(65533)
007090 c04e      	RJMP _0x20E0047
                 ; 0013 0040     }
                 ; 0013 0041 
                 ; 0013 0042     return 0;
                 _0x26000A:
007091 c04b      	RJMP _0x20E0048
                 ; 0013 0043 }
                 ;/*============================================================*/
                 ;int SD_readData(FIL *file, unsigned long int start, unsigned char *data, unsigned int len)
                 ; 0013 0046 {
                 _SD_readData:
                 ; 0013 0047     FRESULT         res;
                 ; 0013 0048     unsigned int    actual_read;
                 ; 0013 0049 
                 ; 0013 004A     if(sdFreeSpace == 0){ printDebug("<SD_readData> SD Card not ready\r\n");       return -1;}
007092 940e a279 	CALL SUBOPT_0x6F
                 ;	*file -> Y+12
                 ;	start -> Y+8
                 ;	*data -> Y+6
                 ;	len -> Y+4
                 ;	res -> R17
                 ;	actual_read -> R18,R19
007094 940e ab44 	CALL SUBOPT_0x1E6
007096 f449      	BRNE _0x26000B
                +
007097 e1e1     +LDI R30 , LOW ( 2 * _0x260000 + ( 371 ) )
007098 e4fa     +LDI R31 , HIGH ( 2 * _0x260000 + ( 371 ) )
007099 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 371 ) )
00709a e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 371 ) )
                 	__POINTD1FN _0x260000,371
00709b 940e 9f66 	CALL SUBOPT_0x2
00709d efef      	LDI  R30,LOW(65535)
00709e efff      	LDI  R31,HIGH(65535)
00709f c03f      	RJMP _0x20E0047
                 ; 0013 004B 
                 ; 0013 004C     res = f_lseek(file,start);
                 _0x26000B:
0070a0 940e abd4 	CALL SUBOPT_0x1FD
                 ; 0013 004D     if(res != FR_OK){
0070a2 f059      	BREQ _0x26000C
                 ; 0013 004E         printDebug("<SD_readData> f_lseek(%u) failed!!\r\n", start);
                +
0070a3 e3e3     +LDI R30 , LOW ( 2 * _0x260000 + ( 405 ) )
0070a4 e4fa     +LDI R31 , HIGH ( 2 * _0x260000 + ( 405 ) )
0070a5 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 405 ) )
0070a6 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 405 ) )
                 	__POINTD1FN _0x260000,405
0070a7 940e a2c2 	CALL SUBOPT_0x7B
0070a9 940e a8c3 	CALL SUBOPT_0x174
                 ; 0013 004F         error(res);
0070ab 940e abdf 	CALL SUBOPT_0x1FE
                 ; 0013 0050         return -1;
0070ad c031      	RJMP _0x20E0047
                 ; 0013 0051     }
                 ; 0013 0052 
                 ; 0013 0053     res = f_read(file,data,len,&actual_read);
                 _0x26000C:
0070ae 85ec      	LDD  R30,Y+12
0070af 85fd      	LDD  R31,Y+12+1
0070b0 940e aa50 	CALL SUBOPT_0x1BF
0070b2 940e a8ec 	CALL SUBOPT_0x17D
0070b4 b7ad      	IN   R26,SPL
0070b5 b7be      	IN   R27,SPH
0070b6 9711      	SBIW R26,1
0070b7 933f      	PUSH R19
0070b8 932f      	PUSH R18
0070b9 940e 950a 	CALL _f_read
0070bb 912f      	POP  R18
0070bc 913f      	POP  R19
0070bd 2f1e      	MOV  R17,R30
                 ; 0013 0054     if(res != FR_OK){
0070be 3010      	CPI  R17,0
0070bf f059      	BREQ _0x26000D
                 ; 0013 0055         printDebug("<SD_readData> f_read() failed\r\n");
                +
0070c0 e5e8     +LDI R30 , LOW ( 2 * _0x260000 + ( 442 ) )
0070c1 e4fa     +LDI R31 , HIGH ( 2 * _0x260000 + ( 442 ) )
0070c2 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 442 ) )
0070c3 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 442 ) )
                 	__POINTD1FN _0x260000,442
0070c4 940e 9f66 	CALL SUBOPT_0x2
                 ; 0013 0056         error(res);
0070c6 2fa1      	MOV  R26,R17
0070c7 df58      	RCALL _error
                 ; 0013 0057         return -2;
0070c8 efee      	LDI  R30,LOW(65534)
0070c9 efff      	LDI  R31,HIGH(65534)
0070ca c014      	RJMP _0x20E0047
                 ; 0013 0058     }
                 ; 0013 0059 
                 ; 0013 005A     if(actual_read != len){
                 _0x26000D:
0070cb 81ec      	LDD  R30,Y+4
0070cc 81fd      	LDD  R31,Y+4+1
0070cd 17e2      	CP   R30,R18
0070ce 07f3      	CPC  R31,R19
0070cf f069      	BREQ _0x26000E
                 ; 0013 005B         printDebug("<SD_writeData> actual_read[%u] != len[%u]\r\n",actual_read,len);
                +
0070d0 e7e8     +LDI R30 , LOW ( 2 * _0x260000 + ( 474 ) )
0070d1 e4fa     +LDI R31 , HIGH ( 2 * _0x260000 + ( 474 ) )
0070d2 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 474 ) )
0070d3 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 474 ) )
                 	__POINTD1FN _0x260000,474
0070d4 940e abe5 	CALL SUBOPT_0x1FF
0070d6 85ec      	LDD  R30,Y+12
0070d7 85fd      	LDD  R31,Y+12+1
0070d8 940e a6c7 	CALL SUBOPT_0x127
                 ; 0013 005C         return -3; // -- the caller should roll back the last data -- //
0070da efed      	LDI  R30,LOW(65533)
0070db efff      	LDI  R31,HIGH(65533)
0070dc c002      	RJMP _0x20E0047
                 ; 0013 005D     }
                 ; 0013 005E 
                 ; 0013 005F     return 0;
                 _0x26000E:
                 _0x20E0048:
0070dd e0e0      	LDI  R30,LOW(0)
0070de e0f0      	LDI  R31,HIGH(0)
                 _0x20E0047:
0070df 940e b6a3 	CALL __LOADLOCR4
0070e1 962e      	ADIW R28,14
0070e2 9508      	RET
                 ; 0013 0060 }
                 ;/*============================================================*/
                 ;int SD_readMemoryRemain(unsigned long *free_kbytes)
                 ; 0013 0063 {
                 _SD_readMemoryRemain:
                 ; 0013 0064     FRESULT         res;
                 ; 0013 0065     unsigned long   free_clusters;
                 ; 0013 0066 
                 ; 0013 0067     // ------ read available memory space ------- //
                 ; 0013 0068     // return as percentage!!! //
                 ; 0013 0069 
                 ; 0013 006A     /* get the number of free clusters */
                 ; 0013 006B     res = f_getfree(root_path,&free_clusters,&pfat);
0070e3 940e a518 	CALL SUBOPT_0xDA
                 ;	*free_kbytes -> Y+5
                 ;	res -> R17
                 ;	free_clusters -> Y+1
0070e5 e1e6      	LDI  R30,LOW(_root_path)
0070e6 e1f9      	LDI  R31,HIGH(_root_path)
0070e7 940e abe9 	CALL SUBOPT_0x200
0070e9 e1a4      	LDI  R26,LOW(_pfat)
0070ea e1b9      	LDI  R27,HIGH(_pfat)
0070eb 940e 9a43 	CALL _f_getfree
0070ed 2f1e      	MOV  R17,R30
                 ; 0013 006C     if ( res != FR_OK){
0070ee 3010      	CPI  R17,0
0070ef f061      	BREQ _0x26000F
                 ; 0013 006D        /* an error occured, display it and stop */
                 ; 0013 006E        printDebug("<SD_readMemoryRemain> f_getfree(%s) error!!\r\n",root_path);
                +
0070f0 eae4     +LDI R30 , LOW ( 2 * _0x260000 + ( 518 ) )
0070f1 e4fa     +LDI R31 , HIGH ( 2 * _0x260000 + ( 518 ) )
0070f2 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 518 ) )
0070f3 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 518 ) )
                 	__POINTD1FN _0x260000,518
0070f4 940e abf0 	CALL SUBOPT_0x201
0070f6 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0013 006F        error(res);
0070f8 2fa1      	MOV  R26,R17
0070f9 940e abf5 	CALL SUBOPT_0x202
                 ; 0013 0070        sdFreeSpace = 0;
                 ; 0013 0071        return -1;
0070fb c012      	RJMP _0x20E0046
                 ; 0013 0072     }
                 ; 0013 0073 
                 ; 0013 0074     /* calculate the number of free bytes */
                 ; 0013 0075     *free_kbytes = free_clusters * pfat->csize / 2;
                 _0x26000F:
0070fc 91e0 1914 	LDS  R30,_pfat
0070fe 91f0 1915 	LDS  R31,_pfat+1
007100 940e ac03 	CALL SUBOPT_0x203
007102 940e ac06 	CALL SUBOPT_0x204
007104 940e ac0b 	CALL SUBOPT_0x205
007106 940e b503 	CALL __LSRD1
007108 81ad      	LDD  R26,Y+5
007109 81be      	LDD  R27,Y+5+1
00710a 940e b605 	CALL __PUTDP1
                 ; 0013 0076 
                 ; 0013 0077     return 0;
00710c e0e0      	LDI  R30,LOW(0)
00710d e0f0      	LDI  R31,HIGH(0)
                 _0x20E0046:
00710e 8118      	LDD  R17,Y+0
00710f 9627      	ADIW R28,7
007110 9508      	RET
                 ; 0013 0078 }
                 ;/*============================================================*/
                 ;int SD_mount(void)
                 ; 0013 007B {
                 _SD_mount:
                 ; 0013 007C     FRESULT         res;
                 ; 0013 007D 
                 ; 0013 007E     /* mount logical drive 0: */
                 ; 0013 007F     res = f_mount(0,&fat);
007111 931a      	ST   -Y,R17
                 ;	res -> R17
007112 e0e0      	LDI  R30,LOW(0)
007113 93ea      	ST   -Y,R30
007114 eea2      	LDI  R26,LOW(_fat)
007115 e1b6      	LDI  R27,HIGH(_fat)
007116 940e 93b3 	CALL _f_mount
007118 2f1e      	MOV  R17,R30
                 ; 0013 0080     if( res != FR_OK ){
007119 3010      	CPI  R17,0
00711a f049      	BREQ _0x260010
                 ; 0013 0081         printDebug("Logical drive 0: mounted ERROR\r\n");
                +
00711b ede2     +LDI R30 , LOW ( 2 * _0x260000 + ( 564 ) )
00711c e4fa     +LDI R31 , HIGH ( 2 * _0x260000 + ( 564 ) )
00711d e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 564 ) )
00711e e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 564 ) )
                 	__POINTD1FN _0x260000,564
00711f 940e 9f66 	CALL SUBOPT_0x2
                 ; 0013 0082         error(res);
007121 940e abdf 	CALL SUBOPT_0x1FE
                 ; 0013 0083         return -1;
007123 c008      	RJMP _0x20E0045
                 ; 0013 0084     }
                 ; 0013 0085 
                 ; 0013 0086     printDebug("Logical drive 0: mounted OK\r\n");
                 _0x260010:
                +
007124 efe3     +LDI R30 , LOW ( 2 * _0x260000 + ( 597 ) )
007125 e4fa     +LDI R31 , HIGH ( 2 * _0x260000 + ( 597 ) )
007126 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 597 ) )
007127 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 597 ) )
                 	__POINTD1FN _0x260000,597
007128 940e 9f66 	CALL SUBOPT_0x2
                 ; 0013 0087     return 0;
00712a e0e0      	LDI  R30,LOW(0)
00712b e0f0      	LDI  R31,HIGH(0)
                 _0x20E0045:
00712c 9119      	LD   R17,Y+
00712d 9508      	RET
                 ; 0013 0088 }
                 ;/*============================================================*/
                 ;int SD_unmount(void)
                 ; 0013 008B {
                 ; 0013 008C     FRESULT         res;
                 ; 0013 008D 
                 ; 0013 008E     /* unmount logical drive 0: */
                 ; 0013 008F     res = f_mount(0,NULL);
                 ;	res -> R17
                 ; 0013 0090     if( res != FR_OK ){
                 ; 0013 0091         printDebug("Logical drive 0: unmounted ERROR\r\n");
                 ; 0013 0092         error(res);
                 ; 0013 0093         return -1;
                 ; 0013 0094     }
                 ; 0013 0095 
                 ; 0013 0096     printDebug("Logical drive 0: unmounted OK\r\n");
                 ; 0013 0097     return 0;
                 ; 0013 0098 }
                 ;/*============================================================*/
                 ;int SD_remount(void)
                 ; 0013 009B {
                 ; 0013 009C     int res;
                 ; 0013 009D 
                 ; 0013 009E     res = SD_unmount();
                 ;	res -> R16,R17
                 ; 0013 009F     if(res < 0){
                 ; 0013 00A0         printDebug("<SD_remount> SD_unmount() failed\r\n");
                 ; 0013 00A1         return -1;
                 ; 0013 00A2     }
                 ; 0013 00A3     delay_ms(250);
                 ; 0013 00A4     res = SD_mount();
                 ; 0013 00A5     if(res < 0){
                 ; 0013 00A6         printDebug("<SD_remount> SD_mount() failed\r\n");
                 ; 0013 00A7         return -1;
                 ; 0013 00A8     }
                 ; 0013 00A9     delay_ms(250);
                 ; 0013 00AA //
                 ; 0013 00AB //    if(SD_createFile(LOG_PROTOCOL) < 0){
                 ; 0013 00AC //        printDebug("Error creating new log file (Remount failed)\r\n");
                 ; 0013 00AD //        return -1;
                 ; 0013 00AE //    }
                 ; 0013 00AF 
                 ; 0013 00B0     return 0;
                 ; 0013 00B1 }
                 ;/*============================================================*/
                 ;int SD_createFile(char *filename, unsigned char mode)
                 ; 0013 00B4 {
                 _SD_createFile:
                 ; 0013 00B5     FIL          file;
                 ; 0013 00B6     FRESULT      res;
                 ; 0013 00B7     char         filepath[50];
                 ; 0013 00B8 
                 ; 0013 00B9     if(sdFreeSpace == 0){ printDebug("<SD_createFile> SD Card not ready\r\n");      return -1;}
00712e 93aa      	ST   -Y,R26
00712f 97ef      	SBIW R28,63
007130 9763      	SBIW R28,19
007131 50d2      	SUBI R29,2
007132 931a      	ST   -Y,R17
                 ;	*filename -> Y+596
                 ;	mode -> Y+595
                 ;	file -> Y+51
                 ;	res -> R17
                 ;	filepath -> Y+1
007133 940e ab44 	CALL SUBOPT_0x1E6
007135 f449      	BRNE _0x260014
                +
007136 e9e8     +LDI R30 , LOW ( 2 * _0x260000 + ( 762 ) )
007137 e4fb     +LDI R31 , HIGH ( 2 * _0x260000 + ( 762 ) )
007138 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 762 ) )
007139 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 762 ) )
                 	__POINTD1FN _0x260000,762
00713a 940e 9f66 	CALL SUBOPT_0x2
00713c efef      	LDI  R30,LOW(65535)
00713d efff      	LDI  R31,HIGH(65535)
00713e c048      	RJMP _0x20E0044
                 ; 0013 00BA 
                 ; 0013 00BB     sprintf(filepath,"%s%s",root_path,filename);
                 _0x260014:
00713f 01fe      	MOVW R30,R28
007140 9631      	ADIW R30,1
007141 93fa      	ST   -Y,R31
007142 93ea      	ST   -Y,R30
007143 940e ac10 	CALL SUBOPT_0x206
                +
007145 01fe     +MOVW R30 , R28
007146 5ae2     +SUBI R30 , LOW ( - 606 )
007147 4ffd     +SBCI R31 , HIGH ( - 606 )
007148 9001     +LD R0 , Z +
007149 81f0     +LD R31 , Z
00714a 2de0     +MOV R30 , R0
                 	__GETW1SX 606
00714b 940e a524 	CALL SUBOPT_0xDD
00714d e088      	LDI  R24,8
00714e 940e 9e7d 	CALL _sprintf
007150 962e      	ADIW R28,14
                 ; 0013 00BC 
                 ; 0013 00BD     if(mode == SD_FORCE)        // -- replace old file if exist -- //
                +
007151 01de     +MOVW R26 , R28
007152 5aad     +SUBI R26 , LOW ( - 595 )
007153 4fbd     +SBCI R27 , HIGH ( - 595 )
007154 91ac     +LD R26 , X
                 	__GETB2SX 595
007155 30a1      	CPI  R26,LOW(0x1)
007156 f431      	BRNE _0x260015
                 ; 0013 00BE     {
                 ; 0013 00BF         //printDebug("<SD_createFile> Force re-creating file %s.\r\n",filename);
                 ; 0013 00C0         res = f_open(   &file,
                 ; 0013 00C1                         filepath,
                 ; 0013 00C2                         FA_CREATE_ALWAYS | FA_WRITE );
007157 01fe      	MOVW R30,R28
007158 96f3      	ADIW R30,51
007159 940e abe9 	CALL SUBOPT_0x200
00715b e0aa      	LDI  R26,LOW(10)
00715c c005      	RJMP _0x260021
                 ; 0013 00C3     }
                 ; 0013 00C4     else                        // -- keep old file if exist -- //
                 _0x260015:
                 ; 0013 00C5     {
                 ; 0013 00C6         //printDebug("<SD_createFile> Try to creating file %s.\r\n",filename);
                 ; 0013 00C7         res = f_open(   &file,
                 ; 0013 00C8                         filepath,
                 ; 0013 00C9                         FA_CREATE_NEW | FA_WRITE );
00715d 01fe      	MOVW R30,R28
00715e 96f3      	ADIW R30,51
00715f 940e abe9 	CALL SUBOPT_0x200
007161 e0a6      	LDI  R26,LOW(6)
                 _0x260021:
007162 940e 93dd 	CALL _f_open
007164 2f1e      	MOV  R17,R30
                 ; 0013 00CA     }
                 ; 0013 00CB 
                 ; 0013 00CC     if( res == FR_EXIST){
007165 3018      	CPI  R17,8
007166 f419      	BRNE _0x260017
                 ; 0013 00CD         //printDebug("<SD_createFile> %s already exist\r\n", filename);
                 ; 0013 00CE 
                 ; 0013 00CF //        res = f_close( &file );
                 ; 0013 00D0 //        if( res != FR_OK ){
                 ; 0013 00D1 //            printDebug("<SD_createFile> f_close() failed\r\n");
                 ; 0013 00D2 //            error(res);
                 ; 0013 00D3 //            return -1;
                 ; 0013 00D4 //        }
                 ; 0013 00D5 
                 ; 0013 00D6         return 0;       // -- return 0 indicated that a file is already exist -- //
007167 e0e0      	LDI  R30,LOW(0)
007168 e0f0      	LDI  R31,HIGH(0)
007169 c01d      	RJMP _0x20E0044
                 ; 0013 00D7     }
                 ; 0013 00D8     else if( res != FR_OK){
                 _0x260017:
00716a 3010      	CPI  R17,0
00716b f049      	BREQ _0x260019
                 ; 0013 00D9         printDebug("<SD_createFile> f_open() failed\r\n");
                +
00716c ece1     +LDI R30 , LOW ( 2 * _0x260000 + ( 803 ) )
00716d e4fb     +LDI R31 , HIGH ( 2 * _0x260000 + ( 803 ) )
00716e e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 803 ) )
00716f e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 803 ) )
                 	__POINTD1FN _0x260000,803
007170 940e 9f66 	CALL SUBOPT_0x2
                 ; 0013 00DA         error(res);
007172 940e abdf 	CALL SUBOPT_0x1FE
                 ; 0013 00DB         return -1;
007174 c012      	RJMP _0x20E0044
                 ; 0013 00DC     }
                 ; 0013 00DD 
                 ; 0013 00DE     //printDebug("<SD_createFile> '%s' created!!\r\n",filename);
                 ; 0013 00DF 
                 ; 0013 00E0     res = f_close( &file );
                 _0x260019:
007175 01de      	MOVW R26,R28
007176 96d3      	ADIW R26,51
007177 940e 9893 	CALL _f_close
007179 2f1e      	MOV  R17,R30
                 ; 0013 00E1     if( res != FR_OK ){
00717a 3010      	CPI  R17,0
00717b f049      	BREQ _0x26001A
                 ; 0013 00E2         printDebug("<SD_createFile> f_close() failed\r\n");
                +
00717c eee3     +LDI R30 , LOW ( 2 * _0x260000 + ( 837 ) )
00717d e4fb     +LDI R31 , HIGH ( 2 * _0x260000 + ( 837 ) )
00717e e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 837 ) )
00717f e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 837 ) )
                 	__POINTD1FN _0x260000,837
007180 940e 9f66 	CALL SUBOPT_0x2
                 ; 0013 00E3         error(res);
007182 940e abdf 	CALL SUBOPT_0x1FE
                 ; 0013 00E4         return -1;
007184 c002      	RJMP _0x20E0044
                 ; 0013 00E5     }
                 ; 0013 00E6 
                 ; 0013 00E7     return 1;   // -- return 1 indicated that it's a new file -- //
                 _0x26001A:
007185 e0e1      	LDI  R30,LOW(1)
007186 e0f0      	LDI  R31,HIGH(1)
                 _0x20E0044:
007187 8118      	LDD  R17,Y+0
007188 96ef      	ADIW R28,63
007189 9667      	ADIW R28,23
00718a 5fde      	SUBI R29,-2
00718b 9508      	RET
                 ; 0013 00E8 }
                 ;/*============================================================*/
                 ;int SD_openFile(FIL *file, unsigned char *filename)
                 ; 0013 00EB {
                 _SD_openFile:
                 ; 0013 00EC     int     res;
                 ; 0013 00ED     char    filepath[50];
                 ; 0013 00EE 
                 ; 0013 00EF     if(sdFreeSpace == 0){ printDebug("<SD_openFile> SD Card not ready\r\n");    return -1;}
00718c 93ba      	ST   -Y,R27
00718d 93aa      	ST   -Y,R26
00718e 97e2      	SBIW R28,50
00718f 931a      	ST   -Y,R17
007190 930a      	ST   -Y,R16
                 ;	*file -> Y+54
                 ;	*filename -> Y+52
                 ;	res -> R16,R17
                 ;	filepath -> Y+2
007191 940e ab44 	CALL SUBOPT_0x1E6
007193 f449      	BRNE _0x26001B
                +
007194 e0e6     +LDI R30 , LOW ( 2 * _0x260000 + ( 872 ) )
007195 e4fc     +LDI R31 , HIGH ( 2 * _0x260000 + ( 872 ) )
007196 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 872 ) )
007197 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 872 ) )
                 	__POINTD1FN _0x260000,872
007198 940e 9f66 	CALL SUBOPT_0x2
00719a efef      	LDI  R30,LOW(65535)
00719b efff      	LDI  R31,HIGH(65535)
00719c c02a      	RJMP _0x20E0043
                 ; 0013 00F0 
                 ; 0013 00F1     sprintf(filepath,"%s%s",root_path,filename);
                 _0x26001B:
00719d 940e aa3e 	CALL SUBOPT_0x1BB
00719f 940e ac10 	CALL SUBOPT_0x206
0071a1 adee      	LDD  R30,Y+62
0071a2 adff      	LDD  R31,Y+62+1
0071a3 940e a524 	CALL SUBOPT_0xDD
0071a5 e088      	LDI  R24,8
0071a6 940e 9e7d 	CALL _sprintf
0071a8 962e      	ADIW R28,14
                 ; 0013 00F2 
                 ; 0013 00F3     res = f_open( file, filepath, FA_WRITE | FA_READ | FA_OPEN_EXISTING);
0071a9 a9ee      	LDD  R30,Y+54
0071aa a9ff      	LDD  R31,Y+54+1
0071ab 940e ac15 	CALL SUBOPT_0x207
0071ad e0a3      	LDI  R26,LOW(3)
0071ae 940e 93dd 	CALL _f_open
0071b0 2f0e      	MOV  R16,R30
0071b1 2711      	CLR  R17
                 ; 0013 00F4     if( res != FR_OK){
0071b2 2e00      	MOV  R0,R16
0071b3 2a01      	OR   R0,R17
0071b4 f081      	BREQ _0x26001C
                 ; 0013 00F5         printDebug("<SD_openFile> f_open() [%s] failed\r\n", filename);
                +
0071b5 e2e8     +LDI R30 , LOW ( 2 * _0x260000 + ( 906 ) )
0071b6 e4fc     +LDI R31 , HIGH ( 2 * _0x260000 + ( 906 ) )
0071b7 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 906 ) )
0071b8 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 906 ) )
                 	__POINTD1FN _0x260000,906
0071b9 940e b62a 	CALL __PUTPARD1
0071bb ade8      	LDD  R30,Y+56
0071bc adf9      	LDD  R31,Y+56+1
0071bd 940e a524 	CALL SUBOPT_0xDD
0071bf 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0013 00F6         error(res);
0071c1 2fa0      	MOV  R26,R16
0071c2 940e abf5 	CALL SUBOPT_0x202
                 ; 0013 00F7         sdFreeSpace = 0;
                 ; 0013 00F8         return -1;
0071c4 c002      	RJMP _0x20E0043
                 ; 0013 00F9     }
                 ; 0013 00FA 
                 ; 0013 00FB     return 0;
                 _0x26001C:
0071c5 e0e0      	LDI  R30,LOW(0)
0071c6 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0043:
0071c7 8119      	LDD  R17,Y+1
0071c8 8108      	LDD  R16,Y+0
0071c9 96e8      	ADIW R28,56
0071ca 9508      	RET
                 ; 0013 00FC }
                 ;/*============================================================*/
                 ;int SD_closeFile(FIL *file)
                 ; 0013 00FF {
                 _SD_closeFile:
                 ; 0013 0100     int res;
                 ; 0013 0101 
                 ; 0013 0102     if(sdFreeSpace == 0){ printDebug("<SD_closeFile> SD Card not ready\r\n");       return -1;}
0071cb 940e a285 	CALL SUBOPT_0x71
                 ;	*file -> Y+2
                 ;	res -> R16,R17
0071cd 940e ab44 	CALL SUBOPT_0x1E6
0071cf f449      	BRNE _0x26001D
                +
0071d0 e4ed     +LDI R30 , LOW ( 2 * _0x260000 + ( 943 ) )
0071d1 e4fc     +LDI R31 , HIGH ( 2 * _0x260000 + ( 943 ) )
0071d2 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 943 ) )
0071d3 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 943 ) )
                 	__POINTD1FN _0x260000,943
0071d4 940e 9f66 	CALL SUBOPT_0x2
0071d6 efef      	LDI  R30,LOW(65535)
0071d7 efff      	LDI  R31,HIGH(65535)
0071d8 c016      	RJMP _0x20E0041
                 ; 0013 0103 
                 ; 0013 0104     res = f_close( file );
                 _0x26001D:
0071d9 81aa      	LDD  R26,Y+2
0071da 81bb      	LDD  R27,Y+2+1
0071db 940e 9893 	CALL _f_close
0071dd 2f0e      	MOV  R16,R30
0071de 2711      	CLR  R17
                 ; 0013 0105     if( res != FR_OK ){
0071df 2e00      	MOV  R0,R16
0071e0 2a01      	OR   R0,R17
0071e1 f059      	BREQ _0x26001E
                 ; 0013 0106         printDebug("<SD_closeFile> f_close() failed\r\n");
                +
0071e2 e7e0     +LDI R30 , LOW ( 2 * _0x260000 + ( 978 ) )
0071e3 e4fc     +LDI R31 , HIGH ( 2 * _0x260000 + ( 978 ) )
0071e4 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 978 ) )
0071e5 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 978 ) )
                 	__POINTD1FN _0x260000,978
0071e6 940e 9f66 	CALL SUBOPT_0x2
                 ; 0013 0107         error(res);
0071e8 2fa0      	MOV  R26,R16
0071e9 de36      	RCALL _error
                 ; 0013 0108         return -1;
0071ea efef      	LDI  R30,LOW(65535)
0071eb efff      	LDI  R31,HIGH(65535)
0071ec c002      	RJMP _0x20E0041
                 ; 0013 0109     }
                 ; 0013 010A 
                 ; 0013 010B     return 0;
                 _0x26001E:
0071ed e0e0      	LDI  R30,LOW(0)
0071ee e0f0      	LDI  R31,HIGH(0)
                 _0x20E0041:
0071ef 8119      	LDD  R17,Y+1
0071f0 8108      	LDD  R16,Y+0
                 _0x20E0042:
0071f1 9624      	ADIW R28,4
0071f2 9508      	RET
                 ; 0013 010C }
                 ;/*============================================================*/
                 ;int SD_init(void)
                 ; 0013 010F {
                 _SD_init:
                 ; 0013 0110     int                 err;
                 ; 0013 0111 
                 ; 0013 0112     printDebug("<SD_init> Start initial memory card\r\n");
0071f3 931a      	ST   -Y,R17
0071f4 930a      	ST   -Y,R16
                 ;	err -> R16,R17
                +
0071f5 e9e2     +LDI R30 , LOW ( 2 * _0x260000 + ( 1012 ) )
0071f6 e4fc     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1012 ) )
0071f7 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1012 ) )
0071f8 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1012 ) )
                 	__POINTD1FN _0x260000,1012
0071f9 940e 9f66 	CALL SUBOPT_0x2
                 ; 0013 0113 
                 ; 0013 0114     /* point to the FATFS structure that holds
                 ; 0013 0115     information for the logical drive 0: */
                 ; 0013 0116     pfat=&fat;
0071fb eee2      	LDI  R30,LOW(_fat)
0071fc e1f6      	LDI  R31,HIGH(_fat)
0071fd 93e0 1914 	STS  _pfat,R30
0071ff 93f0 1915 	STS  _pfat+1,R31
                 ; 0013 0117 
                 ; 0013 0118     delay_ms(1000);
007201 eea8      	LDI  R26,LOW(1000)
007202 e0b3      	LDI  R27,HIGH(1000)
007203 940e b2e6 	CALL _delay_ms
                 ; 0013 0119     printDebug("\r\n<SD_init> Mounting SD Card...");
                +
007205 ebe8     +LDI R30 , LOW ( 2 * _0x260000 + ( 1050 ) )
007206 e4fc     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1050 ) )
007207 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1050 ) )
007208 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1050 ) )
                 	__POINTD1FN _0x260000,1050
007209 940e 9f66 	CALL SUBOPT_0x2
                 ; 0013 011A     err = SD_mount();
00720b df05      	RCALL _SD_mount
00720c 018f      	MOVW R16,R30
                 ; 0013 011B     if(err < 0){
00720d 2311      	TST  R17
00720e f44a      	BRPL _0x26001F
                 ; 0013 011C         printDebug("<SD_init> SD_mount() failed\r\n");
                +
00720f ede8     +LDI R30 , LOW ( 2 * _0x260000 + ( 1082 ) )
007210 e4fc     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1082 ) )
007211 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1082 ) )
007212 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1082 ) )
                 	__POINTD1FN _0x260000,1082
007213 940e 9f66 	CALL SUBOPT_0x2
                 ; 0013 011D         return -1;
007215 efef      	LDI  R30,LOW(65535)
007216 efff      	LDI  R31,HIGH(65535)
007217 c02b      	RJMP _0x20E0040
                 ; 0013 011E     }
                 ; 0013 011F 
                 ; 0013 0120 
                 ; 0013 0121     printDebug("\r\n<SD_init> Check Card Size...");
                 _0x26001F:
                +
007218 efe6     +LDI R30 , LOW ( 2 * _0x260000 + ( 1112 ) )
007219 e4fc     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1112 ) )
00721a e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1112 ) )
00721b e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1112 ) )
                 	__POINTD1FN _0x260000,1112
00721c 940e 9f66 	CALL SUBOPT_0x2
                 ; 0013 0122 
                 ; 0013 0123     delay_ms(1000);
00721e eea8      	LDI  R26,LOW(1000)
00721f e0b3      	LDI  R27,HIGH(1000)
007220 940e b2e6 	CALL _delay_ms
                 ; 0013 0124 
                 ; 0013 0125     err = SD_readMemoryRemain(&sdFreeSpace);
007222 e6ab      	LDI  R26,LOW(_sdFreeSpace)
007223 e1b4      	LDI  R27,HIGH(_sdFreeSpace)
007224 debe      	RCALL _SD_readMemoryRemain
007225 018f      	MOVW R16,R30
                 ; 0013 0126     if(err < 0){
007226 2311      	TST  R17
007227 f44a      	BRPL _0x260020
                 ; 0013 0127         printDebug("<SD_init> SD_readMemoryRemain() failed\r\n");
                +
007228 e1e5     +LDI R30 , LOW ( 2 * _0x260000 + ( 1143 ) )
007229 e4fd     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1143 ) )
00722a e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1143 ) )
00722b e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1143 ) )
                 	__POINTD1FN _0x260000,1143
00722c 940e 9f66 	CALL SUBOPT_0x2
                 ; 0013 0128         return -1;
00722e efef      	LDI  R30,LOW(65535)
00722f efff      	LDI  R31,HIGH(65535)
007230 c012      	RJMP _0x20E0040
                 ; 0013 0129     }
                 ; 0013 012A 
                 ; 0013 012B     /* display the number of free kbytes */
                 ; 0013 012C     printDebug("<SD_init> Free space on logical drive 0: %lu kbytes\r\n",sdFreeSpace);
                 _0x260020:
                +
007231 e3ee     +LDI R30 , LOW ( 2 * _0x260000 + ( 1184 ) )
007232 e4fd     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1184 ) )
007233 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1184 ) )
007234 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1184 ) )
                 	__POINTD1FN _0x260000,1184
007235 940e b62a 	CALL __PUTPARD1
007237 91e0 146b 	LDS  R30,_sdFreeSpace
007239 91f0 146c 	LDS  R31,_sdFreeSpace+1
00723b 9160 146d 	LDS  R22,_sdFreeSpace+2
00723d 9170 146e 	LDS  R23,_sdFreeSpace+3
00723f 940e a8c3 	CALL SUBOPT_0x174
                 ; 0013 012D 
                 ; 0013 012E     return 0;
007241 e0e0      	LDI  R30,LOW(0)
007242 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0040:
007243 9109      	LD   R16,Y+
007244 9119      	LD   R17,Y+
007245 9508      	RET
                 ; 0013 012F }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "log.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned char LOGFILE_DATA[]            = "data.log";           // -- data log file name -- //
                 
                 	.DSEG
                 ;unsigned char LOGFILE_EVENT[]           = "event.log";          // -- event log file name -- //
                 ;unsigned char LOGFILE_ERROR[]           = "error.log";          // -- error log file name -- //
                 ;unsigned char LOG_INIT_STR[SIZE_RECORD] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF};
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/************** Function Pointer to memcard.h *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int (*LOG_openFile)(FIL *, unsigned char *) = &SD_openFile;
                 ;int (*LOG_closeFile)(FIL *)                 = &SD_closeFile;
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Data Log Management **********************/
                 ;/**************************************************************/
                 ;char isDataLogEmpty     = 0;
                 ;/*============================================================*/
                 ;int LOG_insertData(FIL *file, unsigned long int timestamp, unsigned int channel, float value)
                 ; 0014 001B {
                 
                 	.CSEG
                 _LOG_insertData:
                 ; 0014 001C     int                 res;
                 ; 0014 001D     unsigned long int   index;
                 ; 0014 001E     unsigned long int   startAddr;
                 ; 0014 001F     unsigned char       flag;
                 ; 0014 0020 
                 ; 0014 0021     res             = LOG_getLastInsert(file, &index);
007246 940e b62f 	CALL __PUTPARD2
007248 9728      	SBIW R28,8
007249 940e b69c 	CALL __SAVELOCR4
                 ;	*file -> Y+22
                 ;	timestamp -> Y+18
                 ;	channel -> Y+16
                 ;	value -> Y+12
                 ;	res -> R16,R17
                 ;	index -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
00724b 940e ac1c 	CALL SUBOPT_0x208
00724d 940e ac21 	CALL SUBOPT_0x209
                 ; 0014 0022     if(res < 0){    printDebug("<LOG_insertData> LOG_getLastInsert() failed\r\n");      return -1;  }
00724f f44a      	BRPL _0x280009
                +
007250 eae8     +LDI R30 , LOW ( 2 * _0x280000 + ( 0 ) )
007251 e4fd     +LDI R31 , HIGH ( 2 * _0x280000 + ( 0 ) )
007252 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 0 ) )
007253 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 0 ) )
                 	__POINTD1FN _0x280000,0
007254 940e 9f66 	CALL SUBOPT_0x2
007256 efef      	LDI  R30,LOW(65535)
007257 efff      	LDI  R31,HIGH(65535)
007258 c074      	RJMP _0x20E003F
                 ; 0014 0023 
                 ; 0014 0024     flag            = 'P';
                 _0x280009:
007259 e530      	LDI  R19,LOW(80)
                 ; 0014 0025 
                 ; 0014 0026     startAddr       = index2Addr(index,SIZE_LOG_DATA);
00725a 940e ac28 	CALL SUBOPT_0x20A
00725c 940e ac2e 	CALL SUBOPT_0x20B
                 ; 0014 0027 
                 ; 0014 0028     res             = SD_writeData(file, startAddr+OFFSET_FLAG,         (unsigned char *) &flag,        SIZE_FLAG);
00725e 940e ac1c 	CALL SUBOPT_0x208
007260 940e ac32 	CALL SUBOPT_0x20C
007262 b7ed      	IN   R30,SPL
007263 b7fe      	IN   R31,SPH
007264 9731      	SBIW R30,1
007265 93fa      	ST   -Y,R31
007266 93ea      	ST   -Y,R30
007267 934f      	PUSH R20
007268 933f      	PUSH R19
007269 940e a244 	CALL SUBOPT_0x67
00726b ddd4      	RCALL _SD_writeData
00726c 913f      	POP  R19
00726d 914f      	POP  R20
00726e 018f      	MOVW R16,R30
                 ; 0014 0029     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(flag) failed\r\n");       return -1;  }
00726f 2311      	TST  R17
007270 f44a      	BRPL _0x28000A
                +
007271 ede6     +LDI R30 , LOW ( 2 * _0x280000 + ( 46 ) )
007272 e4fd     +LDI R31 , HIGH ( 2 * _0x280000 + ( 46 ) )
007273 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 46 ) )
007274 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 46 ) )
                 	__POINTD1FN _0x280000,46
007275 940e 9f66 	CALL SUBOPT_0x2
007277 efef      	LDI  R30,LOW(65535)
007278 efff      	LDI  R31,HIGH(65535)
007279 c053      	RJMP _0x20E003F
                 ; 0014 002A 
                 ; 0014 002B     res             = SD_writeData(file, startAddr+OFFSET_TIMESTAMP,    (unsigned char *) &timestamp,   SIZE_TIMESTAMP);
                 _0x28000A:
00727a 940e ac1c 	CALL SUBOPT_0x208
00727c 940e ac37 	CALL SUBOPT_0x20D
00727e 940e b62a 	CALL __PUTPARD1
007280 01fe      	MOVW R30,R28
007281 9678      	ADIW R30,24
007282 940e ac3b 	CALL SUBOPT_0x20E
007284 940e ac3f 	CALL SUBOPT_0x20F
                 ; 0014 002C     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(timestamp) failed\r\n");  return -1;  }
007286 f44a      	BRPL _0x28000B
                +
007287 e0e3     +LDI R30 , LOW ( 2 * _0x280000 + ( 91 ) )
007288 e4fe     +LDI R31 , HIGH ( 2 * _0x280000 + ( 91 ) )
007289 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 91 ) )
00728a e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 91 ) )
                 	__POINTD1FN _0x280000,91
00728b 940e 9f66 	CALL SUBOPT_0x2
00728d efef      	LDI  R30,LOW(65535)
00728e efff      	LDI  R31,HIGH(65535)
00728f c03d      	RJMP _0x20E003F
                 ; 0014 002D 
                 ; 0014 002E     res             = SD_writeData(file, startAddr+OFFSET_DATA_CHANNEL, (unsigned char *) &channel,     SIZE_CHANNEL);
                 _0x28000B:
007290 940e ac1c 	CALL SUBOPT_0x208
007292 940e ac44 	CALL SUBOPT_0x210
007294 940e aafe 	CALL SUBOPT_0x1DB
007296 940e a23d 	CALL SUBOPT_0x65
007298 940e ac3f 	CALL SUBOPT_0x20F
                 ; 0014 002F     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(channel) failed\r\n");    return -1;  }
00729a f44a      	BRPL _0x28000C
                +
00729b e3e5     +LDI R30 , LOW ( 2 * _0x280000 + ( 141 ) )
00729c e4fe     +LDI R31 , HIGH ( 2 * _0x280000 + ( 141 ) )
00729d e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 141 ) )
00729e e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 141 ) )
                 	__POINTD1FN _0x280000,141
00729f 940e 9f66 	CALL SUBOPT_0x2
0072a1 efef      	LDI  R30,LOW(65535)
0072a2 efff      	LDI  R31,HIGH(65535)
0072a3 c029      	RJMP _0x20E003F
                 ; 0014 0030 
                 ; 0014 0031     res             = SD_writeData(file, startAddr+OFFSET_DATA_VALUE,   (unsigned char *) &value,       SIZE_VALUE);
                 _0x28000C:
0072a4 940e ac1c 	CALL SUBOPT_0x208
0072a6 940e ac4d 	CALL SUBOPT_0x211
0072a8 940e a1e9 	CALL SUBOPT_0x5C
0072aa 940e a24a 	CALL SUBOPT_0x69
0072ac 940e ac3f 	CALL SUBOPT_0x20F
                 ; 0014 0032     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(value) failed\r\n");      return -1;  }
0072ae f44a      	BRPL _0x28000D
                +
0072af e6e5     +LDI R30 , LOW ( 2 * _0x280000 + ( 189 ) )
0072b0 e4fe     +LDI R31 , HIGH ( 2 * _0x280000 + ( 189 ) )
0072b1 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 189 ) )
0072b2 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 189 ) )
                 	__POINTD1FN _0x280000,189
0072b3 940e 9f66 	CALL SUBOPT_0x2
0072b5 efef      	LDI  R30,LOW(65535)
0072b6 efff      	LDI  R31,HIGH(65535)
0072b7 c015      	RJMP _0x20E003F
                 ; 0014 0033 
                 ; 0014 0034     res = LOG_setLastInsert(file,++index);
                 _0x28000D:
0072b8 940e ac1c 	CALL SUBOPT_0x208
0072ba 940e ac56 	CALL SUBOPT_0x212
                 ; 0014 0035     if(res < 0){    printDebug("<LOG_insertData> LOG_setLastInsert(%ld) failed\r\n",index);      return -1;  }
0072bc f45a      	BRPL _0x28000E
                +
0072bd e9e3     +LDI R30 , LOW ( 2 * _0x280000 + ( 235 ) )
0072be e4fe     +LDI R31 , HIGH ( 2 * _0x280000 + ( 235 ) )
0072bf e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 235 ) )
0072c0 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 235 ) )
                 	__POINTD1FN _0x280000,235
0072c1 940e a2c2 	CALL SUBOPT_0x7B
0072c3 940e a8c3 	CALL SUBOPT_0x174
0072c5 efef      	LDI  R30,LOW(65535)
0072c6 efff      	LDI  R31,HIGH(65535)
0072c7 c005      	RJMP _0x20E003F
                 ; 0014 0036 
                 ; 0014 0037     isDataLogEmpty  = 0;
                 _0x28000E:
0072c8 e0e0      	LDI  R30,LOW(0)
0072c9 93e0 14dd 	STS  _isDataLogEmpty,R30
                 ; 0014 0038     return index;
0072cb 85e8      	LDD  R30,Y+8
0072cc 85f9      	LDD  R31,Y+8+1
                 _0x20E003F:
0072cd 940e b6a3 	CALL __LOADLOCR4
0072cf 9668      	ADIW R28,24
0072d0 9508      	RET
                 ; 0014 0039 }
                 ;/*============================================================*/
                 ;int LOG_readData(FIL *file, unsigned long int *timestamp, unsigned int *channel, float *value, unsigned long int *index)
                 ; 0014 003C {
                 _LOG_readData:
                 ; 0014 003D     int                 res;
                 ; 0014 003E     unsigned long int   lastLogInsert;
                 ; 0014 003F     unsigned long int   lastLogSend;
                 ; 0014 0040     unsigned long int   startAddr;
                 ; 0014 0041     unsigned char       flag;
                 ; 0014 0042 
                 ; 0014 0043 
                 ; 0014 0044     res             = LOG_getLastInsert(file, &lastLogInsert);
0072d1 940e a4f8 	CALL SUBOPT_0xD4
                 ;	*file -> Y+24
                 ;	*timestamp -> Y+22
                 ;	*channel -> Y+20
                 ;	*value -> Y+18
                 ;	*index -> Y+16
                 ;	res -> R16,R17
                 ;	lastLogInsert -> Y+12
                 ;	lastLogSend -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
0072d3 940e ac62 	CALL SUBOPT_0x213
0072d5 940e ac67 	CALL SUBOPT_0x214
                 ; 0014 0045     if(res < 0){    printDebug("<LOG_readData> LOG_getLastInsert() failed\r\n");        return -1;  }
0072d7 f44a      	BRPL _0x28000F
                +
0072d8 ece4     +LDI R30 , LOW ( 2 * _0x280000 + ( 284 ) )
0072d9 e4fe     +LDI R31 , HIGH ( 2 * _0x280000 + ( 284 ) )
0072da e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 284 ) )
0072db e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 284 ) )
                 	__POINTD1FN _0x280000,284
0072dc 940e 9f66 	CALL SUBOPT_0x2
0072de efef      	LDI  R30,LOW(65535)
0072df efff      	LDI  R31,HIGH(65535)
0072e0 c1b7      	RJMP _0x20E003C
                 ; 0014 0046     res             = LOG_getLastSend(file, &lastLogSend);
                 _0x28000F:
0072e1 940e ac62 	CALL SUBOPT_0x213
0072e3 940e ac6e 	CALL SUBOPT_0x215
                 ; 0014 0047     if(res < 0){    printDebug("<LOG_readData> LOG_getLastSend() failed\r\n");          return -1;  }
0072e5 f44a      	BRPL _0x280010
                +
0072e6 efe0     +LDI R30 , LOW ( 2 * _0x280000 + ( 328 ) )
0072e7 e4fe     +LDI R31 , HIGH ( 2 * _0x280000 + ( 328 ) )
0072e8 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 328 ) )
0072e9 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 328 ) )
                 	__POINTD1FN _0x280000,328
0072ea 940e 9f66 	CALL SUBOPT_0x2
0072ec efef      	LDI  R30,LOW(65535)
0072ed efff      	LDI  R31,HIGH(65535)
0072ee c1a9      	RJMP _0x20E003C
                 ; 0014 0048 
                 ; 0014 0049     printDebug("<LOG_readEvent> lastSend/lastInsert  --> %ld/%ld\r\n",lastLogSend,lastLogInsert);
                 _0x280010:
0072ef 940e ac75 	CALL SUBOPT_0x216
0072f1 940e ac7b 	CALL SUBOPT_0x217
                 ; 0014 004A 
                 ; 0014 004B     if(lastLogSend >= lastLogInsert)
0072f3 940e ac81 	CALL SUBOPT_0x218
0072f5 f0a8      	BRLO _0x280011
                 ; 0014 004C     {
                 ; 0014 004D         printDebug("<LOG_readData> Log empty..!!\r\n");
                +
0072f6 e4ed     +LDI R30 , LOW ( 2 * _0x280000 + ( 421 ) )
0072f7 e4ff     +LDI R31 , HIGH ( 2 * _0x280000 + ( 421 ) )
0072f8 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 421 ) )
0072f9 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 421 ) )
                 	__POINTD1FN _0x280000,421
0072fa 940e 9f66 	CALL SUBOPT_0x2
                 ; 0014 004E 
                 ; 0014 004F         res = LOG_createFile(LOGFILE_DATA,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
0072fc 940e ac88 	CALL SUBOPT_0x219
                 ; 0014 0050         if(res < 0)
0072fe f432      	BRPL _0x280012
                 ; 0014 0051         {
                 ; 0014 0052             printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
                +
0072ff e6ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 452 ) )
007300 e4ff     +LDI R31 , HIGH ( 2 * _0x280000 + ( 452 ) )
007301 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 452 ) )
007302 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 452 ) )
                 	__POINTD1FN _0x280000,452
007303 940e a190 	CALL SUBOPT_0x4F
                 ; 0014 0053         }
                 ; 0014 0054 
                 ; 0014 0055         isDataLogEmpty  = 1;
                 _0x280012:
007305 e0e1      	LDI  R30,LOW(1)
007306 93e0 14dd 	STS  _isDataLogEmpty,R30
                 ; 0014 0056         return 0;
007308 e0e0      	LDI  R30,LOW(0)
007309 e0f0      	LDI  R31,HIGH(0)
00730a c18d      	RJMP _0x20E003C
                 ; 0014 0057     }
                 ; 0014 0058 
                 ; 0014 0059     startAddr       = index2Addr(lastLogSend,SIZE_LOG_DATA);
                 _0x280011:
00730b 940e ac28 	CALL SUBOPT_0x20A
00730d 940e ac2e 	CALL SUBOPT_0x20B
                 ; 0014 005A 
                 ; 0014 005B     res             = SD_readData(file, startAddr+OFFSET_FLAG,          (unsigned char *) &flag,        SIZE_FLAG);
00730f 940e ac62 	CALL SUBOPT_0x213
007311 940e ac32 	CALL SUBOPT_0x20C
007313 b7ed      	IN   R30,SPL
007314 b7fe      	IN   R31,SPH
007315 9731      	SBIW R30,1
007316 93fa      	ST   -Y,R31
007317 93ea      	ST   -Y,R30
007318 934f      	PUSH R20
007319 933f      	PUSH R19
00731a 940e a244 	CALL SUBOPT_0x67
00731c dd75      	RCALL _SD_readData
00731d 913f      	POP  R19
00731e 914f      	POP  R20
00731f 018f      	MOVW R16,R30
                 ; 0014 005C     if(res < 0){    printDebug("<LOG_readData> SD_readData(flag) failed\r\n");          return -1;  }
007320 2311      	TST  R17
007321 f44a      	BRPL _0x280013
                +
007322 e9ed     +LDI R30 , LOW ( 2 * _0x280000 + ( 501 ) )
007323 e4ff     +LDI R31 , HIGH ( 2 * _0x280000 + ( 501 ) )
007324 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 501 ) )
007325 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 501 ) )
                 	__POINTD1FN _0x280000,501
007326 940e 9f66 	CALL SUBOPT_0x2
007328 efef      	LDI  R30,LOW(65535)
007329 efff      	LDI  R31,HIGH(65535)
00732a c16d      	RJMP _0x20E003C
                 ; 0014 005D 
                 ; 0014 005E     res             = SD_readData(file, startAddr+OFFSET_TIMESTAMP,     (unsigned char *) timestamp,    SIZE_TIMESTAMP);
                 _0x280013:
00732b 940e ac62 	CALL SUBOPT_0x213
00732d 940e ac37 	CALL SUBOPT_0x20D
00732f 940e a51f 	CALL SUBOPT_0xDC
007331 940e ac3b 	CALL SUBOPT_0x20E
007333 940e ac99 	CALL SUBOPT_0x21A
                 ; 0014 005F     if(res < 0){    printDebug("<LOG_readData> SD_readData(timestamp) failed\r\n");     return -1;  }
007335 f44a      	BRPL _0x280014
                +
007336 ece7     +LDI R30 , LOW ( 2 * _0x280000 + ( 543 ) )
007337 e4ff     +LDI R31 , HIGH ( 2 * _0x280000 + ( 543 ) )
007338 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 543 ) )
007339 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 543 ) )
                 	__POINTD1FN _0x280000,543
00733a 940e 9f66 	CALL SUBOPT_0x2
00733c efef      	LDI  R30,LOW(65535)
00733d efff      	LDI  R31,HIGH(65535)
00733e c159      	RJMP _0x20E003C
                 ; 0014 0060 
                 ; 0014 0061     res             = SD_readData(file, startAddr+OFFSET_DATA_CHANNEL, (unsigned char *) channel,       SIZE_CHANNEL);
                 _0x280014:
00733f 940e ac62 	CALL SUBOPT_0x213
007341 940e ac44 	CALL SUBOPT_0x210
007343 8dea      	LDD  R30,Y+26
007344 8dfb      	LDD  R31,Y+26+1
007345 93fa      	ST   -Y,R31
007346 93ea      	ST   -Y,R30
007347 940e a23d 	CALL SUBOPT_0x65
007349 940e ac99 	CALL SUBOPT_0x21A
                 ; 0014 0062     if(res < 0){    printDebug("<LOG_readData> SD_readData(channel) failed\r\n");       return -1;  }
00734b f44a      	BRPL _0x280015
                +
00734c efe6     +LDI R30 , LOW ( 2 * _0x280000 + ( 590 ) )
00734d e4ff     +LDI R31 , HIGH ( 2 * _0x280000 + ( 590 ) )
00734e e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 590 ) )
00734f e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 590 ) )
                 	__POINTD1FN _0x280000,590
007350 940e 9f66 	CALL SUBOPT_0x2
007352 efef      	LDI  R30,LOW(65535)
007353 efff      	LDI  R31,HIGH(65535)
007354 c143      	RJMP _0x20E003C
                 ; 0014 0063 
                 ; 0014 0064     res             = SD_readData(file, startAddr+OFFSET_DATA_VALUE,    (unsigned char *) value,        SIZE_VALUE);
                 _0x280015:
007355 940e ac62 	CALL SUBOPT_0x213
007357 940e ac4d 	CALL SUBOPT_0x211
007359 8de8      	LDD  R30,Y+24
00735a 8df9      	LDD  R31,Y+24+1
00735b 940e ac3b 	CALL SUBOPT_0x20E
00735d 940e ac99 	CALL SUBOPT_0x21A
                 ; 0014 0065     if(res < 0){    printDebug("<LOG_readData> SD_readData(value) failed\r\n");         return -1;  }
00735f f44a      	BRPL _0x280016
                +
007360 e2e3     +LDI R30 , LOW ( 2 * _0x280000 + ( 635 ) )
007361 e5f0     +LDI R31 , HIGH ( 2 * _0x280000 + ( 635 ) )
007362 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 635 ) )
007363 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 635 ) )
                 	__POINTD1FN _0x280000,635
007364 940e 9f66 	CALL SUBOPT_0x2
007366 efef      	LDI  R30,LOW(65535)
007367 efff      	LDI  R31,HIGH(65535)
007368 c12f      	RJMP _0x20E003C
                 ; 0014 0066 
                 ; 0014 0067     *index          = lastLogSend;
                 _0x280016:
007369 c124      	RJMP _0x20E003D
                 ; 0014 0068 
                 ; 0014 0069     return 1;
                 ; 0014 006A }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Event Log Management *********************/
                 ;/**************************************************************/
                 ;char isEventLogEmpty    = 0;
                 ;/*============================================================*/
                 ;int LOG_insertEvent(FIL *file, unsigned long int timestamp, unsigned char id, unsigned char status)
                 ; 0014 0073 {
                 _LOG_insertEvent:
                 ; 0014 0074     int                 res;
                 ; 0014 0075     unsigned long int   index;
                 ; 0014 0076     unsigned long int   startAddr;
                 ; 0014 0077     unsigned char       flag;
                 ; 0014 0078 
                 ; 0014 0079     res = LOG_getLastInsert(file, &index);
00736a 93aa      	ST   -Y,R26
00736b 9728      	SBIW R28,8
00736c 940e b69c 	CALL __SAVELOCR4
                 ;	*file -> Y+18
                 ;	timestamp -> Y+14
                 ;	id -> Y+13
                 ;	status -> Y+12
                 ;	res -> R16,R17
                 ;	index -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
00736e 940e ac9e 	CALL SUBOPT_0x21B
007370 940e ac21 	CALL SUBOPT_0x209
                 ; 0014 007A     if(res < 0){    printDebug("<LOG_insertEvent> LOG_getLastInsert() failed\r\n");     return -1;  }
007372 f44a      	BRPL _0x280017
                +
007373 e4ee     +LDI R30 , LOW ( 2 * _0x280000 + ( 678 ) )
007374 e5f0     +LDI R31 , HIGH ( 2 * _0x280000 + ( 678 ) )
007375 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 678 ) )
007376 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 678 ) )
                 	__POINTD1FN _0x280000,678
007377 940e 9f66 	CALL SUBOPT_0x2
007379 efef      	LDI  R30,LOW(65535)
00737a efff      	LDI  R31,HIGH(65535)
00737b c076      	RJMP _0x20E003E
                 ; 0014 007B 
                 ; 0014 007C     flag            = 'P';
                 _0x280017:
00737c e530      	LDI  R19,LOW(80)
                 ; 0014 007D 
                 ; 0014 007E     startAddr       = index2Addr(index,SIZE_LOG_EVENT);
00737d 940e aca3 	CALL SUBOPT_0x21C
00737f 940e ac2e 	CALL SUBOPT_0x20B
                 ; 0014 007F 
                 ; 0014 0080     res             = SD_writeData(file, startAddr+OFFSET_FLAG,         (unsigned char *) &flag,        SIZE_FLAG);
007381 940e ac9e 	CALL SUBOPT_0x21B
007383 940e ac32 	CALL SUBOPT_0x20C
007385 b7ed      	IN   R30,SPL
007386 b7fe      	IN   R31,SPH
007387 9731      	SBIW R30,1
007388 93fa      	ST   -Y,R31
007389 93ea      	ST   -Y,R30
00738a 934f      	PUSH R20
00738b 933f      	PUSH R19
00738c 940e a244 	CALL SUBOPT_0x67
00738e dcb1      	RCALL _SD_writeData
00738f 913f      	POP  R19
007390 914f      	POP  R20
007391 018f      	MOVW R16,R30
                 ; 0014 0081     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(flag) failed\r\n");      return -1;  }
007392 2311      	TST  R17
007393 f44a      	BRPL _0x280018
                +
007394 e7ed     +LDI R30 , LOW ( 2 * _0x280000 + ( 725 ) )
007395 e5f0     +LDI R31 , HIGH ( 2 * _0x280000 + ( 725 ) )
007396 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 725 ) )
007397 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 725 ) )
                 	__POINTD1FN _0x280000,725
007398 940e 9f66 	CALL SUBOPT_0x2
00739a efef      	LDI  R30,LOW(65535)
00739b efff      	LDI  R31,HIGH(65535)
00739c c055      	RJMP _0x20E003E
                 ; 0014 0082 
                 ; 0014 0083     res             = SD_writeData(file, startAddr+OFFSET_TIMESTAMP,    (unsigned char *) &timestamp,   SIZE_TIMESTAMP);
                 _0x280018:
00739d 940e ac9e 	CALL SUBOPT_0x21B
00739f 940e ac37 	CALL SUBOPT_0x20D
0073a1 940e b62a 	CALL __PUTPARD1
0073a3 01fe      	MOVW R30,R28
0073a4 9674      	ADIW R30,20
0073a5 940e ac3b 	CALL SUBOPT_0x20E
0073a7 940e ac3f 	CALL SUBOPT_0x20F
                 ; 0014 0084     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(timestamp) failed\r\n"); return -1;  }
0073a9 f44a      	BRPL _0x280019
                +
0073aa eaeb     +LDI R30 , LOW ( 2 * _0x280000 + ( 771 ) )
0073ab e5f0     +LDI R31 , HIGH ( 2 * _0x280000 + ( 771 ) )
0073ac e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 771 ) )
0073ad e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 771 ) )
                 	__POINTD1FN _0x280000,771
0073ae 940e 9f66 	CALL SUBOPT_0x2
0073b0 efef      	LDI  R30,LOW(65535)
0073b1 efff      	LDI  R31,HIGH(65535)
0073b2 c03f      	RJMP _0x20E003E
                 ; 0014 0085 
                 ; 0014 0086     res             = SD_writeData(file, startAddr+OFFSET_EVENT_ID,     (unsigned char *) &id,          SIZE_ID);
                 _0x280019:
0073b3 940e ac9e 	CALL SUBOPT_0x21B
0073b5 940e ac44 	CALL SUBOPT_0x210
0073b7 01fe      	MOVW R30,R28
0073b8 9673      	ADIW R30,19
0073b9 93fa      	ST   -Y,R31
0073ba 93ea      	ST   -Y,R30
0073bb 940e a244 	CALL SUBOPT_0x67
0073bd 940e ac3f 	CALL SUBOPT_0x20F
                 ; 0014 0087     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(id) failed\r\n");        return -1;  }
0073bf f44a      	BRPL _0x28001A
                +
0073c0 edee     +LDI R30 , LOW ( 2 * _0x280000 + ( 822 ) )
0073c1 e5f0     +LDI R31 , HIGH ( 2 * _0x280000 + ( 822 ) )
0073c2 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 822 ) )
0073c3 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 822 ) )
                 	__POINTD1FN _0x280000,822
0073c4 940e 9f66 	CALL SUBOPT_0x2
0073c6 efef      	LDI  R30,LOW(65535)
0073c7 efff      	LDI  R31,HIGH(65535)
0073c8 c029      	RJMP _0x20E003E
                 ; 0014 0088 
                 ; 0014 0089     res             = SD_writeData(file, startAddr+OFFSET_EVENT_STATUS, (unsigned char *) &status,      SIZE_STATUS);
                 _0x28001A:
0073c9 940e ac9e 	CALL SUBOPT_0x21B
0073cb 940e aca9 	CALL SUBOPT_0x21D
0073cd 940e a1e9 	CALL SUBOPT_0x5C
0073cf 940e a244 	CALL SUBOPT_0x67
0073d1 940e ac3f 	CALL SUBOPT_0x20F
                 ; 0014 008A     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(status) failed\r\n");    return -1;  }
0073d3 f44a      	BRPL _0x28001B
                +
0073d4 e0ea     +LDI R30 , LOW ( 2 * _0x280000 + ( 866 ) )
0073d5 e5f1     +LDI R31 , HIGH ( 2 * _0x280000 + ( 866 ) )
0073d6 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 866 ) )
0073d7 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 866 ) )
                 	__POINTD1FN _0x280000,866
0073d8 940e 9f66 	CALL SUBOPT_0x2
0073da efef      	LDI  R30,LOW(65535)
0073db efff      	LDI  R31,HIGH(65535)
0073dc c015      	RJMP _0x20E003E
                 ; 0014 008B 
                 ; 0014 008C     res = LOG_setLastInsert(file,++index);
                 _0x28001B:
0073dd 940e ac9e 	CALL SUBOPT_0x21B
0073df 940e ac56 	CALL SUBOPT_0x212
                 ; 0014 008D     if(res < 0){    printDebug("<LOG_insertEvent> LOG_setLastInsert(%ld) failed\r\n",index);     return -1;  }
0073e1 f45a      	BRPL _0x28001C
                +
0073e2 e3ea     +LDI R30 , LOW ( 2 * _0x280000 + ( 914 ) )
0073e3 e5f1     +LDI R31 , HIGH ( 2 * _0x280000 + ( 914 ) )
0073e4 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 914 ) )
0073e5 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 914 ) )
                 	__POINTD1FN _0x280000,914
0073e6 940e a2c2 	CALL SUBOPT_0x7B
0073e8 940e a8c3 	CALL SUBOPT_0x174
0073ea efef      	LDI  R30,LOW(65535)
0073eb efff      	LDI  R31,HIGH(65535)
0073ec c005      	RJMP _0x20E003E
                 ; 0014 008E 
                 ; 0014 008F     isEventLogEmpty = 0;
                 _0x28001C:
0073ed e0e0      	LDI  R30,LOW(0)
0073ee 93e0 14de 	STS  _isEventLogEmpty,R30
                 ; 0014 0090 
                 ; 0014 0091     return index;
0073f0 85e8      	LDD  R30,Y+8
0073f1 85f9      	LDD  R31,Y+8+1
                 _0x20E003E:
0073f2 940e b6a3 	CALL __LOADLOCR4
0073f4 9664      	ADIW R28,20
0073f5 9508      	RET
                 ; 0014 0092 }
                 ;/*============================================================*/
                 ;int LOG_readEvent(FIL *file, unsigned long int *timestamp, unsigned char *id, unsigned char *status, unsigned long int *index)
                 ; 0014 0095 {
                 _LOG_readEvent:
                 ; 0014 0096     int                 res;
                 ; 0014 0097     unsigned long int   lastLogInsert;
                 ; 0014 0098     unsigned long int   lastLogSend;
                 ; 0014 0099     unsigned long int   startAddr;
                 ; 0014 009A     unsigned char       flag;
                 ; 0014 009B 
                 ; 0014 009C 
                 ; 0014 009D     res             = LOG_getLastInsert(file, &lastLogInsert);
0073f6 940e a4f8 	CALL SUBOPT_0xD4
                 ;	*file -> Y+24
                 ;	*timestamp -> Y+22
                 ;	*id -> Y+20
                 ;	*status -> Y+18
                 ;	*index -> Y+16
                 ;	res -> R16,R17
                 ;	lastLogInsert -> Y+12
                 ;	lastLogSend -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
0073f8 940e ac62 	CALL SUBOPT_0x213
0073fa 940e ac67 	CALL SUBOPT_0x214
                 ; 0014 009E     if(res < 0){    printDebug("<LOG_readEvent> LOG_getLastInsert() failed\r\n");       return -1;  }
0073fc f44a      	BRPL _0x28001D
                +
0073fd e6ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 964 ) )
0073fe e5f1     +LDI R31 , HIGH ( 2 * _0x280000 + ( 964 ) )
0073ff e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 964 ) )
007400 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 964 ) )
                 	__POINTD1FN _0x280000,964
007401 940e 9f66 	CALL SUBOPT_0x2
007403 efef      	LDI  R30,LOW(65535)
007404 efff      	LDI  R31,HIGH(65535)
007405 c092      	RJMP _0x20E003C
                 ; 0014 009F     res             = LOG_getLastSend(file, &lastLogSend);
                 _0x28001D:
007406 940e ac62 	CALL SUBOPT_0x213
007408 940e ac6e 	CALL SUBOPT_0x215
                 ; 0014 00A0     if(res < 0){    printDebug("<LOG_readEvent> LOG_getLastSend() failed\r\n");         return -1;  }
00740a f44a      	BRPL _0x28001E
                +
00740b e9e9     +LDI R30 , LOW ( 2 * _0x280000 + ( 1009 ) )
00740c e5f1     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1009 ) )
00740d e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1009 ) )
00740e e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1009 ) )
                 	__POINTD1FN _0x280000,1009
00740f 940e 9f66 	CALL SUBOPT_0x2
007411 efef      	LDI  R30,LOW(65535)
007412 efff      	LDI  R31,HIGH(65535)
007413 c084      	RJMP _0x20E003C
                 ; 0014 00A1 
                 ; 0014 00A2     printDebug("<LOG_readEvent> lastSend/lastInsert  --> %ld/%ld\r\n",lastLogSend,lastLogInsert);
                 _0x28001E:
007414 940e ac75 	CALL SUBOPT_0x216
007416 940e ac7b 	CALL SUBOPT_0x217
                 ; 0014 00A3 
                 ; 0014 00A4     if(lastLogSend >= lastLogInsert)
007418 940e ac81 	CALL SUBOPT_0x218
00741a f0a8      	BRLO _0x28001F
                 ; 0014 00A5     {
                 ; 0014 00A6         printDebug("<LOG_readEvent> Log empty..!!\r\n");
                +
00741b ece4     +LDI R30 , LOW ( 2 * _0x280000 + ( 1052 ) )
00741c e5f1     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1052 ) )
00741d e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1052 ) )
00741e e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1052 ) )
                 	__POINTD1FN _0x280000,1052
00741f 940e 9f66 	CALL SUBOPT_0x2
                 ; 0014 00A7 
                 ; 0014 00A8         res = LOG_createFile(LOGFILE_EVENT,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
007421 940e acb2 	CALL SUBOPT_0x21E
                 ; 0014 00A9         if(res < 0)
007423 f432      	BRPL _0x280020
                 ; 0014 00AA         {
                 ; 0014 00AB             printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
                +
007424 e6ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 452 ) )
007425 e4ff     +LDI R31 , HIGH ( 2 * _0x280000 + ( 452 ) )
007426 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 452 ) )
007427 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 452 ) )
                 	__POINTD1FN _0x280000,452
007428 940e a1db 	CALL SUBOPT_0x5A
                 ; 0014 00AC         }
                 ; 0014 00AD 
                 ; 0014 00AE         isEventLogEmpty     = 1;
                 _0x280020:
00742a e0e1      	LDI  R30,LOW(1)
00742b 93e0 14de 	STS  _isEventLogEmpty,R30
                 ; 0014 00AF         return 0;
00742d e0e0      	LDI  R30,LOW(0)
00742e e0f0      	LDI  R31,HIGH(0)
00742f c068      	RJMP _0x20E003C
                 ; 0014 00B0     }
                 ; 0014 00B1 
                 ; 0014 00B2     startAddr       = index2Addr(lastLogSend,SIZE_LOG_EVENT);
                 _0x28001F:
007430 940e aca3 	CALL SUBOPT_0x21C
007432 940e ac2e 	CALL SUBOPT_0x20B
                 ; 0014 00B3 
                 ; 0014 00B4     res             = SD_readData(file, startAddr+OFFSET_FLAG,          (unsigned char *) &flag,        SIZE_FLAG);
007434 940e ac62 	CALL SUBOPT_0x213
007436 940e ac32 	CALL SUBOPT_0x20C
007438 b7ed      	IN   R30,SPL
007439 b7fe      	IN   R31,SPH
00743a 9731      	SBIW R30,1
00743b 93fa      	ST   -Y,R31
00743c 93ea      	ST   -Y,R30
00743d 934f      	PUSH R20
00743e 933f      	PUSH R19
00743f 940e a244 	CALL SUBOPT_0x67
007441 dc50      	RCALL _SD_readData
007442 913f      	POP  R19
007443 914f      	POP  R20
007444 018f      	MOVW R16,R30
                 ; 0014 00B5     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(flag) failed\r\n");         return -1;  }
007445 2311      	TST  R17
007446 f44a      	BRPL _0x280021
                +
007447 eee4     +LDI R30 , LOW ( 2 * _0x280000 + ( 1084 ) )
007448 e5f1     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1084 ) )
007449 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1084 ) )
00744a e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1084 ) )
                 	__POINTD1FN _0x280000,1084
00744b 940e 9f66 	CALL SUBOPT_0x2
00744d efef      	LDI  R30,LOW(65535)
00744e efff      	LDI  R31,HIGH(65535)
00744f c048      	RJMP _0x20E003C
                 ; 0014 00B6 
                 ; 0014 00B7     res             = SD_readData(file, startAddr+OFFSET_TIMESTAMP,     (unsigned char *) timestamp,    SIZE_TIMESTAMP);
                 _0x280021:
007450 940e ac62 	CALL SUBOPT_0x213
007452 940e ac37 	CALL SUBOPT_0x20D
007454 940e a51f 	CALL SUBOPT_0xDC
007456 940e ac3b 	CALL SUBOPT_0x20E
007458 940e ac99 	CALL SUBOPT_0x21A
                 ; 0014 00B8     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(timestamp) failed\r\n");    return -1;  }
00745a f44a      	BRPL _0x280022
                +
00745b e0ef     +LDI R30 , LOW ( 2 * _0x280000 + ( 1127 ) )
00745c e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1127 ) )
00745d e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1127 ) )
00745e e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1127 ) )
                 	__POINTD1FN _0x280000,1127
00745f 940e 9f66 	CALL SUBOPT_0x2
007461 efef      	LDI  R30,LOW(65535)
007462 efff      	LDI  R31,HIGH(65535)
007463 c034      	RJMP _0x20E003C
                 ; 0014 00B9 
                 ; 0014 00BA     res             = SD_readData(file, startAddr+OFFSET_EVENT_ID,      (unsigned char *) id,           SIZE_ID);
                 _0x280022:
007464 940e ac62 	CALL SUBOPT_0x213
007466 940e ac44 	CALL SUBOPT_0x210
007468 8dea      	LDD  R30,Y+26
007469 8dfb      	LDD  R31,Y+26+1
00746a 93fa      	ST   -Y,R31
00746b 93ea      	ST   -Y,R30
00746c 940e a244 	CALL SUBOPT_0x67
00746e 940e ac99 	CALL SUBOPT_0x21A
                 ; 0014 00BB     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(id) failed\r\n");           return -1;  }
007470 f44a      	BRPL _0x280023
                +
007471 e3ef     +LDI R30 , LOW ( 2 * _0x280000 + ( 1175 ) )
007472 e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1175 ) )
007473 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1175 ) )
007474 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1175 ) )
                 	__POINTD1FN _0x280000,1175
007475 940e 9f66 	CALL SUBOPT_0x2
007477 efef      	LDI  R30,LOW(65535)
007478 efff      	LDI  R31,HIGH(65535)
007479 c01e      	RJMP _0x20E003C
                 ; 0014 00BC 
                 ; 0014 00BD     res             = SD_readData(file, startAddr+OFFSET_EVENT_STATUS,  (unsigned char *) status,       SIZE_STATUS);
                 _0x280023:
00747a 940e ac62 	CALL SUBOPT_0x213
00747c 940e aca9 	CALL SUBOPT_0x21D
00747e 940e ac62 	CALL SUBOPT_0x213
007480 940e a244 	CALL SUBOPT_0x67
007482 940e ac99 	CALL SUBOPT_0x21A
                 ; 0014 00BE     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(status) failed\r\n");       return -1;  }
007484 f44a      	BRPL _0x280024
                +
007485 e6e8     +LDI R30 , LOW ( 2 * _0x280000 + ( 1216 ) )
007486 e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1216 ) )
007487 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1216 ) )
007488 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1216 ) )
                 	__POINTD1FN _0x280000,1216
007489 940e 9f66 	CALL SUBOPT_0x2
00748b efef      	LDI  R30,LOW(65535)
00748c efff      	LDI  R31,HIGH(65535)
00748d c00a      	RJMP _0x20E003C
                 ; 0014 00BF 
                 ; 0014 00C0     *index  = lastLogSend;
                 _0x280024:
                 _0x20E003D:
                +
00748e 85e8     +LDD R30 , Y + 8
00748f 85f9     +LDD R31 , Y + 8 + 1
007490 856a     +LDD R22 , Y + 8 + 2
007491 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
007492 89a8      	LDD  R26,Y+16
007493 89b9      	LDD  R27,Y+16+1
007494 940e b605 	CALL __PUTDP1
                 ; 0014 00C1     return 1;
007496 e0e1      	LDI  R30,LOW(1)
007497 e0f0      	LDI  R31,HIGH(1)
                 _0x20E003C:
007498 940e b6a3 	CALL __LOADLOCR4
00749a 966a      	ADIW R28,26
00749b 9508      	RET
                 ; 0014 00C2 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Log Indexing Function ********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int LOG_getLastInsert(FIL *file, unsigned long int *index)
                 ; 0014 00CA {
                 _LOG_getLastInsert:
                 ; 0014 00CB     int             res;
                 ; 0014 00CC 
                 ; 0014 00CD     res = SD_readData(file, 0, (unsigned char *) index, sizeof(unsigned long int));
00749c 940e a285 	CALL SUBOPT_0x71
                 ;	*file -> Y+4
                 ;	*index -> Y+2
                 ;	res -> R16,R17
00749e 940e acc3 	CALL SUBOPT_0x21F
0074a0 940e acc8 	CALL SUBOPT_0x220
0074a2 940e a8ec 	CALL SUBOPT_0x17D
0074a4 940e a24a 	CALL SUBOPT_0x69
0074a6 940e ac99 	CALL SUBOPT_0x21A
                 ; 0014 00CE     if(res < 0)
0074a8 f452      	BRPL _0x280025
                 ; 0014 00CF     {
                 ; 0014 00D0         printDebug("<LOG_getLastInsert> SD_readData() failed\r\n");
                +
0074a9 e9e5     +LDI R30 , LOW ( 2 * _0x280000 + ( 1261 ) )
0074aa e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1261 ) )
0074ab e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1261 ) )
0074ac e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1261 ) )
                 	__POINTD1FN _0x280000,1261
0074ad 940e 9f66 	CALL SUBOPT_0x2
                 ; 0014 00D1         return -1;
0074af 940e a691 	CALL SUBOPT_0x11C
0074b1 940c 780c 	JMP  _0x20E0034
                 ; 0014 00D2     }
                 ; 0014 00D3 
                 ; 0014 00D4     printDebug("<LOG_getLastInsert> got %ld\r\n", *index);
                 _0x280025:
                +
0074b3 ece0     +LDI R30 , LOW ( 2 * _0x280000 + ( 1304 ) )
0074b4 e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1304 ) )
0074b5 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1304 ) )
0074b6 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1304 ) )
                 	__POINTD1FN _0x280000,1304
0074b7 940e a6e3 	CALL SUBOPT_0x12C
0074b9 940e a668 	CALL SUBOPT_0x114
                 ; 0014 00D5 
                 ; 0014 00D6     return 0;
0074bb 940e a48b 	CALL SUBOPT_0xC3
0074bd 940c 780c 	JMP  _0x20E0034
                 ; 0014 00D7 }
                 ;/*============================================================*/
                 ;int LOG_setLastInsert(FIL *file, unsigned long int index)
                 ; 0014 00DA {
                 _LOG_setLastInsert:
                 ; 0014 00DB     int             res;
                 ; 0014 00DC 
                 ; 0014 00DD     printDebug("<LOG_setLastInsert> writing %ld\r\n", index);
0074bf 940e aa4b 	CALL SUBOPT_0x1BE
                 ;	*file -> Y+6
                 ;	index -> Y+2
                 ;	res -> R16,R17
                +
0074c1 edee     +LDI R30 , LOW ( 2 * _0x280000 + ( 1334 ) )
0074c2 e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1334 ) )
0074c3 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1334 ) )
0074c4 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1334 ) )
                 	__POINTD1FN _0x280000,1334
0074c5 940e aa47 	CALL SUBOPT_0x1BD
                 ; 0014 00DE     print_payload((unsigned char *) &index, sizeof(unsigned long int));
0074c7 940e aa3e 	CALL SUBOPT_0x1BB
0074c9 940e a24a 	CALL SUBOPT_0x69
0074cb 940e a7b6 	CALL SUBOPT_0x14B
                 ; 0014 00DF 
                 ; 0014 00E0     res = SD_writeData(file, 0, (unsigned char *) &index, sizeof(unsigned long int));
0074cd 940e acc8 	CALL SUBOPT_0x220
0074cf 01fe      	MOVW R30,R28
0074d0 9638      	ADIW R30,8
0074d1 940e ac3b 	CALL SUBOPT_0x20E
0074d3 940e ac3f 	CALL SUBOPT_0x20F
                 ; 0014 00E1     if(res < 0)
0074d5 f452      	BRPL _0x280026
                 ; 0014 00E2     {
                 ; 0014 00E3         printDebug("<LOG_setLastInsert> SD_readData() failed\r\n");
                +
0074d6 e0e0     +LDI R30 , LOW ( 2 * _0x280000 + ( 1368 ) )
0074d7 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1368 ) )
0074d8 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1368 ) )
0074d9 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1368 ) )
                 	__POINTD1FN _0x280000,1368
0074da 940e 9f66 	CALL SUBOPT_0x2
                 ; 0014 00E4         return -1;
0074dc 940e a691 	CALL SUBOPT_0x11C
0074de 940c 78a6 	JMP  _0x20E0033
                 ; 0014 00E5     }
                 ; 0014 00E6 
                 ; 0014 00E7     return 0;
                 _0x280026:
0074e0 940e a48b 	CALL SUBOPT_0xC3
0074e2 940c 78a6 	JMP  _0x20E0033
                 ; 0014 00E8 }
                 ;/*============================================================*/
                 ;int LOG_getLastSend(FIL *file, unsigned long int *index)
                 ; 0014 00EB {
                 _LOG_getLastSend:
                 ; 0014 00EC     int             res;
                 ; 0014 00ED 
                 ; 0014 00EE     res = SD_readData(file, 4, (unsigned char *) index, sizeof(unsigned long int));
0074e4 940e a285 	CALL SUBOPT_0x71
                 ;	*file -> Y+4
                 ;	*index -> Y+2
                 ;	res -> R16,R17
0074e6 940e acc3 	CALL SUBOPT_0x21F
0074e8 940e accf 	CALL SUBOPT_0x221
0074ea 940e a8ec 	CALL SUBOPT_0x17D
0074ec 940e a24a 	CALL SUBOPT_0x69
0074ee 940e ac99 	CALL SUBOPT_0x21A
                 ; 0014 00EF     if(res < 0)
0074f0 f452      	BRPL _0x280027
                 ; 0014 00F0     {
                 ; 0014 00F1         printDebug("<LOG_getLastSend> SD_readData() failed\r\n");
                +
0074f1 e2eb     +LDI R30 , LOW ( 2 * _0x280000 + ( 1411 ) )
0074f2 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1411 ) )
0074f3 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1411 ) )
0074f4 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1411 ) )
                 	__POINTD1FN _0x280000,1411
0074f5 940e 9f66 	CALL SUBOPT_0x2
                 ; 0014 00F2         return -1;
0074f7 940e a691 	CALL SUBOPT_0x11C
0074f9 940c 780c 	JMP  _0x20E0034
                 ; 0014 00F3     }
                 ; 0014 00F4 
                 ; 0014 00F5     printDebug("<LOG_getLastSend> got %ld\r\n", *index);
                 _0x280027:
                +
0074fb e5e4     +LDI R30 , LOW ( 2 * _0x280000 + ( 1452 ) )
0074fc e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1452 ) )
0074fd e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1452 ) )
0074fe e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1452 ) )
                 	__POINTD1FN _0x280000,1452
0074ff 940e a6e3 	CALL SUBOPT_0x12C
007501 940e a668 	CALL SUBOPT_0x114
                 ; 0014 00F6 
                 ; 0014 00F7     return 0;
007503 940e a48b 	CALL SUBOPT_0xC3
007505 940c 780c 	JMP  _0x20E0034
                 ; 0014 00F8 }
                 ;/*============================================================*/
                 ;int LOG_setLastSend(FIL *file, unsigned long int index)
                 ; 0014 00FB {
                 _LOG_setLastSend:
                 ; 0014 00FC     int             res;
                 ; 0014 00FD 
                 ; 0014 00FE     printDebug("<LOG_setLastSend> writing %ld\r\n", index);
007507 940e aa4b 	CALL SUBOPT_0x1BE
                 ;	*file -> Y+6
                 ;	index -> Y+2
                 ;	res -> R16,R17
                +
007509 e7e0     +LDI R30 , LOW ( 2 * _0x280000 + ( 1480 ) )
00750a e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1480 ) )
00750b e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1480 ) )
00750c e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1480 ) )
                 	__POINTD1FN _0x280000,1480
00750d 940e aa47 	CALL SUBOPT_0x1BD
                 ; 0014 00FF     print_payload((unsigned char *) &index, sizeof(unsigned long int));
00750f 940e aa3e 	CALL SUBOPT_0x1BB
007511 940e a24a 	CALL SUBOPT_0x69
007513 940e a7b6 	CALL SUBOPT_0x14B
                 ; 0014 0100 
                 ; 0014 0101     res = SD_writeData(file, 4, (unsigned char *) &index, sizeof(unsigned long int));
007515 940e accf 	CALL SUBOPT_0x221
007517 01fe      	MOVW R30,R28
007518 9638      	ADIW R30,8
007519 940e ac3b 	CALL SUBOPT_0x20E
00751b 940e ac3f 	CALL SUBOPT_0x20F
                 ; 0014 0102     if(res < 0)
00751d f452      	BRPL _0x280028
                 ; 0014 0103     {
                 ; 0014 0104         printDebug("<LOG_setLastSend> SD_readData() failed\r\n");
                +
00751e e9e0     +LDI R30 , LOW ( 2 * _0x280000 + ( 1512 ) )
00751f e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1512 ) )
007520 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1512 ) )
007521 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1512 ) )
                 	__POINTD1FN _0x280000,1512
007522 940e 9f66 	CALL SUBOPT_0x2
                 ; 0014 0105         return -1;
007524 940e a691 	CALL SUBOPT_0x11C
007526 940c 78a6 	JMP  _0x20E0033
                 ; 0014 0106     }
                 ; 0014 0107 
                 ; 0014 0108     return 0;
                 _0x280028:
007528 940e a48b 	CALL SUBOPT_0xC3
00752a 940c 78a6 	JMP  _0x20E0033
                 ; 0014 0109 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********************* Support Function ***********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;unsigned long int index2Addr(unsigned long int index,int recordSize)
                 ; 0014 0111 {
                 _index2Addr:
                 ; 0014 0112     unsigned long int address=0;
                 ; 0014 0113 
                 ; 0014 0114     address = ( index * recordSize ) + SIZE_LAST_LOG_INDEX + SIZE_LAST_LOG_SENT + SIZE_PADDING;
00752c 940e a9cc 	CALL SUBOPT_0x1A4
                 ;	index -> Y+6
                 ;	recordSize -> Y+4
                 ;	address -> Y+0
00752e 81ec      	LDD  R30,Y+4
00752f 81fd      	LDD  R31,Y+4+1
007530 940e a16e 	CALL SUBOPT_0x49
007532 940e ac0b 	CALL SUBOPT_0x205
                +
007534 5fe0     +SUBI R30 , LOW ( - 16 )
007535 4fff     +SBCI R31 , HIGH ( - 16 )
007536 4f6f     +SBCI R22 , BYTE3 ( - 16 )
007537 4f7f     +SBCI R23 , BYTE4 ( - 16 )
                 	__ADDD1N 16
007538 940e a34c 	CALL SUBOPT_0x8D
                 ; 0014 0115 
                 ; 0014 0116     return address;
00753a 940e a2a0 	CALL SUBOPT_0x75
00753c 962a      	ADIW R28,10
00753d 9508      	RET
                 ; 0014 0117 }
                 ;/*============================================================*/
                 ;int LOG_createFile(unsigned char *filename, unsigned char mode, unsigned char *initString, unsigned int len)
                 ; 0014 011A {
                 _LOG_createFile:
                 ; 0014 011B     FIL         file;
                 ; 0014 011C     int         res;
                 ; 0014 011D 
                 ; 0014 011E     res = SD_createFile(filename,mode);
00753e 93ba      	ST   -Y,R27
00753f 93aa      	ST   -Y,R26
007540 97a0      	SBIW R28,32
007541 50d2      	SUBI R29,2
007542 931a      	ST   -Y,R17
007543 930a      	ST   -Y,R16
                 ;	*filename -> Y+551
                 ;	mode -> Y+550
                 ;	*initString -> Y+548
                 ;	len -> Y+546
                 ;	file -> Y+2
                 ;	res -> R16,R17
                +
007544 01fe     +MOVW R30 , R28
007545 5de9     +SUBI R30 , LOW ( - 551 )
007546 4ffd     +SBCI R31 , HIGH ( - 551 )
007547 9001     +LD R0 , Z +
007548 81f0     +LD R31 , Z
007549 2de0     +MOV R30 , R0
                 	__GETW1SX 551
00754a 93fa      	ST   -Y,R31
00754b 93ea      	ST   -Y,R30
                +
00754c 01de     +MOVW R26 , R28
00754d 5da8     +SUBI R26 , LOW ( - 552 )
00754e 4fbd     +SBCI R27 , HIGH ( - 552 )
00754f 91ac     +LD R26 , X
                 	__GETB2SX 552
007550 dbdd      	RCALL _SD_createFile
007551 018f      	MOVW R16,R30
                 ; 0014 011F     if(res < 0){
007552 2311      	TST  R17
007553 f45a      	BRPL _0x280029
                 ; 0014 0120         printDebug("<LOG_createFile> SD_createFile(%s) failed\r\n",filename);
                +
007554 ebe9     +LDI R30 , LOW ( 2 * _0x280000 + ( 1553 ) )
007555 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1553 ) )
007556 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1553 ) )
007557 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1553 ) )
                 	__POINTD1FN _0x280000,1553
007558 940e acd6 	CALL SUBOPT_0x222
00755a 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0014 0121         return -1;
00755c efef      	LDI  R30,LOW(65535)
00755d efff      	LDI  R31,HIGH(65535)
00755e c075      	RJMP _0x20E003A
                 ; 0014 0122     }
                 ; 0014 0123     else if(res == 0)
                 _0x280029:
00755f 2e00      	MOV  R0,R16
007560 2a01      	OR   R0,R17
007561 f459      	BRNE _0x28002B
                 ; 0014 0124     {
                 ; 0014 0125         printDebug("<LOG_createFile> %s already exist\r\n", filename);
                +
007562 eee5     +LDI R30 , LOW ( 2 * _0x280000 + ( 1597 ) )
007563 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1597 ) )
007564 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1597 ) )
007565 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1597 ) )
                 	__POINTD1FN _0x280000,1597
007566 940e acd6 	CALL SUBOPT_0x222
007568 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0014 0126         return 0;
00756a e0e0      	LDI  R30,LOW(0)
00756b e0f0      	LDI  R31,HIGH(0)
00756c c067      	RJMP _0x20E003A
                 ; 0014 0127     }
                 ; 0014 0128     else
                 _0x28002B:
                 ; 0014 0129     {
                 ; 0014 012A         printDebug("<LOG_createFile> %s created\r\n", filename);
                +
00756d e0e9     +LDI R30 , LOW ( 2 * _0x280000 + ( 1633 ) )
00756e e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1633 ) )
00756f e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1633 ) )
007570 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1633 ) )
                 	__POINTD1FN _0x280000,1633
007571 940e acd6 	CALL SUBOPT_0x222
007573 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0014 012B         if(len == 0) // -- no initial data -- //
                +
007575 01fe     +MOVW R30 , R28
007576 5dee     +SUBI R30 , LOW ( - 546 )
007577 4ffd     +SBCI R31 , HIGH ( - 546 )
007578 9001     +LD R0 , Z +
007579 81f0     +LD R31 , Z
00757a 2de0     +MOV R30 , R0
                 	__GETW1SX 546
00757b 9730      	SBIW R30,0
00757c f439      	BRNE _0x28002D
                 ; 0014 012C         {
                 ; 0014 012D             printDebug("<LOG_createFile> %s contained no initial data\r\n");
                +
00757d e2e7     +LDI R30 , LOW ( 2 * _0x280000 + ( 1663 ) )
00757e e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1663 ) )
00757f e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1663 ) )
007580 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1663 ) )
                 	__POINTD1FN _0x280000,1663
007581 940e 9f66 	CALL SUBOPT_0x2
                 ; 0014 012E             return 1;
007583 c04e      	RJMP _0x20E003B
                 ; 0014 012F         }
                 ; 0014 0130 
                 ; 0014 0131         // -- write the file initial data -- //
                 ; 0014 0132         res = SD_openFile(&file,filename);
                 _0x28002D:
007584 940e aa3e 	CALL SUBOPT_0x1BB
                +
007586 01de     +MOVW R26 , R28
007587 5da7     +SUBI R26 , LOW ( - 553 )
007588 4fbd     +SBCI R27 , HIGH ( - 553 )
007589 900d     +LD R0 , X +
00758a 91bc     +LD R27 , X
00758b 2da0     +MOV R26 , R0
                 	__GETW2SX 553
00758c dbff      	RCALL _SD_openFile
00758d 018f      	MOVW R16,R30
                 ; 0014 0133         if(res < 0)
00758e 2311      	TST  R17
00758f f45a      	BRPL _0x28002E
                 ; 0014 0134         {
                 ; 0014 0135             printDebug("<LOG_createFile> SD_openFile(%s) failed\r\n",filename);
                +
007590 e5e7     +LDI R30 , LOW ( 2 * _0x280000 + ( 1711 ) )
007591 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1711 ) )
007592 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1711 ) )
007593 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1711 ) )
                 	__POINTD1FN _0x280000,1711
007594 940e acd6 	CALL SUBOPT_0x222
007596 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0014 0136             return -1;
007598 efef      	LDI  R30,LOW(65535)
007599 efff      	LDI  R31,HIGH(65535)
00759a c039      	RJMP _0x20E003A
                 ; 0014 0137         }
                 ; 0014 0138         else
                 _0x28002E:
                 ; 0014 0139         {
                 ; 0014 013A             printDebug("<LOG_createFile> writing initial data\r\n");
                +
00759b e8e1     +LDI R30 , LOW ( 2 * _0x280000 + ( 1753 ) )
00759c e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1753 ) )
00759d e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1753 ) )
00759e e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1753 ) )
                 	__POINTD1FN _0x280000,1753
00759f 940e 9f66 	CALL SUBOPT_0x2
                 ; 0014 013B             print_payload(initString,len);
0075a1 940e ace0 	CALL SUBOPT_0x223
                 ; 0014 013C             res = SD_writeData(&file,0,initString,len);
0075a3 940e aa3e 	CALL SUBOPT_0x1BB
0075a5 940e acc8 	CALL SUBOPT_0x220
                +
0075a7 01fe     +MOVW R30 , R28
0075a8 5de6     +SUBI R30 , LOW ( - 554 )
0075a9 4ffd     +SBCI R31 , HIGH ( - 554 )
0075aa 9001     +LD R0 , Z +
0075ab 81f0     +LD R31 , Z
0075ac 2de0     +MOV R30 , R0
                 	__GETW1SX 554
0075ad 93fa      	ST   -Y,R31
0075ae 93ea      	ST   -Y,R30
                +
0075af 01de     +MOVW R26 , R28
0075b0 5da6     +SUBI R26 , LOW ( - 554 )
0075b1 4fbd     +SBCI R27 , HIGH ( - 554 )
0075b2 900d     +LD R0 , X +
0075b3 91bc     +LD R27 , X
0075b4 2da0     +MOV R26 , R0
                 	__GETW2SX 554
0075b5 940e ac3f 	CALL SUBOPT_0x20F
                 ; 0014 013D             if(res < 0)
0075b7 f45a      	BRPL _0x280030
                 ; 0014 013E             {
                 ; 0014 013F                 printDebug("<LOG_createFile> SD_writeData() failed Writing.. \r\n");
                +
0075b8 eae9     +LDI R30 , LOW ( 2 * _0x280000 + ( 1793 ) )
0075b9 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1793 ) )
0075ba e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1793 ) )
0075bb e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1793 ) )
                 	__POINTD1FN _0x280000,1793
0075bc 940e 9f66 	CALL SUBOPT_0x2
                 ; 0014 0140                 print_payload(initString,len);
0075be 940e ace0 	CALL SUBOPT_0x223
                 ; 0014 0141                 return -1;
0075c0 efef      	LDI  R30,LOW(65535)
0075c1 efff      	LDI  R31,HIGH(65535)
0075c2 c011      	RJMP _0x20E003A
                 ; 0014 0142             }
                 ; 0014 0143 
                 ; 0014 0144             res = SD_closeFile(&file);
                 _0x280030:
0075c3 01de      	MOVW R26,R28
0075c4 9612      	ADIW R26,2
0075c5 dc05      	RCALL _SD_closeFile
0075c6 018f      	MOVW R16,R30
                 ; 0014 0145             if(res < 0)
0075c7 2311      	TST  R17
0075c8 f44a      	BRPL _0x280031
                 ; 0014 0146             {
                 ; 0014 0147                 printDebug("<LOG_createFile> SD_closeFile() failed\r\n");
                +
0075c9 eded     +LDI R30 , LOW ( 2 * _0x280000 + ( 1845 ) )
0075ca e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1845 ) )
0075cb e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1845 ) )
0075cc e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1845 ) )
                 	__POINTD1FN _0x280000,1845
0075cd 940e 9f66 	CALL SUBOPT_0x2
                 ; 0014 0148                 return -1;
0075cf efef      	LDI  R30,LOW(65535)
0075d0 efff      	LDI  R31,HIGH(65535)
0075d1 c002      	RJMP _0x20E003A
                 ; 0014 0149             }
                 ; 0014 014A         }
                 _0x280031:
                 ; 0014 014B     }
                 ; 0014 014C 
                 ; 0014 014D 
                 ; 0014 014E     return 1;
                 _0x20E003B:
0075d2 e0e1      	LDI  R30,LOW(1)
0075d3 e0f0      	LDI  R31,HIGH(1)
                 _0x20E003A:
0075d4 8119      	LDD  R17,Y+1
0075d5 8108      	LDD  R16,Y+0
0075d6 96a9      	ADIW R28,41
0075d7 5fde      	SUBI R29,-2
0075d8 9508      	RET
                 ; 0014 014F }
                 ;/*============================================================*/
                 ;int LOG_init(void)
                 ; 0014 0152 {
                 _LOG_init:
                 ; 0014 0153     int         res,ret = 0;
                 ; 0014 0154 
                 ; 0014 0155     printDebug("<LOG_init> Initial log file\r\n");
0075d9 940e b69c 	CALL __SAVELOCR4
                 ;	res -> R16,R17
                 ;	ret -> R18,R19
                +
0075db e020     +LDI R18 , LOW ( 0 )
0075dc e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0075dd e0e6     +LDI R30 , LOW ( 2 * _0x280000 + ( 1886 ) )
0075de e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1886 ) )
0075df e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1886 ) )
0075e0 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1886 ) )
                 	__POINTD1FN _0x280000,1886
0075e1 940e 9f66 	CALL SUBOPT_0x2
                 ; 0014 0156 
                 ; 0014 0157 
                 ; 0014 0158     res = LOG_createFile(LOGFILE_DATA,0,LOG_INIT_STR,sizeof(LOG_INIT_STR));
0075e3 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
0075e4 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
0075e5 940e a537 	CALL SUBOPT_0xE0
0075e7 940e acf0 	CALL SUBOPT_0x224
                 ; 0014 0159     if(res < 0)
0075e9 f432      	BRPL _0x280032
                 ; 0014 015A     {
                 ; 0014 015B         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
0075ea 940e acfb 	CALL SUBOPT_0x225
0075ec 940e a190 	CALL SUBOPT_0x4F
                 ; 0014 015C         ret = ret-1;
                +
0075ee 5021     +SUBI R18 , LOW ( 1 )
0075ef 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 015D     }
                 ; 0014 015E 
                 ; 0014 015F     res = LOG_createFile(LOGFILE_EVENT,0,LOG_INIT_STR,sizeof(LOG_INIT_STR));
                 _0x280032:
0075f0 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
0075f1 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
0075f2 940e a537 	CALL SUBOPT_0xE0
0075f4 940e acf0 	CALL SUBOPT_0x224
                 ; 0014 0160     if(res < 0)
0075f6 f432      	BRPL _0x280033
                 ; 0014 0161     {
                 ; 0014 0162         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
0075f7 940e acfb 	CALL SUBOPT_0x225
0075f9 940e a1db 	CALL SUBOPT_0x5A
                 ; 0014 0163         ret = ret-1;
                +
0075fb 5021     +SUBI R18 , LOW ( 1 )
0075fc 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 0164     }
                 ; 0014 0165 
                 ; 0014 0166     res = LOG_createFile(LOGFILE_ERROR,0,NULL,0);
                 _0x280033:
0075fd ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
0075fe e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
0075ff 940e a537 	CALL SUBOPT_0xE0
007601 940e a8f6 	CALL SUBOPT_0x17F
007603 df3a      	RCALL _LOG_createFile
007604 018f      	MOVW R16,R30
                 ; 0014 0167     if(res < 0)
007605 2311      	TST  R17
007606 f442      	BRPL _0x280034
                 ; 0014 0168     {
                 ; 0014 0169         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_ERROR);
007607 940e acfb 	CALL SUBOPT_0x225
007609 940e ad00 	CALL SUBOPT_0x226
00760b 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0014 016A         ret = ret-1;
                +
00760d 5021     +SUBI R18 , LOW ( 1 )
00760e 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 016B     }
                 ; 0014 016C 
                 ; 0014 016D     return ret;
                 _0x280034:
00760f 01f9      	MOVW R30,R18
007610 940e b6a3 	CALL __LOADLOCR4
007612 940c 7a64 	JMP  _0x20E0032
                 ; 0014 016E }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "logqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct event_log_st     eventLogQueue[MAX_EVENT_QUEUE];
                 ;char                    eventLogQCount  = 0;
                 ;
                 ;struct data_log_st      dataLogQueue[MAX_DATA_QUEUE];
                 ;char                    dataLogQCount   = 0;
                 ;/*============================================================*/
                 ;/* Data Log Queue */
                 ;/*============================================================*/
                 ;int addDataLogQueue(unsigned char id, unsigned long int timestamp, unsigned int channel, float value)
                 ; 0015 0010 {
                 
                 	.CSEG
                 _addDataLogQueue:
                 ; 0015 0011     int slot;
                 ; 0015 0012 
                 ; 0015 0013     slot = findFreeSlotDataLogQueue();
007614 940e aa4b 	CALL SUBOPT_0x1BE
                 ;	id -> Y+12
                 ;	timestamp -> Y+8
                 ;	channel -> Y+6
                 ;	value -> Y+2
                 ;	slot -> R16,R17
007616 d0b9      	RCALL _findFreeSlotDataLogQueue
007617 2f0e      	MOV  R16,R30
007618 2711      	CLR  R17
                 ; 0015 0014     if(slot < 0)
007619 2311      	TST  R17
00761a f44a      	BRPL _0x2A0003
                 ; 0015 0015     {
                 ; 0015 0016         printDebug("\r\n\r\n<addDataLogQueue> WARNING : dataLogQueue FULL\r\n\r\n");
                +
00761b e4ec     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 0 ) )
00761c e5f5     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 0 ) )
00761d e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 0 ) )
00761e e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 0 ) )
                 	__POINTD1FN _0x2A0000,0
00761f 940e 9f66 	CALL SUBOPT_0x2
                 ; 0015 0017         return -1;
007621 efef      	LDI  R30,LOW(65535)
007622 efff      	LDI  R31,HIGH(65535)
007623 c038      	RJMP _0x20E0039
                 ; 0015 0018     }
                 ; 0015 0019 
                 ; 0015 001A     dataLogQueue[slot].id                    = id;
                 _0x2A0003:
007624 940e a7f7 	CALL SUBOPT_0x157
007626 55e9      	SUBI R30,LOW(-_dataLogQueue)
007627 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
007628 85ac      	LDD  R26,Y+12
007629 83a0      	STD  Z+0,R26
                 ; 0015 001B     dataLogQueue[slot].data.timestamp        = timestamp;
00762a 940e a7f7 	CALL SUBOPT_0x157
                +
00762c 55e8     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
00762d 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
00762e 940e a492 	CALL SUBOPT_0xC5
007630 940e aaf1 	CALL SUBOPT_0x1D8
                 ; 0015 001C     dataLogQueue[slot].data.channel          = channel;
007632 940e a7f7 	CALL SUBOPT_0x157
                +
007634 55e4     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
007635 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
007636 81ae      	LDD  R26,Y+6
007637 81bf      	LDD  R27,Y+6+1
007638 83a0      	STD  Z+0,R26
007639 83b1      	STD  Z+1,R27
                 ; 0015 001D     dataLogQueue[slot].data.value            = value;
00763a 940e a7f7 	CALL SUBOPT_0x157
                +
00763c 55e2     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
00763d 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
00763e 940e a3b4 	CALL SUBOPT_0xA1
007640 940e aaf1 	CALL SUBOPT_0x1D8
                 ; 0015 001E 
                 ; 0015 001F     dataLogQCount++;
007642 91e0 1a15 	LDS  R30,_dataLogQCount
007644 5fef      	SUBI R30,-LOW(1)
007645 93e0 1a15 	STS  _dataLogQCount,R30
                 ; 0015 0020     printDebug("\r\n<addDataLogQueue>                           Added (%02X) to dataLogQueue[%d] Count = %d\r\n",id,slot,dataLogQCount);
                +
007647 e8e2     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 54 ) )
007648 e5f5     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 54 ) )
007649 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 54 ) )
00764a e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 54 ) )
                 	__POINTD1FN _0x2A0000,54
00764b 940e b62a 	CALL __PUTPARD1
00764d 89e8      	LDD  R30,Y+16
00764e 940e a1bb 	CALL SUBOPT_0x55
007650 01f8      	MOVW R30,R16
007651 940e ad06 	CALL SUBOPT_0x227
007653 91e0 1a15 	LDS  R30,_dataLogQCount
007655 940e a1bb 	CALL SUBOPT_0x55
007657 940e a1c1 	CALL SUBOPT_0x56
                 ; 0015 0021     return dataLogQCount;
007659 91e0 1a15 	LDS  R30,_dataLogQCount
00765b e0f0      	LDI  R31,0
                 _0x20E0039:
00765c 8119      	LDD  R17,Y+1
00765d 8108      	LDD  R16,Y+0
00765e 962d      	ADIW R28,13
00765f 9508      	RET
                 ; 0015 0022 }
                 ;/*============================================================*/
                 ;int readDataLogQueue(unsigned char id, unsigned long int *timestamp, unsigned int *channel, float *value)
                 ; 0015 0025 {
                 _readDataLogQueue:
                 ; 0015 0026     int i;
                 ; 0015 0027 
                 ; 0015 0028     if(dataLogQCount == 0){
007660 940e a285 	CALL SUBOPT_0x71
                 ;	id -> Y+8
                 ;	*timestamp -> Y+6
                 ;	*channel -> Y+4
                 ;	*value -> Y+2
                 ;	i -> R16,R17
007662 91e0 1a15 	LDS  R30,_dataLogQCount
007664 30e0      	CPI  R30,0
007665 f439      	BRNE _0x2A0004
                 ; 0015 0029         printDebug("<readDataLogQueue> WARN: dataLogQueue empty!!\r\n");
                +
007666 edee     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 146 ) )
007667 e5f5     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 146 ) )
007668 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 146 ) )
007669 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 146 ) )
                 	__POINTD1FN _0x2A0000,146
00766a 940e 9f66 	CALL SUBOPT_0x2
                 ; 0015 002A         return -1;
00766c c101      	RJMP _0x20E0036
                 ; 0015 002B     }
                 ; 0015 002C 
                 ; 0015 002D     for(i=0;i<MAX_DATA_QUEUE;i++)
                 _0x2A0004:
                +
00766d e000     +LDI R16 , LOW ( 0 )
00766e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2A0006:
                +
00766f 300a     +CPI R16 , LOW ( 10 )
007670 e0e0     +LDI R30 , HIGH ( 10 )
007671 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
007672 f54c      	BRGE _0x2A0007
                 ; 0015 002E     {
                 ; 0015 002F         if(id == dataLogQueue[i].id)                       // -- scan id in dataLogQueue
007673 940e a7f7 	CALL SUBOPT_0x157
007675 55e9      	SUBI R30,LOW(-_dataLogQueue)
007676 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
007677 81e0      	LD   R30,Z
007678 85a8      	LDD  R26,Y+8
007679 17ea      	CP   R30,R26
00767a f4f1      	BRNE _0x2A0008
                 ; 0015 0030         {
                 ; 0015 0031             *timestamp      =   dataLogQueue[i].data.timestamp;
00767b 940e a7f7 	CALL SUBOPT_0x157
                +
00767d 55e8     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
00767e 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
00767f 940e ad0b 	CALL SUBOPT_0x228
                 ; 0015 0032             *channel        =   dataLogQueue[i].data.channel;
007681 940e a7f7 	CALL SUBOPT_0x157
                +
007683 55e4     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
007684 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
007685 01df      	MOVW R26,R30
007686 940e b5f6 	CALL __GETW1P
007688 81ac      	LDD  R26,Y+4
007689 81bd      	LDD  R27,Y+4+1
00768a 93ed      	ST   X+,R30
00768b 93fc      	ST   X,R31
                 ; 0015 0033             *value          =   dataLogQueue[i].data.value;
00768c 940e a7f7 	CALL SUBOPT_0x157
                +
00768e 55e2     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
00768f 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
007690 01df      	MOVW R26,R30
007691 940e b5fa 	CALL __GETD1P
007693 81aa      	LDD  R26,Y+2
007694 81bb      	LDD  R27,Y+2+1
007695 940e b605 	CALL __PUTDP1
                 ; 0015 0034 
                 ; 0015 0035             return i;
007697 01f8      	MOVW R30,R16
007698 c0d7      	RJMP _0x20E0035
                 ; 0015 0036         }
                 ; 0015 0037     }
                 _0x2A0008:
                +
007699 5f0f     +SUBI R16 , LOW ( - 1 )
00769a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00769b cfd3      	RJMP _0x2A0006
                 _0x2A0007:
                 ; 0015 0038 
                 ; 0015 0039     printDebug("<readDataLogQueue> WARN: not found id[0x%02X] in dataLogQueue\r\n", id);
                +
00769c e0ee     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 194 ) )
00769d e5f6     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 194 ) )
00769e e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 194 ) )
00769f e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 194 ) )
                 	__POINTD1FN _0x2A0000,194
0076a0 c0c8      	RJMP _0x20E0037
                 ; 0015 003A     return -1;
                 ; 0015 003B }
                 ;/*============================================================*/
                 ;int removeDataLogQueue(unsigned char id)
                 ; 0015 003E {
                 _removeDataLogQueue:
                 ; 0015 003F     char i;
                 ; 0015 0040     for(i=0;i<MAX_DATA_QUEUE;i++)
0076a1 93aa      	ST   -Y,R26
0076a2 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
0076a3 e010      	LDI  R17,LOW(0)
                 _0x2A000A:
0076a4 301a      	CPI  R17,10
0076a5 f4f8      	BRSH _0x2A000B
                 ; 0015 0041     {
                 ; 0015 0042         if(id == dataLogQueue[i].id)                       // -- scan id in dataLogQueue
0076a6 940e ad13 	CALL SUBOPT_0x229
0076a8 81e0      	LD   R30,Z
0076a9 81a9      	LDD  R26,Y+1
0076aa 17ea      	CP   R30,R26
0076ab f4b9      	BRNE _0x2A000C
                 ; 0015 0043         {
                 ; 0015 0044             dataLogQueue[i].id                  = 0x00;
0076ac 940e ad13 	CALL SUBOPT_0x229
0076ae 940e ad19 	CALL SUBOPT_0x22A
                 ; 0015 0045             dataLogQueue[i].data.timestamp      = 0;
                 ; 0015 0046             dataLogQueue[i].data.channel        = 0;
                 ; 0015 0047             dataLogQueue[i].data.value          = 0;
                 ; 0015 0048             dataLogQCount--;
0076b0 91e0 1a15 	LDS  R30,_dataLogQCount
0076b2 50e1      	SUBI R30,LOW(1)
0076b3 93e0 1a15 	STS  _dataLogQCount,R30
                 ; 0015 0049 
                 ; 0015 004A             printDebug("\r\n<removeDataLogQueue>                        Removed (%02X) from dataLogQueue[%d]\r\n", id, i);
                +
0076b5 e4ee     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 258 ) )
0076b6 e5f6     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 258 ) )
0076b7 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 258 ) )
0076b8 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 258 ) )
                 	__POINTD1FN _0x2A0000,258
0076b9 940e aa8d 	CALL SUBOPT_0x1C5
0076bb 940e aa92 	CALL SUBOPT_0x1C6
                 ; 0015 004B             return dataLogQCount;
0076bd 91e0 1a15 	LDS  R30,_dataLogQCount
0076bf 940e aa98 	CALL SUBOPT_0x1C7
0076c1 940c 7b1a 	JMP  _0x20E0031
                 ; 0015 004C         }
                 ; 0015 004D     }
                 _0x2A000C:
0076c3 5f1f      	SUBI R17,-1
0076c4 cfdf      	RJMP _0x2A000A
                 _0x2A000B:
                 ; 0015 004E     printDebug("<removeDataLogQueue> WARN: not found id[0x%02X] in dataLogQueue\r\n", id);
                +
0076c5 eae3     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 343 ) )
0076c6 e5f6     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 343 ) )
0076c7 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 343 ) )
0076c8 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 343 ) )
                 	__POINTD1FN _0x2A0000,343
0076c9 940e aa9b 	CALL SUBOPT_0x1C8
                 ; 0015 004F     return -1;
0076cb efef      	LDI  R30,LOW(65535)
0076cc efff      	LDI  R31,HIGH(65535)
0076cd 8118      	LDD  R17,Y+0
0076ce 940c 7b1a 	JMP  _0x20E0031
                 ; 0015 0050 }
                 ;/*============================================================*/
                 ;char findFreeSlotDataLogQueue(void)
                 ; 0015 0053 {
                 _findFreeSlotDataLogQueue:
                 ; 0015 0054     char i;
                 ; 0015 0055     for(i=0;i<MAX_DATA_QUEUE;i++){
0076d0 931a      	ST   -Y,R17
                 ;	i -> R17
0076d1 e010      	LDI  R17,LOW(0)
                 _0x2A000E:
0076d2 301a      	CPI  R17,10
0076d3 f448      	BRSH _0x2A000F
                 ; 0015 0056         if(dataLogQueue[i].id == 0x00){
0076d4 940e ad13 	CALL SUBOPT_0x229
0076d6 81e0      	LD   R30,Z
0076d7 30e0      	CPI  R30,0
0076d8 f411      	BRNE _0x2A0010
                 ; 0015 0057             return i;
0076d9 2fe1      	MOV  R30,R17
0076da c00e      	RJMP _0x20E0038
                 ; 0015 0058         }
                 ; 0015 0059     }
                 _0x2A0010:
0076db 5f1f      	SUBI R17,-1
0076dc cff5      	RJMP _0x2A000E
                 _0x2A000F:
                 ; 0015 005A     return -1;
0076dd efef      	LDI  R30,LOW(255)
0076de c00a      	RJMP _0x20E0038
                 ; 0015 005B }
                 ;/*============================================================*/
                 ;void initDataLogQueue(void)
                 ; 0015 005E {
                 _initDataLogQueue:
                 ; 0015 005F     char i;
                 ; 0015 0060 
                 ; 0015 0061     for(i=0;i<MAX_DATA_QUEUE;i++){
0076df 931a      	ST   -Y,R17
                 ;	i -> R17
0076e0 e010      	LDI  R17,LOW(0)
                 _0x2A0012:
0076e1 301a      	CPI  R17,10
0076e2 f430      	BRSH _0x2A0013
                 ; 0015 0062         dataLogQueue[i].id                  = 0x00;
0076e3 940e ad13 	CALL SUBOPT_0x229
0076e5 940e ad19 	CALL SUBOPT_0x22A
                 ; 0015 0063         dataLogQueue[i].data.timestamp      = 0;
                 ; 0015 0064         dataLogQueue[i].data.channel        = 0;
                 ; 0015 0065         dataLogQueue[i].data.value          = 0;
                 ; 0015 0066     }
0076e7 5f1f      	SUBI R17,-1
0076e8 cff8      	RJMP _0x2A0012
                 _0x2A0013:
                 ; 0015 0067     return;
                 _0x20E0038:
0076e9 9119      	LD   R17,Y+
0076ea 9508      	RET
                 ; 0015 0068 }
                 ;/*============================================================*/
                 ;
                 ;/*============================================================*/
                 ;/* Event Log Queue */
                 ;/*============================================================*/
                 ;int addEventLogQueue(unsigned char id, unsigned long int timestamp, unsigned char eventID, unsigned char eventStatus)
                 ; 0015 006F {
                 _addEventLogQueue:
                 ; 0015 0070     int slot;
                 ; 0015 0071 
                 ; 0015 0072     slot = findFreeSlotEventLogQueue();
0076eb 93aa      	ST   -Y,R26
0076ec 931a      	ST   -Y,R17
0076ed 930a      	ST   -Y,R16
                 ;	id -> Y+8
                 ;	timestamp -> Y+4
                 ;	eventID -> Y+3
                 ;	eventStatus -> Y+2
                 ;	slot -> R16,R17
0076ee d0ba      	RCALL _findFreeSlotEventLogQueue
0076ef 2f0e      	MOV  R16,R30
0076f0 2711      	CLR  R17
                 ; 0015 0073     if(slot < 0)
0076f1 2311      	TST  R17
0076f2 f43a      	BRPL _0x2A0014
                 ; 0015 0074     {
                 ; 0015 0075         printDebug("\r\n\r\n<addEventLogQueue> WARNING : eventLogQueue FULL\r\n\r\n");
                +
0076f3 eee5     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 409 ) )
0076f4 e5f6     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 409 ) )
0076f5 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 409 ) )
0076f6 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 409 ) )
                 	__POINTD1FN _0x2A0000,409
0076f7 940e 9f66 	CALL SUBOPT_0x2
                 ; 0015 0076         return -1;
0076f9 c074      	RJMP _0x20E0036
                 ; 0015 0077     }
                 ; 0015 0078 
                 ; 0015 0079     eventLogQueue[slot].id                  = id;
                 _0x2A0014:
0076fa 940e ad38 	CALL SUBOPT_0x22B
0076fc 5ee6      	SUBI R30,LOW(-_eventLogQueue)
0076fd 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
0076fe 85a8      	LDD  R26,Y+8
0076ff 83a0      	STD  Z+0,R26
                 ; 0015 007A     eventLogQueue[slot].event.timestamp     = timestamp;
007700 940e ad38 	CALL SUBOPT_0x22B
                +
007702 5ee5     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
007703 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
007704 940e a37b 	CALL SUBOPT_0x96
007706 940e aaf1 	CALL SUBOPT_0x1D8
                 ; 0015 007B     eventLogQueue[slot].event.eventID       = eventID;
007708 940e ad38 	CALL SUBOPT_0x22B
                +
00770a 5ee1     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
00770b 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
00770c 81ab      	LDD  R26,Y+3
00770d 83a0      	STD  Z+0,R26
                 ; 0015 007C     eventLogQueue[slot].event.eventStatus   = eventStatus;
00770e 940e ad38 	CALL SUBOPT_0x22B
                +
007710 5ee0     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
007711 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
007712 81aa      	LDD  R26,Y+2
007713 83a0      	STD  Z+0,R26
                 ; 0015 007D 
                 ; 0015 007E     eventLogQCount++;
007714 91e0 19a6 	LDS  R30,_eventLogQCount
007716 5fef      	SUBI R30,-LOW(1)
007717 93e0 19a6 	STS  _eventLogQCount,R30
                 ; 0015 007F     printDebug("\r\n<addEventLogQueue>                         Added (%02X) to eventLogQueue[%d] Count = %d\r\n",id,slot,eventLogQCount);
                +
007719 e1ed     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 465 ) )
00771a e5f7     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 465 ) )
00771b e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 465 ) )
00771c e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 465 ) )
                 	__POINTD1FN _0x2A0000,465
00771d 940e b62a 	CALL __PUTPARD1
00771f 85ec      	LDD  R30,Y+12
007720 940e a1bb 	CALL SUBOPT_0x55
007722 01f8      	MOVW R30,R16
007723 940e ad06 	CALL SUBOPT_0x227
007725 91e0 19a6 	LDS  R30,_eventLogQCount
007727 940e a1bb 	CALL SUBOPT_0x55
007729 940e a1c1 	CALL SUBOPT_0x56
                 ; 0015 0080     return eventLogQCount;
00772b 91e0 19a6 	LDS  R30,_eventLogQCount
00772d e0f0      	LDI  R31,0
00772e c041      	RJMP _0x20E0035
                 ; 0015 0081 }
                 ;/*============================================================*/
                 ;int readEventLogQueue(unsigned char id, unsigned long int *timestamp, unsigned char *eventID, unsigned char *eventStatus)
                 ; 0015 0084 {
                 _readEventLogQueue:
                 ; 0015 0085     int i;
                 ; 0015 0086 
                 ; 0015 0087     if(eventLogQCount == 0){
00772f 940e a285 	CALL SUBOPT_0x71
                 ;	id -> Y+8
                 ;	*timestamp -> Y+6
                 ;	*eventID -> Y+4
                 ;	*eventStatus -> Y+2
                 ;	i -> R16,R17
007731 91e0 19a6 	LDS  R30,_eventLogQCount
007733 30e0      	CPI  R30,0
007734 f439      	BRNE _0x2A0015
                 ; 0015 0088         printDebug("<readEventLogQueue> WARN: eventLogQueue empty!!\r\n");
                +
007735 e7e9     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 557 ) )
007736 e5f7     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 557 ) )
007737 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 557 ) )
007738 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 557 ) )
                 	__POINTD1FN _0x2A0000,557
007739 940e 9f66 	CALL SUBOPT_0x2
                 ; 0015 0089         return -1;
00773b c032      	RJMP _0x20E0036
                 ; 0015 008A     }
                 ; 0015 008B 
                 ; 0015 008C     for(i=0;i<MAX_EVENT_QUEUE;i++)
                 _0x2A0015:
                +
00773c e000     +LDI R16 , LOW ( 0 )
00773d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2A0017:
                +
00773e 3104     +CPI R16 , LOW ( 20 )
00773f e0e0     +LDI R30 , HIGH ( 20 )
007740 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
007741 f51c      	BRGE _0x2A0018
                 ; 0015 008D     {
                 ; 0015 008E         if(id == eventLogQueue[i].id)                       // -- scan id in eventLogQueue
007742 940e ad38 	CALL SUBOPT_0x22B
007744 5ee6      	SUBI R30,LOW(-_eventLogQueue)
007745 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
007746 81e0      	LD   R30,Z
007747 85a8      	LDD  R26,Y+8
007748 17ea      	CP   R30,R26
007749 f4c1      	BRNE _0x2A0019
                 ; 0015 008F         {
                 ; 0015 0090             *timestamp      =   eventLogQueue[i].event.timestamp;
00774a 940e ad38 	CALL SUBOPT_0x22B
                +
00774c 5ee5     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
00774d 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
00774e 940e ad0b 	CALL SUBOPT_0x228
                 ; 0015 0091             *eventID        =   eventLogQueue[i].event.eventID;
007750 940e ad38 	CALL SUBOPT_0x22B
                +
007752 5ee1     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
007753 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
007754 81e0      	LD   R30,Z
007755 81ac      	LDD  R26,Y+4
007756 81bd      	LDD  R27,Y+4+1
007757 93ec      	ST   X,R30
                 ; 0015 0092             *eventStatus    =   eventLogQueue[i].event.eventStatus;
007758 940e ad38 	CALL SUBOPT_0x22B
                +
00775a 5ee0     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
00775b 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
00775c 81e0      	LD   R30,Z
00775d 81aa      	LDD  R26,Y+2
00775e 81bb      	LDD  R27,Y+2+1
00775f 93ec      	ST   X,R30
                 ; 0015 0093 
                 ; 0015 0094             return i;
007760 01f8      	MOVW R30,R16
007761 c00e      	RJMP _0x20E0035
                 ; 0015 0095         }
                 ; 0015 0096     }
                 _0x2A0019:
                +
007762 5f0f     +SUBI R16 , LOW ( - 1 )
007763 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007764 cfd9      	RJMP _0x2A0017
                 _0x2A0018:
                 ; 0015 0097 
                 ; 0015 0098     printDebug("<readEventLogQueue> WARN: not found id[0x%02X] in eventLogQueue\r\n", id);
                +
007765 eaeb     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 607 ) )
007766 e5f7     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 607 ) )
007767 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 607 ) )
007768 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 607 ) )
                 	__POINTD1FN _0x2A0000,607
                 _0x20E0037:
007769 940e b62a 	CALL __PUTPARD1
00776b 85ec      	LDD  R30,Y+12
00776c 940e a073 	CALL SUBOPT_0x27
                 ; 0015 0099     return -1;
                 _0x20E0036:
00776e efef      	LDI  R30,LOW(65535)
00776f efff      	LDI  R31,HIGH(65535)
                 _0x20E0035:
007770 8119      	LDD  R17,Y+1
007771 8108      	LDD  R16,Y+0
007772 9629      	ADIW R28,9
007773 9508      	RET
                 ; 0015 009A }
                 ;/*============================================================*/
                 ;int removeEventLogQueue(unsigned char id)
                 ; 0015 009D {
                 _removeEventLogQueue:
                 ; 0015 009E     char i;
                 ; 0015 009F     for(i=0;i<MAX_EVENT_QUEUE;i++)
007774 93aa      	ST   -Y,R26
007775 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
007776 e010      	LDI  R17,LOW(0)
                 _0x2A001B:
007777 3114      	CPI  R17,20
007778 f528      	BRSH _0x2A001C
                 ; 0015 00A0     {
                 ; 0015 00A1         if(id == eventLogQueue[i].id)                       // -- scan id in eventLogQueue
007779 940e ad3e 	CALL SUBOPT_0x22C
00777b 81e0      	LD   R30,Z
00777c 81a9      	LDD  R26,Y+1
00777d 17ea      	CP   R30,R26
00777e f4e9      	BRNE _0x2A001D
                 ; 0015 00A2         {
                 ; 0015 00A3             eventLogQueue[i].id                  = 0x00;
00777f 940e ad3e 	CALL SUBOPT_0x22C
007781 940e ad44 	CALL SUBOPT_0x22D
                 ; 0015 00A4             eventLogQueue[i].event.timestamp     = 0;
007783 940e ad4a 	CALL SUBOPT_0x22E
                 ; 0015 00A5             eventLogQueue[i].event.eventID       = 0;
                 ; 0015 00A6             eventLogQueue[i].event.eventStatus   = 0;
                +
007785 5ee0     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
007786 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
007787 e0a0      	LDI  R26,LOW(0)
007788 83a0      	STD  Z+0,R26
                 ; 0015 00A7             eventLogQCount--;
007789 91e0 19a6 	LDS  R30,_eventLogQCount
00778b 50e1      	SUBI R30,LOW(1)
00778c 93e0 19a6 	STS  _eventLogQCount,R30
                 ; 0015 00A8 
                 ; 0015 00A9             printDebug("\r\n<removeEventLogQueue>                      Removed (%02X) from eventLogQueue[%d]\r\n", id, i);
                +
00778e eeed     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 673 ) )
00778f e5f7     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 673 ) )
007790 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 673 ) )
007791 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 673 ) )
                 	__POINTD1FN _0x2A0000,673
007792 940e aa8d 	CALL SUBOPT_0x1C5
007794 940e aa92 	CALL SUBOPT_0x1C6
                 ; 0015 00AA             return eventLogQCount;
007796 91e0 19a6 	LDS  R30,_eventLogQCount
007798 940e aa98 	CALL SUBOPT_0x1C7
00779a 940c 7b1a 	JMP  _0x20E0031
                 ; 0015 00AB         }
                 ; 0015 00AC     }
                 _0x2A001D:
00779c 5f1f      	SUBI R17,-1
00779d cfd9      	RJMP _0x2A001B
                 _0x2A001C:
                 ; 0015 00AD     printDebug("<removeEventLogQueue> WARN: not found id[0x%02X] in eventLogQueue\r\n", id);
                +
00779e e4e2     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 758 ) )
00779f e5f8     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 758 ) )
0077a0 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 758 ) )
0077a1 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 758 ) )
                 	__POINTD1FN _0x2A0000,758
0077a2 940e aa9b 	CALL SUBOPT_0x1C8
                 ; 0015 00AE     return -1;
0077a4 efef      	LDI  R30,LOW(65535)
0077a5 efff      	LDI  R31,HIGH(65535)
0077a6 8118      	LDD  R17,Y+0
0077a7 940c 7b1a 	JMP  _0x20E0031
                 ; 0015 00AF }
                 ;/*============================================================*/
                 ;char findFreeSlotEventLogQueue(void)
                 ; 0015 00B2 {
                 _findFreeSlotEventLogQueue:
                 ; 0015 00B3     char i;
                 ; 0015 00B4     for(i=0;i<MAX_EVENT_QUEUE;i++){
0077a9 931a      	ST   -Y,R17
                 ;	i -> R17
0077aa e010      	LDI  R17,LOW(0)
                 _0x2A001F:
0077ab 3114      	CPI  R17,20
0077ac f450      	BRSH _0x2A0020
                 ; 0015 00B5         if(eventLogQueue[i].id == 0x00){
0077ad 940e ad3e 	CALL SUBOPT_0x22C
0077af 81e0      	LD   R30,Z
0077b0 30e0      	CPI  R30,0
0077b1 f419      	BRNE _0x2A0021
                 ; 0015 00B6             return i;
0077b2 2fe1      	MOV  R30,R17
0077b3 940c 7c04 	JMP  _0x20E002F
                 ; 0015 00B7         }
                 ; 0015 00B8     }
                 _0x2A0021:
0077b5 5f1f      	SUBI R17,-1
0077b6 cff4      	RJMP _0x2A001F
                 _0x2A0020:
                 ; 0015 00B9     return -1;
0077b7 efef      	LDI  R30,LOW(255)
0077b8 940c 7c04 	JMP  _0x20E002F
                 ; 0015 00BA }
                 ;/*============================================================*/
                 ;void initEventLogQueue(void)
                 ; 0015 00BD {
                 _initEventLogQueue:
                 ; 0015 00BE     char i;
                 ; 0015 00BF 
                 ; 0015 00C0     for(i=0;i<MAX_EVENT_QUEUE;i++){
0077ba 931a      	ST   -Y,R17
                 ;	i -> R17
0077bb e010      	LDI  R17,LOW(0)
                 _0x2A0023:
0077bc 3114      	CPI  R17,20
0077bd f460      	BRSH _0x2A0024
                 ; 0015 00C1         eventLogQueue[i].id                  = 0x00;
0077be 940e ad3e 	CALL SUBOPT_0x22C
0077c0 940e ad44 	CALL SUBOPT_0x22D
                 ; 0015 00C2         eventLogQueue[i].event.timestamp     = 0;
0077c2 940e ad4a 	CALL SUBOPT_0x22E
                 ; 0015 00C3         eventLogQueue[i].event.eventID       = 0;
                 ; 0015 00C4         eventLogQueue[i].event.eventStatus   = 0;
                +
0077c4 5ee0     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
0077c5 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
0077c6 e0a0      	LDI  R26,LOW(0)
0077c7 83a0      	STD  Z+0,R26
                 ; 0015 00C5     }
0077c8 5f1f      	SUBI R17,-1
0077c9 cff2      	RJMP _0x2A0023
                 _0x2A0024:
                 ; 0015 00C6     return;
0077ca 940c 7c04 	JMP  _0x20E002F
                 ; 0015 00C7 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "menu.h"
                 ;#include "oled.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "alarm.h"
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;
                 ;eeprom char userPwd[4]              = {0,0,0,0};                    // -- default password for user permission -- //
                 ;eeprom char servicePwd[4]           = {2,4,7,5};                    // -- default password for sevice permission -- //
                 ;char currentPage                    = P_MONITOR;                    // -- track the currently displaying page -- //
                 ;
                 ;/**************************************************************/
                 ;/************* Menu (Finite State Machine) Function ***********/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void MENU_processKey(char key)
                 ; 0016 0015 {
                 
                 	.CSEG
                 ; 0016 0016     int  i,j,res;
                 ; 0016 0017     static signed char  cursor      = 0;
                 ; 0016 0018     static char         tmpNextPage = 0;
                 ; 0016 0019     static char         tmpPrevPage = 0;
                 ; 0016 001A     static signed char  entPwd[4]   = {0,0,0,0};
                 ; 0016 001B     static signed char  newPwd[4]   = {0,0,0,0};
                 ; 0016 001C     static signed char  confPwd[4]  = {0,0,0,0};
                 ; 0016 001D 
                 ; 0016 001E     static char setIp[12]           = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 001F     static char setMask[12]         = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0020     static char setGw[12]           = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0021     static char setServer[12]       = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0022 
                 ; 0016 0023     unsigned char *msg;
                 ; 0016 0024     unsigned int  msg_len           = 0;
                 ; 0016 0025 
                 ; 0016 0026     static char devEn               = 0;
                 ; 0016 0027     static char almEn               = 0;
                 ; 0016 0028     static char prbEn[5]            = {0,0,0,0,0};
                 ; 0016 0029 
                 ; 0016 002A     static char mute                = 0;
                 ; 0016 002B 
                 ; 0016 002C     static char vRef[3]             = {0,0,0};
                 ; 0016 002D 
                 ; 0016 002E     static char prb1                = 0;
                 ; 0016 002F     static char prb2                = 0;
                 ; 0016 0030     static unsigned char calPnt[6]  = {0,0,0,0,0,0};
                 ; 0016 0031 
                 ; 0016 0032     char eeprom *uPwd = userPwd;
                 ; 0016 0033     char eeprom *sPwd = servicePwd;
                 ; 0016 0034 
                 ; 0016 0035     char str[20];
                 ; 0016 0036     char cmd[50];
                 ; 0016 0037     int  digit      = 0;
                 ; 0016 0038 
                 ; 0016 0039     if      ( currentPage == P_MONITOR )
                 ;	key -> Y+86
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	res -> R20,R21
                 ;	*msg -> Y+84
                 ;	msg_len -> Y+82
                 ;	*uPwd -> Y+80
                 ;	*sPwd -> Y+78
                 ;	str -> Y+58
                 ;	cmd -> Y+8
                 ;	digit -> Y+6
                 ; 0016 003A     {
                 ; 0016 003B         if(key == KEY_MODE){
                 ; 0016 003C             currentPage     = P_MAIN_MENU;
                 ; 0016 003D             cursor          = 0;
                 ; 0016 003E             printOLED("M1%1d",cursor);
                 ; 0016 003F         }
                 ; 0016 0040     }
                 ; 0016 0041     else if ( currentPage == P_MAIN_MENU )
                 ; 0016 0042     {
                 ; 0016 0043         switch(key){
                 ; 0016 0044         case KEY_MODE   :   currentPage = P_MONITOR;        cursor  = 0;        printOLED("M0");            break;
                 ; 0016 0045         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }   printOLED("MA%1d",cursor);  break;
                 ; 0016 0046         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }   printOLED("MA%1d",cursor);  break;
                 ; 0016 0047         case KEY_OK     :   if(cursor == 0){            // -- Device Config
                 ; 0016 0048                                 currentPage = P_DEV_MENU;
                 ; 0016 0049                                 cursor      = 0;
                 ; 0016 004A                                 printOLED("M2%1d",cursor);
                 ; 0016 004B                             }
                 ; 0016 004C                             else if(cursor == 1){       // -- Probe Config
                 ; 0016 004D                                 currentPage = P_PRB_MENU;
                 ; 0016 004E                                 cursor      = 0;
                 ; 0016 004F                                 printOLED("M3%1d",cursor);
                 ; 0016 0050                             }
                 ; 0016 0051                             else if(cursor == 2){       // -- Management
                 ; 0016 0052                                 currentPage = P_MANAGE_MENU;
                 ; 0016 0053                                 cursor      = 0;
                 ; 0016 0054                                 printOLED("M4%1d",cursor);
                 ; 0016 0055                             }
                 ; 0016 0056                             else if(cursor == 3){       // -- Maintenance
                 ; 0016 0057                                 currentPage = P_ENTER_M_PASS;
                 ; 0016 0058                                 tmpNextPage = P_MTNC_MENU;
                 ; 0016 0059                                 tmpPrevPage = P_MAIN_MENU;
                 ; 0016 005A                                 memset(entPwd,0xFF,sizeof(entPwd));
                 ; 0016 005B                                 cursor      = 0;
                 ; 0016 005C                                 printOLED("P1");
                 ; 0016 005D                             }
                 ; 0016 005E                             else{                       // -- Exit -- should not occur
                 ; 0016 005F                                 currentPage = P_MONITOR;
                 ; 0016 0060                                 cursor      = 0;
                 ; 0016 0061                                 printOLED("M0");
                 ; 0016 0062                             }
                 ; 0016 0063             break;
                 ; 0016 0064         }
                 ; 0016 0065     }
                 ; 0016 0066     else if ( currentPage == P_DEV_MENU )
                 ; 0016 0067     {
                 ; 0016 0068         switch(key){
                 ; 0016 0069         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 0;            printOLED("M1%1d",cursor);  break;
                 ; 0016 006A         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 006B         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 006C         case KEY_OK     :   if(cursor == 0){            // -- View Device Config
                 ; 0016 006D                                 currentPage = P_DEV_V_MENU;
                 ; 0016 006E                                 cursor      = 0;
                 ; 0016 006F                                 printOLED("M5%1d",cursor);
                 ; 0016 0070                             }
                 ; 0016 0071                             else if(cursor == 1){       // -- Set Device Config
                 ; 0016 0072                                 currentPage = P_ENTER_U_PASS;
                 ; 0016 0073                                 tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0074                                 tmpPrevPage = P_DEV_MENU;
                 ; 0016 0075                                 memset(entPwd,0xFF,sizeof(entPwd));
                 ; 0016 0076                                 cursor      = 0;
                 ; 0016 0077                                 printOLED("P0");
                 ; 0016 0078                             }
                 ; 0016 0079                             else{                       // -- Exit -- should not occur
                 ; 0016 007A                                 currentPage = P_MONITOR;
                 ; 0016 007B                                 cursor      = 0;
                 ; 0016 007C                                 printOLED("M0");
                 ; 0016 007D                             }
                 ; 0016 007E             break;
                 ; 0016 007F         }
                 ; 0016 0080     }
                 ; 0016 0081     else if ( currentPage == P_DEV_V_MENU )
                 ; 0016 0082     {
                 ; 0016 0083         switch(key){
                 ; 0016 0084         case KEY_MODE   :   currentPage = P_DEV_MENU;       cursor  = 0;            printOLED("M2%1d",cursor);  break;
                 ; 0016 0085         /* // -- disable network view -- //
                 ; 0016 0086         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0087         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0088         */
                 ; 0016 0089         // -- enable network view -- //
                 ; 0016 008A         case KEY_UP     :   if(--cursor < 0){               cursor  = 2;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 008B         case KEY_DOWN   :   if(++cursor > 2){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 008C         case KEY_OK     :   if(cursor == 0){            // -- View Properties
                 ; 0016 008D                                 currentPage = P_DEV_V_PROP;
                 ; 0016 008E                                 cursor      = 0;
                 ; 0016 008F                                 printDebug("<MENU_processKey> VP%s,%s,%s,",  properties_config.deviceID,
                 ; 0016 0090                                                                             properties_config.hostID,
                 ; 0016 0091                                                                             properties_config.firmwareVersion);
                 ; 0016 0092 
                 ; 0016 0093                                 printOLED("VP%s,%s,%s,", properties_config.deviceID,
                 ; 0016 0094                                                         properties_config.hostID,
                 ; 0016 0095                                                         properties_config.firmwareVersion);
                 ; 0016 0096                             }
                 ; 0016 0097                             else if(cursor == 1){       // -- View Operate Config
                 ; 0016 0098                                 currentPage = P_DEV_V_OPER;
                 ; 0016 0099                                 cursor      = 0;
                 ; 0016 009A 
                 ; 0016 009B                                 memset(cmd,'\0',sizeof(cmd));   sprintf(cmd,"");
                 ; 0016 009C                                 memset(str,'\0',sizeof(str));
                 ; 0016 009D                                 if(     operating_config.mode == MODE_REALTIME){    sprintf(str,"Realtime,");   }
                 ; 0016 009E                                 else if(operating_config.mode == MODE_DATALOGGER){  sprintf(str,"Datalogger,"); }
                 ; 0016 009F                                 else{                                               sprintf(str,"Unknown,");    }
                 ; 0016 00A0                                 strcat(cmd,str);
                 ; 0016 00A1 
                 ; 0016 00A2                                 memset(str,'\0',sizeof(str));
                 ; 0016 00A3                                 if(     operating_config.deviceEnable == 0x01   ){  sprintf(str,"Enable,");     }
                 ; 0016 00A4                                 else{                                               sprintf(str,"Disable,");    }
                 ; 0016 00A5                                 strcat(cmd,str);
                 ; 0016 00A6 
                 ; 0016 00A7                                 memset(str,'\0',sizeof(str));
                 ; 0016 00A8                                 if(     operating_config.alarmEnable  == 0x01   ){  sprintf(str,"Enable,");     }
                 ; 0016 00A9                                 else{                                               sprintf(str,"Disable,");    }
                 ; 0016 00AA                                 strcat(cmd,str);
                 ; 0016 00AB 
                 ; 0016 00AC                                 memset(str,'\0',sizeof(str));
                 ; 0016 00AD                                 for(i=0,j=0;i<MAX_SENS_CHANNEL;i++){
                 ; 0016 00AE                                     if(operating_config.sensorEnable[i]==0x01   ){  str[j++] = 'E';             }
                 ; 0016 00AF                                     else{                                           str[j++] = 'D';             }
                 ; 0016 00B0                                     if( i < MAX_SENS_CHANNEL-1){
                 ; 0016 00B1                                         str[j++] = '/';
                 ; 0016 00B2                                     }
                 ; 0016 00B3 
                 ; 0016 00B4                                 }
                 ; 0016 00B5                                 str[j++]    = ',';
                 ; 0016 00B6                                 str[j++]    = '\0';
                 ; 0016 00B7                                 strcat(cmd,str);
                 ; 0016 00B8 
                 ; 0016 00B9 
                 ; 0016 00BA                                 printDebug("<MENU_processKey> VO%s", cmd);
                 ; 0016 00BB                                 printOLED("VO%s", cmd);
                 ; 0016 00BC                             }
                 ; 0016 00BD                             else if(cursor == 2){       // -- View Network Config
                 ; 0016 00BE 
                 ; 0016 00BF                                 memset(cmd,'\0',sizeof(cmd));   sprintf(cmd,"");
                 ; 0016 00C0 
                 ; 0016 00C1                                 msg = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
                 ; 0016 00C2                                 if(msg == NULL){
                 ; 0016 00C3                                     printDebug("<MENU_processKey> malloc(CONF_READ_BUFFER) failed\r\n");
                 ; 0016 00C4                                     currentPage = P_DEV_MENU;       cursor  = 0;            printOLED("M2%1d",cursor);  break;
                 ; 0016 00C5                                 }
                 ; 0016 00C6 
                 ; 0016 00C7                                 res = ETH_getConfig(msg,&msg_len);
                 ; 0016 00C8                                 if(res < 0){
                 ; 0016 00C9                                     printDebug("<MENU_processKey> ETH_getConfig() failed\r\n");
                 ; 0016 00CA                                 }
                 ; 0016 00CB                                 else{
                 ; 0016 00CC                                     printDebug("<MENU_processKey> ETH_getConfig() success\r\n");
                 ; 0016 00CD                                     printDebug("\r\n\r\n<MENU_processKey> read[%d] -->\r\n",msg_len);
                 ; 0016 00CE                                     for(i=0;i<msg_len;i++){
                 ; 0016 00CF                                         putchar3(msg[i]);
                 ; 0016 00D0                                     }
                 ; 0016 00D1                                     printDebug("\r\n");
                 ; 0016 00D2                                 }
                 ; 0016 00D3 
                 ; 0016 00D4                                 res = getNetworkInfo(msg,&setIp[0],&setMask[0],&setGw[0],&setServer[0]);
                 ; 0016 00D5                                 if(res<0){
                 ; 0016 00D6                                     printDebug("<MENU_processKey> getNetworkInfo() failed\r\n");
                 ; 0016 00D7                                     return;
                 ; 0016 00D8                                 }
                 ; 0016 00D9 
                 ; 0016 00DA                                 currentPage = P_DEV_V_NETW;
                 ; 0016 00DB                                 cursor      = 0;
                 ; 0016 00DC 
                 ; 0016 00DD                                 printDebug("<MENU_processKey> VN%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,\r\n",
                 ; 0016 00DE                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 00DF                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 00E0                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 00E1                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 00E2                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 00E3                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 00E4                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 00E5                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 00E6                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 00E7                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 00E8                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 00E9                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 00EA                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 00EB                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 00EC                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 00ED                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                 ; 0016 00EE 
                 ; 0016 00EF                                 printOLED("VN%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,",
                 ; 0016 00F0                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 00F1                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 00F2                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 00F3                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 00F4                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 00F5                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 00F6                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 00F7                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 00F8                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 00F9                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 00FA                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 00FB                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 00FC                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 00FD                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 00FE                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 00FF                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                 ; 0016 0100                                 free( msg );
                 ; 0016 0101                             }
                 ; 0016 0102                             else{                       // -- Exit -- should not occur
                 ; 0016 0103                                 currentPage = P_MONITOR;
                 ; 0016 0104                                 cursor      = 0;
                 ; 0016 0105                                 printOLED("M0");
                 ; 0016 0106                             }
                 ; 0016 0107             break;
                 ; 0016 0108         }
                 ; 0016 0109     }
                 ; 0016 010A     else if ( currentPage == P_DEV_V_PROP )
                 ; 0016 010B     {
                 ; 0016 010C         switch(key){
                 ; 0016 010D         case KEY_UP     :   /* no operation */                                                                  break;
                 ; 0016 010E         case KEY_DOWN   :   /* no operation */                                                                  break;
                 ; 0016 010F         case KEY_MODE   :
                 ; 0016 0110         case KEY_OK     :   currentPage = P_DEV_V_MENU;
                 ; 0016 0111                             cursor      = 0;
                 ; 0016 0112                             printOLED("M5%1d",cursor);
                 ; 0016 0113                         break;
                 ; 0016 0114         }
                 ; 0016 0115     }
                 ; 0016 0116     else if ( currentPage == P_DEV_V_OPER )
                 ; 0016 0117     {
                 ; 0016 0118         switch(key){
                 ; 0016 0119         case KEY_UP     :   /* no operation */                                                                  break;
                 ; 0016 011A         case KEY_DOWN   :   /* no operation */                                                                  break;
                 ; 0016 011B         case KEY_MODE   :
                 ; 0016 011C         case KEY_OK     :   currentPage = P_DEV_V_MENU;
                 ; 0016 011D                             cursor      = 1;
                 ; 0016 011E                             printOLED("M5%1d",cursor);
                 ; 0016 011F                         break;
                 ; 0016 0120         }
                 ; 0016 0121     }
                 ; 0016 0122     else if ( currentPage == P_DEV_V_NETW )
                 ; 0016 0123     {
                 ; 0016 0124         switch(key){
                 ; 0016 0125         case KEY_UP     :   /* no operation */                                                                  break;
                 ; 0016 0126         case KEY_DOWN   :   /* no operation */                                                                  break;
                 ; 0016 0127         case KEY_MODE   :
                 ; 0016 0128         case KEY_OK     :   currentPage = P_DEV_V_MENU;
                 ; 0016 0129                             cursor      = 2;
                 ; 0016 012A                             printOLED("M5%1d",cursor);
                 ; 0016 012B                         break;
                 ; 0016 012C         }
                 ; 0016 012D     }
                 ; 0016 012E     else if ( currentPage == P_DEV_S_MENU )
                 ; 0016 012F     {
                 ; 0016 0130         switch(key){
                 ; 0016 0131         case KEY_MODE   :   currentPage = P_DEV_MENU;       cursor  = 1;            printOLED("M2%1d",cursor);  break;
                 ; 0016 0132         //case KEY_UP     :   break;
                 ; 0016 0133         //case KEY_DOWN   :   break;
                 ; 0016 0134         // -- enable network configuration -- //
                 ; 0016 0135         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0136         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0137 
                 ; 0016 0138         case KEY_OK     :   if(cursor == 0){            // -- Set Operate Config
                 ; 0016 0139                                 currentPage = P_DEV_S_OPER;
                 ; 0016 013A                                 cursor      = 0;
                 ; 0016 013B                                 devEn       = operating_config.deviceEnable;
                 ; 0016 013C                                 almEn       = operating_config.alarmEnable;
                 ; 0016 013D                                 printDebug("<MENU_processKey> devEn[%d] almEn[%d]",devEn,almEn);
                 ; 0016 013E                                 printOLED("SO%1d",cursor);
                 ; 0016 013F                                 printOLED("ED2%1d",devEn);
                 ; 0016 0140                                 printOLED("ED3%1d",almEn);
                 ; 0016 0141                             }
                 ; 0016 0142                             else if(cursor == 1){       // -- Set Network Config
                 ; 0016 0143                                 currentPage = P_DEV_S_IP;
                 ; 0016 0144                                 cursor      = 0;
                 ; 0016 0145                                 printOLED("SI");
                 ; 0016 0146                                 for(i=0;i<12;i++){
                 ; 0016 0147                                     printOLED("ID%1X%1d",i,setIp[i]);
                 ; 0016 0148                                 }
                 ; 0016 0149                             }
                 ; 0016 014A                             else{                       // -- Exit -- should not occur
                 ; 0016 014B                                 currentPage = P_MONITOR;
                 ; 0016 014C                                 cursor      = 0;
                 ; 0016 014D                                 printOLED("M0");
                 ; 0016 014E                             }
                 ; 0016 014F             break;
                 ; 0016 0150         }
                 ; 0016 0151     }
                 ; 0016 0152     else if ( currentPage == P_DEV_S_OPER )
                 ; 0016 0153     {
                 ; 0016 0154         switch(key){
                 ; 0016 0155         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 0;            printOLED("M6%1d",cursor);  break;
                 ; 0016 0156         case KEY_UP     :   if(--cursor < 0){               cursor  = 2;    }       printOLED("SO%1d",cursor);  break;
                 ; 0016 0157         case KEY_DOWN   :   if(++cursor > 2){               cursor  = 0;    }       printOLED("SO%1d",cursor);  break;
                 ; 0016 0158         case KEY_OK     :   if(cursor == 0){            // -- Set Device Enable
                 ; 0016 0159                                 devEn       = !devEn;
                 ; 0016 015A                                 printDebug("<MENU_processKey> devEn -> ED%1d%1d",cursor+2,devEn);
                 ; 0016 015B                                 printOLED("ED%1d%1d",cursor+2,devEn);
                 ; 0016 015C                             }
                 ; 0016 015D                             else if(cursor == 1){       // -- Set Alarm Enable
                 ; 0016 015E                                 almEn       = !almEn;
                 ; 0016 015F                                 printDebug("<MENU_processKey> almEn -> ED%1d%1d",cursor+2,almEn);
                 ; 0016 0160                                 printOLED("ED%1d%1d",cursor+2,almEn);
                 ; 0016 0161                             }
                 ; 0016 0162                             else if(cursor == 2){       // -- Display Finish page
                 ; 0016 0163 
                 ; 0016 0164                                 operating_config.deviceEnable   = devEn;
                 ; 0016 0165                                 operating_config.alarmEnable    = almEn;
                 ; 0016 0166                                 res = setOperatingConfig(&operating_config);
                 ; 0016 0167                                 if(res < 0){
                 ; 0016 0168                                     printDebug("<MENU_processKey> setOperatingConfig() failed\r\n");
                 ; 0016 0169                                     currentPage = P_FAILED;
                 ; 0016 016A                                     tmpNextPage = P_DEV_S_MENU;
                 ; 0016 016B                                     tmpPrevPage = P_DEV_S_OPER;
                 ; 0016 016C                                     cursor      = 0;
                 ; 0016 016D                                     printOLED("FL");
                 ; 0016 016E                                 }
                 ; 0016 016F                                 else{
                 ; 0016 0170                                     currentPage = P_FINISH;
                 ; 0016 0171                                     tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0172                                     tmpPrevPage = P_DEV_S_OPER;
                 ; 0016 0173                                     cursor      = 0;
                 ; 0016 0174                                     printOLED("FI");
                 ; 0016 0175                                 }
                 ; 0016 0176                             }
                 ; 0016 0177                             else{                       // -- Exit -- should not occur
                 ; 0016 0178                                 currentPage = P_MONITOR;
                 ; 0016 0179                                 cursor      = 0;
                 ; 0016 017A                                 printOLED("M0");
                 ; 0016 017B                             }
                 ; 0016 017C             break;
                 ; 0016 017D         }
                 ; 0016 017E     }
                 ; 0016 017F     else if ( currentPage == P_DEV_S_IP )
                 ; 0016 0180     {
                 ; 0016 0181         switch(key){
                 ; 0016 0182         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 1;            printOLED("M6%1d",cursor);              break;
                 ; 0016 0183         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 ; 0016 0184         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 ; 0016 0185         case KEY_OK     :   if(cursor == 12){
                 ; 0016 0186                                 cursor = 0;
                 ; 0016 0187                                 currentPage = P_DEV_S_MASK;
                 ; 0016 0188                                 printOLED("SM");
                 ; 0016 0189                                 for(i=0;i<12;i++){
                 ; 0016 018A                                     printOLED("ID%1X%1d",i,setMask[i]);
                 ; 0016 018B                                 }
                 ; 0016 018C                             }
                 ; 0016 018D                             else if(cursor < 12){
                 ; 0016 018E                                 if((cursor%3) == 0){
                 ; 0016 018F                                     if(++setIp[cursor] >2)  setIp[cursor] = 0;
                 ; 0016 0190                                 }
                 ; 0016 0191                                 else{
                 ; 0016 0192                                     if(++setIp[cursor] >9)  setIp[cursor] = 0;
                 ; 0016 0193                                 }
                 ; 0016 0194                                 //if(++setIp[cursor] >9)  setIp[cursor] = 0;
                 ; 0016 0195                                 printOLED("ID%1X%1d",cursor, setIp[cursor]);
                 ; 0016 0196                             }
                 ; 0016 0197                             else{                       // -- Exit -- should not occur
                 ; 0016 0198                                 currentPage = P_MONITOR;
                 ; 0016 0199                                 cursor      = 0;
                 ; 0016 019A                                 printOLED("M0");
                 ; 0016 019B                             }
                 ; 0016 019C             break;
                 ; 0016 019D         }
                 ; 0016 019E     }
                 ; 0016 019F     else if ( currentPage == P_DEV_S_MASK )
                 ; 0016 01A0     {
                 ; 0016 01A1         switch(key){
                 ; 0016 01A2         case KEY_MODE   :   currentPage = P_DEV_S_IP;       cursor  = 0;            printOLED("SI");                        break;
                 ; 0016 01A3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 ; 0016 01A4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 ; 0016 01A5         case KEY_OK     :   if(cursor == 12){
                 ; 0016 01A6                                 cursor = 0;
                 ; 0016 01A7                                 currentPage = P_DEV_S_GATEWAY;
                 ; 0016 01A8                                 printOLED("SG");
                 ; 0016 01A9                                 for(i=0;i<12;i++){
                 ; 0016 01AA                                     printOLED("ID%1X%1d",i,setGw[i]);
                 ; 0016 01AB                                 }
                 ; 0016 01AC                             }
                 ; 0016 01AD                             else if(cursor < 12){
                 ; 0016 01AE                                 if((cursor%3) == 0){
                 ; 0016 01AF                                     if(++setMask[cursor] >2)  setMask[cursor] = 0;
                 ; 0016 01B0                                 }
                 ; 0016 01B1                                 else{
                 ; 0016 01B2                                     if(++setMask[cursor] >9)  setMask[cursor] = 0;
                 ; 0016 01B3                                 }
                 ; 0016 01B4                                 //if(++setMask[cursor] >9)  setMask[cursor] = 0;
                 ; 0016 01B5                                 printOLED("ID%1X%1d",cursor, setMask[cursor]);
                 ; 0016 01B6                             }
                 ; 0016 01B7                             else{                       // -- Exit -- should not occur
                 ; 0016 01B8                                 currentPage = P_MONITOR;
                 ; 0016 01B9                                 cursor      = 0;
                 ; 0016 01BA                                 printOLED("M0");
                 ; 0016 01BB                             }
                 ; 0016 01BC             break;
                 ; 0016 01BD         }
                 ; 0016 01BE     }
                 ; 0016 01BF     else if ( currentPage == P_DEV_S_GATEWAY )
                 ; 0016 01C0     {
                 ; 0016 01C1         switch(key){
                 ; 0016 01C2         case KEY_MODE   :   currentPage = P_DEV_S_MASK;     cursor  = 0;            printOLED("SM");                        break;
                 ; 0016 01C3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 ; 0016 01C4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 ; 0016 01C5         case KEY_OK     :   if(cursor == 12){
                 ; 0016 01C6                                 cursor = 0;
                 ; 0016 01C7                                 currentPage = P_DEV_S_SERVER;
                 ; 0016 01C8                                 printOLED("SS");
                 ; 0016 01C9                                 for(i=0;i<12;i++){
                 ; 0016 01CA                                     printOLED("ID%1X%1d",i,setServer[i]);
                 ; 0016 01CB                                 }
                 ; 0016 01CC                             }
                 ; 0016 01CD                             else if(cursor < 12){
                 ; 0016 01CE                                 if((cursor%3) == 0){
                 ; 0016 01CF                                     if(++setGw[cursor] >2)  setGw[cursor] = 0;
                 ; 0016 01D0                                 }
                 ; 0016 01D1                                 else{
                 ; 0016 01D2                                     if(++setGw[cursor] >9)  setGw[cursor] = 0;
                 ; 0016 01D3                                 }
                 ; 0016 01D4                                 //if(++setGw[cursor] >9)  setGw[cursor] = 0;
                 ; 0016 01D5                                 printOLED("ID%1X%1d",cursor, setGw[cursor]);
                 ; 0016 01D6                             }
                 ; 0016 01D7                             else{                       // -- Exit -- should not occur
                 ; 0016 01D8                                 currentPage = P_MONITOR;
                 ; 0016 01D9                                 cursor      = 0;
                 ; 0016 01DA                                 printOLED("M0");
                 ; 0016 01DB                             }
                 ; 0016 01DC             break;
                 ; 0016 01DD         }
                 ; 0016 01DE     }
                 ; 0016 01DF     else if ( currentPage == P_DEV_S_SERVER )
                 ; 0016 01E0     {
                 ; 0016 01E1         switch(key){
                 ; 0016 01E2         case KEY_MODE   :   currentPage = P_DEV_S_GATEWAY;  cursor  = 0;            printOLED("SG");                        break;
                 ; 0016 01E3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 ; 0016 01E4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 ; 0016 01E5         case KEY_OK     :   if(cursor == 12){
                 ; 0016 01E6                                 currentPage = P_DEV_S_CONFIRM;
                 ; 0016 01E7                                 cursor      = 0;
                 ; 0016 01E8                                 printOLED("SF%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,",
                 ; 0016 01E9                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 01EA                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 01EB                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 01EC                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 01ED                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 01EE                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 01EF                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 01F0                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 01F1                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 01F2                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 01F3                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 01F4                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 01F5                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 01F6                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 01F7                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 01F8                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                 ; 0016 01F9                             }
                 ; 0016 01FA                             else if(cursor < 12){
                 ; 0016 01FB                                 if((cursor%3) == 0){
                 ; 0016 01FC                                     if(++setServer[cursor] >2)  setServer[cursor] = 0;
                 ; 0016 01FD                                 }
                 ; 0016 01FE                                 else{
                 ; 0016 01FF                                     if(++setServer[cursor] >9)  setServer[cursor] = 0;
                 ; 0016 0200                                 }
                 ; 0016 0201                                 //if(++setServer[cursor] >9)  setServer[cursor] = 0;
                 ; 0016 0202                                 printOLED("ID%1X%1d",cursor, setServer[cursor]);
                 ; 0016 0203                             }
                 ; 0016 0204                             else{                       // -- Exit -- should not occur
                 ; 0016 0205                                 currentPage = P_MONITOR;
                 ; 0016 0206                                 cursor      = 0;
                 ; 0016 0207                                 printOLED("M0");
                 ; 0016 0208                             }
                 ; 0016 0209             break;
                 ; 0016 020A         }
                 ; 0016 020B     }
                 ; 0016 020C     else if ( currentPage == P_DEV_S_CONFIRM )
                 ; 0016 020D     {
                 ; 0016 020E         switch(key){
                 ; 0016 020F         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 1;    printOLED("M6%1d",cursor);  break;
                 ; 0016 0210         case KEY_UP     :   /* no operation */                                                          break;
                 ; 0016 0211         case KEY_DOWN   :   /* no operation */                                                          break;
                 ; 0016 0212         case KEY_OK     :   currentPage = P_FINISH;
                 ; 0016 0213                             tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0214                             tmpPrevPage = P_DEV_S_CONFIRM;
                 ; 0016 0215                             cursor      = 0;
                 ; 0016 0216                             // -- set network -- //
                 ; 0016 0217                             res = ETH_setConfig(setIp,setMask,setGw,setServer);
                 ; 0016 0218                             //res = setNetworkInfo(setIp,setMask,setGw,setServer);
                 ; 0016 0219                             if(res<0){
                 ; 0016 021A                                 printDebug("<MENU_processKey> ETH_setConfig() failed \r\n");
                 ; 0016 021B                             }
                 ; 0016 021C 
                 ; 0016 021D                             // ----------------- //
                 ; 0016 021E                             printOLED("FI");
                 ; 0016 021F                             break;
                 ; 0016 0220         }
                 ; 0016 0221     }
                 ; 0016 0222     else if ( currentPage == P_PRB_MENU )
                 ; 0016 0223     {
                 ; 0016 0224         switch(key){
                 ; 0016 0225         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 1;            printOLED("M1%1d",cursor);  break;
                 ; 0016 0226         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0227         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0228         case KEY_OK     :   if(cursor == 0){            // -- View Probe Config
                 ; 0016 0229                                 currentPage = P_PRB_V;
                 ; 0016 022A                                 cursor      = 0;
                 ; 0016 022B                                 showProbeConfig(cursor);
                 ; 0016 022C 
                 ; 0016 022D                             }
                 ; 0016 022E                             else if(cursor == 1){       // -- Set Probe Config
                 ; 0016 022F                                 currentPage = P_ENTER_U_PASS;
                 ; 0016 0230                                 tmpNextPage = P_PRB_S;
                 ; 0016 0231                                 tmpPrevPage = P_PRB_MENU;
                 ; 0016 0232                                 memset(entPwd,0xFF,sizeof(entPwd));
                 ; 0016 0233                                 cursor      = 0;
                 ; 0016 0234                                 printOLED("P0");
                 ; 0016 0235                             }
                 ; 0016 0236                             else{                       // -- Exit -- should not occur
                 ; 0016 0237                                 currentPage = P_MONITOR;
                 ; 0016 0238                                 cursor      = 0;
                 ; 0016 0239                                 printOLED("M0");
                 ; 0016 023A                             }
                 ; 0016 023B             break;
                 ; 0016 023C         }
                 ; 0016 023D     }
                 ; 0016 023E     else if ( currentPage == P_PRB_V )
                 ; 0016 023F     {
                 ; 0016 0240         switch(key){
                 ; 0016 0241         case KEY_MODE   :   currentPage = P_PRB_MENU;       cursor  = 0;            printOLED("M3%1d",cursor);  break;
                 ; 0016 0242         case KEY_UP     :   if(++cursor > 4){               cursor  = 0;    }       showProbeConfig(cursor);    break;
                 ; 0016 0243         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 4;    }       showProbeConfig(cursor);    break;
                 ; 0016 0244         case KEY_OK     :   currentPage = P_PRB_MENU;       cursor  = 0;            printOLED("M3%1d",cursor);  break;
                 ; 0016 0245         }
                 ; 0016 0246     }
                 ; 0016 0247     else if ( currentPage == P_PRB_S )
                 ; 0016 0248     {
                 ; 0016 0249         switch(key){
                 ; 0016 024A         case KEY_MODE   :   currentPage = P_PRB_MENU;       cursor  = 1;            printOLED("M3%1d",cursor);  break;
                 ; 0016 024B         case KEY_UP     :   if(--cursor < 0){               cursor  = 5;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 024C         case KEY_DOWN   :   if(++cursor > 5){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 024D         case KEY_OK     :   if(cursor < 5){
                 ; 0016 024E                                 prbEn[cursor] = !prbEn[cursor];
                 ; 0016 024F                                 printOLED("ED%1d%1d",cursor,prbEn[cursor]);
                 ; 0016 0250                             }
                 ; 0016 0251                             else if(cursor == 5){       // -- Display Finish page
                 ; 0016 0252                                 currentPage = P_FINISH;
                 ; 0016 0253                                 tmpNextPage = P_PRB_MENU;
                 ; 0016 0254                                 cursor      = 0;
                 ; 0016 0255                                 for(i=0;i<MAX_SENS_CHANNEL;i++){
                 ; 0016 0256                                     operating_config.sensorEnable[i]    = prbEn[i];
                 ; 0016 0257                                 }
                 ; 0016 0258 
                 ; 0016 0259                                 res = setOperatingConfig(&operating_config);
                 ; 0016 025A                                 if(res < 0){
                 ; 0016 025B                                     printDebug("<MENU_processKey> setOperatingConfig() failed\r\n");
                 ; 0016 025C                                     currentPage = P_FAILED;
                 ; 0016 025D                                     tmpNextPage = P_PRB_MENU;
                 ; 0016 025E                                     tmpPrevPage = P_PRB_S;
                 ; 0016 025F                                     cursor      = 0;
                 ; 0016 0260                                     printOLED("FL");
                 ; 0016 0261                                 }
                 ; 0016 0262                                 else{
                 ; 0016 0263                                     currentPage = P_FINISH;
                 ; 0016 0264                                     tmpNextPage = P_PRB_MENU;
                 ; 0016 0265                                     tmpPrevPage = P_PRB_S;
                 ; 0016 0266                                     cursor      = 0;
                 ; 0016 0267                                     printOLED("FI");
                 ; 0016 0268                                 }
                 ; 0016 0269                             }
                 ; 0016 026A                             else{                       // -- Exit -- should not occur
                 ; 0016 026B                                 currentPage = P_MONITOR;
                 ; 0016 026C                                 cursor      = 0;
                 ; 0016 026D                                 printOLED("M0");
                 ; 0016 026E                             }
                 ; 0016 026F             break;
                 ; 0016 0270         }
                 ; 0016 0271     }
                 ; 0016 0272     else if ( currentPage == P_MANAGE_MENU )
                 ; 0016 0273     {
                 ; 0016 0274         switch(key){
                 ; 0016 0275         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 2;            printOLED("M1%1d",cursor);  break;
                 ; 0016 0276         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0277         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0278         case KEY_OK     :   if(cursor == 0){            // -- Set Mute
                 ; 0016 0279                                 currentPage = P_MUTE_MENU;
                 ; 0016 027A                                 cursor      = 0;
                 ; 0016 027B                                 mute        = muteMode;
                 ; 0016 027C                                 printOLED("MU%1d",cursor);
                 ; 0016 027D                                 printOLED("ED%1d%1d",cursor+2,mute);
                 ; 0016 027E                             }
                 ; 0016 027F                             else if(cursor == 1){       // -- Set New User Password
                 ; 0016 0280                                 currentPage = P_ENTER_U_PASS;
                 ; 0016 0281                                 tmpNextPage = P_PASS_NEW;
                 ; 0016 0282                                 tmpPrevPage = P_MANAGE_MENU;
                 ; 0016 0283                                 memset(entPwd,0xFF,sizeof(entPwd));
                 ; 0016 0284                                 cursor      = 0;
                 ; 0016 0285                                 printOLED("P0");
                 ; 0016 0286                             }
                 ; 0016 0287                             else{                       // -- Exit -- should not occur
                 ; 0016 0288                                 currentPage = P_MONITOR;
                 ; 0016 0289                                 cursor      = 0;
                 ; 0016 028A                                 printOLED("M0");
                 ; 0016 028B                             }
                 ; 0016 028C             break;
                 ; 0016 028D         }
                 ; 0016 028E     }
                 ; 0016 028F     else if ( currentPage == P_MUTE_MENU )
                 ; 0016 0290     {
                 ; 0016 0291         switch(key){
                 ; 0016 0292         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 0;            printOLED("M4%1d",cursor);  break;
                 ; 0016 0293         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MU%1d",cursor);  break;
                 ; 0016 0294         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MU%1d",cursor);  break;
                 ; 0016 0295         case KEY_OK     :   if(cursor == 0){            // -- Set Device Enable
                 ; 0016 0296                                 mute       = !mute;
                 ; 0016 0297                                 printOLED("ED%1d%1d",cursor+2,mute);
                 ; 0016 0298                             }
                 ; 0016 0299                             else if(cursor == 1){       // -- Display Finish page
                 ; 0016 029A                                 currentPage = P_FINISH;
                 ; 0016 029B                                 tmpNextPage = P_MANAGE_MENU;
                 ; 0016 029C                                 tmpPrevPage = P_MUTE_MENU;
                 ; 0016 029D                                 muteMode    = mute;
                 ; 0016 029E                                 cursor      = 0;
                 ; 0016 029F                                 printOLED("FI");
                 ; 0016 02A0                             }
                 ; 0016 02A1                             else{                       // -- Exit -- should not occur
                 ; 0016 02A2                                 currentPage = P_MONITOR;
                 ; 0016 02A3                                 cursor      = 0;
                 ; 0016 02A4                                 printOLED("M0");
                 ; 0016 02A5                             }
                 ; 0016 02A6             break;
                 ; 0016 02A7         }
                 ; 0016 02A8     }
                 ; 0016 02A9     else if ( currentPage == P_PASS_NEW )
                 ; 0016 02AA     {
                 ; 0016 02AB         switch(key){
                 ; 0016 02AC         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 1;        printOLED("M4%1d",cursor);      break;
                 ; 0016 02AD         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 ; 0016 02AE                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);      break;
                 ; 0016 02AF         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 ; 0016 02B0                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);      break;
                 ; 0016 02B1         case KEY_OK     :   if(cursor == 4){
                 ; 0016 02B2                                 currentPage = P_PASS_CONFIRM;
                 ; 0016 02B3                                 memset(confPwd,0xFF,sizeof(confPwd));
                 ; 0016 02B4                                 cursor      = 0;
                 ; 0016 02B5                                 printOLED("P5");
                 ; 0016 02B6                             }
                 ; 0016 02B7                             else if(cursor < 4){
                 ; 0016 02B8                                 if(++newPwd[cursor] >9) newPwd[cursor] = 0;
                 ; 0016 02B9                                 printOLED("PD%1d%1d",cursor, newPwd[cursor]);
                 ; 0016 02BA                             }
                 ; 0016 02BB                             break;
                 ; 0016 02BC         }
                 ; 0016 02BD     }
                 ; 0016 02BE     else if ( currentPage == P_PASS_CONFIRM )
                 ; 0016 02BF     {
                 ; 0016 02C0         switch(key){
                 ; 0016 02C1         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 1;        printOLED("M4%1d",cursor);      break;
                 ; 0016 02C2         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 ; 0016 02C3                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);      break;
                 ; 0016 02C4         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 ; 0016 02C5                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);      break;
                 ; 0016 02C6         case KEY_OK     :   if(cursor == 4){
                 ; 0016 02C7                                 // -- checkValidation -- //
                 ; 0016 02C8                                 if(memcmp(newPwd,confPwd,sizeof(newPwd)) != 0){
                 ; 0016 02C9                                     printDebug("<MENU_processKey> newPwd & confPwd not match\r\n");
                 ; 0016 02CA                                     memset(newPwd,0xFF,sizeof(newPwd));
                 ; 0016 02CB                                     memset(confPwd,0xFF,sizeof(confPwd));
                 ; 0016 02CC                                     currentPage = P_FAILED;
                 ; 0016 02CD                                     tmpNextPage = P_MANAGE_MENU;
                 ; 0016 02CE                                     tmpPrevPage = P_PASS_CONFIRM;
                 ; 0016 02CF                                     cursor      = 0;
                 ; 0016 02D0                                     printOLED("FL");
                 ; 0016 02D1                                 }
                 ; 0016 02D2                                 else{
                 ; 0016 02D3                                     r2ecpy(uPwd,(unsigned char *) confPwd,sizeof(userPwd));
                 ; 0016 02D4                                     currentPage = P_FINISH;
                 ; 0016 02D5                                     tmpNextPage = P_MANAGE_MENU;
                 ; 0016 02D6                                     tmpPrevPage = P_PASS_CONFIRM;
                 ; 0016 02D7                                     cursor      = 0;
                 ; 0016 02D8                                     printOLED("FI");
                 ; 0016 02D9                                 }
                 ; 0016 02DA                             }
                 ; 0016 02DB                             else if(cursor < 4){
                 ; 0016 02DC                                 if(++confPwd[cursor] >9) confPwd[cursor] = 0;
                 ; 0016 02DD                                 printOLED("PD%1d%1d",cursor, confPwd[cursor]);
                 ; 0016 02DE                             }
                 ; 0016 02DF 
                 ; 0016 02E0                             break;
                 ; 0016 02E1         }
                 ; 0016 02E2     }
                 ; 0016 02E3     else if ( currentPage == P_MTNC_MENU )
                 ; 0016 02E4     {
                 ; 0016 02E5         switch(key){
                 ; 0016 02E6         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 3;            printOLED("M1%1d",cursor);  break;
                 ; 0016 02E7         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 02E8         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 02E9         case KEY_OK     :   if(cursor == 0){            // -- Set Voltage Reference
                 ; 0016 02EA                                 currentPage = P_SET_VREF;
                 ; 0016 02EB                                 cursor      = 0;
                 ; 0016 02EC                                 res = get_current_vref(&vRef[0]);
                 ; 0016 02ED                                 if(res < 0){
                 ; 0016 02EE                                     vRef[0] = 2;
                 ; 0016 02EF                                     vRef[1] = 5;
                 ; 0016 02F0                                     vRef[2] = 6;
                 ; 0016 02F1                                 }
                 ; 0016 02F2                                 printOLED("SV");
                 ; 0016 02F3                                 for(i=0;i<3;i++){
                 ; 0016 02F4                                     printOLED("VD%1d%1d",i,vRef[i]);
                 ; 0016 02F5                                 }
                 ; 0016 02F6                             }
                 ; 0016 02F7                             else if(cursor == 1){       // -- Calibrate method 1
                 ; 0016 02F8                                 currentPage = P_CAL1_SEL_REF_PRB;
                 ; 0016 02F9                                 cursor      = 0;
                 ; 0016 02FA                                 prb1        = 0;
                 ; 0016 02FB                                 printOLED("S1%1d",prb1+1);
                 ; 0016 02FC                             }
                 ; 0016 02FD                             else if(cursor == 2){       // -- Calibrate method 2
                 ; 0016 02FE                                 currentPage = P_CAL2_SEL_PRB;
                 ; 0016 02FF                                 cursor      = 0;
                 ; 0016 0300                                 prb1        = 0;
                 ; 0016 0301                                 printOLED("S2%1d",prb1+1);
                 ; 0016 0302                             }
                 ; 0016 0303                             else if(cursor == 3){       // -- Reset User Password
                 ; 0016 0304                                 currentPage = P_RESET_CONFIRM;
                 ; 0016 0305                                 cursor      = 0;
                 ; 0016 0306                                 printOLED("RC");
                 ; 0016 0307                             }
                 ; 0016 0308                             else{                       // -- Exit -- should not occur
                 ; 0016 0309                                 currentPage = P_MONITOR;
                 ; 0016 030A                                 cursor      = 0;
                 ; 0016 030B                                 printOLED("M0");
                 ; 0016 030C                             }
                 ; 0016 030D             break;
                 ; 0016 030E         }
                 ; 0016 030F     }
                 ; 0016 0310     else if ( currentPage == P_SET_VREF )
                 ; 0016 0311     {
                 ; 0016 0312         switch(key){
                 ; 0016 0313         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 0;            printOLED("M7%1d",cursor);              break;
                 ; 0016 0314         case KEY_UP     :   if(++cursor > 3){   cursor  = 0;                }       printOLED("VA%1d",cursor);              break;
                 ; 0016 0315         case KEY_DOWN   :   if(--cursor < 0){   cursor  = 3;                }       printOLED("VA%1d",cursor);              break;
                 ; 0016 0316         case KEY_OK     :   if(cursor == 3){
                 ; 0016 0317                                 currentPage = P_FINISH;
                 ; 0016 0318                                 tmpNextPage = P_MTNC_MENU;
                 ; 0016 0319                                 tmpPrevPage = P_SET_VREF;
                 ; 0016 031A                                 set_vref(&vRef[0]);
                 ; 0016 031B                                 cursor = 0;
                 ; 0016 031C                                 printOLED("FI");
                 ; 0016 031D                             }
                 ; 0016 031E                             else if(cursor < 3){
                 ; 0016 031F                                 if(++vRef[cursor] >9) vRef[cursor] = 0;
                 ; 0016 0320                                 printOLED("VD%1d%1d",cursor, vRef[cursor]);
                 ; 0016 0321                             }
                 ; 0016 0322                             else{                       // -- Exit -- should not occur
                 ; 0016 0323                                 currentPage = P_MONITOR;
                 ; 0016 0324                                 cursor      = 0;
                 ; 0016 0325                                 printOLED("M0");
                 ; 0016 0326                             }
                 ; 0016 0327             break;
                 ; 0016 0328         }
                 ; 0016 0329     }
                 ; 0016 032A     else if ( currentPage == P_CAL1_SEL_REF_PRB )
                 ; 0016 032B     {
                 ; 0016 032C         switch(key){
                 ; 0016 032D         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 1;    prb1 = 0;   printOLED("M7%1d",cursor);  break;
                 ; 0016 032E         case KEY_UP     :   if(++cursor > 1){               cursor  = 0;    }           printOLED("SA%1d",cursor);  break;
                 ; 0016 032F         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 1;    }           printOLED("SA%1d",cursor);  break;
                 ; 0016 0330         case KEY_OK     :   if(cursor == 0){
                 ; 0016 0331                                 if(++prb1 > 4){ prb1 = 0; }
                 ; 0016 0332                                 printOLED("PN%1d",prb1+1);
                 ; 0016 0333                             }
                 ; 0016 0334                             else if(cursor == 1){
                 ; 0016 0335                                 currentPage = P_CAL1_SEL_CAL_PRB;
                 ; 0016 0336                                 cursor      = 0;
                 ; 0016 0337                                 prb2        = 0;
                 ; 0016 0338                                 printOLED("S2%1d",prb2+1);
                 ; 0016 0339                             }
                 ; 0016 033A                             else{                       // -- Exit -- should not occur
                 ; 0016 033B                                 currentPage = P_MONITOR;
                 ; 0016 033C                                 cursor      = 0;
                 ; 0016 033D                                 printOLED("M0");
                 ; 0016 033E                             }
                 ; 0016 033F             break;
                 ; 0016 0340         }
                 ; 0016 0341     }
                 ; 0016 0342     else if ( currentPage == P_CAL1_SEL_CAL_PRB )
                 ; 0016 0343     {
                 ; 0016 0344         switch(key){
                 ; 0016 0345         case KEY_MODE   :   currentPage = P_CAL1_SEL_REF_PRB;   cursor  = 0;    prb2 = 0;   printOLED("S1%1d",prb1+1);  break;
                 ; 0016 0346         case KEY_UP     :   if(++cursor > 1){                   cursor  = 0;    }           printOLED("SA%1d",cursor);  break;
                 ; 0016 0347         case KEY_DOWN   :   if(--cursor < 0){                   cursor  = 1;    }           printOLED("SA%1d",cursor);  break;
                 ; 0016 0348         case KEY_OK     :   if(cursor == 0){
                 ; 0016 0349                                 if(++prb2 > 4){ prb2 = 0; }
                 ; 0016 034A                                 printOLED("PN%1d",prb2+1);
                 ; 0016 034B                             }
                 ; 0016 034C                             else if(cursor == 1){
                 ; 0016 034D                                 currentPage = P_CAL1_CONFIRM;
                 ; 0016 034E                                 cursor      = 0;
                 ; 0016 034F                                 printOLED("CC%1d",prb2+1);
                 ; 0016 0350                             }
                 ; 0016 0351                             else{                       // -- Exit -- should not occur
                 ; 0016 0352                                 currentPage = P_MONITOR;
                 ; 0016 0353                                 cursor      = 0;
                 ; 0016 0354                                 printOLED("M0");
                 ; 0016 0355                             }
                 ; 0016 0356             break;
                 ; 0016 0357         }
                 ; 0016 0358     }
                 ; 0016 0359 //    else if ( currentPage == P_CAL1_CONFIRM )
                 ; 0016 035A //    {
                 ; 0016 035B //        switch(key){
                 ; 0016 035C //        case KEY_MODE   :   currentPage = P_CAL1_SEL_CAL_PRB;   cursor  = 0;        printOLED("S2%1d",prb2+1);  break;
                 ; 0016 035D //        case KEY_UP     :   /* no operation */                                                                  break;
                 ; 0016 035E //        case KEY_DOWN   :   /* no operation */                                                                  break;
                 ; 0016 035F //        case KEY_OK     :   res = sensorCalibrate1(prb1,prb2);
                 ; 0016 0360 //                            if(res < 0){
                 ; 0016 0361 //                                currentPage = P_FAILED;
                 ; 0016 0362 //                                tmpNextPage = P_CAL1_SEL_CAL_PRB;
                 ; 0016 0363 //                                tmpPrevPage = P_CAL1_CONFIRM;
                 ; 0016 0364 //                                cursor      = 0;
                 ; 0016 0365 //                                printOLED("FL");
                 ; 0016 0366 //                            }
                 ; 0016 0367 //                            else{
                 ; 0016 0368 //                                currentPage = P_FINISH;
                 ; 0016 0369 //                                tmpNextPage = P_CAL1_SEL_CAL_PRB;
                 ; 0016 036A //                                tmpPrevPage = P_CAL1_CONFIRM;
                 ; 0016 036B //                                cursor      = 0;
                 ; 0016 036C //                                printOLED("FI");
                 ; 0016 036D //                            }
                 ; 0016 036E //                            break;
                 ; 0016 036F //        }
                 ; 0016 0370 //    }
                 ; 0016 0371     else if ( currentPage == P_CAL2_SEL_PRB )
                 ; 0016 0372     {
                 ; 0016 0373         switch(key){
                 ; 0016 0374         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 2;            printOLED("M7%1d",cursor);  break;
                 ; 0016 0375         case KEY_UP     :   if(++cursor > 1){               cursor  = 0;    }       printOLED("SA%1d",cursor);  break;
                 ; 0016 0376         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 1;    }       printOLED("SA%1d",cursor);  break;
                 ; 0016 0377         case KEY_OK     :   if(cursor == 0){
                 ; 0016 0378                                 if(++prb1 > 4){ prb1 = 0; }
                 ; 0016 0379                                 printOLED("PN%1d",prb1+1);
                 ; 0016 037A                             }
                 ; 0016 037B                             else if(cursor == 1){
                 ; 0016 037C                                 currentPage = P_CAL2_MENU;
                 ; 0016 037D                                 cursor      = 0;
                 ; 0016 037E                                 printOLED("M8%1d",cursor);
                 ; 0016 037F                             }
                 ; 0016 0380                             else{                       // -- Exit -- should not occur
                 ; 0016 0381                                 currentPage = P_MONITOR;
                 ; 0016 0382                                 cursor      = 0;
                 ; 0016 0383                                 printOLED("M0");
                 ; 0016 0384                             }
                 ; 0016 0385             break;
                 ; 0016 0386         }
                 ; 0016 0387     }
                 ; 0016 0388 //    else if ( currentPage == P_CAL2_MENU )
                 ; 0016 0389 //    {
                 ; 0016 038A //        switch(key){
                 ; 0016 038B //        case KEY_MODE   :   currentPage = P_CAL2_SEL_PRB;   cursor  = 0;        printOLED("S2%1d",prb1+1);  break;
                 ; 0016 038C //        case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }   printOLED("MA%1d",cursor);  break;
                 ; 0016 038D //        case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }   printOLED("MA%1d",cursor);  break;
                 ; 0016 038E //        case KEY_OK     :   if(cursor < 3){
                 ; 0016 038F //                                if(cursor == 0){        currentPage = P_CAL2_SPT1;  }
                 ; 0016 0390 //                                else if(cursor == 1){   currentPage = P_CAL2_SPT2;  }
                 ; 0016 0391 //                                else if(cursor == 2){   currentPage = P_CAL2_SPT3;  }
                 ; 0016 0392 //
                 ; 0016 0393 //                                printOLED("CP%1d%1d",cursor+1,prb1+1);
                 ; 0016 0394 //
                 ; 0016 0395 //                                res = sensorGetCurrentSetPoint(prb1,CALPOINT(cursor+1),&calPnt[0]);
                 ; 0016 0396 //                                if(res<0){          memset(&calPnt[0],0x00,sizeof(calPnt));     }
                 ; 0016 0397 //                                for(i=0;i<6;i++){   printOLED("CD%1d%1d",i,calPnt[i]);
                 ; 0016 0398 //                                                    printDebug("calPnt[%1d] = %1d\r\n",i,calPnt[i]);         }
                 ; 0016 0399 //                                cursor      = 0;
                 ; 0016 039A //                            }
                 ; 0016 039B //                            else if(cursor == 3){       // -- Calculate
                 ; 0016 039C //                                currentPage = P_CAL2_CONFIRM;
                 ; 0016 039D //                                cursor      = 0;
                 ; 0016 039E //                                printOLED("CC%1d",prb1+1);
                 ; 0016 039F //                            }
                 ; 0016 03A0 //                            else{                       // -- Exit -- should not occur
                 ; 0016 03A1 //                                currentPage = P_MONITOR;
                 ; 0016 03A2 //                                cursor      = 0;
                 ; 0016 03A3 //                                printOLED("M0");
                 ; 0016 03A4 //                            }
                 ; 0016 03A5 //            break;
                 ; 0016 03A6 //        }
                 ; 0016 03A7 //    }
                 ; 0016 03A8 //    else if ((currentPage == P_CAL2_SPT1) || (currentPage == P_CAL2_SPT2) || (currentPage == P_CAL2_SPT3))
                 ; 0016 03A9 //    {
                 ; 0016 03AA //        switch(key){
                 ; 0016 03AB //        case KEY_MODE   :   currentPage = P_CAL2_MENU;
                 ; 0016 03AC //                            if(currentPage == P_CAL2_SPT1){         cursor  = 0;    }
                 ; 0016 03AD //                            else if(currentPage == P_CAL2_SPT2){    cursor  = 1;    }
                 ; 0016 03AE //                            else if(currentPage == P_CAL2_SPT3){    cursor  = 2;    }
                 ; 0016 03AF //                            printOLED("M8%1d",cursor);                                                                      break;
                 ; 0016 03B0 //        case KEY_UP     :   if(++cursor > 6){                       cursor  = 0;    }       printOLED("CA%1d",cursor);      break;
                 ; 0016 03B1 //        case KEY_DOWN   :   if(--cursor < 0){                       cursor  = 6;    }       printOLED("CA%1d",cursor);      break;
                 ; 0016 03B2 //        case KEY_OK     :   if(cursor == 6){
                 ; 0016 03B3 //
                 ; 0016 03B4 //                                if(currentPage == P_CAL2_SPT1){
                 ; 0016 03B5 //                                    res = sensorSetCurrentSetPoint(prb1,CALPOINT(1),&calPnt[0]);
                 ; 0016 03B6 //                                }
                 ; 0016 03B7 //                                else if(currentPage == P_CAL2_SPT2){
                 ; 0016 03B8 //                                    res = sensorSetCurrentSetPoint(prb1,CALPOINT(2),&calPnt[0]);
                 ; 0016 03B9 //                                }
                 ; 0016 03BA //                                else if(currentPage == P_CAL2_SPT3){
                 ; 0016 03BB //                                    res = sensorSetCurrentSetPoint(prb1,CALPOINT(3),&calPnt[0]);
                 ; 0016 03BC //                                }
                 ; 0016 03BD //                                else{
                 ; 0016 03BE //                                    // -- should not occur -- //
                 ; 0016 03BF //                                    res = -1;
                 ; 0016 03C0 //                                }
                 ; 0016 03C1 //
                 ; 0016 03C2 //                                if(res < 0){
                 ; 0016 03C3 //                                    currentPage = P_FAILED;
                 ; 0016 03C4 //                                    tmpNextPage = P_CAL2_MENU;
                 ; 0016 03C5 //                                    tmpPrevPage = currentPage;
                 ; 0016 03C6 //                                    cursor      = 0;
                 ; 0016 03C7 //                                    printOLED("FL");
                 ; 0016 03C8 //                                }
                 ; 0016 03C9 //                                else{
                 ; 0016 03CA //                                    currentPage = P_FINISH;
                 ; 0016 03CB //                                    tmpNextPage = P_CAL2_MENU;
                 ; 0016 03CC //                                    tmpPrevPage = currentPage;
                 ; 0016 03CD //                                    cursor      = 0;
                 ; 0016 03CE //                                    printOLED("FI");
                 ; 0016 03CF //                                }
                 ; 0016 03D0 //                            }
                 ; 0016 03D1 //                            else if(cursor == 0){   // toggle '+' & '-'
                 ; 0016 03D2 //                                if(++calPnt[cursor] > 1){ calPnt[cursor] = 0;   }
                 ; 0016 03D3 //                                printOLED("CD%1d%1d",cursor,calPnt[cursor]);
                 ; 0016 03D4 //                            }
                 ; 0016 03D5 //                            else if(cursor < 6){
                 ; 0016 03D6 //                                if(++calPnt[cursor] > 9){ calPnt[cursor] = 0;   }
                 ; 0016 03D7 //                                printOLED("CD%1d%1d",cursor,calPnt[cursor]);
                 ; 0016 03D8 //                            }
                 ; 0016 03D9 //                            else{                       // -- Exit -- should not occur
                 ; 0016 03DA //                                currentPage = P_MONITOR;
                 ; 0016 03DB //                                cursor      = 0;
                 ; 0016 03DC //                                printOLED("M0");
                 ; 0016 03DD //                            }
                 ; 0016 03DE //            break;
                 ; 0016 03DF //        }
                 ; 0016 03E0 //    }
                 ; 0016 03E1 //    else if ( currentPage == P_CAL2_CONFIRM )
                 ; 0016 03E2 //    {
                 ; 0016 03E3 //        switch(key){
                 ; 0016 03E4 //        case KEY_MODE   :   currentPage = P_CAL2_MENU;      cursor  = 1;            printOLED("M8%1d",cursor);  break;
                 ; 0016 03E5 //        case KEY_UP     :   /* no operation */                                                                  break;
                 ; 0016 03E6 //        case KEY_DOWN   :   /* no operation */                                                                  break;
                 ; 0016 03E7 //        case KEY_OK     :   res = sensorCalibrate2(prb1);
                 ; 0016 03E8 //                            if(res < 0){
                 ; 0016 03E9 //                                currentPage = P_FAILED;
                 ; 0016 03EA //                                tmpNextPage = P_CAL2_MENU;
                 ; 0016 03EB //                                tmpPrevPage = P_CAL2_CONFIRM;
                 ; 0016 03EC //                                cursor      = 0;
                 ; 0016 03ED //                                printOLED("FL");
                 ; 0016 03EE //                            }
                 ; 0016 03EF //                            else{
                 ; 0016 03F0 //                                currentPage = P_FINISH;
                 ; 0016 03F1 //                                tmpNextPage = P_CAL2_MENU;
                 ; 0016 03F2 //                                tmpPrevPage = P_CAL2_CONFIRM;
                 ; 0016 03F3 //                                cursor      = 0;
                 ; 0016 03F4 //                                printOLED("FI");
                 ; 0016 03F5 //                            }
                 ; 0016 03F6 //                            break;
                 ; 0016 03F7 //        }
                 ; 0016 03F8 //    }
                 ; 0016 03F9     else if ( currentPage == P_RESET_CONFIRM )
                 ; 0016 03FA     {
                 ; 0016 03FB         switch(key){
                 ; 0016 03FC         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 3;            printOLED("M7%1d",cursor);  break;
                 ; 0016 03FD         case KEY_UP     :   /* no operation */                                                                  break;
                 ; 0016 03FE         case KEY_DOWN   :   /* no operation */                                                                  break;
                 ; 0016 03FF         case KEY_OK     :   memset(newPwd,0x00,sizeof(newPwd));
                 ; 0016 0400                             r2ecpy(uPwd,(unsigned char *) newPwd,sizeof(userPwd));
                 ; 0016 0401                             currentPage = P_FINISH;
                 ; 0016 0402                             tmpNextPage = P_MTNC_MENU;
                 ; 0016 0403                             tmpPrevPage = P_RESET_CONFIRM;
                 ; 0016 0404                             cursor      = 0;
                 ; 0016 0405                             printOLED("FI");
                 ; 0016 0406                             break;
                 ; 0016 0407         }
                 ; 0016 0408     }
                 ; 0016 0409     else if ( currentPage == P_ENTER_U_PASS )
                 ; 0016 040A     {
                 ; 0016 040B         switch(key){
                 ; 0016 040C         case KEY_MODE   :   switch(tmpPrevPage){
                 ; 0016 040D                             case P_DEV_MENU     : currentPage = P_DEV_MENU;     cursor  = 1;    printOLED("M2%1d",cursor);  break;
                 ; 0016 040E                             case P_PRB_MENU     : currentPage = P_PRB_MENU;     cursor  = 1;    printOLED("M3%1d",cursor);  break;
                 ; 0016 040F                             case P_MANAGE_MENU  : currentPage = P_MANAGE_MENU;  cursor  = 1;    printOLED("M4%1d",cursor);  break;
                 ; 0016 0410                             }
                 ; 0016 0411                             // --- clear entered password
                 ; 0016 0412                             memset(entPwd,0xFF,sizeof(entPwd));                                                             break;
                 ; 0016 0413         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 ; 0016 0414                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);                  break;
                 ; 0016 0415         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 ; 0016 0416                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);                  break;
                 ; 0016 0417         case KEY_OK     :   if(cursor == 4){
                 ; 0016 0418 
                 ; 0016 0419                                 // -- verifyPassword -- //
                 ; 0016 041A                                 if(recmp((unsigned char *) entPwd,uPwd,sizeof(entPwd)) != 0){
                 ; 0016 041B                                     currentPage = P_WRONG_PASS;  cursor = 0;    printOLED("WP");
                 ; 0016 041C                                     memset(entPwd,0xFF,sizeof(entPwd));
                 ; 0016 041D                                     break;
                 ; 0016 041E                                 }
                 ; 0016 041F 
                 ; 0016 0420                                 // -- else, allow access -- //
                 ; 0016 0421                                 switch(tmpNextPage){
                 ; 0016 0422                                 case P_DEV_S_MENU   : currentPage = P_DEV_S_MENU;   cursor  = 0;    printOLED("M6%1d",cursor);  break;
                 ; 0016 0423                                 case P_PRB_S        : currentPage = P_PRB_S;        cursor  = 0;    printOLED("PS");
                 ; 0016 0424                                                       for(i=0;i<MAX_SENS_CHANNEL;i++){
                 ; 0016 0425                                                         prbEn[i]  = operating_config.sensorEnable[i];
                 ; 0016 0426                                                         printOLED("ED%1d%1d",i,prbEn[i]);
                 ; 0016 0427                                                       }
                 ; 0016 0428                                                       break;
                 ; 0016 0429                                 case P_PASS_NEW     : currentPage = P_PASS_NEW;
                 ; 0016 042A                                                       memset(newPwd,0xFF,sizeof(newPwd));
                 ; 0016 042B                                                       cursor  = 0;
                 ; 0016 042C                                                       printOLED("P4");
                 ; 0016 042D                                                       break;
                 ; 0016 042E                                 default             : // -- Exit -- should not occur
                 ; 0016 042F                                                       currentPage = P_MONITOR;
                 ; 0016 0430                                                       cursor      = 0;
                 ; 0016 0431                                                       printOLED("M0");
                 ; 0016 0432                                                       break;
                 ; 0016 0433                                 }
                 ; 0016 0434                             }
                 ; 0016 0435                             else if(cursor < 4){
                 ; 0016 0436                                 if(++entPwd[cursor] >9) entPwd[cursor] = 0;
                 ; 0016 0437                                 printOLED("PD%1d%1d",cursor, entPwd[cursor]);
                 ; 0016 0438                             }
                 ; 0016 0439             break;
                 ; 0016 043A         }
                 ; 0016 043B     }
                 ; 0016 043C     else if ( currentPage == P_ENTER_M_PASS )
                 ; 0016 043D     {
                 ; 0016 043E         switch(key){
                 ; 0016 043F         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 3;            printOLED("M1%1d",cursor);  break;
                 ; 0016 0440         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 ; 0016 0441                             if(++cursor > 4){   cursor  = 0;                }       printOLED("PA%1d",cursor);  break;
                 ; 0016 0442         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 ; 0016 0443                             if(--cursor < 0){   cursor  = 4;                }       printOLED("PA%1d",cursor);  break;
                 ; 0016 0444         case KEY_OK     :   if(cursor == 4){
                 ; 0016 0445 
                 ; 0016 0446                                 // -- verifyPassword -- //
                 ; 0016 0447                                 if(recmp((unsigned char *) entPwd,sPwd,sizeof(entPwd)) != 0){
                 ; 0016 0448                                     tmpPrevPage = P_MAIN_MENU;
                 ; 0016 0449                                     currentPage = P_WRONG_PASS; cursor  = 0;    printOLED("WP");
                 ; 0016 044A                                     memset(entPwd,0xFF,sizeof(entPwd));
                 ; 0016 044B                                     break;
                 ; 0016 044C                                 }
                 ; 0016 044D 
                 ; 0016 044E                                 // -- else, allow access -- //
                 ; 0016 044F                                 currentPage = P_MTNC_MENU;     cursor  = 0;     printOLED("M7%1d",cursor);
                 ; 0016 0450                                 memset(entPwd,0xFF,sizeof(entPwd));
                 ; 0016 0451                                 break;
                 ; 0016 0452                             }
                 ; 0016 0453                             else if(cursor < 4){
                 ; 0016 0454                                 if(++entPwd[cursor] >9) entPwd[cursor] = 0;
                 ; 0016 0455                                 printOLED("PD%1d%1d",cursor, entPwd[cursor]);
                 ; 0016 0456                             }
                 ; 0016 0457             break;
                 ; 0016 0458 
                 ; 0016 0459 
                 ; 0016 045A 
                 ; 0016 045B             break;
                 ; 0016 045C         }
                 ; 0016 045D     }
                 ; 0016 045E     else if ( currentPage == P_WRONG_PASS )
                 ; 0016 045F     {
                 ; 0016 0460         switch(key){
                 ; 0016 0461         case KEY_MODE   :   /* no operation */                                                                              break;
                 ; 0016 0462         case KEY_UP     :   /* no operation */                                                                              break;
                 ; 0016 0463         case KEY_DOWN   :   /* no operation */                                                                              break;
                 ; 0016 0464         case KEY_OK     :   switch(tmpPrevPage){
                 ; 0016 0465                             case P_MAIN_MENU    : currentPage = P_MAIN_MENU;    cursor  = 3;    printOLED("M1%1d",cursor);  break;
                 ; 0016 0466                             case P_DEV_MENU     : currentPage = P_DEV_MENU;     cursor  = 1;    printOLED("M2%1d",cursor);  break;
                 ; 0016 0467                             case P_PRB_MENU     : currentPage = P_PRB_MENU;     cursor  = 1;    printOLED("M3%1d",cursor);  break;
                 ; 0016 0468                             case P_MANAGE_MENU  : currentPage = P_MANAGE_MENU;  cursor  = 1;    printOLED("M4%1d",cursor);  break;
                 ; 0016 0469                             }
                 ; 0016 046A 
                 ; 0016 046B 
                 ; 0016 046C             break;
                 ; 0016 046D         }
                 ; 0016 046E     }
                 ; 0016 046F     else if ((currentPage == P_FINISH) || (currentPage == P_FAILED) )
                 ; 0016 0470     {
                 ; 0016 0471         switch(key){
                 ; 0016 0472         case KEY_MODE   :   /* no operation */                                                                              break;
                 ; 0016 0473         case KEY_UP     :   /* no operation */                                                                              break;
                 ; 0016 0474         case KEY_DOWN   :   /* no operation */                                                                              break;
                 ; 0016 0475         case KEY_OK     :   switch(tmpNextPage){
                 ; 0016 0476                             case P_DEV_S_MENU       :   currentPage = P_DEV_S_MENU;
                 ; 0016 0477                                                         if(       tmpPrevPage == P_DEV_S_OPER){       cursor  = 0;    }
                 ; 0016 0478                                                         else if(  tmpPrevPage == P_DEV_S_CONFIRM){    cursor  = 1;    }
                 ; 0016 0479                                                         printOLED("M6%1d",cursor);                                                  break;
                 ; 0016 047A                             case P_PRB_MENU         :   currentPage = P_PRB_MENU;     cursor = 1;     printOLED("M3%1d",cursor);    break;
                 ; 0016 047B                             case P_MANAGE_MENU      :   currentPage = P_MANAGE_MENU;
                 ; 0016 047C                                                         if(       tmpPrevPage == P_MUTE_MENU){        cursor  = 0;    }
                 ; 0016 047D                                                         else if(  tmpPrevPage == P_PASS_CONFIRM){     cursor  = 1;    }
                 ; 0016 047E                                                         printOLED("M4%1d",cursor);                                                  break;
                 ; 0016 047F                             case P_MTNC_MENU        :   currentPage = P_MTNC_MENU;
                 ; 0016 0480                                                         if(       tmpPrevPage == P_SET_VREF){         cursor  = 0;    }
                 ; 0016 0481                                                         else if(  tmpPrevPage == P_CAL2_MENU){        cursor  = 2;    }
                 ; 0016 0482                                                         else if(  tmpPrevPage == P_RESET_CONFIRM){    cursor  = 3;    }
                 ; 0016 0483                                                         printOLED("M7%1d",cursor);                                                  break;
                 ; 0016 0484                             case P_CAL1_SEL_CAL_PRB :   currentPage = P_CAL1_SEL_CAL_PRB;
                 ; 0016 0485                                                         cursor      = 0;
                 ; 0016 0486                                                         printOLED("S2%1d",prb2+1);                                                  break;
                 ; 0016 0487                             case P_CAL2_MENU        :   currentPage = P_CAL2_MENU;
                 ; 0016 0488                                                         if(       tmpPrevPage == P_CAL2_SPT1){        cursor  = 0;    }
                 ; 0016 0489                                                         else if(  tmpPrevPage == P_CAL2_SPT2){        cursor  = 1;    }
                 ; 0016 048A                                                         else if(  tmpPrevPage == P_CAL2_SPT3){        cursor  = 2;    }
                 ; 0016 048B                                                         else if(  tmpPrevPage == P_CAL2_CONFIRM){     cursor  = 3;    }
                 ; 0016 048C                                                         printOLED("M8%1d",cursor);                                                  break;
                 ; 0016 048D                             }
                 ; 0016 048E 
                 ; 0016 048F 
                 ; 0016 0490             break;
                 ; 0016 0491         }
                 ; 0016 0492     }
                 ; 0016 0493 
                 ; 0016 0494     return;
                 ; 0016 0495 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Service Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void showProbeConfig(int id)
                 ; 0016 049D {
                 ; 0016 049E     int         res         = 0;
                 ; 0016 049F     int         sampling    = 0;
                 ; 0016 04A0     signed char val[4]      = {0,0,0,0};
                 ; 0016 04A1     char        str1[8]     = {0,0,0,0,0,0,0,0};
                 ; 0016 04A2     char        str2[8]     = {0,0,0,0,0,0,0,0};
                 ; 0016 04A3 
                 ; 0016 04A4 
                 ; 0016 04A5     res = get_current_sampling(sensor_config[id].samplingRate,&val[0]);
                 ;	id -> Y+24
                 ;	res -> R16,R17
                 ;	sampling -> R18,R19
                 ;	val -> Y+20
                 ;	str1 -> Y+12
                 ;	str2 -> Y+4
                 ; 0016 04A6 
                 ; 0016 04A7     if(res < 0){
                 ; 0016 04A8         val[0] = 0;
                 ; 0016 04A9         val[1] = 0;
                 ; 0016 04AA         val[2] = 0;
                 ; 0016 04AB         val[3] = 0;
                 ; 0016 04AC     }
                 ; 0016 04AD 
                 ; 0016 04AE     sampling = 0;
                 ; 0016 04AF     sampling += val[0] * 100;
                 ; 0016 04B0     sampling += val[1] * 10;
                 ; 0016 04B1     sampling += val[2];
                 ; 0016 04B2 
                 ; 0016 04B3     memset(str1,'\0',sizeof(str1));
                 ; 0016 04B4     if( operating_config.sensorEnable[id]==0x01 ){  sprintf(str1,"[E]");        }
                 ; 0016 04B5     else{                                           sprintf(str1,"[D]");        }
                 ; 0016 04B6 
                 ; 0016 04B7     memset(str2,'\0',sizeof(str2));
                 ; 0016 04B8     if( sensor_config[id].alarmEnable == 0x01   ){  sprintf(str2,"Enable");     }
                 ; 0016 04B9     else{                                           sprintf(str2,"Disable");    }
                 ; 0016 04BA 
                 ; 0016 04BB 
                 ; 0016 04BC     printDebug("<showProbeConfig> PC%1d%1d%d,%s,%s,%.1f,%d,%.1f,%.1f,%d,%.1f",
                 ; 0016 04BD                 id,val[3],sampling,
                 ; 0016 04BE                 str1,str2,
                 ; 0016 04BF                 sensor_config[id].lowerLimit,
                 ; 0016 04C0                 sensor_config[id].lowerDelay,
                 ; 0016 04C1                 sensor_config[id].lowerExtreme,
                 ; 0016 04C2                 sensor_config[id].upperLimit,
                 ; 0016 04C3                 sensor_config[id].upperDelay,
                 ; 0016 04C4                 sensor_config[id].upperExtreme);
                 ; 0016 04C5 
                 ; 0016 04C6     printOLED("PC%1d%1d%d,%s,%s,%.1f,%d,%.1f,%.1f,%d,%.1f",
                 ; 0016 04C7                 id,val[3],sampling,
                 ; 0016 04C8                 str1,str2,
                 ; 0016 04C9                 sensor_config[id].lowerLimit,
                 ; 0016 04CA                 sensor_config[id].lowerDelay,
                 ; 0016 04CB                 sensor_config[id].lowerExtreme,
                 ; 0016 04CC                 sensor_config[id].upperLimit,
                 ; 0016 04CD                 sensor_config[id].upperDelay,
                 ; 0016 04CE                 sensor_config[id].upperExtreme);
                 ; 0016 04CF 
                 ; 0016 04D0 }
                 ;/*============================================================*/
                 ;int get_current_sampling(unsigned int period, signed char *val)
                 ; 0016 04D3 {
                 ; 0016 04D4     unsigned int min, min_c;
                 ; 0016 04D5     unsigned int hr, hr_c;
                 ; 0016 04D6 
                 ; 0016 04D7     printDebug("\r\n<get_current_sampling> real value (%l sec.)\r\n");
                 ;	period -> Y+10
                 ;	*val -> Y+8
                 ;	min -> R16,R17
                 ;	min_c -> R18,R19
                 ;	hr -> R20,R21
                 ;	hr_c -> Y+6
                 ; 0016 04D8     // -- display as hour unit -- //
                 ; 0016 04D9     hr   = period / 3600;
                 ; 0016 04DA     hr_c = period % 3600;
                 ; 0016 04DB     if((hr > 0) && (hr < 1000) && (hr_c == 0)){
                 ; 0016 04DC         printDebug("<get_current_sampling> %d hr.\r\n",hr);
                 ; 0016 04DD         val[0] = hr / 100;
                 ; 0016 04DE         val[1] = (hr % 100) / 10;
                 ; 0016 04DF         val[2] = ((hr % 100) % 10);
                 ; 0016 04E0         val[3] = 2;
                 ; 0016 04E1         return 0;
                 ; 0016 04E2     }
                 ; 0016 04E3 
                 ; 0016 04E4     // -- display as minute unit -- //
                 ; 0016 04E5     min   = period / 60;
                 ; 0016 04E6     min_c = period % 60;
                 ; 0016 04E7     if((min > 0) && (min < 1000)  && (min_c == 0)){
                 ; 0016 04E8         printDebug("<get_current_sampling> %d min.\r\n",min);
                 ; 0016 04E9         val[0] = min / 100;
                 ; 0016 04EA         val[1] = (min % 100) / 10;
                 ; 0016 04EB         val[2] = ((min % 100) % 10);
                 ; 0016 04EC         val[3] = 1;
                 ; 0016 04ED         return 0;
                 ; 0016 04EE     }
                 ; 0016 04EF 
                 ; 0016 04F0     // -- display as second unit -- //
                 ; 0016 04F1     if(period < 1000){           // show only 0 - 999
                 ; 0016 04F2         printDebug("<get_current_sampling> %d sec.\r\n",period);
                 ; 0016 04F3         val[0] = period / 100;
                 ; 0016 04F4         val[1] = (period % 100) / 10;
                 ; 0016 04F5         val[2] = ((period % 100) % 10);
                 ; 0016 04F6         val[3] = 0;
                 ; 0016 04F7         return 0;
                 ; 0016 04F8     }
                 ; 0016 04F9 
                 ; 0016 04FA     if(min < 1000){
                 ; 0016 04FB         printDebug("<get_current_sampling> %d min. %d sec. ",min,min_c);
                 ; 0016 04FC         if(min_c > 30){
                 ; 0016 04FD             min++;
                 ; 0016 04FE         }
                 ; 0016 04FF         printDebug("--> %d min.\r\n",min);
                 ; 0016 0500         val[0] = min / 100;
                 ; 0016 0501         val[1] = (min % 100) / 10;
                 ; 0016 0502         val[2] = ((min % 100) % 10);
                 ; 0016 0503         val[3] = 1;
                 ; 0016 0504         return 0;
                 ; 0016 0505     }
                 ; 0016 0506 
                 ; 0016 0507     if(hr < 1000){
                 ; 0016 0508         min   = hr_c / 60;
                 ; 0016 0509         min_c = hr_c % 60;
                 ; 0016 050A         printDebug("<get_current_sampling> %d hr. %d min. %d sec. ",hr,min,min_c);
                 ; 0016 050B         if(min > 30){
                 ; 0016 050C             hr++;
                 ; 0016 050D         }
                 ; 0016 050E         printDebug("--> %d hr.\r\n",hr);
                 ; 0016 050F         val[0] = hr / 100;
                 ; 0016 0510         val[1] = (hr % 100) / 10;
                 ; 0016 0511         val[2] = ((hr % 100) % 10);
                 ; 0016 0512         val[3] = 2;
                 ; 0016 0513         return 0;
                 ; 0016 0514     }
                 ; 0016 0515 
                 ; 0016 0516     printDebug("<get_current_sampling> Can't Show.\r\n");
                 ; 0016 0517     return -1;
                 ; 0016 0518 
                 ; 0016 0519 }
                 ;/*============================================================*/
                 ;int get_current_vref(char *buf)
                 ; 0016 051C {
                 ; 0016 051D     char    valTmp[10];
                 ; 0016 051E     float   vref;
                 ; 0016 051F     int     i;
                 ; 0016 0520     int tmp;
                 ; 0016 0521     int d2;
                 ; 0016 0522     int d1;
                 ; 0016 0523     int d0;
                 ; 0016 0524 
                 ; 0016 0525     if(eep_vref_val > 10.0){
                 ;	*buf -> Y+24
                 ;	valTmp -> Y+14
                 ;	vref -> Y+10
                 ;	i -> R16,R17
                 ;	tmp -> R18,R19
                 ;	d2 -> R20,R21
                 ;	d1 -> Y+8
                 ;	d0 -> Y+6
                 ; 0016 0526         return -1;
                 ; 0016 0527     }
                 ; 0016 0528 
                 ; 0016 0529     vref = eep_vref_val;
                 ; 0016 052A     ftoa(vref,2,valTmp);
                 ; 0016 052B 
                 ; 0016 052C     if(strlen(valTmp) != 4){ return -1; }
                 ; 0016 052D 
                 ; 0016 052E     /*
                 ; 0016 052F     tmp = (int)(eep_vref_val * 100);
                 ; 0016 0530 
                 ; 0016 0531     d2  = tmp / 100;
                 ; 0016 0532     d1  = (tmp % 100) / 10;
                 ; 0016 0533     d0  = tmp % 10;
                 ; 0016 0534 
                 ; 0016 0535     printDebug("<get_current_vref> vref(%f) tmp = %d -> [%d][%d][%d]\r\n",eep_vref_val,tmp,d2,d1,d0);
                 ; 0016 0536     buf[0]  = d2;
                 ; 0016 0537     buf[1]  = d1;
                 ; 0016 0538     buf[2]  = d0;
                 ; 0016 0539     */
                 ; 0016 053A     printDebug("<get_current_vref> vref(%f) valTmp = %s\r\n",eep_vref_val,valTmp);
                 ; 0016 053B     buf[0]  = valTmp[0]-0x30;
                 ; 0016 053C     buf[1]  = valTmp[2]-0x30;
                 ; 0016 053D     buf[2]  = valTmp[3]-0x30;
                 ; 0016 053E 
                 ; 0016 053F     printDebug("<get_current_vref> buf -> ");
                 ; 0016 0540     for(i=0;i<3;i++){
                 ; 0016 0541         printDebug("[%c]",buf[i]);
                 ; 0016 0542     }
                 ; 0016 0543     printDebug("\r\n");
                 ; 0016 0544 
                 ; 0016 0545     return 0;
                 ; 0016 0546 }
                 ;/*============================================================*/
                 ;int getNetworkInfo(char *msg, char *ip, char *mask, char *gw, char *server)
                 ; 0016 0549 {
                 ; 0016 054A     int i,offset;
                 ; 0016 054B     //char msg[] = "0008DC135E2401C0A80B03FFFFFF00C0A80B011388C0A80B011388FE08000100000000000000000003010000000000000000002020202020202020202020200202020202020202020202020202020202020012B2B2B0020202020202020202020202020202020202020202020202                 020202020202020002020202020202020020202020202020202020202020202020202020202020000000000000000000FF\r\n";
                 ; 0016 054C     char dIp[4];
                 ; 0016 054D     char dMask[4];
                 ; 0016 054E     char dGw[4];
                 ; 0016 054F     char dServer[4];
                 ; 0016 0550 
                 ; 0016 0551     offset = 7;
                 ;	*msg -> Y+28
                 ;	*ip -> Y+26
                 ;	*mask -> Y+24
                 ;	*gw -> Y+22
                 ;	*server -> Y+20
                 ;	i -> R16,R17
                 ;	offset -> R18,R19
                 ;	dIp -> Y+16
                 ;	dMask -> Y+12
                 ;	dGw -> Y+8
                 ;	dServer -> Y+4
                 ; 0016 0552     for(i=offset;i<(offset+4);i++){
                 ; 0016 0553         dIp[i-offset]                   = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
                 ; 0016 0554         ip[(i-offset) * 3]              = (dIp[i-offset]/100);
                 ; 0016 0555         ip[((i-offset) * 3) + 1]        = (dIp[i-offset]%100) / 10;
                 ; 0016 0556         ip[((i-offset) * 3) + 2]        = (dIp[i-offset]%10);
                 ; 0016 0557     }
                 ; 0016 0558 
                 ; 0016 0559     offset = 11;
                 ; 0016 055A     for(i=offset;i<(offset+4);i++){
                 ; 0016 055B         dMask[i-offset]                 = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
                 ; 0016 055C         mask[(i-offset) * 3]            = (dMask[i-offset]/100);
                 ; 0016 055D         mask[((i-offset) * 3) + 1]      = (dMask[i-offset]%100) / 10;
                 ; 0016 055E         mask[((i-offset) * 3) + 2]      = (dMask[i-offset]%10);
                 ; 0016 055F     }
                 ; 0016 0560 
                 ; 0016 0561     offset = 15;
                 ; 0016 0562     for(i=offset;i<(offset+4);i++){
                 ; 0016 0563         dGw[i-offset]                   = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
                 ; 0016 0564         gw[(i-offset) * 3]              = (dGw[i-offset]/100);
                 ; 0016 0565         gw[((i-offset) * 3) + 1]        = (dGw[i-offset]%100) / 10;
                 ; 0016 0566         gw[((i-offset) * 3) + 2]        = (dGw[i-offset]%10);
                 ; 0016 0567     }
                 ; 0016 0568 
                 ; 0016 0569     offset = 21;
                 ; 0016 056A     for(i=offset;i<(offset+4);i++){
                 ; 0016 056B         dServer[i-offset]               = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
                 ; 0016 056C         server[(i-offset) * 3]          = (dServer[i-offset]/100);
                 ; 0016 056D         server[((i-offset) * 3) + 1]    = (dServer[i-offset]%100) / 10;
                 ; 0016 056E         server[((i-offset) * 3) + 2]    = (dServer[i-offset]%10);
                 ; 0016 056F     }
                 ; 0016 0570 
                 ; 0016 0571     printDebug("<getNetworkInfo> LIP : %u.%u.%u.%u\r\n",dIp[0],dIp[1],dIp[2],dIp[3]);
                 ; 0016 0572     printDebug("<getNetworkInfo> MSK : %u.%u.%u.%u\r\n",dMask[0],dMask[1],dMask[2],dMask[3]);
                 ; 0016 0573     printDebug("<getNetworkInfo> DGW : %u.%u.%u.%u\r\n",dGw[0],dGw[1],dGw[2],dGw[3]);
                 ; 0016 0574     printDebug("<getNetworkInfo> SIP : %u.%u.%u.%u\r\n",dServer[0],dServer[1],dServer[2],dServer[3]);
                 ; 0016 0575 
                 ; 0016 0576     return 0;
                 ; 0016 0577 }
                 ;/*============================================================*/
                 ;/*
                 ;int setNetworkInfo(char *ip, char *mask, char *gw, char *server)
                 ;{
                 ;    char    *msg;
                 ;    int     msg_len;
                 ;    int     i=0,res=0;
                 ;
                 ;    // -- read -- <S0008DC18BDDC01C0A801FCFFFFFF00C0A80101232EC0A80101271AF4080001000000000005000001040100010000000000000020202020202020202020202020202020202020202020202020202020202020002B2B2B00202020202020202020202020202020202020202020202020202020202020                 200020202020202020202020202020202020202020202020202020202020202020000000000000000000FF -- //
                 ;    // -- write - >W01[IP(4)][MSK(4)][GW(4)]
                 ;    msg = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
                 ;    if(msg == NULL){
                 ;        printDebug("<setNetworkInfo> malloc(CONF_READ_BUFFER) failed\r\n");
                 ;        return -1;
                 ;    }
                 ;
                 ;    res = ETH_getConfig(msg,&msg_len);
                 ;    if(res < 0){
                 ;        printDebug("<setNetworkInfo> ETH_getConfig() failed\r\n");
                 ;    }
                 ;    else{
                 ;        printDebug("<setNetworkInfo> ETH_getConfig() success\r\n");
                 ;        printDebug("\r\n\r\n<setNetworkInfo> read[%d] -->\r\n",msg_len);
                 ;        for(i=0;i<msg_len;i++){
                 ;            putchar3(msg[i]);
                 ;        }
                 ;        printDebug("\r\n");
                 ;    }
                 ;
                 ;    printDebug("<setNetworkInfo> Network Configuring\r\n");
                 ;    printDebug("<setNetworkInfo> LIP       : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11]);
                 ;
                 ;    printDebug("<setNetworkInfo> MASK      : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11]);
                 ;    printDebug("<setNetworkInfo> GATEWAY   : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11],
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11]);
                 ;    printDebug("<setNetworkInfo> SIP       : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (server[0]*100) + (server[1] *10) + server[2],
                 ;                (server[3]*100) + (server[4] *10) + server[5],
                 ;                (server[6]*100) + (server[7] *10) + server[8],
                 ;                (server[9]*100) + (server[10]*10) + server[11],
                 ;                (server[0]*100) + (server[1] *10) + server[2],
                 ;                (server[3]*100) + (server[4] *10) + server[5],
                 ;                (server[6]*100) + (server[7] *10) + server[8],
                 ;                (server[9]*100) + (server[10]*10) + server[11]);
                 ;
                 ;
                 ;    sprintf(setStr,"%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X",
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11]);
                 ;
                 ;    return 0;
                 ;}
                 ;*/
                 ;/*============================================================*/
                 ;int set_vref(char *buf)
                 ; 0016 05D4 {
                 ; 0016 05D5     int     tmp;
                 ; 0016 05D6     float   tmpf;
                 ; 0016 05D7 
                 ; 0016 05D8     tmp = (buf[0] * 100) + (buf[1] * 10) + buf[2];
                 ;	*buf -> Y+6
                 ;	tmp -> R16,R17
                 ;	tmpf -> Y+2
                 ; 0016 05D9     tmpf = (float) (tmp / 100.0);
                 ; 0016 05DA 
                 ; 0016 05DB     printDebug("<set_vref> [%d][%d][%d] -> %d -> %f\r\n",buf[0],buf[1],buf[2],tmp,tmpf);
                 ; 0016 05DC 
                 ; 0016 05DD     eep_vref_val = tmpf;
                 ; 0016 05DE 
                 ; 0016 05DF     return 0;
                 ; 0016 05E0 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Support Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int h2i(char hex)
                 ; 0016 05E8 {
                 ; 0016 05E9     if      ((hex >= 'A') && (hex <= 'F')){ return hex - 0x37;  }
                 ;	hex -> Y+0
                 ; 0016 05EA     else if ((hex >= 'a') && (hex <= 'f')){ return hex - 0x57;  }
                 ; 0016 05EB     else if ((hex >= '0') && (hex <= '9')){ return hex - 0x30;  }
                 ; 0016 05EC 
                 ; 0016 05ED     return 0;
                 ; 0016 05EE }
                 ;/*============================================================*/
                 ;int e2rcpy(char *dest, char eeprom *src, int len)
                 ; 0016 05F1 {
                 ; 0016 05F2     int i;
                 ; 0016 05F3 
                 ; 0016 05F4     for(i=0;i<len;i++){
                 ;	*dest -> Y+6
                 ;	*src -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                 ; 0016 05F5         dest[i] = src[i];
                 ; 0016 05F6     }
                 ; 0016 05F7     return 0;
                 ; 0016 05F8 }
                 ;/*============================================================*/
                 ;int r2ecpy(char eeprom *dest, char *src, int len)
                 ; 0016 05FB {
                 ; 0016 05FC     int i;
                 ; 0016 05FD     for(i=0;i<len;i++){
                 ;	*dest -> Y+6
                 ;	*src -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                 ; 0016 05FE         dest[i] = src[i];
                 ; 0016 05FF     }
                 ; 0016 0600     return 0;
                 ; 0016 0601 }
                 ;/*============================================================*/
                 ;int recmp(char *src1, char eeprom *src2, int len)
                 ; 0016 0604 {
                 ; 0016 0605     int i;
                 ; 0016 0606 
                 ; 0016 0607     for(i=0;i<len;i++){
                 ;	*src1 -> Y+6
                 ;	*src2 -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                 ; 0016 0608         printDebug("<recmp> src1[%02X] src2[%02X] user[%02X] service[%02X]\r\n",src1[i],src2[i],userPwd[i],servicePwd[i]);
                 ; 0016 0609     }
                 ; 0016 060A 
                 ; 0016 060B     for(i=0;i<len;i++){
                 ; 0016 060C         if(src1[i] != src2[i]){
                 ; 0016 060D             return -1;
                 ; 0016 060E         }
                 ; 0016 060F     }
                 ; 0016 0610     return 0;
                 ; 0016 0611 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <stdarg.h>
                 ;#include <delay.h>
                 ;#include <ctype.h>
                 ;#include "debug.h"
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "alarm.h"
                 ;#include "log.h"
                 ;#include "io.h"
                 ;#include "ethcomm.h"
                 ;#include "calibration.h"
                 ;#include "sensor.h"
                 ;//sensorGetValue(u int)
                 ;extern ST_CAL_CONFIG sensorCalConfig;
                 ;extern eeprom  ST_CAL sensorCalulate;          //improtance    extern from  calibration.h
                 ;extern void (*pfCalibrate) (ST_CAL_CONFIG calConfig);   //pointer function of calibation set  extern from  calibration.h
                 ;
                 ;flash unsigned char cmdSetRTCDateTime[]     = "$CMDSDT";        // -- Set Date/Time -- //
                 ;flash unsigned char cmdResetAlarmStatus[]   = "$CMDRAS";        // -- Re-initiate all alarm flag -- //
                 ;flash unsigned char cmdClearLogFile[]       = "$CMDCLF";        // -- Re-initiate log file -- //
                 ;flash unsigned char cmdSetVref[]            = "$CMDSVR";        // -- Set Vref measure from multimeter -- //
                 ;flash unsigned char cmdSensorSelect[]       = "$CMDSNS";        // -- Select Sensor for Hardware Calibration [Disable mode require] -- //
                 ;flash unsigned char cmdDeviceEnable[]       = "$CMDDEN";        // -- Enable Device -- //
                 ;flash unsigned char cmdDeviceDisable[]      = "$CMDDDS";        // -- Disable Device -- //
                 ;flash unsigned char cmdSetSerialNumber[]    = "$CMDSSN";        // -- Set Serial Number -- //
                 ;flash unsigned char cmdReadSerialNumber[]   = "$CMDRSN";        // -- Read Serial Number -- //
                 ;
                 ;flash unsigned char cmdGetCal[]             = "$CMDGCL";         // -- Get calibrate value -- //      $CMDRCL,1#        ,chID(1)
                 ;flash unsigned char cmdSetCal[]             = "$CMDSCL";         // -- Set calibrate value -- //      $CMDSCL,1,1,29.20     ,chID(1),pointID(1),std1Value(29.20)#
                 ;flash unsigned char cmdConfirmCal[]         = "$CMDCCL";         // -- Confirm calibrate type -- //   ,chID(1),calType(1) 0:defualt-1:offset-2:linear-3:polynomail
                 ;flash unsigned char cmdGetCurSensor[]       = "$CMDGCS";         // -- Get current sensor value -- //   ,chID(1)
                 ;/*============================================================*/
                 ;
                 ;unsigned int hwCalId    = 9;
                 
                 	.DSEG
                 ;
                 ;/**************************************************************/
                 ;/************* Service Debug Command Function *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int debugGetCurSensor(){
                 ; 0017 002B int debugGetCurSensor(){
                 
                 	.CSEG
                 _debugGetCurSensor:
                 ; 0017 002C     unsigned char i=0;
                 ; 0017 002D     unsigned char buffer[2];
                 ; 0017 002E     unsigned int channelID;
0077cc 9722      ; 0017 002F 
0077cd 940e b69c ; 0017 0030     printDebug("\r\n<Debug>GetCurSensor: \r\n");
                 	SBIW R28,2
                 	CALL __SAVELOCR4
                 ;	i -> R17
0077cf e010      ;	buffer -> Y+4
                +
0077d0 e5ea     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 0 ) )
0077d1 e5ff     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 0 ) )
0077d2 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 0 ) )
0077d3 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 0 ) )
                 	__POINTD1FN _0x2E0000,0
0077d4 940e 9f66 	CALL SUBOPT_0x2
                 ; 0017 0031     memset(buffer,0,sizeof(buffer));
0077d6 01fe      	MOVW R30,R28
0077d7 9634      	ADIW R30,4
0077d8 940e a537 	CALL SUBOPT_0xE0
0077da 940e a23d 	CALL SUBOPT_0x65
0077dc 940e 84d4 	CALL _memset
                 ; 0017 0032     for(i=0;i<1;i++){
0077de e010      	LDI  R17,LOW(0)
                 _0x2E0005:
0077df 3011      	CPI  R17,1
0077e0 f440      	BRSH _0x2E0006
                 ; 0017 0033        buffer[i] = rxPackage3[i+8];
0077e1 940e a38d 	CALL SUBOPT_0x99
0077e3 940e a7ca 	CALL SUBOPT_0x150
0077e5 940e ad57 	CALL SUBOPT_0x22F
                 ; 0017 0034     }
0077e7 5f1f      	SUBI R17,-1
0077e8 cff6      	RJMP _0x2E0005
                 _0x2E0006:
                 ; 0017 0035     channelID = atoi(buffer);
0077e9 940e ad5c 	CALL SUBOPT_0x230
                 ; 0017 0036     printDebug("Channel ID:%d \r\n",channelID);
0077eb 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0017 0037     printDebug("\r\n");
0077ed 940e ad66 	CALL SUBOPT_0x231
                 ; 0017 0038 
                 ; 0017 0039     if( channelID>0 && channelID<6 ){           //max 5 ch
0077ef 2400      	CLR  R0
0077f0 1602      	CP   R0,R18
0077f1 0603      	CPC  R0,R19
0077f2 f420      	BRSH _0x2E0008
                +
0077f3 3026     +CPI R18 , LOW ( 6 )
0077f4 e0e0     +LDI R30 , HIGH ( 6 )
0077f5 073e     +CPC R19 , R30
                 	__CPWRN 18,19,6
0077f6 f008      	BRLO _0x2E0009
                 _0x2E0008:
0077f7 c00c      	RJMP _0x2E0007
                 _0x2E0009:
                 ; 0017 003A        printDebug("current sensor ch[%d] , value:%0.2f\r\n",channelID,sensorGetValue(channelID));
                +
0077f8 e8e5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 43 ) )
0077f9 e5ff     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 43 ) )
0077fa e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 43 ) )
0077fb e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 43 ) )
                 	__POINTD1FN _0x2E0000,43
0077fc 940e abe5 	CALL SUBOPT_0x1FF
0077fe 01d9      	MOVW R26,R18
0077ff 940e 6403 	CALL _sensorGetValue
007801 940e a038 	CALL SUBOPT_0x1F
                 ; 0017 003B     }else{
007803 c006      	RJMP _0x2E000A
                 _0x2E0007:
                 ; 0017 003C         printDebug("Channel ID is in range.\r\n");
                +
007804 eaeb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 81 ) )
007805 e5ff     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 81 ) )
007806 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 81 ) )
007807 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 81 ) )
                 	__POINTD1FN _0x2E0000,81
007808 940e 9f66 	CALL SUBOPT_0x2
                 ; 0017 003D     }
                 _0x2E000A:
                 ; 0017 003E 
                 ; 0017 003F     return 0;
00780a 940e a71a 	CALL SUBOPT_0x136
                 _0x20E0034:
00780c 9626      	ADIW R28,6
00780d 9508      	RET
                 ; 0017 0040 }
                 ;int debugGetCal(){
                 ; 0017 0041 int debugGetCal(){
                 _debugGetCal:
                 ; 0017 0042     unsigned char i=0;
                 ; 0017 0043     unsigned char buffer[4];
                 ; 0017 0044     unsigned int channelID;
                 ; 0017 0045 
                 ; 0017 0046     printDebug("\r\n<Debug>GetCal: \r\n");
00780e 9724      	SBIW R28,4
00780f 940e b69c 	CALL __SAVELOCR4
                 ;	i -> R17
                 ;	buffer -> Y+4
                 ;	channelID -> R18,R19
007811 e010      	LDI  R17,0
                +
007812 ece5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 107 ) )
007813 e5ff     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 107 ) )
007814 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 107 ) )
007815 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 107 ) )
                 	__POINTD1FN _0x2E0000,107
007816 940e 9f66 	CALL SUBOPT_0x2
                 ; 0017 0047     memset(buffer,0,sizeof(buffer));
007818 01fe      	MOVW R30,R28
007819 9634      	ADIW R30,4
00781a 940e a537 	CALL SUBOPT_0xE0
00781c 940e a24a 	CALL SUBOPT_0x69
00781e 940e 84d4 	CALL _memset
                 ; 0017 0048     for(i=0;i<1;i++){
007820 e010      	LDI  R17,LOW(0)
                 _0x2E000C:
007821 3011      	CPI  R17,1
007822 f440      	BRSH _0x2E000D
                 ; 0017 0049        buffer[i] = rxPackage3[i+8];
007823 940e a38d 	CALL SUBOPT_0x99
007825 940e a7ca 	CALL SUBOPT_0x150
007827 940e ad57 	CALL SUBOPT_0x22F
                 ; 0017 004A     }
007829 5f1f      	SUBI R17,-1
00782a cff6      	RJMP _0x2E000C
                 _0x2E000D:
                 ; 0017 004B     channelID = atoi(buffer);
00782b 940e ad5c 	CALL SUBOPT_0x230
                 ; 0017 004C     printDebug("Channel ID:%d \r\n",channelID);
00782d 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0017 004D     printDebug("\r\n");
00782f 940e ad66 	CALL SUBOPT_0x231
                 ; 0017 004E 
                 ; 0017 004F     if( channelID>0 && channelID<6 ){           //max 5 ch
007831 2400      	CLR  R0
007832 1602      	CP   R0,R18
007833 0603      	CPC  R0,R19
007834 f420      	BRSH _0x2E000F
                +
007835 3026     +CPI R18 , LOW ( 6 )
007836 e0e0     +LDI R30 , HIGH ( 6 )
007837 073e     +CPC R19 , R30
                 	__CPWRN 18,19,6
007838 f008      	BRLO _0x2E0010
                 _0x2E000F:
007839 c062      	RJMP _0x2E000E
                 _0x2E0010:
                 ; 0017 0050        for(i=0;i<3;i++){
00783a e010      	LDI  R17,LOW(0)
                 _0x2E0012:
00783b 3013      	CPI  R17,3
00783c f570      	BRSH _0x2E0013
                 ; 0017 0051            printDebug("stdRef[%d] : %0.2f , ",i+1,sensorCalulate.sChennel[channelID-1].stdRef[i]);
                +
00783d ede9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 127 ) )
00783e e5ff     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 127 ) )
00783f e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 127 ) )
007840 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 127 ) )
                 	__POINTD1FN _0x2E0000,127
007841 940e ad6c 	CALL SUBOPT_0x232
007843 9631      	ADIW R30,1
007844 940e ad06 	CALL SUBOPT_0x227
007846 940e ad70 	CALL SUBOPT_0x233
007848 57e3      	SUBI R30,LOW(-_sensorCalulate)
007849 4ffa      	SBCI R31,HIGH(-_sensorCalulate)
00784a 01df      	MOVW R26,R30
00784b 940e a38d 	CALL SUBOPT_0x99
00784d 940e aaf4 	CALL SUBOPT_0x1D9
00784f 940e b649 	CALL __EEPROMRDD
007851 940e a038 	CALL SUBOPT_0x1F
                 ; 0017 0052            printDebug("sensorRef[%d] : %0.2f\r\n",i+1,sensorCalulate.sChennel[channelID-1].sensorRef[i]);
                +
007853 eeef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 149 ) )
007854 e5ff     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 149 ) )
007855 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 149 ) )
007856 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 149 ) )
                 	__POINTD1FN _0x2E0000,149
007857 940e ad6c 	CALL SUBOPT_0x232
007859 9631      	ADIW R30,1
00785a 940e ad06 	CALL SUBOPT_0x227
00785c 940e ad70 	CALL SUBOPT_0x233
                +
00785e 56e7     +SUBI R30 , LOW ( - _sensorCalulate - ( 12 ) )
00785f 4ffa     +SBCI R31 , HIGH ( - _sensorCalulate - ( 12 ) )
                 	__ADDW1MN _sensorCalulate,12
007860 01df      	MOVW R26,R30
007861 940e a38d 	CALL SUBOPT_0x99
007863 940e aaf4 	CALL SUBOPT_0x1D9
007865 940e b649 	CALL __EEPROMRDD
007867 940e a038 	CALL SUBOPT_0x1F
                 ; 0017 0053        }
007869 5f1f      	SUBI R17,-1
00786a cfd0      	RJMP _0x2E0012
                 _0x2E0013:
                 ; 0017 0054        switch(sensorCalulate.sChennel[channelID-1].calType){
00786b 940e ad70 	CALL SUBOPT_0x233
                +
00786d 55eb     +SUBI R30 , LOW ( - _sensorCalulate - ( 24 ) )
00786e 4ffa     +SBCI R31 , HIGH ( - _sensorCalulate - ( 24 ) )
                 	__ADDW1MN _sensorCalulate,24
00786f 01df      	MOVW R26,R30
007870 940e b64d 	CALL __EEPROMRDW
                 ; 0017 0055             case CAL_DEFAULT:{               //0
007872 9730      	SBIW R30,0
007873 f429      	BRNE _0x2E0017
                 ; 0017 0056                 printDebug("CalType : CAL_DEFAULT");
                +
007874 e0e7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 173 ) )
007875 e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 173 ) )
007876 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 173 ) )
007877 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 173 ) )
                 	__POINTD1FN _0x2E0000,173
007878 c01a      	RJMP _0x2E0099
                 ; 0017 0057                 break;
                 ; 0017 0058             }
                 ; 0017 0059             case CAL_EXTOFFSET:{             //1
                 _0x2E0017:
007879 30e1      	CPI  R30,LOW(0x1)
00787a e0a0      	LDI  R26,HIGH(0x1)
00787b 07fa      	CPC  R31,R26
00787c f429      	BRNE _0x2E0018
                 ; 0017 005A                 printDebug("CalType : CAL_EXTOFFSET");
                +
00787d e1ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 195 ) )
00787e e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 195 ) )
00787f e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 195 ) )
007880 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 195 ) )
                 	__POINTD1FN _0x2E0000,195
007881 c011      	RJMP _0x2E0099
                 ; 0017 005B                 break;
                 ; 0017 005C             }
                 ; 0017 005D             case CAL_EXTLINEAR:{             //2
                 _0x2E0018:
007882 30e2      	CPI  R30,LOW(0x2)
007883 e0a0      	LDI  R26,HIGH(0x2)
007884 07fa      	CPC  R31,R26
007885 f429      	BRNE _0x2E0019
                 ; 0017 005E                 printDebug("CalType : CAL_EXTLINEAR");
                +
007886 e3e5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 219 ) )
007887 e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 219 ) )
007888 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 219 ) )
007889 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 219 ) )
                 	__POINTD1FN _0x2E0000,219
00788a c008      	RJMP _0x2E0099
                 ; 0017 005F                 break;
                 ; 0017 0060             }
                 ; 0017 0061             case CAL_EXTPOLYNOMIAL:{         //3
                 _0x2E0019:
00788b 30e3      	CPI  R30,LOW(0x3)
00788c e0a0      	LDI  R26,HIGH(0x3)
00788d 07fa      	CPC  R31,R26
00788e f441      	BRNE _0x2E0016
                 ; 0017 0062                 printDebug("CalType : CAL_EXTPOLYNOMIAL");
                +
00788f e4ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 243 ) )
007890 e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 243 ) )
007891 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 243 ) )
007892 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 243 ) )
                 	__POINTD1FN _0x2E0000,243
                 _0x2E0099:
007893 940e b62a 	CALL __PUTPARD1
007895 940e a0c5 	CALL SUBOPT_0x30
                 ; 0017 0063                 break;
                 ; 0017 0064             }
                 ; 0017 0065        }
                 _0x2E0016:
                 ; 0017 0066        printDebug("\r\n");
                +
007897 e7e1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 23 ) )
007898 e5ff     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 23 ) )
007899 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 23 ) )
00789a e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 23 ) )
                 	__POINTD1FN _0x2E0000,23
00789b c004      	RJMP _0x2E009A
                 ; 0017 0067     }else{
                 _0x2E000E:
                 ; 0017 0068         printDebug("Channel ID is in range.\r\n");
                +
00789c eaeb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 81 ) )
00789d e5ff     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 81 ) )
00789e e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 81 ) )
00789f e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 81 ) )
                 	__POINTD1FN _0x2E0000,81
                 _0x2E009A:
0078a0 940e b62a 	CALL __PUTPARD1
0078a2 940e a0c5 	CALL SUBOPT_0x30
                 ; 0017 0069     }
                 ; 0017 006A 
                 ; 0017 006B     return 0;
0078a4 940e a71a 	CALL SUBOPT_0x136
                 _0x20E0033:
0078a6 9628      	ADIW R28,8
0078a7 9508      	RET
                 ; 0017 006C }
                 ;int debugSetCal(){
                 ; 0017 006D int debugSetCal(){
                 _debugSetCal:
                 ; 0017 006E     unsigned char i=0;
                 ; 0017 006F     unsigned char buffer[6];
                 ; 0017 0070     unsigned int channelID;
                 ; 0017 0071     unsigned int pointID;
                 ; 0017 0072     float pointValue;         //std value
                 ; 0017 0073 
                 ; 0017 0074     //void (*pfnCalibrate) (ST_CAL_CONFIG calConfig);
                 ; 0017 0075 
                 ; 0017 0076     pfCalibrate = &calSet;
0078a8 972a      	SBIW R28,10
0078a9 940e b69a 	CALL __SAVELOCR6
                 ;	i -> R17
                 ;	buffer -> Y+10
                 ;	channelID -> R18,R19
                 ;	pointID -> R20,R21
                 ;	pointValue -> Y+6
0078ab e010      	LDI  R17,0
0078ac e5e7      	LDI  R30,LOW(_pfCalibrate)
0078ad e1f5      	LDI  R31,HIGH(_pfCalibrate)
0078ae 01df      	MOVW R26,R30
0078af 01cb      	MOVW R24,R22
                +
0078b0 e3e9     +LDI R30 , LOW ( _calSet )
0078b1 e8f0     +LDI R31 , HIGH ( _calSet )
0078b2 e060     +LDI R22 , BYTE3 ( _calSet )
0078b3 e070     +LDI R23 , BYTE4 ( _calSet )
                 	__POINTD1M _calSet
0078b4 940e b605 	CALL __PUTDP1
                 ; 0017 0077 
                 ; 0017 0078     printDebug("\r\n<Debug>SetCal: \r\n");
                +
0078b6 e6e9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 271 ) )
0078b7 e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 271 ) )
0078b8 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 271 ) )
0078b9 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 271 ) )
                 	__POINTD1FN _0x2E0000,271
0078ba 940e 9f66 	CALL SUBOPT_0x2
                 ; 0017 0079     memset(buffer,0,sizeof(buffer));
0078bc 940e a11d 	CALL SUBOPT_0x3F
0078be 940e ad77 	CALL SUBOPT_0x234
                 ; 0017 007A     for(i=0;i<1;i++){
0078c0 e010      	LDI  R17,LOW(0)
                 _0x2E001D:
0078c1 3011      	CPI  R17,1
0078c2 f440      	BRSH _0x2E001E
                 ; 0017 007B        buffer[i] = rxPackage3[i+8];
0078c3 940e a38d 	CALL SUBOPT_0x99
0078c5 940e ad7b 	CALL SUBOPT_0x235
0078c7 940e ad57 	CALL SUBOPT_0x22F
                 ; 0017 007C     }
0078c9 5f1f      	SUBI R17,-1
0078ca cff6      	RJMP _0x2E001D
                 _0x2E001E:
                 ; 0017 007D     channelID = atoi(buffer);
0078cb 01de      	MOVW R26,R28
0078cc 961a      	ADIW R26,10
0078cd 940e ad80 	CALL SUBOPT_0x236
                 ; 0017 007E     sensorCalConfig.channelID =  channelID;
                 ; 0017 007F     printDebug("Channel ID:%d \r\n",channelID);
0078cf 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0017 0080 
                 ; 0017 0081     memset(buffer,0,sizeof(buffer));
0078d1 940e a11d 	CALL SUBOPT_0x3F
0078d3 940e ad77 	CALL SUBOPT_0x234
                 ; 0017 0082     for(i=0;i<1;i++){
0078d5 e010      	LDI  R17,LOW(0)
                 _0x2E0020:
0078d6 3011      	CPI  R17,1
0078d7 f450      	BRSH _0x2E0021
                 ; 0017 0083        buffer[i] = rxPackage3[i+10];
0078d8 940e a38d 	CALL SUBOPT_0x99
0078da 940e ad7b 	CALL SUBOPT_0x235
                +
0078dc 58e7     +SUBI R30 , LOW ( - _rxPackage3 - ( 10 ) )
0078dd 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 10 ) )
                 	__ADDW1MN _rxPackage3,10
0078de 81e0      	LD   R30,Z
0078df 93ec      	ST   X,R30
                 ; 0017 0084     }
0078e0 5f1f      	SUBI R17,-1
0078e1 cff4      	RJMP _0x2E0020
                 _0x2E0021:
                 ; 0017 0085     pointID = atoi(buffer);
0078e2 01de      	MOVW R26,R28
0078e3 961a      	ADIW R26,10
0078e4 940e 818a 	CALL _atoi
0078e6 01af      	MOVW R20,R30
                 ; 0017 0086     sensorCalConfig.pointID =  pointID;
                +
0078e7 9340 154f+STS _sensorCalConfig + ( 4 ) , R20
0078e9 9350 1550+STS _sensorCalConfig + ( 4 ) + 1 , R21
                 	__PUTWMRN _sensorCalConfig,4,20,21
                 ; 0017 0087     printDebug("Point ID:%d \r\n",pointID);
                +
0078eb e7ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 291 ) )
0078ec e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 291 ) )
0078ed e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 291 ) )
0078ee e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 291 ) )
                 	__POINTD1FN _0x2E0000,291
0078ef 940e b62a 	CALL __PUTPARD1
0078f1 01fa      	MOVW R30,R20
0078f2 940e a524 	CALL SUBOPT_0xDD
0078f4 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0017 0088 
                 ; 0017 0089     memset(buffer,0,sizeof(buffer));
0078f6 940e a11d 	CALL SUBOPT_0x3F
0078f8 940e ad77 	CALL SUBOPT_0x234
                 ; 0017 008A     for(i=0;i<5;i++){
0078fa e010      	LDI  R17,LOW(0)
                 _0x2E0023:
0078fb 3015      	CPI  R17,5
0078fc f450      	BRSH _0x2E0024
                 ; 0017 008B        buffer[i] = rxPackage3[i+12];
0078fd 940e a38d 	CALL SUBOPT_0x99
0078ff 940e ad7b 	CALL SUBOPT_0x235
                +
007901 58e5     +SUBI R30 , LOW ( - _rxPackage3 - ( 12 ) )
007902 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 12 ) )
                 	__ADDW1MN _rxPackage3,12
007903 81e0      	LD   R30,Z
007904 93ec      	ST   X,R30
                 ; 0017 008C     }
007905 5f1f      	SUBI R17,-1
007906 cff4      	RJMP _0x2E0023
                 _0x2E0024:
                 ; 0017 008D     pointValue = atof(buffer);
007907 01de      	MOVW R26,R28
007908 961a      	ADIW R26,10
007909 940e 82c2 	CALL _atof
00790b 940e a39e 	CALL SUBOPT_0x9D
                 ; 0017 008E     sensorCalConfig.pointValue =  pointValue;     //std value for meter
                +
00790d 93e0 1551+STS _sensorCalConfig + ( 6 ) , R30
00790f 93f0 1552+STS _sensorCalConfig + ( 6 ) + 1 , R31
007911 9360 1553+STS _sensorCalConfig + ( 6 ) + 2 , R22
007913 9370 1554+STS _sensorCalConfig + ( 6 ) + 3 , R23
                 	__PUTD1MN _sensorCalConfig,6
                 ; 0017 008F     printDebug("pointValue(meterRef) :%0.2f \r\n",pointValue);
                +
007915 e8ec     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 306 ) )
007916 e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 306 ) )
007917 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 306 ) )
007918 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 306 ) )
                 	__POINTD1FN _0x2E0000,306
007919 940e a154 	CALL SUBOPT_0x47
00791b 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0017 0090     printDebug("\r\n");
00791d 940e ad66 	CALL SUBOPT_0x231
                 ; 0017 0091 
                 ; 0017 0092     pfCalibrate(sensorCalConfig);
00791f 940e ad8c 	CALL SUBOPT_0x237
                 ; 0017 0093 
                 ; 0017 0094     return 0;
007921 9660      	ADIW R28,16
007922 9508      	RET
                 ; 0017 0095 }
                 ;int debugConfirmCal(){
                 ; 0017 0096 int debugConfirmCal(){
                 _debugConfirmCal:
                 ; 0017 0097     unsigned char i=0;
                 ; 0017 0098     unsigned char buffer[6];
                 ; 0017 0099     unsigned int channelID;
                 ; 0017 009A     unsigned int calType;
                 ; 0017 009B 
                 ; 0017 009C     pfCalibrate = &calSetConfirm;
007923 9726      	SBIW R28,6
007924 940e b69a 	CALL __SAVELOCR6
                 ;	i -> R17
                 ;	buffer -> Y+6
                 ;	channelID -> R18,R19
                 ;	calType -> R20,R21
007926 e010      	LDI  R17,0
007927 e5e7      	LDI  R30,LOW(_pfCalibrate)
007928 e1f5      	LDI  R31,HIGH(_pfCalibrate)
007929 01df      	MOVW R26,R30
00792a 01cb      	MOVW R24,R22
                +
00792b e6ea     +LDI R30 , LOW ( _calSetConfirm )
00792c e8f0     +LDI R31 , HIGH ( _calSetConfirm )
00792d e060     +LDI R22 , BYTE3 ( _calSetConfirm )
00792e e070     +LDI R23 , BYTE4 ( _calSetConfirm )
                 	__POINTD1M _calSetConfirm
00792f 940e b605 	CALL __PUTDP1
                 ; 0017 009D 
                 ; 0017 009E     printDebug("\r\n<Debug>ConfirmCal: \r\n");
                +
007931 eaeb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 337 ) )
007932 e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 337 ) )
007933 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 337 ) )
007934 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 337 ) )
                 	__POINTD1FN _0x2E0000,337
007935 940e 9f66 	CALL SUBOPT_0x2
                 ; 0017 009F     memset(buffer,0,sizeof(buffer));
007937 940e a14f 	CALL SUBOPT_0x46
007939 940e ad77 	CALL SUBOPT_0x234
                 ; 0017 00A0     for(i=0;i<1;i++){
00793b e010      	LDI  R17,LOW(0)
                 _0x2E0026:
00793c 3011      	CPI  R17,1
00793d f440      	BRSH _0x2E0027
                 ; 0017 00A1        buffer[i] = rxPackage3[i+8];
00793e 940e a38d 	CALL SUBOPT_0x99
007940 01de      	MOVW R26,R28
007941 9616      	ADIW R26,6
007942 940e ad9b 	CALL SUBOPT_0x238
                 ; 0017 00A2     }
007944 5f1f      	SUBI R17,-1
007945 cff6      	RJMP _0x2E0026
                 _0x2E0027:
                 ; 0017 00A3     channelID = atoi(buffer);
007946 01de      	MOVW R26,R28
007947 9616      	ADIW R26,6
007948 940e ad80 	CALL SUBOPT_0x236
                 ; 0017 00A4     sensorCalConfig.channelID =  channelID;
                 ; 0017 00A5     printDebug("Channel ID:%d \r\n",channelID);
00794a 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0017 00A6 
                 ; 0017 00A7     memset(buffer,0,sizeof(buffer));
00794c 940e a14f 	CALL SUBOPT_0x46
00794e 940e ad77 	CALL SUBOPT_0x234
                 ; 0017 00A8     for(i=0;i<1;i++){
007950 e010      	LDI  R17,LOW(0)
                 _0x2E0029:
007951 3011      	CPI  R17,1
007952 f460      	BRSH _0x2E002A
                 ; 0017 00A9        buffer[i] = rxPackage3[i+10];
007953 940e a38d 	CALL SUBOPT_0x99
007955 01de      	MOVW R26,R28
007956 9616      	ADIW R26,6
007957 0fae      	ADD  R26,R30
007958 1fbf      	ADC  R27,R31
                +
007959 58e7     +SUBI R30 , LOW ( - _rxPackage3 - ( 10 ) )
00795a 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 10 ) )
                 	__ADDW1MN _rxPackage3,10
00795b 81e0      	LD   R30,Z
00795c 93ec      	ST   X,R30
                 ; 0017 00AA     }
00795d 5f1f      	SUBI R17,-1
00795e cff2      	RJMP _0x2E0029
                 _0x2E002A:
                 ; 0017 00AB     calType = atoi(buffer);
00795f 01de      	MOVW R26,R28
007960 9616      	ADIW R26,6
007961 940e 818a 	CALL _atoi
007963 01af      	MOVW R20,R30
                 ; 0017 00AC     sensorCalConfig.calType =  calType;
                +
007964 9340 1555+STS _sensorCalConfig + ( 10 ) , R20
007966 9350 1556+STS _sensorCalConfig + ( 10 ) + 1 , R21
                 	__PUTWMRN _sensorCalConfig,10,20,21
                 ; 0017 00AD     //printDebug("calType :%d \r\n",calType);
                 ; 0017 00AE     switch(sensorCalConfig.calType){
                +
007968 91e0 1555+LDS R30 , _sensorCalConfig + ( 10 )
00796a 91f0 1556+LDS R31 , _sensorCalConfig + ( 10 ) + 1
                 	__GETW1MN _sensorCalConfig,10
                 ; 0017 00AF         case CAL_DEFAULT:{               //0
00796c 9730      	SBIW R30,0
00796d f429      	BRNE _0x2E002E
                 ; 0017 00B0             printDebug("CalType : CAL_DEFAULT");
                +
00796e e0e7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 173 ) )
00796f e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 173 ) )
007970 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 173 ) )
007971 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 173 ) )
                 	__POINTD1FN _0x2E0000,173
007972 c01a      	RJMP _0x2E009B
                 ; 0017 00B1             break;
                 ; 0017 00B2         }
                 ; 0017 00B3         case CAL_EXTOFFSET:{             //2
                 _0x2E002E:
007973 30e1      	CPI  R30,LOW(0x1)
007974 e0a0      	LDI  R26,HIGH(0x1)
007975 07fa      	CPC  R31,R26
007976 f429      	BRNE _0x2E002F
                 ; 0017 00B4             printDebug("CalType : CAL_EXTOFFSET");
                +
007977 e1ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 195 ) )
007978 e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 195 ) )
007979 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 195 ) )
00797a e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 195 ) )
                 	__POINTD1FN _0x2E0000,195
00797b c011      	RJMP _0x2E009B
                 ; 0017 00B5             break;
                 ; 0017 00B6         }
                 ; 0017 00B7         case CAL_EXTLINEAR:{             //3
                 _0x2E002F:
00797c 30e2      	CPI  R30,LOW(0x2)
00797d e0a0      	LDI  R26,HIGH(0x2)
00797e 07fa      	CPC  R31,R26
00797f f429      	BRNE _0x2E0030
                 ; 0017 00B8             printDebug("CalType : CAL_EXTLINEAR");
                +
007980 e3e5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 219 ) )
007981 e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 219 ) )
007982 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 219 ) )
007983 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 219 ) )
                 	__POINTD1FN _0x2E0000,219
007984 c008      	RJMP _0x2E009B
                 ; 0017 00B9             break;
                 ; 0017 00BA         }
                 ; 0017 00BB         case CAL_EXTPOLYNOMIAL:{         //4
                 _0x2E0030:
007985 30e3      	CPI  R30,LOW(0x3)
007986 e0a0      	LDI  R26,HIGH(0x3)
007987 07fa      	CPC  R31,R26
007988 f441      	BRNE _0x2E002D
                 ; 0017 00BC             printDebug("CalType : CAL_EXTPOLYNOMIAL");
                +
007989 e4ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 243 ) )
00798a e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 243 ) )
00798b e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 243 ) )
00798c e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 243 ) )
                 	__POINTD1FN _0x2E0000,243
                 _0x2E009B:
00798d 940e b62a 	CALL __PUTPARD1
00798f 940e a0c5 	CALL SUBOPT_0x30
                 ; 0017 00BD             break;
                 ; 0017 00BE         }
                 ; 0017 00BF     }
                 _0x2E002D:
                 ; 0017 00C0     printDebug("\r\n");
007991 940e ad66 	CALL SUBOPT_0x231
                 ; 0017 00C1 
                 ; 0017 00C2     pfCalibrate(sensorCalConfig);
007993 940e ad8c 	CALL SUBOPT_0x237
                 ; 0017 00C3 
                 ; 0017 00C4     return 0;
007995 962c      	ADIW R28,12
007996 9508      	RET
                 ; 0017 00C5 }
                 ;
                 ;int DEBUG_setDateTime(void)
                 ; 0017 00C8 {
                 _DEBUG_setDateTime:
                 ; 0017 00C9     unsigned char   i;
                 ; 0017 00CA     unsigned char   buffer[32];
                 ; 0017 00CB     int             tz;
                 ; 0017 00CC 
                 ; 0017 00CD     struct rtc_structure rtcSet;
                 ; 0017 00CE 
                 ; 0017 00CF     for(i=0;i<4;i++)
007997 97ea      	SBIW R28,58
007998 940e b69c 	CALL __SAVELOCR4
                 ;	i -> R17
                 ;	buffer -> Y+30
                 ;	tz -> R18,R19
                 ;	rtcSet -> Y+4
00799a e010      	LDI  R17,LOW(0)
                 _0x2E0033:
00799b 3014      	CPI  R17,4
00799c f440      	BRSH _0x2E0034
                 ; 0017 00D0     {
                 ; 0017 00D1         buffer[i] = rxPackage3[i+8];
00799d 940e a38d 	CALL SUBOPT_0x99
00799f 01de      	MOVW R26,R28
0079a0 965e      	ADIW R26,30
0079a1 940e ad9b 	CALL SUBOPT_0x238
                 ; 0017 00D2     }
0079a3 5f1f      	SUBI R17,-1
0079a4 cff6      	RJMP _0x2E0033
                 _0x2E0034:
                 ; 0017 00D3     buffer[4] = 0;
0079a5 940e ad9e 	CALL SUBOPT_0x239
                 ; 0017 00D4 
                 ; 0017 00D5     rtcSet.year = atol(buffer);
0079a7 940e a376 	CALL SUBOPT_0x95
                 ; 0017 00D6 
                 ; 0017 00D7     printDebug("get year = %d\r\n",rtcSet.year);
                +
0079a9 ece3     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 361 ) )
0079aa e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 361 ) )
0079ab e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 361 ) )
0079ac e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 361 ) )
                 	__POINTD1FN _0x2E0000,361
0079ad 940e aa3a 	CALL SUBOPT_0x1BA
0079af 940e a8c3 	CALL SUBOPT_0x174
                 ; 0017 00D8 
                 ; 0017 00D9     for(i=0;i<2;i++)
0079b1 e010      	LDI  R17,LOW(0)
                 _0x2E0036:
0079b2 3012      	CPI  R17,2
0079b3 f450      	BRSH _0x2E0037
                 ; 0017 00DA     {
                 ; 0017 00DB         buffer[i] = rxPackage3[i+13];
0079b4 940e a38d 	CALL SUBOPT_0x99
0079b6 940e ada4 	CALL SUBOPT_0x23A
                +
0079b8 58e4     +SUBI R30 , LOW ( - _rxPackage3 - ( 13 ) )
0079b9 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 13 ) )
                 	__ADDW1MN _rxPackage3,13
0079ba 81e0      	LD   R30,Z
0079bb 93ec      	ST   X,R30
                 ; 0017 00DC     }
0079bc 5f1f      	SUBI R17,-1
0079bd cff4      	RJMP _0x2E0036
                 _0x2E0037:
                 ; 0017 00DD     buffer[2] = 0;
0079be 940e ada9 	CALL SUBOPT_0x23B
                 ; 0017 00DE 
                 ; 0017 00DF     rtcSet.month = atol(buffer);
0079c0 940e adaf 	CALL SUBOPT_0x23C
                 ; 0017 00E0 
                 ; 0017 00E1     printDebug("get month = %d\r\n",rtcSet.month);
                +
0079c2 ede3     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 377 ) )
0079c3 e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 377 ) )
0079c4 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 377 ) )
0079c5 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 377 ) )
                 	__POINTD1FN _0x2E0000,377
0079c6 940e a2c2 	CALL SUBOPT_0x7B
0079c8 940e a8c3 	CALL SUBOPT_0x174
                 ; 0017 00E2 
                 ; 0017 00E3     for(i=0;i<2;i++)
0079ca e010      	LDI  R17,LOW(0)
                 _0x2E0039:
0079cb 3012      	CPI  R17,2
0079cc f450      	BRSH _0x2E003A
                 ; 0017 00E4     {
                 ; 0017 00E5         buffer[i] = rxPackage3[i+16];
0079cd 940e a38d 	CALL SUBOPT_0x99
0079cf 940e ada4 	CALL SUBOPT_0x23A
                +
0079d1 58e1     +SUBI R30 , LOW ( - _rxPackage3 - ( 16 ) )
0079d2 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 16 ) )
                 	__ADDW1MN _rxPackage3,16
0079d3 81e0      	LD   R30,Z
0079d4 93ec      	ST   X,R30
                 ; 0017 00E6     }
0079d5 5f1f      	SUBI R17,-1
0079d6 cff4      	RJMP _0x2E0039
                 _0x2E003A:
                 ; 0017 00E7     buffer[2] = 0;
0079d7 940e ada9 	CALL SUBOPT_0x23B
                 ; 0017 00E8 
                 ; 0017 00E9     rtcSet.date = atol(buffer);
0079d9 940e a503 	CALL SUBOPT_0xD6
                 ; 0017 00EA 
                 ; 0017 00EB     printDebug("get date = %d\r\n",rtcSet.date);
                +
0079db eee4     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 394 ) )
0079dc e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 394 ) )
0079dd e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 394 ) )
0079de e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 394 ) )
                 	__POINTD1FN _0x2E0000,394
0079df 940e a178 	CALL SUBOPT_0x4B
0079e1 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0017 00EC 
                 ; 0017 00ED     for(i=0;i<2;i++)
0079e3 e010      	LDI  R17,LOW(0)
                 _0x2E003C:
0079e4 3012      	CPI  R17,2
0079e5 f450      	BRSH _0x2E003D
                 ; 0017 00EE     {
                 ; 0017 00EF         buffer[i] = rxPackage3[i+19];
0079e6 940e a38d 	CALL SUBOPT_0x99
0079e8 940e ada4 	CALL SUBOPT_0x23A
                +
0079ea 57ee     +SUBI R30 , LOW ( - _rxPackage3 - ( 19 ) )
0079eb 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 19 ) )
                 	__ADDW1MN _rxPackage3,19
0079ec 81e0      	LD   R30,Z
0079ed 93ec      	ST   X,R30
                 ; 0017 00F0     }
0079ee 5f1f      	SUBI R17,-1
0079ef cff4      	RJMP _0x2E003C
                 _0x2E003D:
                 ; 0017 00F1     buffer[2] = 0;
0079f0 940e ada9 	CALL SUBOPT_0x23B
                 ; 0017 00F2 
                 ; 0017 00F3     rtcSet.hour = atol(buffer);
0079f2 940e adb4 	CALL SUBOPT_0x23D
                 ; 0017 00F4 
                 ; 0017 00F5     printDebug("get hour = %d\r\n",rtcSet.hour);
                +
0079f4 efe4     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 410 ) )
0079f5 e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 410 ) )
0079f6 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 410 ) )
0079f7 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 410 ) )
                 	__POINTD1FN _0x2E0000,410
0079f8 940e b62a 	CALL __PUTPARD1
0079fa 940e a4a9 	CALL SUBOPT_0xC9
0079fc 940e a8c3 	CALL SUBOPT_0x174
                 ; 0017 00F6 
                 ; 0017 00F7     for(i=0;i<2;i++)
0079fe e010      	LDI  R17,LOW(0)
                 _0x2E003F:
0079ff 3012      	CPI  R17,2
007a00 f450      	BRSH _0x2E0040
                 ; 0017 00F8     {
                 ; 0017 00F9         buffer[i] = rxPackage3[i+22];
007a01 940e a38d 	CALL SUBOPT_0x99
007a03 940e ada4 	CALL SUBOPT_0x23A
                +
007a05 57eb     +SUBI R30 , LOW ( - _rxPackage3 - ( 22 ) )
007a06 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 22 ) )
                 	__ADDW1MN _rxPackage3,22
007a07 81e0      	LD   R30,Z
007a08 93ec      	ST   X,R30
                 ; 0017 00FA     }
007a09 5f1f      	SUBI R17,-1
007a0a cff4      	RJMP _0x2E003F
                 _0x2E0040:
                 ; 0017 00FB     buffer[2] = 0;
007a0b 940e ada9 	CALL SUBOPT_0x23B
                 ; 0017 00FC 
                 ; 0017 00FD     rtcSet.min = atol(buffer);
007a0d 940e adb9 	CALL SUBOPT_0x23E
                 ; 0017 00FE 
                 ; 0017 00FF     printDebug("get min = %d\r\n",rtcSet.min);
                +
007a0f e0e4     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 426 ) )
007a10 e6f1     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 426 ) )
007a11 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 426 ) )
007a12 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 426 ) )
                 	__POINTD1FN _0x2E0000,426
007a13 940e b62a 	CALL __PUTPARD1
007a15 940e a4ae 	CALL SUBOPT_0xCA
007a17 940e a8c3 	CALL SUBOPT_0x174
                 ; 0017 0100 
                 ; 0017 0101     for(i=0;i<2;i++)
007a19 e010      	LDI  R17,LOW(0)
                 _0x2E0042:
007a1a 3012      	CPI  R17,2
007a1b f450      	BRSH _0x2E0043
                 ; 0017 0102     {
                 ; 0017 0103         buffer[i] = rxPackage3[i+25];
007a1c 940e a38d 	CALL SUBOPT_0x99
007a1e 940e ada4 	CALL SUBOPT_0x23A
                +
007a20 57e8     +SUBI R30 , LOW ( - _rxPackage3 - ( 25 ) )
007a21 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 25 ) )
                 	__ADDW1MN _rxPackage3,25
007a22 81e0      	LD   R30,Z
007a23 93ec      	ST   X,R30
                 ; 0017 0104     }
007a24 5f1f      	SUBI R17,-1
007a25 cff4      	RJMP _0x2E0042
                 _0x2E0043:
                 ; 0017 0105     buffer[2] = 0;
007a26 940e ada9 	CALL SUBOPT_0x23B
                 ; 0017 0106 
                 ; 0017 0107     rtcSet.sec = atol(buffer);
007a28 940e adbe 	CALL SUBOPT_0x23F
                 ; 0017 0108 
                 ; 0017 0109     printDebug("get sec = %d\r\n",rtcSet.sec);
                +
007a2a e1e3     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 441 ) )
007a2b e6f1     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 441 ) )
007a2c e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 441 ) )
007a2d e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 441 ) )
                 	__POINTD1FN _0x2E0000,441
007a2e 940e b62a 	CALL __PUTPARD1
                +
007a30 8dec     +LDD R30 , Y + 28
007a31 8dfd     +LDD R31 , Y + 28 + 1
007a32 8d6e     +LDD R22 , Y + 28 + 2
007a33 8d7f     +LDD R23 , Y + 28 + 3
                 	__GETD1S 28
007a34 940e a8c3 	CALL SUBOPT_0x174
                 ; 0017 010A 
                 ; 0017 010B     for(i=0;i<3;i++)
007a36 e010      	LDI  R17,LOW(0)
                 _0x2E0045:
007a37 3013      	CPI  R17,3
007a38 f450      	BRSH _0x2E0046
                 ; 0017 010C     {
                 ; 0017 010D         buffer[i] = rxPackage3[i+28];
007a39 940e a38d 	CALL SUBOPT_0x99
007a3b 940e ada4 	CALL SUBOPT_0x23A
                +
007a3d 57e5     +SUBI R30 , LOW ( - _rxPackage3 - ( 28 ) )
007a3e 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 28 ) )
                 	__ADDW1MN _rxPackage3,28
007a3f 81e0      	LD   R30,Z
007a40 93ec      	ST   X,R30
                 ; 0017 010E     }
007a41 5f1f      	SUBI R17,-1
007a42 cff4      	RJMP _0x2E0045
                 _0x2E0046:
                 ; 0017 010F     buffer[4] = 0;
007a43 940e ad9e 	CALL SUBOPT_0x239
                 ; 0017 0110 
                 ; 0017 0111     tz = atol(buffer);
007a45 019f      	MOVW R18,R30
                 ; 0017 0112 
                 ; 0017 0113     printDebug("get timezone = %+d\r\n",tz);
                +
007a46 e2e2     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 456 ) )
007a47 e6f1     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 456 ) )
007a48 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 456 ) )
007a49 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 456 ) )
                 	__POINTD1FN _0x2E0000,456
007a4a 940e 9fcd 	CALL SUBOPT_0xF
007a4c 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0017 0114 
                 ; 0017 0115     RTC_setDateTime(rtcSet,tz);
007a4e 01fe      	MOVW R30,R28
007a4f 9634      	ADIW R30,4
007a50 e1aa      	LDI  R26,26
007a51 940e b634 	CALL __PUTPARL
007a53 01d9      	MOVW R26,R18
007a54 940e 43a9 	CALL _RTC_setDateTime
                 ; 0017 0116 
                 ; 0017 0117     return 0;
007a56 940e a71a 	CALL SUBOPT_0x136
007a58 96ee      	ADIW R28,62
007a59 9508      	RET
                 ; 0017 0118 }
                 ;/*============================================================*/
                 ;void DEBUG_resetAlarm(void)
                 ; 0017 011B {
                 _DEBUG_resetAlarm:
                 ; 0017 011C     resetAlarm();
007a5a 940e 6fc2 	CALL _resetAlarm
                 ; 0017 011D 
                 ; 0017 011E     printDebug("\r\n<DEBUG> Alarm Status Reset..!!\r\n");
                +
007a5c e3e7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 477 ) )
007a5d e6f1     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 477 ) )
007a5e e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 477 ) )
007a5f e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 477 ) )
                 	__POINTD1FN _0x2E0000,477
007a60 940e b62a 	CALL __PUTPARD1
007a62 e080      	LDI  R24,0
007a63 d23c      	RCALL _printDebug
                 _0x20E0032:
007a64 9624      	ADIW R28,4
                 ; 0017 011F }
007a65 9508      	RET
                 ;/*============================================================*/
                 ;void DEBUG_ClearLogFile(void)
                 ; 0017 0122 {
                 _DEBUG_ClearLogFile:
                 ; 0017 0123     int         res;
                 ; 0017 0124 
                 ; 0017 0125     printDebug("<DEBUG_ClearLogFile> Re-initiate log file\r\n");
007a66 931a      	ST   -Y,R17
007a67 930a      	ST   -Y,R16
                 ;	res -> R16,R17
                +
007a68 e5ea     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 512 ) )
007a69 e6f1     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 512 ) )
007a6a e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 512 ) )
007a6b e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 512 ) )
                 	__POINTD1FN _0x2E0000,512
007a6c 940e 9f66 	CALL SUBOPT_0x2
                 ; 0017 0126 
                 ; 0017 0127     res = LOG_createFile(LOGFILE_DATA,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
007a6e 940e ac88 	CALL SUBOPT_0x219
                 ; 0017 0128     if(res < 0)
007a70 f422      	BRPL _0x2E0047
                 ; 0017 0129     {
                 ; 0017 012A         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
007a71 940e adc3 	CALL SUBOPT_0x240
007a73 940e a190 	CALL SUBOPT_0x4F
                 ; 0017 012B     }
                 ; 0017 012C 
                 ; 0017 012D     res = LOG_createFile(LOGFILE_EVENT,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
                 _0x2E0047:
007a75 940e acb2 	CALL SUBOPT_0x21E
                 ; 0017 012E     if(res < 0)
007a77 f422      	BRPL _0x2E0048
                 ; 0017 012F     {
                 ; 0017 0130         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
007a78 940e adc3 	CALL SUBOPT_0x240
007a7a 940e a1db 	CALL SUBOPT_0x5A
                 ; 0017 0131     }
                 ; 0017 0132 
                 ; 0017 0133     res = LOG_createFile(LOGFILE_ERROR,1,NULL,0);
                 _0x2E0048:
007a7c ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
007a7d e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
007a7e 93fa      	ST   -Y,R31
007a7f 93ea      	ST   -Y,R30
007a80 e0e1      	LDI  R30,LOW(1)
007a81 93ea      	ST   -Y,R30
007a82 940e a8f6 	CALL SUBOPT_0x17F
007a84 940e 753e 	CALL _LOG_createFile
007a86 018f      	MOVW R16,R30
                 ; 0017 0134     if(res < 0)
007a87 2311      	TST  R17
007a88 f432      	BRPL _0x2E0049
                 ; 0017 0135     {
                 ; 0017 0136         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_ERROR);
007a89 940e adc3 	CALL SUBOPT_0x240
007a8b 940e ad00 	CALL SUBOPT_0x226
007a8d 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0017 0137     }
                 ; 0017 0138 
                 ; 0017 0139     return;
                 _0x2E0049:
007a8f 9109      	LD   R16,Y+
007a90 9119      	LD   R17,Y+
007a91 9508      	RET
                 ; 0017 013A }
                 ;/*============================================================*/
                 ;void DEBUG_setRealVref(void)
                 ; 0017 013D {
                 _DEBUG_setRealVref:
                 ; 0017 013E     unsigned char i;
                 ; 0017 013F     unsigned char rxStrSetVREF[6];
                 ; 0017 0140 
                 ; 0017 0141     for(i=0;i<=5;i++)
007a92 9726      	SBIW R28,6
007a93 931a      	ST   -Y,R17
                 ;	i -> R17
                 ;	rxStrSetVREF -> Y+1
007a94 e010      	LDI  R17,LOW(0)
                 _0x2E004B:
007a95 3016      	CPI  R17,6
007a96 f440      	BRSH _0x2E004C
                 ; 0017 0142     {
                 ; 0017 0143         rxStrSetVREF[i] = rxPackage3[i+8];
007a97 940e a38d 	CALL SUBOPT_0x99
007a99 01de      	MOVW R26,R28
007a9a 9611      	ADIW R26,1
007a9b 940e ad9b 	CALL SUBOPT_0x238
                 ; 0017 0144     }
007a9d 5f1f      	SUBI R17,-1
007a9e cff6      	RJMP _0x2E004B
                 _0x2E004C:
                 ; 0017 0145     rxStrSetVREF[5] = '\0';
007a9f e0e0      	LDI  R30,LOW(0)
007aa0 83ee      	STD  Y+6,R30
                 ; 0017 0146     printDebug("<DEBUG_setRealVref> get set Vref<string> %s\r\n",rxStrSetVREF);
                +
007aa1 ebe7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 605 ) )
007aa2 e6f1     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 605 ) )
007aa3 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 605 ) )
007aa4 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 605 ) )
                 	__POINTD1FN _0x2E0000,605
007aa5 940e b62a 	CALL __PUTPARD1
007aa7 01fe      	MOVW R30,R28
007aa8 9635      	ADIW R30,5
007aa9 940e a524 	CALL SUBOPT_0xDD
007aab 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0017 0147     eep_vref_val = (atof(rxStrSetVREF));
007aad 01de      	MOVW R26,R28
007aae 9611      	ADIW R26,1
007aaf 940e 82c2 	CALL _atof
007ab1 e8a9      	LDI  R26,LOW(_eep_vref_val)
007ab2 e0b5      	LDI  R27,HIGH(_eep_vref_val)
007ab3 940e b65d 	CALL __EEPROMWRD
                 ; 0017 0148     printDebug("<DEBUG_setRealVref> After convert = %f\r\n",eep_vref_val);
                +
007ab5 eee5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 651 ) )
007ab6 e6f1     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 651 ) )
007ab7 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 651 ) )
007ab8 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 651 ) )
                 	__POINTD1FN _0x2E0000,651
007ab9 940e b62a 	CALL __PUTPARD1
007abb e8a9      	LDI  R26,LOW(_eep_vref_val)
007abc e0b5      	LDI  R27,HIGH(_eep_vref_val)
007abd 940e a710 	CALL SUBOPT_0x134
                 ; 0017 0149 }
007abf 8118      	LDD  R17,Y+0
007ac0 9627      	ADIW R28,7
007ac1 9508      	RET
                 ;/*============================================================*/
                 ;void DEBUG_sensorSelect(void)
                 ; 0017 014C {
                 _DEBUG_sensorSelect:
                 ; 0017 014D     unsigned char ch[2];
                 ; 0017 014E 
                 ; 0017 014F     if(TEMP_SEL != TEMP_TYPE_K){
007ac2 9722      	SBIW R28,2
                 ;	ch -> Y+0
007ac3 940e a30d 	CALL SUBOPT_0x84
007ac5 f039      	BREQ _0x2E004D
                 ; 0017 0150         printDebug("<DEBUG_sensorSelect> This TEMP_SEL not support\r\n\r\n");
                +
007ac6 e0ee     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 692 ) )
007ac7 e6f2     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 692 ) )
007ac8 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 692 ) )
007ac9 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 692 ) )
                 	__POINTD1FN _0x2E0000,692
007aca 940e 9f66 	CALL SUBOPT_0x2
                 ; 0017 0151         return;
007acc c04d      	RJMP _0x20E0031
                 ; 0017 0152     }
                 ; 0017 0153 
                 ; 0017 0154     if(rxPackage3[8] == 'N'){
                 _0x2E004D:
                +
007acd 91a0 0d77+LDS R26 , _rxPackage3 + ( 8 )
                 	__GETB2MN _rxPackage3,8
007acf 34ae      	CPI  R26,LOW(0x4E)
007ad0 f449      	BRNE _0x2E004E
                 ; 0017 0155         hwCalId     = 9;
007ad1 940e adc8 	CALL SUBOPT_0x241
                 ; 0017 0156         printDebug("<DEBUG_sensorSelect> Deselect sensor\r\n\r\n");
                +
007ad3 e4e1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 743 ) )
007ad4 e6f2     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 743 ) )
007ad5 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 743 ) )
007ad6 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 743 ) )
                 	__POINTD1FN _0x2E0000,743
007ad7 940e 9f66 	CALL SUBOPT_0x2
                 ; 0017 0157     }
                 ; 0017 0158     else if(isdigit(rxPackage3[8])){
007ad9 c040      	RJMP _0x2E004F
                 _0x2E004E:
                +
007ada 91a0 0d77+LDS R26 , _rxPackage3 + ( 8 )
                 	__GETB2MN _rxPackage3,8
007adc 940e 9edb 	CALL _isdigit
007ade 30e0      	CPI  R30,0
007adf f139      	BREQ _0x2E0050
                 ; 0017 0159         ch[0]       = rxPackage3[8];
                +
007ae0 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
007ae2 83e8      	ST   Y,R30
                 ; 0017 015A         ch[1]       = '\0';
007ae3 e0e0      	LDI  R30,LOW(0)
007ae4 83e9      	STD  Y+1,R30
                 ; 0017 015B         hwCalId     = atoi(ch);
007ae5 01de      	MOVW R26,R28
007ae6 940e 818a 	CALL _atoi
007ae8 93e0 10f4 	STS  _hwCalId,R30
007aea 93f0 10f5 	STS  _hwCalId+1,R31
                 ; 0017 015C 
                 ; 0017 015D         SENSOR_SELECT(hwCalId);
007aec 940e a34f 	CALL SUBOPT_0x8E
007aee 91e0 10f4 	LDS  R30,_hwCalId
007af0 0fee      	LSL  R30
007af1 2bea      	OR   R30,R26
007af2 2da0      	MOV  R26,R0
007af3 93ec      	ST   X,R30
                 ; 0017 015E         delay_ms(50);           // -- for multiplex stable -- //
007af4 940e a25c 	CALL SUBOPT_0x6C
007af6 940e b2e6 	CALL _delay_ms
                 ; 0017 015F 
                 ; 0017 0160         printDebug("<DEBUG_sensorSelect> Selected sensor %d\r\n\r\n",hwCalId);
                +
007af8 e6ea     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 784 ) )
007af9 e6f2     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 784 ) )
007afa e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 784 ) )
007afb e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 784 ) )
                 	__POINTD1FN _0x2E0000,784
007afc 940e b62a 	CALL __PUTPARD1
007afe 91e0 10f4 	LDS  R30,_hwCalId
007b00 91f0 10f5 	LDS  R31,_hwCalId+1
007b02 940e a524 	CALL SUBOPT_0xDD
007b04 940e 9fd5 	CALL SUBOPT_0x10
                 ; 0017 0161     }
                 ; 0017 0162     else{
007b06 c013      	RJMP _0x2E0051
                 _0x2E0050:
                 ; 0017 0163         hwCalId     = 9;
007b07 940e adc8 	CALL SUBOPT_0x241
                 ; 0017 0164         printDebug("<DEBUG_sensorSelect> ERROR : Selecting sensor [%c][0x%02X]\r\n\r\n",rxPackage3[8],rxPackage3[8]);
                +
007b09 e9e6     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 828 ) )
007b0a e6f2     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 828 ) )
007b0b e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 828 ) )
007b0c e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 828 ) )
                 	__POINTD1FN _0x2E0000,828
007b0d 940e b62a 	CALL __PUTPARD1
                +
007b0f 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
007b11 940e a1bb 	CALL SUBOPT_0x55
                +
007b13 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
007b15 27ff      	CLR  R31
007b16 2766      	CLR  R22
007b17 2777      	CLR  R23
007b18 940e a038 	CALL SUBOPT_0x1F
                 ; 0017 0165     }
                 _0x2E0051:
                 _0x2E004F:
                 ; 0017 0166 
                 ; 0017 0167     return;
                 _0x20E0031:
007b1a 9622      	ADIW R28,2
007b1b 9508      	RET
                 ; 0017 0168 }
                 ;/*============================================================*/
                 ;void DEBUG_setDeviceEnable(char flag)
                 ; 0017 016B {
                 _DEBUG_setDeviceEnable:
                 ; 0017 016C     if(flag){
007b1c 93aa      	ST   -Y,R26
                 ;	flag -> Y+0
007b1d 81e8      	LD   R30,Y
007b1e 30e0      	CPI  R30,0
007b1f f021      	BREQ _0x2E0052
                 ; 0017 016D         config_oper.deviceEnable        =   0x01;
                +
007b20 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
007b21 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
007b22 e0e1      	LDI  R30,LOW(1)
007b23 c003      	RJMP _0x2E009C
                 ; 0017 016E     }
                 ; 0017 016F     else{
                 _0x2E0052:
                 ; 0017 0170         config_oper.deviceEnable        =   0x00;
                +
007b24 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
007b25 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
007b26 e0e0      	LDI  R30,LOW(0)
                 _0x2E009C:
007b27 940e b66d 	CALL __EEPROMWRB
                 ; 0017 0171     }
                 ; 0017 0172 
                 ; 0017 0173     config_oper_flag                    =   0x01;
007b29 e4a3      	LDI  R26,LOW(_config_oper_flag)
007b2a e0b5      	LDI  R27,HIGH(_config_oper_flag)
007b2b 940e a68d 	CALL SUBOPT_0x11B
                 ; 0017 0174     is_operating_config_update          =   1;
007b2d 93e0 10f7 	STS  _is_operating_config_update,R30
                 ; 0017 0175 
                 ; 0017 0176     return;
007b2f 9621      	ADIW R28,1
007b30 9508      	RET
                 ; 0017 0177 }
                 ;/*============================================================*/
                 ;void DEBUG_setSerialNumber(void)
                 ; 0017 017A {
                 _DEBUG_setSerialNumber:
                 ; 0017 017B     // -- assume input is "$CMDSSN,01,02,03,04,05,06,07,08#" -- //
                 ; 0017 017C     unsigned char i;
                 ; 0017 017D     unsigned char set_str[24];
                 ; 0017 017E 
                 ; 0017 017F     for(i=0;i<24;i++){
007b31 9768      	SBIW R28,24
007b32 931a      	ST   -Y,R17
                 ;	i -> R17
                 ;	set_str -> Y+1
007b33 e010      	LDI  R17,LOW(0)
                 _0x2E0055:
007b34 3118      	CPI  R17,24
007b35 f590      	BRSH _0x2E0056
                 ; 0017 0180         if( ( rxPackage3[i+7] != ',') && !isxdigit(rxPackage3[i+7])){
007b36 940e a38d 	CALL SUBOPT_0x99
                +
007b38 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
007b39 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
007b3a 81a0      	LD   R26,Z
007b3b 32ac      	CPI  R26,LOW(0x2C)
007b3c f021      	BREQ _0x2E0058
007b3d 940e 9ef8 	CALL _isxdigit
007b3f 30e0      	CPI  R30,0
007b40 f009      	BREQ _0x2E0059
                 _0x2E0058:
007b41 c012      	RJMP _0x2E0057
                 _0x2E0059:
                 ; 0017 0181             printDebug("<DEBUG_setSerialNumber> invalid setting string (%c)[0x%02]\r\n",rxPackage3[i+7],rxPackage3[i+7]);
                +
007b42 ede5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 891 ) )
007b43 e6f2     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 891 ) )
007b44 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 891 ) )
007b45 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 891 ) )
                 	__POINTD1FN _0x2E0000,891
007b46 940e ad6c 	CALL SUBOPT_0x232
                +
007b48 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
007b49 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
007b4a 81e0      	LD   R30,Z
007b4b 940e a1bb 	CALL SUBOPT_0x55
007b4d 940e a38d 	CALL SUBOPT_0x99
                +
007b4f 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
007b50 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
007b51 940e abce 	CALL SUBOPT_0x1FC
                 ; 0017 0182             return;
007b53 c09d      	RJMP _0x20E0030
                 ; 0017 0183         }
                 ; 0017 0184         set_str[i] = tolower(rxPackage3[i+7]);           // -- copy only ",01,02,03,04,05,06,07,08" -- //
                 _0x2E0057:
007b54 940e a38d 	CALL SUBOPT_0x99
007b56 010f      	MOVW R0,R30
007b57 01de      	MOVW R26,R28
007b58 9611      	ADIW R26,1
007b59 0fea      	ADD  R30,R26
007b5a 1ffb      	ADC  R31,R27
007b5b 93ff      	PUSH R31
007b5c 93ef      	PUSH R30
007b5d 01f0      	MOVW R30,R0
                +
007b5e 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
007b5f 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
007b60 81a0      	LD   R26,Z
007b61 940e 9f07 	CALL _tolower
007b63 91af      	POP  R26
007b64 91bf      	POP  R27
007b65 93ec      	ST   X,R30
                 ; 0017 0185     }
007b66 5f1f      	SUBI R17,-1
007b67 cfcc      	RJMP _0x2E0055
                 _0x2E0056:
                 ; 0017 0186 
                 ; 0017 0187     printDebug("<DEBUG_setSerialNumber> Replacing DEVICE_SERIAL..\r\n");
                +
007b68 e1e2     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 952 ) )
007b69 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 952 ) )
007b6a e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 952 ) )
007b6b e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 952 ) )
                 	__POINTD1FN _0x2E0000,952
007b6c 940e 9f66 	CALL SUBOPT_0x2
                 ; 0017 0188 
                 ; 0017 0189     printDebug("<DEBUG_setSerialNumber> Set String --> ");
                +
007b6e e4e6     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 1004 ) )
007b6f e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 1004 ) )
007b70 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 1004 ) )
007b71 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 1004 ) )
                 	__POINTD1FN _0x2E0000,1004
007b72 940e 9f66 	CALL SUBOPT_0x2
                 ; 0017 018A     for(i=0;i<24;i++){
007b74 e010      	LDI  R17,LOW(0)
                 _0x2E005B:
007b75 3118      	CPI  R17,24
007b76 f010      	BRLO PC+3
007b77 940c 7be2 	JMP _0x2E005C
                 ; 0017 018B         if((i%3) == 0)      {   continue;                       }
007b79 940e adcf 	CALL SUBOPT_0x242
007b7b 9730      	SBIW R30,0
007b7c f409      	BRNE _0x2E005D
007b7d c062      	RJMP _0x2E005A
                 ; 0017 018C         else if((i%3) == 1) {
                 _0x2E005D:
007b7e 940e adcf 	CALL SUBOPT_0x242
007b80 30e1      	CPI  R30,LOW(0x1)
007b81 e0a0      	LDI  R26,HIGH(0x1)
007b82 07fa      	CPC  R31,R26
007b83 f581      	BRNE _0x2E005F
                 ; 0017 018D 
                 ; 0017 018E             printDebug("[%c",set_str[i]);
                +
007b84 e6ee     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 1044 ) )
007b85 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 1044 ) )
007b86 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 1044 ) )
007b87 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 1044 ) )
                 	__POINTD1FN _0x2E0000,1044
007b88 940e ad6c 	CALL SUBOPT_0x232
007b8a 01de      	MOVW R26,R28
007b8b 9615      	ADIW R26,5
007b8c 940e a88e 	CALL SUBOPT_0x16C
                 ; 0017 018F 
                 ; 0017 0190             DEVICE_SERIAL[i/3]      = 0x00;
007b8e 940e add6 	CALL SUBOPT_0x243
007b90 01df      	MOVW R26,R30
007b91 e0e0      	LDI  R30,LOW(0)
007b92 940e b66d 	CALL __EEPROMWRB
                 ; 0017 0191 
                 ; 0017 0192             if(isdigit(set_str[i])){
007b94 940e a38d 	CALL SUBOPT_0x99
007b96 940e addf 	CALL SUBOPT_0x244
007b98 940e ade4 	CALL SUBOPT_0x245
007b9a f051      	BREQ _0x2E0060
                 ; 0017 0193                 DEVICE_SERIAL[i/3]  = (set_str[i] - 48) << 4;
007b9b 940e add6 	CALL SUBOPT_0x243
007b9d 010f      	MOVW R0,R30
007b9e 940e a38d 	CALL SUBOPT_0x99
007ba0 940e addf 	CALL SUBOPT_0x244
007ba2 91ec      	LD   R30,X
007ba3 53e0      	SUBI R30,LOW(48)
007ba4 c009      	RJMP _0x2E009D
                 ; 0017 0194             }
                 ; 0017 0195             else{
                 _0x2E0060:
                 ; 0017 0196                 DEVICE_SERIAL[i/3]  = (set_str[i] - 87) << 4;
007ba5 940e add6 	CALL SUBOPT_0x243
007ba7 010f      	MOVW R0,R30
007ba8 940e a38d 	CALL SUBOPT_0x99
007baa 940e addf 	CALL SUBOPT_0x244
007bac 91ec      	LD   R30,X
007bad 55e7      	SUBI R30,LOW(87)
                 _0x2E009D:
007bae 95e2      	SWAP R30
007baf 7fe0      	ANDI R30,0xF0
007bb0 01d0      	MOVW R26,R0
007bb1 940e b66d 	CALL __EEPROMWRB
                 ; 0017 0197             }
                 ; 0017 0198         }
                 ; 0017 0199         else if((i%3) == 2) {
007bb3 c02c      	RJMP _0x2E0062
                 _0x2E005F:
007bb4 940e adcf 	CALL SUBOPT_0x242
007bb6 30e2      	CPI  R30,LOW(0x2)
007bb7 e0a0      	LDI  R26,HIGH(0x2)
007bb8 07fa      	CPC  R31,R26
007bb9 f531      	BRNE _0x2E0063
                 ; 0017 019A 
                 ; 0017 019B             printDebug("%c]",set_str[i]);
                +
007bba e7e2     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 1048 ) )
007bbb e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 1048 ) )
007bbc e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 1048 ) )
007bbd e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 1048 ) )
                 	__POINTD1FN _0x2E0000,1048
007bbe 940e ad6c 	CALL SUBOPT_0x232
007bc0 01de      	MOVW R26,R28
007bc1 9615      	ADIW R26,5
007bc2 940e a88e 	CALL SUBOPT_0x16C
                 ; 0017 019C 
                 ; 0017 019D             if(isdigit(set_str[i])){
007bc4 940e a38d 	CALL SUBOPT_0x99
007bc6 940e addf 	CALL SUBOPT_0x244
007bc8 940e ade4 	CALL SUBOPT_0x245
007bca f049      	BREQ _0x2E0064
                 ; 0017 019E                 DEVICE_SERIAL[i/3]  |= (set_str[i] - 48);
007bcb 940e add6 	CALL SUBOPT_0x243
007bcd 940e ade9 	CALL SUBOPT_0x246
007bcf 940e addf 	CALL SUBOPT_0x244
007bd1 91ec      	LD   R30,X
007bd2 53e0      	SUBI R30,LOW(48)
007bd3 c008      	RJMP _0x2E009E
                 ; 0017 019F             }
                 ; 0017 01A0             else{
                 _0x2E0064:
                 ; 0017 01A1                 DEVICE_SERIAL[i/3]  |= (set_str[i] - 87);
007bd4 940e add6 	CALL SUBOPT_0x243
007bd6 940e ade9 	CALL SUBOPT_0x246
007bd8 940e addf 	CALL SUBOPT_0x244
007bda 91ec      	LD   R30,X
007bdb 55e7      	SUBI R30,LOW(87)
                 _0x2E009E:
007bdc 29e0      	OR   R30,R0
007bdd 01db      	MOVW R26,R22
007bde 940e b66d 	CALL __EEPROMWRB
                 ; 0017 01A2             }
                 ; 0017 01A3         }
                 ; 0017 01A4     }
                 _0x2E0063:
                 _0x2E0062:
                 _0x2E005A:
007be0 5f1f      	SUBI R17,-1
007be1 cf93      	RJMP _0x2E005B
                 _0x2E005C:
                 ; 0017 01A5 
                 ; 0017 01A6     printDebug("<DEBUG_setSerialNumber> Success!! DEV_SERIAL ==> ");
                +
007be2 e7e6     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 1052 ) )
007be3 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 1052 ) )
007be4 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 1052 ) )
007be5 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 1052 ) )
                 	__POINTD1FN _0x2E0000,1052
007be6 940e 9f66 	CALL SUBOPT_0x2
                 ; 0017 01A7     for(i=0;i<8;i++){
007be8 e010      	LDI  R17,LOW(0)
                 _0x2E0067:
007be9 3018      	CPI  R17,8
007bea f420      	BRSH _0x2E0068
                 ; 0017 01A8         printDebug("[%02X]",DEVICE_SERIAL[i]);
007beb 940e adf0 	CALL SUBOPT_0x247
                 ; 0017 01A9     }
007bed 5f1f      	SUBI R17,-1
007bee cffa      	RJMP _0x2E0067
                 _0x2E0068:
                 ; 0017 01AA     printDebug("\r\n");
007bef 940e ad66 	CALL SUBOPT_0x231
                 ; 0017 01AB 
                 ; 0017 01AC     return;
                 _0x20E0030:
007bf1 8118      	LDD  R17,Y+0
007bf2 9669      	ADIW R28,25
007bf3 9508      	RET
                 ; 0017 01AD }
                 ;/*============================================================*/
                 ;void DEBUG_readSerialNumber(void)
                 ; 0017 01B0 {
                 _DEBUG_readSerialNumber:
                 ; 0017 01B1     unsigned char i;
                 ; 0017 01B2 
                 ; 0017 01B3     printDebug("<DEBUG_readSerialNumber> DEV_SERIAL ==> ");
007bf4 931a      	ST   -Y,R17
                 ;	i -> R17
                +
007bf5 eaef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 1109 ) )
007bf6 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 1109 ) )
007bf7 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 1109 ) )
007bf8 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 1109 ) )
                 	__POINTD1FN _0x2E0000,1109
007bf9 940e 9f66 	CALL SUBOPT_0x2
                 ; 0017 01B4     for(i=0;i<8;i++){
007bfb e010      	LDI  R17,LOW(0)
                 _0x2E006A:
007bfc 3018      	CPI  R17,8
007bfd f420      	BRSH _0x2E006B
                 ; 0017 01B5         printDebug("[%02X]",DEVICE_SERIAL[i]);
007bfe 940e adf0 	CALL SUBOPT_0x247
                 ; 0017 01B6     }
007c00 5f1f      	SUBI R17,-1
007c01 cffa      	RJMP _0x2E006A
                 _0x2E006B:
                 ; 0017 01B7     printDebug("\r\n");
007c02 940e ad66 	CALL SUBOPT_0x231
                 ; 0017 01B8 
                 ; 0017 01B9     return;
                 _0x20E002F:
007c04 9119      	LD   R17,Y+
007c05 9508      	RET
                 ; 0017 01BA }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Debug Support Function ********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void debug_req(void)
                 ; 0017 01C2 {
                 _debug_req:
                 ; 0017 01C3     flag_PackageTerminate3 = 0;
007c06 e0e0      	LDI  R30,LOW(0)
007c07 93e0 0d6e 	STS  _flag_PackageTerminate3,R30
                 ; 0017 01C4 
                 ; 0017 01C5     printDebug("Get Debug Req.:");
                +
007c09 ede8     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 1150 ) )
007c0a e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 1150 ) )
007c0b e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 1150 ) )
007c0c e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 1150 ) )
                 	__POINTD1FN _0x2E0000,1150
007c0d 940e 9f66 	CALL SUBOPT_0x2
                 ; 0017 01C6 
                 ; 0017 01C7 
                 ; 0017 01C8     if(!strncmpf(rxPackage3,cmdSetRTCDateTime,7)){
007c0f 940e adfb 	CALL SUBOPT_0x248
                +
007c11 e3e6     +LDI R30 , LOW ( 2 * _cmdSetRTCDateTime + ( 0 ) )
007c12 e0f1     +LDI R31 , HIGH ( 2 * _cmdSetRTCDateTime + ( 0 ) )
007c13 e060     +LDI R22 , BYTE3 ( 2 * _cmdSetRTCDateTime + ( 0 ) )
007c14 e070     +LDI R23 , BYTE4 ( 2 * _cmdSetRTCDateTime + ( 0 ) )
                 	__POINTD1FN _cmdSetRTCDateTime,0
007c15 940e ae00 	CALL SUBOPT_0x249
007c17 f411      	BRNE _0x2E006C
                 ; 0017 01C9         DEBUG_setDateTime();
007c18 dd7e      	RCALL _DEBUG_setDateTime
                 ; 0017 01CA     }
                 ; 0017 01CB     else if(!strncmpf(rxPackage3,cmdResetAlarmStatus,7)){
007c19 c085      	RJMP _0x2E006D
                 _0x2E006C:
007c1a 940e adfb 	CALL SUBOPT_0x248
                +
007c1c e3ee     +LDI R30 , LOW ( 2 * _cmdResetAlarmStatus + ( 0 ) )
007c1d e0f1     +LDI R31 , HIGH ( 2 * _cmdResetAlarmStatus + ( 0 ) )
007c1e e060     +LDI R22 , BYTE3 ( 2 * _cmdResetAlarmStatus + ( 0 ) )
007c1f e070     +LDI R23 , BYTE4 ( 2 * _cmdResetAlarmStatus + ( 0 ) )
                 	__POINTD1FN _cmdResetAlarmStatus,0
007c20 940e ae00 	CALL SUBOPT_0x249
007c22 f411      	BRNE _0x2E006E
                 ; 0017 01CC         DEBUG_resetAlarm();
007c23 de36      	RCALL _DEBUG_resetAlarm
                 ; 0017 01CD     }
                 ; 0017 01CE     else if(!strncmpf(rxPackage3,cmdClearLogFile,7)){
007c24 c07a      	RJMP _0x2E006F
                 _0x2E006E:
007c25 940e adfb 	CALL SUBOPT_0x248
                +
007c27 e4e6     +LDI R30 , LOW ( 2 * _cmdClearLogFile + ( 0 ) )
007c28 e0f1     +LDI R31 , HIGH ( 2 * _cmdClearLogFile + ( 0 ) )
007c29 e060     +LDI R22 , BYTE3 ( 2 * _cmdClearLogFile + ( 0 ) )
007c2a e070     +LDI R23 , BYTE4 ( 2 * _cmdClearLogFile + ( 0 ) )
                 	__POINTD1FN _cmdClearLogFile,0
007c2b 940e ae00 	CALL SUBOPT_0x249
007c2d f411      	BRNE _0x2E0070
                 ; 0017 01CF         DEBUG_ClearLogFile();
007c2e de37      	RCALL _DEBUG_ClearLogFile
                 ; 0017 01D0     }
                 ; 0017 01D1     else if(!strncmpf(rxPackage3,cmdSetVref,7)){
007c2f c06f      	RJMP _0x2E0071
                 _0x2E0070:
007c30 940e adfb 	CALL SUBOPT_0x248
                +
007c32 e4ee     +LDI R30 , LOW ( 2 * _cmdSetVref + ( 0 ) )
007c33 e0f1     +LDI R31 , HIGH ( 2 * _cmdSetVref + ( 0 ) )
007c34 e060     +LDI R22 , BYTE3 ( 2 * _cmdSetVref + ( 0 ) )
007c35 e070     +LDI R23 , BYTE4 ( 2 * _cmdSetVref + ( 0 ) )
                 	__POINTD1FN _cmdSetVref,0
007c36 940e ae00 	CALL SUBOPT_0x249
007c38 f411      	BRNE _0x2E0072
                 ; 0017 01D2         DEBUG_setRealVref();
007c39 de58      	RCALL _DEBUG_setRealVref
                 ; 0017 01D3     }
                 ; 0017 01D4     else if(!strncmpf(rxPackage3,cmdSensorSelect,7)){
007c3a c064      	RJMP _0x2E0073
                 _0x2E0072:
007c3b 940e adfb 	CALL SUBOPT_0x248
                +
007c3d e5e6     +LDI R30 , LOW ( 2 * _cmdSensorSelect + ( 0 ) )
007c3e e0f1     +LDI R31 , HIGH ( 2 * _cmdSensorSelect + ( 0 ) )
007c3f e060     +LDI R22 , BYTE3 ( 2 * _cmdSensorSelect + ( 0 ) )
007c40 e070     +LDI R23 , BYTE4 ( 2 * _cmdSensorSelect + ( 0 ) )
                 	__POINTD1FN _cmdSensorSelect,0
007c41 940e ae00 	CALL SUBOPT_0x249
007c43 f411      	BRNE _0x2E0074
                 ; 0017 01D5         DEBUG_sensorSelect();
007c44 de7d      	RCALL _DEBUG_sensorSelect
                 ; 0017 01D6     }
                 ; 0017 01D7     else if(!strncmpf(rxPackage3,cmdDeviceEnable,7)){
007c45 c059      	RJMP _0x2E0075
                 _0x2E0074:
007c46 940e adfb 	CALL SUBOPT_0x248
                +
007c48 e5ee     +LDI R30 , LOW ( 2 * _cmdDeviceEnable + ( 0 ) )
007c49 e0f1     +LDI R31 , HIGH ( 2 * _cmdDeviceEnable + ( 0 ) )
007c4a e060     +LDI R22 , BYTE3 ( 2 * _cmdDeviceEnable + ( 0 ) )
007c4b e070     +LDI R23 , BYTE4 ( 2 * _cmdDeviceEnable + ( 0 ) )
                 	__POINTD1FN _cmdDeviceEnable,0
007c4c 940e ae00 	CALL SUBOPT_0x249
007c4e f419      	BRNE _0x2E0076
                 ; 0017 01D8         DEBUG_setDeviceEnable(1);
007c4f e0a1      	LDI  R26,LOW(1)
007c50 decb      	RCALL _DEBUG_setDeviceEnable
                 ; 0017 01D9     }
                 ; 0017 01DA     else if(!strncmpf(rxPackage3,cmdDeviceDisable,7)){
007c51 c04d      	RJMP _0x2E0077
                 _0x2E0076:
007c52 940e adfb 	CALL SUBOPT_0x248
                +
007c54 e6e6     +LDI R30 , LOW ( 2 * _cmdDeviceDisable + ( 0 ) )
007c55 e0f1     +LDI R31 , HIGH ( 2 * _cmdDeviceDisable + ( 0 ) )
007c56 e060     +LDI R22 , BYTE3 ( 2 * _cmdDeviceDisable + ( 0 ) )
007c57 e070     +LDI R23 , BYTE4 ( 2 * _cmdDeviceDisable + ( 0 ) )
                 	__POINTD1FN _cmdDeviceDisable,0
007c58 940e ae00 	CALL SUBOPT_0x249
007c5a f419      	BRNE _0x2E0078
                 ; 0017 01DB         DEBUG_setDeviceEnable(0);
007c5b e0a0      	LDI  R26,LOW(0)
007c5c debf      	RCALL _DEBUG_setDeviceEnable
                 ; 0017 01DC     }
                 ; 0017 01DD     else if(!strncmpf(rxPackage3,cmdSetSerialNumber,7)){
007c5d c041      	RJMP _0x2E0079
                 _0x2E0078:
007c5e 940e adfb 	CALL SUBOPT_0x248
                +
007c60 e6ee     +LDI R30 , LOW ( 2 * _cmdSetSerialNumber + ( 0 ) )
007c61 e0f1     +LDI R31 , HIGH ( 2 * _cmdSetSerialNumber + ( 0 ) )
007c62 e060     +LDI R22 , BYTE3 ( 2 * _cmdSetSerialNumber + ( 0 ) )
007c63 e070     +LDI R23 , BYTE4 ( 2 * _cmdSetSerialNumber + ( 0 ) )
                 	__POINTD1FN _cmdSetSerialNumber,0
007c64 940e ae00 	CALL SUBOPT_0x249
007c66 f411      	BRNE _0x2E007A
                 ; 0017 01DE         DEBUG_setSerialNumber();
007c67 dec9      	RCALL _DEBUG_setSerialNumber
                 ; 0017 01DF     }
                 ; 0017 01E0     else if(!strncmpf(rxPackage3,cmdReadSerialNumber,7)){
007c68 c036      	RJMP _0x2E007B
                 _0x2E007A:
007c69 940e adfb 	CALL SUBOPT_0x248
                +
007c6b e7e6     +LDI R30 , LOW ( 2 * _cmdReadSerialNumber + ( 0 ) )
007c6c e0f1     +LDI R31 , HIGH ( 2 * _cmdReadSerialNumber + ( 0 ) )
007c6d e060     +LDI R22 , BYTE3 ( 2 * _cmdReadSerialNumber + ( 0 ) )
007c6e e070     +LDI R23 , BYTE4 ( 2 * _cmdReadSerialNumber + ( 0 ) )
                 	__POINTD1FN _cmdReadSerialNumber,0
007c6f 940e ae00 	CALL SUBOPT_0x249
007c71 f411      	BRNE _0x2E007C
                 ; 0017 01E1         DEBUG_readSerialNumber();
007c72 df81      	RCALL _DEBUG_readSerialNumber
                 ; 0017 01E2     }else if(!strncmpf(rxPackage3,cmdGetCal,7)){
007c73 c02b      	RJMP _0x2E007D
                 _0x2E007C:
007c74 940e adfb 	CALL SUBOPT_0x248
                +
007c76 e7ee     +LDI R30 , LOW ( 2 * _cmdGetCal + ( 0 ) )
007c77 e0f1     +LDI R31 , HIGH ( 2 * _cmdGetCal + ( 0 ) )
007c78 e060     +LDI R22 , BYTE3 ( 2 * _cmdGetCal + ( 0 ) )
007c79 e070     +LDI R23 , BYTE4 ( 2 * _cmdGetCal + ( 0 ) )
                 	__POINTD1FN _cmdGetCal,0
007c7a 940e ae00 	CALL SUBOPT_0x249
007c7c f411      	BRNE _0x2E007E
                 ; 0017 01E3         debugGetCal();
007c7d db90      	RCALL _debugGetCal
                 ; 0017 01E4     }else if(!strncmpf(rxPackage3,cmdSetCal,7)){
007c7e c020      	RJMP _0x2E007F
                 _0x2E007E:
007c7f 940e adfb 	CALL SUBOPT_0x248
                +
007c81 e8e6     +LDI R30 , LOW ( 2 * _cmdSetCal + ( 0 ) )
007c82 e0f1     +LDI R31 , HIGH ( 2 * _cmdSetCal + ( 0 ) )
007c83 e060     +LDI R22 , BYTE3 ( 2 * _cmdSetCal + ( 0 ) )
007c84 e070     +LDI R23 , BYTE4 ( 2 * _cmdSetCal + ( 0 ) )
                 	__POINTD1FN _cmdSetCal,0
007c85 940e ae00 	CALL SUBOPT_0x249
007c87 f411      	BRNE _0x2E0080
                 ; 0017 01E5         debugSetCal();
007c88 dc1f      	RCALL _debugSetCal
                 ; 0017 01E6     }else if(!strncmpf(rxPackage3,cmdConfirmCal,7)){
007c89 c015      	RJMP _0x2E0081
                 _0x2E0080:
007c8a 940e adfb 	CALL SUBOPT_0x248
                +
007c8c e8ee     +LDI R30 , LOW ( 2 * _cmdConfirmCal + ( 0 ) )
007c8d e0f1     +LDI R31 , HIGH ( 2 * _cmdConfirmCal + ( 0 ) )
007c8e e060     +LDI R22 , BYTE3 ( 2 * _cmdConfirmCal + ( 0 ) )
007c8f e070     +LDI R23 , BYTE4 ( 2 * _cmdConfirmCal + ( 0 ) )
                 	__POINTD1FN _cmdConfirmCal,0
007c90 940e ae00 	CALL SUBOPT_0x249
007c92 f411      	BRNE _0x2E0082
                 ; 0017 01E7         debugConfirmCal();
007c93 dc8f      	RCALL _debugConfirmCal
                 ; 0017 01E8     }else if(!strncmpf(rxPackage3,cmdGetCurSensor,7)){
007c94 c00a      	RJMP _0x2E0083
                 _0x2E0082:
007c95 940e adfb 	CALL SUBOPT_0x248
                +
007c97 e9e6     +LDI R30 , LOW ( 2 * _cmdGetCurSensor + ( 0 ) )
007c98 e0f1     +LDI R31 , HIGH ( 2 * _cmdGetCurSensor + ( 0 ) )
007c99 e060     +LDI R22 , BYTE3 ( 2 * _cmdGetCurSensor + ( 0 ) )
007c9a e070     +LDI R23 , BYTE4 ( 2 * _cmdGetCurSensor + ( 0 ) )
                 	__POINTD1FN _cmdGetCurSensor,0
007c9b 940e ae00 	CALL SUBOPT_0x249
007c9d f409      	BRNE _0x2E0084
                 ; 0017 01E9         debugGetCurSensor();
007c9e db2d      	RCALL _debugGetCurSensor
                 ; 0017 01EA     }
                 ; 0017 01EB     return;
                 _0x2E0084:
                 _0x2E0083:
                 _0x2E0081:
                 _0x2E007F:
                 _0x2E007D:
                 _0x2E007B:
                 _0x2E0079:
                 _0x2E0077:
                 _0x2E0075:
                 _0x2E0073:
                 _0x2E0071:
                 _0x2E006F:
                 _0x2E006D:
007c9f 9508      	RET
                 ; 0017 01EC }
                 ;/*============================================================*/
                 ;void printDebug(flash char *fmtstr, ...)
                 ; 0017 01EF {
                 _printDebug:
007ca0 92ff      	PUSH R15
007ca1 2ef8      	MOV  R15,R24
                 ; 0017 01F0     char textBuffer[256];
                 ; 0017 01F1     va_list argptr;
                 ; 0017 01F2 
                 ; 0017 01F3     va_start(argptr, fmtstr);
007ca2 50d1      	SUBI R29,1
007ca3 931a      	ST   -Y,R17
007ca4 930a      	ST   -Y,R16
                 ;	*fmtstr -> Y+258
                 ;	textBuffer -> Y+2
                 ;	*argptr -> R16,R17
007ca5 01de      	MOVW R26,R28
007ca6 50a2      	SUBI R26,LOW(-(254))
007ca7 4fbf      	SBCI R27,HIGH(-(254))
007ca8 940e b499 	CALL __ADDW2R15
007caa 018d      	MOVW R16,R26
                 ; 0017 01F4     vsprintf(textBuffer,fmtstr,argptr);
007cab 940e aa3e 	CALL SUBOPT_0x1BB
007cad 01de      	MOVW R26,R28
007cae 5fac      	SUBI R26,LOW(-(260))
007caf 4fbe      	SBCI R27,HIGH(-(260))
007cb0 940e ae07 	CALL SUBOPT_0x24A
007cb2 01d8      	MOVW R26,R16
007cb3 940e 9eb1 	CALL _vsprintf
                 ; 0017 01F5     send_uart(3,textBuffer);
007cb5 e0e3      	LDI  R30,LOW(3)
007cb6 93ea      	ST   -Y,R30
007cb7 01de      	MOVW R26,R28
007cb8 9613      	ADIW R26,3
007cb9 940e 3d8f 	CALL _send_uart
                 ; 0017 01F6     va_end(argptr);
                 ; 0017 01F7 
                 ; 0017 01F8     return;
007cbb 8119      	LDD  R17,Y+1
007cbc 8108      	LDD  R16,Y+0
007cbd 9622      	ADIW R28,2
007cbe 5fdf      	SUBI R29,-1
007cbf 90ff      	POP  R15
007cc0 9508      	RET
                 ; 0017 01F9 }
                 ;/*============================================================*/
                 ;void print_hex_ascii_line(const unsigned char *payload, int len, int offset)
                 ; 0017 01FC {
                 _print_hex_ascii_line:
                 ; 0017 01FD 
                 ; 0017 01FE     int i;
                 ; 0017 01FF     int gap;
                 ; 0017 0200     const unsigned char *ch;
                 ; 0017 0201 
                 ; 0017 0202     // offset //
                 ; 0017 0203     printDebug("%05d   ", offset);
007cc1 940e a962 	CALL SUBOPT_0x193
                 ;	*payload -> Y+10
                 ;	len -> Y+8
                 ;	offset -> Y+6
                 ;	i -> R16,R17
                 ;	gap -> R18,R19
                 ;	*ch -> R20,R21
                +
007cc3 eee8     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 1166 ) )
007cc4 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 1166 ) )
007cc5 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 1166 ) )
007cc6 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 1166 ) )
                 	__POINTD1FN _0x2E0000,1166
007cc7 940e a654 	CALL SUBOPT_0x110
007cc9 940e a4fe 	CALL SUBOPT_0xD5
                 ; 0017 0204 
                 ; 0017 0205 
                 ; 0017 0206     // hex //
                 ; 0017 0207     ch = payload;
                +
007ccb 854a     +LDD R20 , Y + 10
007ccc 855b     +LDD R21 , Y + 10 + 1
                 	__GETWRS 20,21,10
                 ; 0017 0208     for(i = 0; i < len; i++) {
                +
007ccd e000     +LDI R16 , LOW ( 0 )
007cce e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E0086:
007ccf 85e8      	LDD  R30,Y+8
007cd0 85f9      	LDD  R31,Y+8+1
007cd1 170e      	CP   R16,R30
007cd2 071f      	CPC  R17,R31
007cd3 f494      	BRGE _0x2E0087
                 ; 0017 0209         printDebug("%02x ", *ch);
                +
007cd4 efe0     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 1174 ) )
007cd5 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 1174 ) )
007cd6 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 1174 ) )
007cd7 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 1174 ) )
                 	__POINTD1FN _0x2E0000,1174
007cd8 940e ae0e 	CALL SUBOPT_0x24B
                 ; 0017 020A 
                 ; 0017 020B         ch++;
                +
007cda 5f4f     +SUBI R20 , LOW ( - 1 )
007cdb 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0017 020C         // print extra space after 8th byte for visual aid //
                 ; 0017 020D         if (i == 7){
007cdc e0e7      	LDI  R30,LOW(7)
007cdd e0f0      	LDI  R31,HIGH(7)
007cde 17e0      	CP   R30,R16
007cdf 07f1      	CPC  R31,R17
007ce0 f411      	BRNE _0x2E0088
                 ; 0017 020E             printDebug(" ");
007ce1 940e ae14 	CALL SUBOPT_0x24C
                 ; 0017 020F 
                 ; 0017 0210         }
                 ; 0017 0211     }
                 _0x2E0088:
                +
007ce3 5f0f     +SUBI R16 , LOW ( - 1 )
007ce4 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007ce5 cfe9      	RJMP _0x2E0086
                 _0x2E0087:
                 ; 0017 0212     // print space to handle line less than 8 bytes //
                 ; 0017 0213     if (len < 8){
007ce6 85a8      	LDD  R26,Y+8
007ce7 85b9      	LDD  R27,Y+8+1
007ce8 9718      	SBIW R26,8
007ce9 f414      	BRGE _0x2E0089
                 ; 0017 0214         printDebug(" ");
007cea 940e ae14 	CALL SUBOPT_0x24C
                 ; 0017 0215 
                 ; 0017 0216     }
                 ; 0017 0217 
                 ; 0017 0218     // fill hex gap with spaces if not full line //
                 ; 0017 0219     if (len < 16) {
                 _0x2E0089:
007cec 85a8      	LDD  R26,Y+8
007ced 85b9      	LDD  R27,Y+8+1
007cee 9750      	SBIW R26,16
007cef f48c      	BRGE _0x2E008A
                 ; 0017 021A         gap = 16 - len;
007cf0 85a8      	LDD  R26,Y+8
007cf1 85b9      	LDD  R27,Y+8+1
007cf2 e1e0      	LDI  R30,LOW(16)
007cf3 e0f0      	LDI  R31,HIGH(16)
007cf4 1bea      	SUB  R30,R26
007cf5 0bfb      	SBC  R31,R27
007cf6 019f      	MOVW R18,R30
                 ; 0017 021B         for (i = 0; i < gap; i++) {
                +
007cf7 e000     +LDI R16 , LOW ( 0 )
007cf8 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E008C:
                +
007cf9 1702     +CP R16 , R18
007cfa 0713     +CPC R17 , R19
                 	__CPWRR 16,17,18,19
007cfb f42c      	BRGE _0x2E008D
                 ; 0017 021C             printDebug("   ");
007cfc 940e ae1a 	CALL SUBOPT_0x24D
                 ; 0017 021D 
                 ; 0017 021E         }
                +
007cfe 5f0f     +SUBI R16 , LOW ( - 1 )
007cff 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007d00 cff8      	RJMP _0x2E008C
                 _0x2E008D:
                 ; 0017 021F     }
                 ; 0017 0220     printDebug("   ");
                 _0x2E008A:
007d01 940e ae1a 	CALL SUBOPT_0x24D
                 ; 0017 0221 
                 ; 0017 0222 
                 ; 0017 0223     // ascii (if printable) //
                 ; 0017 0224     ch = payload;
                +
007d03 854a     +LDD R20 , Y + 10
007d04 855b     +LDD R21 , Y + 10 + 1
                 	__GETWRS 20,21,10
                 ; 0017 0225     for(i = 0; i < len; i++) {
                +
007d05 e000     +LDI R16 , LOW ( 0 )
007d06 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E008F:
007d07 85e8      	LDD  R30,Y+8
007d08 85f9      	LDD  R31,Y+8+1
007d09 170e      	CP   R16,R30
007d0a 071f      	CPC  R17,R31
007d0b f4c4      	BRGE _0x2E0090
                 ; 0017 0226         if (isprint(*ch)){
007d0c 01da      	MOVW R26,R20
007d0d 91ac      	LD   R26,X
007d0e 940e 9ee4 	CALL _isprint
007d10 30e0      	CPI  R30,0
007d11 f039      	BREQ _0x2E0091
                 ; 0017 0227             printDebug("%c", *ch);
                +
007d12 e6ef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 1045 ) )
007d13 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 1045 ) )
007d14 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 1045 ) )
007d15 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 1045 ) )
                 	__POINTD1FN _0x2E0000,1045
007d16 940e ae0e 	CALL SUBOPT_0x24B
                 ; 0017 0228 
                 ; 0017 0229         }
                 ; 0017 022A         else{
007d18 c006      	RJMP _0x2E0092
                 _0x2E0091:
                 ; 0017 022B             printDebug(".");
                +
007d19 efe6     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 1180 ) )
007d1a e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 1180 ) )
007d1b e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 1180 ) )
007d1c e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 1180 ) )
                 	__POINTD1FN _0x2E0000,1180
007d1d 940e 9f66 	CALL SUBOPT_0x2
                 ; 0017 022C 
                 ; 0017 022D         }
                 _0x2E0092:
                 ; 0017 022E         ch++;
                +
007d1f 5f4f     +SUBI R20 , LOW ( - 1 )
007d20 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0017 022F     }
                +
007d21 5f0f     +SUBI R16 , LOW ( - 1 )
007d22 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007d23 cfe3      	RJMP _0x2E008F
                 _0x2E0090:
                 ; 0017 0230 
                 ; 0017 0231     printDebug("\r\n");
007d24 940e ad66 	CALL SUBOPT_0x231
                 ; 0017 0232 
                 ; 0017 0233 
                 ; 0017 0234 return;
007d26 940e b6a1 	CALL __LOADLOCR6
007d28 940c 80b0 	JMP  _0x20E002C
                 ; 0017 0235 }
                 ;/*============================================================*/
                 ;void print_payload(const unsigned char *payload, int len)
                 ; 0017 0238 {
                 _print_payload:
                 ; 0017 0239 
                 ; 0017 023A     int len_rem = len;
                 ; 0017 023B     int line_width = 16;            // number of bytes per line //
                 ; 0017 023C     int line_len;
                 ; 0017 023D     int offset = 0;                    // zero-based offset counter //
                 ; 0017 023E     const unsigned char *ch = payload;
                 ; 0017 023F 
                 ; 0017 0240     if (len <= 0)
007d2a 93ba      	ST   -Y,R27
007d2b 93aa      	ST   -Y,R26
007d2c 9724      	SBIW R28,4
007d2d e0e0      	LDI  R30,LOW(0)
007d2e 83ea      	STD  Y+2,R30
007d2f 83eb      	STD  Y+3,R30
007d30 940e b69a 	CALL __SAVELOCR6
                 ;	*payload -> Y+12
                 ;	len -> Y+10
                 ;	len_rem -> R16,R17
                 ;	line_width -> R18,R19
                 ;	line_len -> R20,R21
                 ;	offset -> Y+8
                 ;	*ch -> Y+6
                +
007d32 850a     +LDD R16 , Y + 10
007d33 851b     +LDD R17 , Y + 10 + 1
                 	__GETWRS 16,17,10
                +
007d34 e120     +LDI R18 , LOW ( 16 )
007d35 e030     +LDI R19 , HIGH ( 16 )
                 	__GETWRN 18,19,16
007d36 85ec      	LDD  R30,Y+12
007d37 85fd      	LDD  R31,Y+12+1
007d38 83ee      	STD  Y+6,R30
007d39 83ff      	STD  Y+6+1,R31
007d3a 85aa      	LDD  R26,Y+10
007d3b 85bb      	LDD  R27,Y+10+1
007d3c 940e b682 	CALL __CPW02
007d3e f56c      	BRGE _0x20E002E
                 ; 0017 0241         return;
                 ; 0017 0242 
                 ; 0017 0243     // data fits on one line //
                 ; 0017 0244     if (len <= line_width) {
007d3f 172a      	CP   R18,R26
007d40 073b      	CPC  R19,R27
007d41 f034      	BRLT _0x2E0094
                 ; 0017 0245         print_hex_ascii_line(ch, len, offset);
007d42 940e a78a 	CALL SUBOPT_0x144
007d44 940e ae20 	CALL SUBOPT_0x24E
007d46 df7a      	RCALL _print_hex_ascii_line
                 ; 0017 0246         return;
007d47 c024      	RJMP _0x20E002E
                 ; 0017 0247     }
                 ; 0017 0248     // data spans multiple lines //
                 ; 0017 0249     for ( ;; ) {
                 _0x2E0094:
                 _0x2E0096:
                 ; 0017 024A         // compute current line length //
                 ; 0017 024B         line_len = line_width % len_rem;
007d48 01f8      	MOVW R30,R16
007d49 01d9      	MOVW R26,R18
007d4a 940e b5ca 	CALL __MODW21
007d4c 01af      	MOVW R20,R30
                 ; 0017 024C         // print line //
                 ; 0017 024D         print_hex_ascii_line(ch, line_len, offset);
007d4d 940e a78a 	CALL SUBOPT_0x144
007d4f 935a      	ST   -Y,R21
007d50 934a      	ST   -Y,R20
007d51 85ac      	LDD  R26,Y+12
007d52 85bd      	LDD  R27,Y+12+1
007d53 df6d      	RCALL _print_hex_ascii_line
                 ; 0017 024E         // compute total remaining //
                 ; 0017 024F         len_rem = len_rem - line_len;
                +
007d54 1b04     +SUB R16 , R20
007d55 0b15     +SBC R17 , R21
                 	__SUBWRR 16,17,20,21
                 ; 0017 0250         // shift pointer to remaining bytes to print //
                 ; 0017 0251         ch = ch + line_len;
007d56 01fa      	MOVW R30,R20
007d57 940e a956 	CALL SUBOPT_0x191
                 ; 0017 0252         // add offset //
                 ; 0017 0253         offset = offset + line_width;
007d59 01f9      	MOVW R30,R18
007d5a 85a8      	LDD  R26,Y+8
007d5b 85b9      	LDD  R27,Y+8+1
007d5c 0fea      	ADD  R30,R26
007d5d 1ffb      	ADC  R31,R27
007d5e 87e8      	STD  Y+8,R30
007d5f 87f9      	STD  Y+8+1,R31
                 ; 0017 0254         // check if we have line width chars or less //
                 ; 0017 0255         if (len_rem <= line_width) {
                +
007d60 1720     +CP R18 , R16
007d61 0731     +CPC R19 , R17
                 	__CPWRR 18,19,16,17
007d62 f044      	BRLT _0x2E0098
                 ; 0017 0256             // print last line and get out //
                 ; 0017 0257             print_hex_ascii_line(ch, len_rem, offset);
007d63 940e a78a 	CALL SUBOPT_0x144
007d65 931a      	ST   -Y,R17
007d66 930a      	ST   -Y,R16
007d67 85ac      	LDD  R26,Y+12
007d68 85bd      	LDD  R27,Y+12+1
007d69 df57      	RCALL _print_hex_ascii_line
                 ; 0017 0258             break;
007d6a c001      	RJMP _0x2E0097
                 ; 0017 0259         }
                 ; 0017 025A     }
                 _0x2E0098:
007d6b cfdc      	RJMP _0x2E0096
                 _0x2E0097:
                 ; 0017 025B 
                 ; 0017 025C     return;
                 _0x20E002E:
007d6c 940e b6a1 	CALL __LOADLOCR6
007d6e 962e      	ADIW R28,14
007d6f 9508      	RET
                 ; 0017 025D }
                 ;/*============================================================*/
                 ;
                 ;#include <stdlib.h>
                 ;#include "debug.h"
                 ;
                 ;// -- for polynomial interpolation by gaussian elimination -- //
                 ;int n = 3;
                 
                 	.DSEG
                 ;float a[3][4];
                 ;
                 ;/*============================================================*/
                 ;void forwardSubstitution()
                 ; 0018 000A {
                 
                 	.CSEG
                 _forwardSubstitution:
                 ; 0018 000B     int i, j, k, max;
                 ; 0018 000C     float t;
                 ; 0018 000D     for (i = 0; i < n; ++i) {
007d70 9726      	SBIW R28,6
007d71 940e a0e9 	CALL SUBOPT_0x36
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	k -> R20,R21
                 ;	max -> Y+10
                 ;	t -> Y+6
                 _0x300005:
007d73 940e ae27 	CALL SUBOPT_0x24F
007d75 170e      	CP   R16,R30
007d76 071f      	CPC  R17,R31
007d77 f014      	BRLT PC+3
007d78 940c 7e17 	JMP _0x300006
                 ; 0018 000E 
                 ; 0018 000F         max = i;
                +
007d7a 870a     +STD Y + 10 , R16
007d7b 871b     +STD Y + 10 + 1 , R17
                 	__PUTWSR 16,17,10
                 ; 0018 0010         for (j = i + 1; j < n; ++j)
007d7c 01f8      	MOVW R30,R16
007d7d 9631      	ADIW R30,1
007d7e 019f      	MOVW R18,R30
                 _0x300008:
007d7f 940e ae27 	CALL SUBOPT_0x24F
007d81 172e      	CP   R18,R30
007d82 073f      	CPC  R19,R31
007d83 f4dc      	BRGE _0x300009
                 ; 0018 0011             if (a[j][i] > a[max][i])
007d84 940e ae2c 	CALL SUBOPT_0x250
007d86 940e ae32 	CALL SUBOPT_0x251
007d88 937f      	PUSH R23
007d89 936f      	PUSH R22
007d8a 93ff      	PUSH R31
007d8b 93ef      	PUSH R30
007d8c 940e ae35 	CALL SUBOPT_0x252
007d8e 940e ae32 	CALL SUBOPT_0x251
007d90 91af      	POP  R26
007d91 91bf      	POP  R27
007d92 918f      	POP  R24
007d93 919f      	POP  R25
007d94 940e b479 	CALL __CMPF12
007d96 f009      	BREQ PC+2
007d97 f410      	BRCC PC+3
007d98 940c 7d9c 	JMP  _0x30000A
                 ; 0018 0012                 max = j;
                +
007d9a 872a     +STD Y + 10 , R18
007d9b 873b     +STD Y + 10 + 1 , R19
                 	__PUTWSR 18,19,10
                 ; 0018 0013 
                 ; 0018 0014         for (j = 0; j < n + 1; ++j) {
                 _0x30000A:
                +
007d9c 5f2f     +SUBI R18 , LOW ( - 1 )
007d9d 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
007d9e cfe0      	RJMP _0x300008
                 _0x300009:
                +
007d9f e020     +LDI R18 , LOW ( 0 )
007da0 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x30000C:
007da1 940e ae27 	CALL SUBOPT_0x24F
007da3 9631      	ADIW R30,1
007da4 172e      	CP   R18,R30
007da5 073f      	CPC  R19,R31
007da6 f4dc      	BRGE _0x30000D
                 ; 0018 0015             t = a[max][j];
007da7 940e ae35 	CALL SUBOPT_0x252
007da9 940e ae3c 	CALL SUBOPT_0x253
007dab 940e a3be 	CALL SUBOPT_0xA3
                 ; 0018 0016             a[max][j] = a[i][j];
007dad 940e ae35 	CALL SUBOPT_0x252
007daf 940e ae3f 	CALL SUBOPT_0x254
007db1 010f      	MOVW R0,R30
007db2 940e ae42 	CALL SUBOPT_0x255
007db4 940e ae3c 	CALL SUBOPT_0x253
007db6 01d0      	MOVW R26,R0
007db7 940e b605 	CALL __PUTDP1
                 ; 0018 0017             a[i][j] = t;
007db9 940e ae42 	CALL SUBOPT_0x255
007dbb 940e ae3f 	CALL SUBOPT_0x254
007dbd 940e aac7 	CALL SUBOPT_0x1D0
                 ; 0018 0018         }
                +
007dbf 5f2f     +SUBI R18 , LOW ( - 1 )
007dc0 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
007dc1 cfdf      	RJMP _0x30000C
                 _0x30000D:
                 ; 0018 0019 
                 ; 0018 001A         /*
                 ; 0018 001B         printDebug("\r\n-- fw_sub_swap(%d) --\r\n",i);
                 ; 0018 001C         for (k = 0; k < n; ++k) {
                 ; 0018 001D             printDebug("\t\t\t");
                 ; 0018 001E             for (j = 0; j < n + 1; ++j)
                 ; 0018 001F                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 0020             printDebug("\r\n");
                 ; 0018 0021         }
                 ; 0018 0022         printDebug("\r\n");
                 ; 0018 0023         */
                 ; 0018 0024 
                 ; 0018 0025         //printDebug("\r\n-- fw_sub_calculate(%d) --\r\n",i);
                 ; 0018 0026         for (j = n; j >= i; --j){
                +
007dc2 9120 1a17+LDS R18 , 0 + ( _n )
007dc4 9130 1a18+LDS R19 , 0 + ( _n ) + 1
                 	__GETWRMN 18,19,0,_n
                 _0x30000F:
                +
007dc6 1720     +CP R18 , R16
007dc7 0731     +CPC R19 , R17
                 	__CPWRR 18,19,16,17
007dc8 f414      	BRGE PC+3
007dc9 940c 7e14 	JMP _0x300010
                 ; 0018 0027             for (k = i + 1; k < n; ++k){
007dcb 01f8      	MOVW R30,R16
007dcc 9631      	ADIW R30,1
007dcd 01af      	MOVW R20,R30
                 _0x300012:
007dce 940e ae27 	CALL SUBOPT_0x24F
007dd0 174e      	CP   R20,R30
007dd1 075f      	CPC  R21,R31
007dd2 f5f4      	BRGE _0x300013
                 ; 0018 0028                 a[k][j] -= a[k][i]/a[i][i] * a[i][j];
007dd3 01fa      	MOVW R30,R20
007dd4 940e b4e8 	CALL __LSLW4
007dd6 5ee7      	SUBI R30,LOW(-_a)
007dd7 4ef5      	SBCI R31,HIGH(-_a)
007dd8 010f      	MOVW R0,R30
007dd9 940e ae3f 	CALL SUBOPT_0x254
007ddb 93ff      	PUSH R31
007ddc 93ef      	PUSH R30
007ddd 01df      	MOVW R26,R30
007dde 940e b5fa 	CALL __GETD1P
007de0 937f      	PUSH R23
007de1 936f      	PUSH R22
007de2 93ff      	PUSH R31
007de3 93ef      	PUSH R30
007de4 01d0      	MOVW R26,R0
007de5 01f8      	MOVW R30,R16
007de6 940e ab0f 	CALL SUBOPT_0x1DE
007de8 937f      	PUSH R23
007de9 936f      	PUSH R22
007dea 93ff      	PUSH R31
007deb 93ef      	PUSH R30
007dec 940e ae42 	CALL SUBOPT_0x255
007dee 940e ae32 	CALL SUBOPT_0x251
007df0 91af      	POP  R26
007df1 91bf      	POP  R27
007df2 918f      	POP  R24
007df3 919f      	POP  R25
007df4 940e b434 	CALL __DIVF21
007df6 937f      	PUSH R23
007df7 936f      	PUSH R22
007df8 93ff      	PUSH R31
007df9 93ef      	PUSH R30
007dfa 940e ae42 	CALL SUBOPT_0x255
007dfc 940e ae3c 	CALL SUBOPT_0x253
007dfe 91af      	POP  R26
007dff 91bf      	POP  R27
007e00 918f      	POP  R24
007e01 919f      	POP  R25
007e02 940e b3e6 	CALL __MULF12
007e04 91af      	POP  R26
007e05 91bf      	POP  R27
007e06 918f      	POP  R24
007e07 919f      	POP  R25
007e08 940e aae2 	CALL SUBOPT_0x1D5
007e0a 91af      	POP  R26
007e0b 91bf      	POP  R27
007e0c 940e b605 	CALL __PUTDP1
                 ; 0018 0029                 //printDebug("\t\t\t\t\t\t%f (%f/%f * %f)\r\n",a[k][j],a[k][i],a[i][i],a[i][j]);
                 ; 0018 002A             }
                +
007e0e 5f4f     +SUBI R20 , LOW ( - 1 )
007e0f 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
007e10 cfbd      	RJMP _0x300012
                 _0x300013:
                 ; 0018 002B         }
                +
007e11 5021     +SUBI R18 , LOW ( 1 )
007e12 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
007e13 cfb2      	RJMP _0x30000F
                 _0x300010:
                 ; 0018 002C         //printDebug("\r\n");
                 ; 0018 002D 
                 ; 0018 002E 
                 ; 0018 002F         /*
                 ; 0018 0030         printDebug("\r\n-- fw_sub_res(%d) --\r\n",i);
                 ; 0018 0031         for (k = 0; k < n; ++k) {
                 ; 0018 0032             printDebug("\t\t");
                 ; 0018 0033             for (j = 0; j < n + 1; ++j)
                 ; 0018 0034                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 0035             printDebug("\r\n");
                 ; 0018 0036         }
                 ; 0018 0037         printDebug("\r\n");
                 ; 0018 0038         */
                 ; 0018 0039     }
                +
007e14 5f0f     +SUBI R16 , LOW ( - 1 )
007e15 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007e16 cf5c      	RJMP _0x300005
                 _0x300006:
                 ; 0018 003A }
007e17 940e b6a1 	CALL __LOADLOCR6
007e19 940c 80b0 	JMP  _0x20E002C
                 ;
                 ;void reverseElimination()
                 ; 0018 003D {
                 _reverseElimination:
                 ; 0018 003E     int i, j, k;
                 ; 0018 003F     for (i = n - 1; i >= 0; --i) {
007e1b 940e b69a 	CALL __SAVELOCR6
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	k -> R20,R21
007e1d 940e ae27 	CALL SUBOPT_0x24F
007e1f 9731      	SBIW R30,1
007e20 018f      	MOVW R16,R30
                 _0x300015:
007e21 2311      	TST  R17
007e22 f412      	BRPL PC+3
007e23 940c 7e94 	JMP _0x300016
                 ; 0018 0040         a[i][n] = a[i][n] / a[i][i];
007e25 940e ae42 	CALL SUBOPT_0x255
007e27 01df      	MOVW R26,R30
007e28 940e ae27 	CALL SUBOPT_0x24F
007e2a 940e aab9 	CALL SUBOPT_0x1CD
007e2c 93ff      	PUSH R31
007e2d 93ef      	PUSH R30
007e2e 940e ae42 	CALL SUBOPT_0x255
007e30 01df      	MOVW R26,R30
007e31 940e ae27 	CALL SUBOPT_0x24F
007e33 940e ab0f 	CALL SUBOPT_0x1DE
007e35 937f      	PUSH R23
007e36 936f      	PUSH R22
007e37 93ff      	PUSH R31
007e38 93ef      	PUSH R30
007e39 940e ae42 	CALL SUBOPT_0x255
007e3b 940e ae32 	CALL SUBOPT_0x251
007e3d 91af      	POP  R26
007e3e 91bf      	POP  R27
007e3f 918f      	POP  R24
007e40 919f      	POP  R25
007e41 940e b434 	CALL __DIVF21
007e43 91af      	POP  R26
007e44 91bf      	POP  R27
007e45 940e b605 	CALL __PUTDP1
                 ; 0018 0041         a[i][i] = 1;
007e47 940e ae42 	CALL SUBOPT_0x255
007e49 01df      	MOVW R26,R30
007e4a 01f8      	MOVW R30,R16
007e4b 940e aaf4 	CALL SUBOPT_0x1D9
007e4d 940e ae48 	CALL SUBOPT_0x256
007e4f 940e b605 	CALL __PUTDP1
                 ; 0018 0042         for (j = i - 1; j >= 0; --j) {
007e51 01f8      	MOVW R30,R16
007e52 9731      	SBIW R30,1
007e53 019f      	MOVW R18,R30
                 _0x300018:
007e54 2333      	TST  R19
007e55 f1da      	BRMI _0x300019
                 ; 0018 0043             a[j][n] -= a[j][i] * a[i][n];
007e56 940e ae2c 	CALL SUBOPT_0x250
007e58 010f      	MOVW R0,R30
007e59 01df      	MOVW R26,R30
007e5a 940e ae27 	CALL SUBOPT_0x24F
007e5c 940e aab9 	CALL SUBOPT_0x1CD
007e5e 93ff      	PUSH R31
007e5f 93ef      	PUSH R30
007e60 01df      	MOVW R26,R30
007e61 940e b5fa 	CALL __GETD1P
007e63 937f      	PUSH R23
007e64 936f      	PUSH R22
007e65 93ff      	PUSH R31
007e66 93ef      	PUSH R30
007e67 01d0      	MOVW R26,R0
007e68 01f8      	MOVW R30,R16
007e69 940e ab0f 	CALL SUBOPT_0x1DE
007e6b 937f      	PUSH R23
007e6c 936f      	PUSH R22
007e6d 93ff      	PUSH R31
007e6e 93ef      	PUSH R30
007e6f 940e ae42 	CALL SUBOPT_0x255
007e71 01df      	MOVW R26,R30
007e72 940e ae27 	CALL SUBOPT_0x24F
007e74 940e ab0f 	CALL SUBOPT_0x1DE
007e76 91af      	POP  R26
007e77 91bf      	POP  R27
007e78 918f      	POP  R24
007e79 919f      	POP  R25
007e7a 940e b3e6 	CALL __MULF12
007e7c 91af      	POP  R26
007e7d 91bf      	POP  R27
007e7e 918f      	POP  R24
007e7f 919f      	POP  R25
007e80 940e aae2 	CALL SUBOPT_0x1D5
007e82 91af      	POP  R26
007e83 91bf      	POP  R27
007e84 940e b605 	CALL __PUTDP1
                 ; 0018 0044             a[j][i] = 0;
007e86 940e ae2c 	CALL SUBOPT_0x250
007e88 01df      	MOVW R26,R30
007e89 01f8      	MOVW R30,R16
007e8a 940e aaf4 	CALL SUBOPT_0x1D9
007e8c 940e a2c9 	CALL SUBOPT_0x7C
                 ; 0018 0045         }
                +
007e8e 5021     +SUBI R18 , LOW ( 1 )
007e8f 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
007e90 cfc3      	RJMP _0x300018
                 _0x300019:
                 ; 0018 0046 
                 ; 0018 0047         /*
                 ; 0018 0048         printDebug("\r\n-- rev_Eli(%d) --\r\n",i);
                 ; 0018 0049         for (k = 0; k < n; ++k) {
                 ; 0018 004A             printDebug("\t\t");
                 ; 0018 004B             for (j = 0; j < n + 1; ++j)
                 ; 0018 004C                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 004D             printDebug("\r\n");
                 ; 0018 004E         }
                 ; 0018 004F         printDebug("\r\n");
                 ; 0018 0050         */
                 ; 0018 0051     }
                +
007e91 5001     +SUBI R16 , LOW ( 1 )
007e92 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
007e93 cf8d      	RJMP _0x300015
                 _0x300016:
                 ; 0018 0052 }
007e94 940e b6a1 	CALL __LOADLOCR6
007e96 9626      	ADIW R28,6
007e97 9508      	RET
                 ;
                 ;void gaussian(float factor1, float factor2, float factor3, float ref1, float ref2, float ref3, float *resA, float *resB, float *resC)
                 ; 0018 0055 {
                 _gaussian:
                 ; 0018 0056     int i, j;
                 ; 0018 0057 
                 ; 0018 0058     // -- form matrix -- //
                 ; 0018 0059     a[0][0] = 1.0;      a[0][1] = factor1;     a[0][2] = factor1 * factor1;  a[0][3] = ref1;
007e98 940e a279 	CALL SUBOPT_0x6F
                 ;	factor1 -> Y+30
                 ;	factor2 -> Y+26
                 ;	factor3 -> Y+22
                 ;	ref1 -> Y+18
                 ;	ref2 -> Y+14
                 ;	ref3 -> Y+10
                 ;	*resA -> Y+8
                 ;	*resB -> Y+6
                 ;	*resC -> Y+4
                 ;	i -> R16,R17
                 ;	j -> R18,R19
007e9a 940e ae48 	CALL SUBOPT_0x256
007e9c 93e0 1a19 	STS  _a,R30
007e9e 93f0 1a1a 	STS  _a+1,R31
007ea0 9360 1a1b 	STS  _a+2,R22
007ea2 9370 1a1c 	STS  _a+3,R23
007ea4 940e a3db 	CALL SUBOPT_0xA8
                +
007ea6 93e0 1a1d+STS _a + ( 4 ) , R30
007ea8 93f0 1a1e+STS _a + ( 4 ) + 1 , R31
007eaa 9360 1a1f+STS _a + ( 4 ) + 2 , R22
007eac 9370 1a20+STS _a + ( 4 ) + 3 , R23
                 	__PUTD1MN _a,4
007eae 940e a3db 	CALL SUBOPT_0xA8
007eb0 940e a3e5 	CALL SUBOPT_0xAA
007eb2 940e b3e6 	CALL __MULF12
                +
007eb4 93e0 1a21+STS _a + ( 8 ) , R30
007eb6 93f0 1a22+STS _a + ( 8 ) + 1 , R31
007eb8 9360 1a23+STS _a + ( 8 ) + 2 , R22
007eba 9370 1a24+STS _a + ( 8 ) + 3 , R23
                 	__PUTD1MN _a,8
007ebc 940e a481 	CALL SUBOPT_0xC1
                +
007ebe 93e0 1a25+STS _a + ( 12 ) , R30
007ec0 93f0 1a26+STS _a + ( 12 ) + 1 , R31
007ec2 9360 1a27+STS _a + ( 12 ) + 2 , R22
007ec4 9370 1a28+STS _a + ( 12 ) + 3 , R23
                 	__PUTD1MN _a,12
                 ; 0018 005A     a[1][0] = 1.0;      a[1][1] = factor2;     a[1][2] = factor2 * factor2;  a[1][3] = ref2;
                +
007ec6 e2e9     +LDI R30 , LOW ( _a + ( 16 ) )
007ec7 e1fa     +LDI R31 , HIGH ( _a + ( 16 ) )
                 	__POINTW1MN _a,16
007ec8 940e ae4d 	CALL SUBOPT_0x257
007eca 940e a472 	CALL SUBOPT_0xBE
                +
007ecc 93e0 1a2d+STS _a + ( 20 ) , R30
007ece 93f0 1a2e+STS _a + ( 20 ) + 1 , R31
007ed0 9360 1a2f+STS _a + ( 20 ) + 2 , R22
007ed2 9370 1a30+STS _a + ( 20 ) + 3 , R23
                 	__PUTD1MN _a,20
007ed4 940e a472 	CALL SUBOPT_0xBE
007ed6 940e a3ce 	CALL SUBOPT_0xA6
007ed8 940e b3e6 	CALL __MULF12
                +
007eda 93e0 1a31+STS _a + ( 24 ) , R30
007edc 93f0 1a32+STS _a + ( 24 ) + 1 , R31
007ede 9360 1a33+STS _a + ( 24 ) + 2 , R22
007ee0 9370 1a34+STS _a + ( 24 ) + 3 , R23
                 	__PUTD1MN _a,24
007ee2 940e a199 	CALL SUBOPT_0x50
                +
007ee4 93e0 1a35+STS _a + ( 28 ) , R30
007ee6 93f0 1a36+STS _a + ( 28 ) + 1 , R31
007ee8 9360 1a37+STS _a + ( 28 ) + 2 , R22
007eea 9370 1a38+STS _a + ( 28 ) + 3 , R23
                 	__PUTD1MN _a,28
                 ; 0018 005B     a[2][0] = 1.0;      a[2][1] = factor3;     a[2][2] = factor3 * factor3;  a[2][3] = ref3;
                +
007eec e3e9     +LDI R30 , LOW ( _a + ( 32 ) )
007eed e1fa     +LDI R31 , HIGH ( _a + ( 32 ) )
                 	__POINTW1MN _a,32
007eee 940e ae4d 	CALL SUBOPT_0x257
007ef0 940e a400 	CALL SUBOPT_0xAF
                +
007ef2 93e0 1a3d+STS _a + ( 36 ) , R30
007ef4 93f0 1a3e+STS _a + ( 36 ) + 1 , R31
007ef6 9360 1a3f+STS _a + ( 36 ) + 2 , R22
007ef8 9370 1a40+STS _a + ( 36 ) + 3 , R23
                 	__PUTD1MN _a,36
007efa 940e a400 	CALL SUBOPT_0xAF
007efc 940e a477 	CALL SUBOPT_0xBF
007efe 940e b3e6 	CALL __MULF12
                +
007f00 93e0 1a41+STS _a + ( 40 ) , R30
007f02 93f0 1a42+STS _a + ( 40 ) + 1 , R31
007f04 9360 1a43+STS _a + ( 40 ) + 2 , R22
007f06 9370 1a44+STS _a + ( 40 ) + 3 , R23
                 	__PUTD1MN _a,40
007f08 940e a486 	CALL SUBOPT_0xC2
                +
007f0a 93e0 1a45+STS _a + ( 44 ) , R30
007f0c 93f0 1a46+STS _a + ( 44 ) + 1 , R31
007f0e 9360 1a47+STS _a + ( 44 ) + 2 , R22
007f10 9370 1a48+STS _a + ( 44 ) + 3 , R23
                 	__PUTD1MN _a,44
                 ; 0018 005C 
                 ; 0018 005D 
                 ; 0018 005E //    printDebug("\r\n<gaussian> --- start ---\r\n");
                 ; 0018 005F //    for (i = 0; i < n; ++i) {
                 ; 0018 0060 //        printDebug("\t\t");
                 ; 0018 0061 //        for (j = 0; j < n + 1; ++j)
                 ; 0018 0062 //            printDebug("%.2f\t", a[i][j]);
                 ; 0018 0063 //        printDebug("\r\n");
                 ; 0018 0064 //    }
                 ; 0018 0065 
                 ; 0018 0066     forwardSubstitution();
007f12 de5d      	RCALL _forwardSubstitution
                 ; 0018 0067     reverseElimination();
007f13 df07      	RCALL _reverseElimination
                 ; 0018 0068 
                 ; 0018 0069 //    printDebug("\r\n<gaussian> --- finish ---\r\n");
                 ; 0018 006A //    for (i = 0; i < n; ++i) {
                 ; 0018 006B //        printDebug("\t\t");
                 ; 0018 006C //        for (j = 0; j < n + 1; ++j)
                 ; 0018 006D //            printDebug("%.2f\t", a[i][j]);
                 ; 0018 006E //        printDebug("\r\n");
                 ; 0018 006F //    }
                 ; 0018 0070 
                 ; 0018 0071     *resA = a[2][3];
                +
007f14 91e0 1a45+LDS R30 , _a + ( 44 )
007f16 91f0 1a46+LDS R31 , _a + ( 44 ) + 1
007f18 9160 1a47+LDS R22 , _a + ( 44 ) + 2
007f1a 9170 1a48+LDS R23 , _a + ( 44 ) + 3
                 	__GETD1MN _a,44
007f1c 85a8      	LDD  R26,Y+8
007f1d 85b9      	LDD  R27,Y+8+1
007f1e 940e b605 	CALL __PUTDP1
                 ; 0018 0072     *resB = a[1][3];
                +
007f20 91e0 1a35+LDS R30 , _a + ( 28 )
007f22 91f0 1a36+LDS R31 , _a + ( 28 ) + 1
007f24 9160 1a37+LDS R22 , _a + ( 28 ) + 2
007f26 9170 1a38+LDS R23 , _a + ( 28 ) + 3
                 	__GETD1MN _a,28
007f28 81ae      	LDD  R26,Y+6
007f29 81bf      	LDD  R27,Y+6+1
007f2a 940e b605 	CALL __PUTDP1
                 ; 0018 0073     *resC = a[0][3];
                +
007f2c 91e0 1a25+LDS R30 , _a + ( 12 )
007f2e 91f0 1a26+LDS R31 , _a + ( 12 ) + 1
007f30 9160 1a27+LDS R22 , _a + ( 12 ) + 2
007f32 9170 1a28+LDS R23 , _a + ( 12 ) + 3
                 	__GETD1MN _a,12
007f34 81ac      	LDD  R26,Y+4
007f35 81bd      	LDD  R27,Y+4+1
007f36 940e b605 	CALL __PUTDP1
                 ; 0018 0074 
                 ; 0018 0075    // printDebug("\r\n<gaussian> y = %f(x^2) + %f(x) + %f\r\n",*resA,*resB,*resC);
                 ; 0018 0076 
                 ; 0018 0077     return;
007f38 940e b6a3 	CALL __LOADLOCR4
007f3a 96a2      	ADIW R28,34
007f3b 9508      	RET
                 ; 0018 0078 }
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "dht11.h"
                 ;#include "timer.h"
                 ;#include "debug.h"
                 ;
                 ;/**
                 ;*
                 ;//Brif use timer5
                 ;**/
                 ;void MCUSignalOut(int status){
                 ; 0019 000E void MCUSignalOut(int status){
                 
                 	.CSEG
                 _MCUSignalOut:
                 ; 0019 000F //    DDRL.0  = 1;   //set output
                 ; 0019 0010     char tempRegister = 0;
                 ; 0019 0011     DDRJ |= 0x04;    //oboooo o10o
007f3c 93ba      	ST   -Y,R27
007f3d 93aa      	ST   -Y,R26
007f3e 931a      	ST   -Y,R17
                 ;	status -> Y+1
                 ;	tempRegister -> R17
007f3f e010      	LDI  R17,0
007f40 91e0 0104 	LDS  R30,260
007f42 60e4      	ORI  R30,4
007f43 93e0 0104 	STS  260,R30
                 ; 0019 0012     if(status==1){
007f45 81a9      	LDD  R26,Y+1
007f46 81ba      	LDD  R27,Y+1+1
007f47 9711      	SBIW R26,1
007f48 f421      	BRNE _0x320003
                 ; 0019 0013        PORTJ |= 0x04; //0b0000 0100
007f49 91e0 0105 	LDS  R30,261
007f4b 60e4      	ORI  R30,4
007f4c c003      	RJMP _0x320020
                 ; 0019 0014     }else{
                 _0x320003:
                 ; 0019 0015         PORTJ &= 0xFB;//0b1111 1011
007f4d 91e0 0105 	LDS  R30,261
007f4f 7feb      	ANDI R30,0xFB
                 _0x320020:
007f50 93e0 0105 	STS  261,R30
                 ; 0019 0016     }
                 ; 0019 0017 }
007f52 8118      	LDD  R17,Y+0
007f53 9623      	ADIW R28,3
007f54 9508      	RET
                 ;int DHT11SignalIn(){
                 ; 0019 0018 int DHT11SignalIn(){
                 _DHT11SignalIn:
                 ; 0019 0019 //    DDRL.0   = 0;   //set input
                 ; 0019 001A //    return DHT11_TO_MCU_PIN;
                 ; 0019 001B     DDRJ &= 0xFB;
007f55 91e0 0104 	LDS  R30,260
007f57 7feb      	ANDI R30,0xFB
007f58 93e0 0104 	STS  260,R30
                 ; 0019 001C     if((PINJ & 0x04)==0x04){
007f5a 91e0 0103 	LDS  R30,259
007f5c 70e4      	ANDI R30,LOW(0x4)
007f5d 30e4      	CPI  R30,LOW(0x4)
007f5e f419      	BRNE _0x320005
                 ; 0019 001D        return 0x01;
007f5f e0e1      	LDI  R30,LOW(1)
007f60 e0f0      	LDI  R31,HIGH(1)
007f61 9508      	RET
                 ; 0019 001E     }else{
                 _0x320005:
                 ; 0019 001F        return 0x00;
007f62 e0e0      	LDI  R30,LOW(0)
007f63 e0f0      	LDI  R31,HIGH(0)
007f64 9508      	RET
                 ; 0019 0020     }
                 ; 0019 0021 
                 ; 0019 0022 }
007f65 9508      	RET
                 ;int DHT11Read(ST_DHT11 *dhtDevice){
                 ; 0019 0023 int DHT11Read(ST_DHT11 *dhtDevice){
                 _DHT11Read:
                 ; 0019 0024     int i, j, temp;
                 ; 0019 0025     int buffer = 0;
                 ; 0019 0026     int count = 0;
                 ; 0019 0027 	int data[5] = {0x00, 0x00, 0x00, 0x00, 0x00};
                 ; 0019 0028 
                 ; 0019 0029     /*start condition*/
                 ; 0019 002A     dhtDevice->status = DHT11_ERROR_TIMEOUT;
007f66 93ba      	ST   -Y,R27
007f67 93aa      	ST   -Y,R26
007f68 972e      	SBIW R28,14
007f69 e08e      	LDI  R24,14
007f6a e0a0      	LDI  R26,LOW(0)
007f6b e0b0      	LDI  R27,HIGH(0)
007f6c efea      	LDI  R30,LOW(_0x320007*2)
007f6d e6f3      	LDI  R31,HIGH(_0x320007*2)
007f6e e060      	LDI  R22,BYTE3(_0x320007*2)
007f6f 940e b6a8 	CALL __INITLOCB
007f71 940e b69a 	CALL __SAVELOCR6
                 ;	*dhtDevice -> Y+20
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	temp -> R20,R21
                 ;	buffer -> Y+18
                 ;	count -> Y+16
                 ;	data -> Y+6
007f73 940e ae52 	CALL SUBOPT_0x258
                 ; 0019 002B     //MCUSignalOut(MCU_SIGNAL_LOW);
                 ; 0019 002C     //delay_ms(4);
                 ; 0019 002D     MCUSignalOut(MCU_SIGNAL_HIGH);
007f75 940e a244 	CALL SUBOPT_0x67
007f77 dfc4      	RCALL _MCUSignalOut
                 ; 0019 002E     delay_ms(4);
007f78 940e a24a 	CALL SUBOPT_0x69
007f7a 940e b2e6 	CALL _delay_ms
                 ; 0019 002F 
                 ; 0019 0030 //    TCCR5A=0x00;
                 ; 0019 0031 //    TCCR5B=0x05;     //count = 128 microsec , 128 * 7812 = about 1sec
                 ; 0019 0032 //
                 ; 0019 0033 //    TCNT5H=0x00;     //timer count clearing
                 ; 0019 0034 //    TCNT5L=0x00;
                 ; 0019 0035 
                 ; 0019 0036     MCUSignalOut(MCU_SIGNAL_LOW);
007f7c e0a0      	LDI  R26,LOW(0)
007f7d e0b0      	LDI  R27,0
007f7e dfbd      	RCALL _MCUSignalOut
                 ; 0019 0037     //while((TCNT5H <<8 | TCNT5L)<160);           //about 20 ms
                 ; 0019 0038     delay_ms(20);
007f7f 940e a359 	CALL SUBOPT_0x8F
                 ; 0019 0039 
                 ; 0019 003A     /*set clk/8
                 ; 0019 003B     *clk@8Mhz/prescaling 8
                 ; 0019 003C     *get count every 1 us
                 ; 0019 003D     */
                 ; 0019 003E //    TCCR5A=0x00;
                 ; 0019 003F //    TCCR5B=0x02;     //count = 1 microsec
                 ; 0019 0040 //
                 ; 0019 0041 //    TCNT5H=0x00;     //timer count clearing
                 ; 0019 0042 //    TCNT5L=0x00;
                 ; 0019 0043 
                 ; 0019 0044     MCUSignalOut(MCU_SIGNAL_HIGH);
007f81 940e a244 	CALL SUBOPT_0x67
007f83 dfb8      	RCALL _MCUSignalOut
                 ; 0019 0045     delay_us(40);
                +
007f84 e68b     +LDI R24 , LOW ( 107 )
                +__DELAY_USB_LOOP :
007f85 958a     +DEC R24
007f86 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 107
                 ; 0019 0046     /*end start condition*/
                 ; 0019 0047    // printDebug("DHT11: end Condition \r\n");
                 ; 0019 0048 
                 ; 0019 0049     TCCR5A=0x00;
007f87 e0e0      	LDI  R30,LOW(0)
007f88 93e0 0120 	STS  288,R30
                 ; 0019 004A     TCCR5B=0x02;     //count = 1 microsec
007f8a e0e2      	LDI  R30,LOW(2)
007f8b 940e a300 	CALL SUBOPT_0x82
                 ; 0019 004B     TCNT5H=0x00;     //timer count clearing
                 ; 0019 004C     TCNT5L=0x00;
                 ; 0019 004D     while(DHT11SignalIn()==0){
                 _0x320008:
007f8d dfc7      	RCALL _DHT11SignalIn
007f8e 9730      	SBIW R30,0
007f8f f461      	BRNE _0x32000A
                 ; 0019 004E         if((TCNT5H <<8 | TCNT5L)>100){       //about 80 us      //if((TCNT5H <<8 | TCNT5L)>100){       //about 80 us
007f90 940e ae5a 	CALL SUBOPT_0x259
007f92 36e5      	CPI  R30,LOW(0x65)
007f93 e0a0      	LDI  R26,HIGH(0x65)
007f94 07fa      	CPC  R31,R26
007f95 f02c      	BRLT _0x32000B
                 ; 0019 004F             dhtDevice->status = DHT11_ERROR_TIMEOUT;
007f96 940e ae52 	CALL SUBOPT_0x258
                 ; 0019 0050            return DHT11_ERROR_TIMEOUT;
007f98 e0e3      	LDI  R30,LOW(3)
007f99 e0f0      	LDI  R31,HIGH(3)
007f9a c09a      	RJMP _0x20E002D
                 ; 0019 0051         }
                 ; 0019 0052     }
                 _0x32000B:
007f9b cff1      	RJMP _0x320008
                 _0x32000A:
                 ; 0019 0053 
                 ; 0019 0054     TCNT5H=0x00;     //timer count clearing
007f9c 940e ae62 	CALL SUBOPT_0x25A
                 ; 0019 0055     TCNT5L=0x00;
                 ; 0019 0056     while(DHT11SignalIn()==1){
                 _0x32000C:
007f9e dfb6      	RCALL _DHT11SignalIn
007f9f 30e1      	CPI  R30,LOW(0x1)
007fa0 e0a0      	LDI  R26,HIGH(0x1)
007fa1 07fa      	CPC  R31,R26
007fa2 f461      	BRNE _0x32000E
                 ; 0019 0057         if((TCNT5H <<8 | TCNT5L)>100){       //about 80 us        //if((TCNT5H <<8 | TCNT5L)>100){       //about 80 us
007fa3 940e ae5a 	CALL SUBOPT_0x259
007fa5 36e5      	CPI  R30,LOW(0x65)
007fa6 e0a0      	LDI  R26,HIGH(0x65)
007fa7 07fa      	CPC  R31,R26
007fa8 f02c      	BRLT _0x32000F
                 ; 0019 0058             dhtDevice->status = DHT11_ERROR_TIMEOUT;
007fa9 940e ae52 	CALL SUBOPT_0x258
                 ; 0019 0059            return DHT11_ERROR_TIMEOUT;
007fab e0e3      	LDI  R30,LOW(3)
007fac e0f0      	LDI  R31,HIGH(3)
007fad c087      	RJMP _0x20E002D
                 ; 0019 005A         }
                 ; 0019 005B     }
                 _0x32000F:
007fae cfef      	RJMP _0x32000C
                 _0x32000E:
                 ; 0019 005C 
                 ; 0019 005D     //Read 40 bits (8*5)
                 ; 0019 005E 	for(j = 0; j < 5; ++j) {
                +
007faf e020     +LDI R18 , LOW ( 0 )
007fb0 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x320011:
                +
007fb1 3025     +CPI R18 , LOW ( 5 )
007fb2 e0e0     +LDI R30 , HIGH ( 5 )
007fb3 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
007fb4 f014      	BRLT PC+3
007fb5 940c 800c 	JMP _0x320012
                 ; 0019 005F 		for(i = 0; i < 8; ++i) {
                +
007fb7 e000     +LDI R16 , LOW ( 0 )
007fb8 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x320014:
                +
007fb9 3008     +CPI R16 , LOW ( 8 )
007fba e0e0     +LDI R30 , HIGH ( 8 )
007fbb 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
007fbc f014      	BRLT PC+3
007fbd 940c 8009 	JMP _0x320015
                 ; 0019 0060 
                 ; 0019 0061 			//LOW for 50us
                 ; 0019 0062 			TCNT5H=0x00;     //timer count clearing
007fbf 940e ae62 	CALL SUBOPT_0x25A
                 ; 0019 0063             TCNT5L=0x00;
                 ; 0019 0064             while(DHT11SignalIn()==0){
                 _0x320016:
007fc1 df93      	RCALL _DHT11SignalIn
007fc2 9730      	SBIW R30,0
007fc3 f461      	BRNE _0x320018
                 ; 0019 0065                 if((TCNT5H <<8 | TCNT5L)>70){       //about 50 us            //if((TCNT5H <<8 | TCNT5L)>70){
007fc4 940e ae5a 	CALL SUBOPT_0x259
007fc6 34e7      	CPI  R30,LOW(0x47)
007fc7 e0a0      	LDI  R26,HIGH(0x47)
007fc8 07fa      	CPC  R31,R26
007fc9 f02c      	BRLT _0x320019
                 ; 0019 0066                     dhtDevice->status = DHT11_ERROR_TIMEOUT;
007fca 940e ae52 	CALL SUBOPT_0x258
                 ; 0019 0067                    return DHT11_ERROR_TIMEOUT;
007fcc e0e3      	LDI  R30,LOW(3)
007fcd e0f0      	LDI  R31,HIGH(3)
007fce c066      	RJMP _0x20E002D
                 ; 0019 0068                 }
                 ; 0019 0069             }
                 _0x320019:
007fcf cff1      	RJMP _0x320016
                 _0x320018:
                 ; 0019 006A 
                 ; 0019 006B 			//Start counter
                 ; 0019 006C 			//buffer = 0;
                 ; 0019 006D 			//HIGH for 26-28us = 0 / 70us = 1
                 ; 0019 006E 
                 ; 0019 006F 			TCNT5H=0x00;     //timer count clearing
007fd0 940e ae62 	CALL SUBOPT_0x25A
                 ; 0019 0070             TCNT5L=0x00;
                 ; 0019 0071             while(DHT11SignalIn()==1){
                 _0x32001A:
007fd2 df82      	RCALL _DHT11SignalIn
007fd3 30e1      	CPI  R30,LOW(0x1)
007fd4 e0a0      	LDI  R26,HIGH(0x1)
007fd5 07fa      	CPC  R31,R26
007fd6 f471      	BRNE _0x32001C
                 ; 0019 0072                 count = (TCNT5H <<8 | TCNT5L);
007fd7 940e ae5a 	CALL SUBOPT_0x259
007fd9 940e ae68 	CALL SUBOPT_0x25B
                 ; 0019 0073                 if(count>90){       //about 70 us                //if(count>90){
007fdb 35ab      	CPI  R26,LOW(0x5B)
007fdc e0e0      	LDI  R30,HIGH(0x5B)
007fdd 07be      	CPC  R27,R30
007fde f02c      	BRLT _0x32001D
                 ; 0019 0074                     dhtDevice->status = DHT11_ERROR_TIMEOUT;
007fdf 940e ae52 	CALL SUBOPT_0x258
                 ; 0019 0075                    return DHT11_ERROR_TIMEOUT;
007fe1 e0e3      	LDI  R30,LOW(3)
007fe2 e0f0      	LDI  R31,HIGH(3)
007fe3 c051      	RJMP _0x20E002D
                 ; 0019 0076                 }
                 ; 0019 0077 
                 ; 0019 0078             }
                 _0x32001D:
007fe4 cfed      	RJMP _0x32001A
                 _0x32001C:
                 ; 0019 0079 
                 ; 0019 007A //            if(count > 40){
                 ; 0019 007B //               buffer = 1;
                 ; 0019 007C //            }
                 ; 0019 007D 			//Calc amount of time passed
                 ; 0019 007E 			temp = count;
                +
007fe5 8948     +LDD R20 , Y + 16
007fe6 8959     +LDD R21 , Y + 16 + 1
                 	__GETWRS 20,21,16
                 ; 0019 007F 
                 ; 0019 0080 			//shift 0
                 ; 0019 0081 			data[j] = data[j] << 1;
007fe7 940e ae6d 	CALL SUBOPT_0x25C
007fe9 0fea      	ADD  R30,R26
007fea 1ffb      	ADC  R31,R27
007feb 010f      	MOVW R0,R30
007fec 940e ae6d 	CALL SUBOPT_0x25C
007fee 940e ae73 	CALL SUBOPT_0x25D
007ff0 0fee      	LSL  R30
007ff1 1fff      	ROL  R31
007ff2 01d0      	MOVW R26,R0
007ff3 93ed      	ST   X+,R30
007ff4 93fc      	ST   X,R31
                 ; 0019 0082 
                 ; 0019 0083 			//if > 30us it's 1
                 ; 0019 0084 			if(temp > 40)
                +
007ff5 3249     +CPI R20 , LOW ( 41 )
007ff6 e0e0     +LDI R30 , HIGH ( 41 )
007ff7 075e     +CPC R21 , R30
                 	__CPWRN 20,21,41
007ff8 f06c      	BRLT _0x32001E
                 ; 0019 0085 				data[j] = data[j]+1;
007ff9 940e ae6d 	CALL SUBOPT_0x25C
007ffb 0fea      	ADD  R30,R26
007ffc 1ffb      	ADC  R31,R27
007ffd 010f      	MOVW R0,R30
007ffe 940e ae6d 	CALL SUBOPT_0x25C
008000 940e ae73 	CALL SUBOPT_0x25D
008002 9631      	ADIW R30,1
008003 01d0      	MOVW R26,R0
008004 93ed      	ST   X+,R30
008005 93fc      	ST   X,R31
                 ; 0019 0086 		}
                 _0x32001E:
                +
008006 5f0f     +SUBI R16 , LOW ( - 1 )
008007 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008008 cfb0      	RJMP _0x320014
                 _0x320015:
                 ; 0019 0087 	}
                +
008009 5f2f     +SUBI R18 , LOW ( - 1 )
00800a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00800b cfa5      	RJMP _0x320011
                 _0x320012:
                 ; 0019 0088 
                 ; 0019 0089     //MCUSignalOut(MCU_SIGNAL_HIGH);
                 ; 0019 008A 
                 ; 0019 008B     //verify the Checksum
                 ; 0019 008C 	if(data[4] != (data[0] + data[2])){
00800c 85ea      	LDD  R30,Y+10
00800d 85fb      	LDD  R31,Y+10+1
00800e 940e ae78 	CALL SUBOPT_0x25E
008010 85ae      	LDD  R26,Y+14
008011 85bf      	LDD  R27,Y+14+1
008012 17ea      	CP   R30,R26
008013 07fb      	CPC  R31,R27
008014 f041      	BREQ _0x32001F
                 ; 0019 008D         dhtDevice->status = DHT11_ERROR_CHECKSUM;
008015 89ac      	LDD  R26,Y+20
008016 89bd      	LDD  R27,Y+20+1
008017 9618      	ADIW R26,8
008018 e0e2      	LDI  R30,LOW(2)
008019 e0f0      	LDI  R31,HIGH(2)
00801a 93ed      	ST   X+,R30
00801b 93fc      	ST   X,R31
                 ; 0019 008E         return DHT11_ERROR_CHECKSUM;
00801c c018      	RJMP _0x20E002D
                 ; 0019 008F     }
                 ; 0019 0090 
                 ; 0019 0091 
                 ; 0019 0092 
                 ; 0019 0093     dhtDevice->temp = (float)data[2];
                 _0x32001F:
00801d 85ea      	LDD  R30,Y+10
00801e 85fb      	LDD  R31,Y+10+1
00801f 940e ae7d 	CALL SUBOPT_0x25F
008021 89ac      	LDD  R26,Y+20
008022 89bd      	LDD  R27,Y+20+1
008023 940e b605 	CALL __PUTDP1
                 ; 0019 0094     dhtDevice->humi = (float)data[0];
008025 81ee      	LDD  R30,Y+6
008026 81ff      	LDD  R31,Y+6+1
008027 940e ae7d 	CALL SUBOPT_0x25F
                +
008029 89ac     +LDD R26 , Y + 20
00802a 89bd     +LDD R27 , Y + 20 + 1
00802b 9614     +ADIW R26 , 4
00802c 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 20,4
                 ; 0019 0095     dhtDevice->status = DHT11_SUCCESS;
00802e 89ac      	LDD  R26,Y+20
00802f 89bd      	LDD  R27,Y+20+1
008030 9618      	ADIW R26,8
008031 e0e1      	LDI  R30,LOW(1)
008032 e0f0      	LDI  R31,HIGH(1)
008033 93ed      	ST   X+,R30
008034 93fc      	ST   X,R31
                 ; 0019 0096     return DHT11_SUCCESS;
                 _0x20E002D:
008035 940e b6a1 	CALL __LOADLOCR6
008037 9666      	ADIW R28,22
008038 9508      	RET
                 ; 0019 0097 }
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include "calibration.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "timer.h"
                 ;#include "gaussian.h"
                 ;#include "debug.h"
                 ;//#include "sensor.h"
                 ;
                 ;//typedef struct{
                 ;//   ST_CAL_CHANNEL sChennel[5];
                 ;//}ST_CAL;
                 ;//
                 ;
                 ;ST_CAL_CONFIG sensorCalConfig;
                 ;eeprom  ST_CAL sensorCalulate = {
                 ;  {
                 ;    {{0.0,0.0,0.0},{0.0,0.0,0.0},0},
                 ;    {{0.0,0.0,0.0},{0.0,0.0,0.0},0},
                 ;    {{0.0,0.0,0.0},{0.0,0.0,0.0},0},
                 ;    {{0.0,0.0,0.0},{0.0,0.0,0.0},0},
                 ;    {{0.0,0.0,0.0},{0.0,0.0,0.0},0}
                 ;  }
                 ;};          //improtance
                 ;
                 ;//eeprom float calOffset = 0.0;
                 ;
                 ;void (*pfCalibrate) (ST_CAL_CONFIG calConfig);   //pointer function of calibation set
                 ;
                 ;
                 ;/**
                 ;**@fn name   calGet
                 ;**@header   name        type            des
                 ;**@param    channelID   unsigned int    channel of sensor = 5(max)
                 ;**@return   none        void
                 ;**/
                 ;void calGet(ST_CAL_CONFIG calConfig){
                 ; 001A 0026 void calGet(ST_CAL_CONFIG calConfig){
                 
                 	.CSEG
                 ; 001A 0027     unsigned int i=0;
                 ; 001A 0028     unsigned int offsetMember       = 1;     //use 1 point
                 ; 001A 0029     unsigned int linearMember       = 2;     //use 2 point
                 ; 001A 002A     unsigned int polynomailMember   = 3;     //use 3 point
                 ; 001A 002B     if(calConfig.prop=CAL_GET){
                 ;	calConfig -> Y+8
                 ;	i -> R16,R17
                 ;	offsetMember -> R18,R19
                 ;	linearMember -> R20,R21
                 ;	polynomailMember -> Y+6
                 ; 001A 002C         printDebug("<Cal Std ref>ch[%d],formatType:%0.2f\r\n",calConfig.channelID,calConfig.calType);
                 ; 001A 002D         switch(calConfig.calType){
                 ; 001A 002E             case CAL_EXTOFFSET :{
                 ; 001A 002F                 for(i=0;i<offsetMember;i++){
                 ; 001A 0030                    printDebug("stdRef:%0.2f,sensorRef:%0.2f\r\n",sensorCalulate.sChennel[calConfig.channelID-1].stdRef[i],sensorCalulate.sChennel[calConfig.channelID-1].sensorRef[i]);
                 ; 001A 0031                 }
                 ; 001A 0032                 break;
                 ; 001A 0033             }
                 ; 001A 0034             case CAL_EXTLINEAR :{
                 ; 001A 0035                 for(i=0;i<linearMember;i++){
                 ; 001A 0036                    printDebug("stdRef:%0.2f,sensorRef:%0.2f\r\n",sensorCalulate.sChennel[calConfig.channelID-1].stdRef[i],sensorCalulate.sChennel[calConfig.channelID-1].sensorRef[i]);
                 ; 001A 0037                 }
                 ; 001A 0038                 break;
                 ; 001A 0039             }
                 ; 001A 003A             case CAL_EXTPOLYNOMIAL :{
                 ; 001A 003B                 for(i=0;i<polynomailMember;i++){
                 ; 001A 003C                    printDebug("stdRef:%0.2f,sensorRef:%0.2f\r\n",sensorCalulate.sChennel[calConfig.channelID-1].stdRef[i],sensorCalulate.sChennel[calConfig.channelID-1].sensorRef[i]);
                 ; 001A 003D                 }
                 ; 001A 003E                 break;
                 ; 001A 003F             }
                 ; 001A 0040             defualt:{
                 ; 001A 0041                 break;
                 ; 001A 0042             }
                 ; 001A 0043         }
                 ; 001A 0044     }else{
                 ; 001A 0045        printDebug("<calibration>Cal properties:set can not get value.");
                 ; 001A 0046     }
                 ; 001A 0047 }
                 ;void calSet(ST_CAL_CONFIG calConfig){
                 ; 001A 0048 void calSet(ST_CAL_CONFIG calConfig){
                 _calSet:
                 ; 001A 0049     if(calConfig.prop=CAL_SET){
                 ;	calConfig -> Y+0
008039 e0e1      	LDI  R30,LOW(1)
00803a e0f0      	LDI  R31,HIGH(1)
00803b 83e8      	ST   Y,R30
00803c 83f9      	STD  Y+1,R31
00803d 9730      	SBIW R30,0
00803e f141      	BREQ _0x340015
                 ; 001A 004A         sensorCalulate.sChennel[calConfig.channelID-1].stdRef[calConfig.pointID-1] =  calConfig.pointValue;
00803f 940e ae82 	CALL SUBOPT_0x260
008041 57e3      	SUBI R30,LOW(-_sensorCalulate)
008042 4ffa      	SBCI R31,HIGH(-_sensorCalulate)
008043 01df      	MOVW R26,R30
008044 81ec      	LDD  R30,Y+4
008045 81fd      	LDD  R31,Y+4+1
008046 9731      	SBIW R30,1
008047 940e b4ec 	CALL __LSLW2
008049 0fae      	ADD  R26,R30
00804a 1fbf      	ADC  R27,R31
00804b 940e a3b9 	CALL SUBOPT_0xA2
00804d 940e b65d 	CALL __EEPROMWRD
                 ; 001A 004B         sensorCalulate.sChennel[calConfig.channelID-1].sensorRef[calConfig.pointID-1] = adcData[calConfig.channelID-1];
00804f 81ea      	LDD  R30,Y+2
008050 81fb      	LDD  R31,Y+2+1
008051 9731      	SBIW R30,1
008052 01bf      	MOVW R22,R30
008053 940e ae8a 	CALL SUBOPT_0x261
                +
008055 56e7     +SUBI R30 , LOW ( - _sensorCalulate - ( 12 ) )
008056 4ffa     +SBCI R31 , HIGH ( - _sensorCalulate - ( 12 ) )
                 	__ADDW1MN _sensorCalulate,12
008057 01df      	MOVW R26,R30
008058 81ec      	LDD  R30,Y+4
008059 81fd      	LDD  R31,Y+4+1
00805a 9731      	SBIW R30,1
00805b 940e aab9 	CALL SUBOPT_0x1CD
00805d 010f      	MOVW R0,R30
00805e 01fb      	MOVW R30,R22
00805f 940e a35d 	CALL SUBOPT_0x90
008061 940e a019 	CALL SUBOPT_0x19
008063 01d0      	MOVW R26,R0
008064 940e b65d 	CALL __EEPROMWRD
                 ; 001A 004C     }else{
008066 c002      	RJMP _0x340016
                 _0x340015:
                 ; 001A 004D        printDebug("<calibration>Cal properties:get can not set value.");
008067 940e ae8f 	CALL SUBOPT_0x262
                 ; 001A 004E     }
                 _0x340016:
                 ; 001A 004F }
008069 c046      	RJMP _0x20E002C
                 ;void calSetConfirm(ST_CAL_CONFIG calConfig){
                 ; 001A 0050 void calSetConfirm(ST_CAL_CONFIG calConfig){
                 _calSetConfirm:
                 ; 001A 0051     if(calConfig.prop=CAL_SET){
                 ;	calConfig -> Y+0
00806a e0e1      	LDI  R30,LOW(1)
00806b e0f0      	LDI  R31,HIGH(1)
00806c 83e8      	ST   Y,R30
00806d 83f9      	STD  Y+1,R31
00806e 9730      	SBIW R30,0
00806f f1f1      	BREQ _0x340017
                 ; 001A 0052         printDebug("<Cal Std ref>ch[%d],formatType:%d\r\n",calConfig.channelID,calConfig.calType);
                +
008070 eee4     +LDI R30 , LOW ( 2 * _0x340000 + ( 172 ) )
008071 e6f4     +LDI R31 , HIGH ( 2 * _0x340000 + ( 172 ) )
008072 e060     +LDI R22 , BYTE3 ( 2 * _0x340000 + ( 172 ) )
008073 e070     +LDI R23 , BYTE4 ( 2 * _0x340000 + ( 172 ) )
                 	__POINTD1FN _0x340000,172
008074 940e a58f 	CALL SUBOPT_0xEE
008076 940e a524 	CALL SUBOPT_0xDD
008078 89ea      	LDD  R30,Y+18
008079 89fb      	LDD  R31,Y+18+1
00807a 940e a6c7 	CALL SUBOPT_0x127
                 ; 001A 0053         switch(calConfig.calType){
00807c 85ea      	LDD  R30,Y+10
00807d 85fb      	LDD  R31,Y+10+1
                 ; 001A 0054             case CAL_EXTOFFSET :{
00807e 30e1      	CPI  R30,LOW(0x1)
00807f e0a0      	LDI  R26,HIGH(0x1)
008080 07fa      	CPC  R31,R26
008081 f441      	BRNE _0x34001B
                 ; 001A 0055                 sensorCalulate.sChennel[calConfig.channelID-1].calType = CAL_EXTOFFSET;
008082 940e ae82 	CALL SUBOPT_0x260
                +
008084 55eb     +SUBI R30 , LOW ( - _sensorCalulate - ( 24 ) )
008085 4ffa     +SBCI R31 , HIGH ( - _sensorCalulate - ( 24 ) )
                 	__ADDW1MN _sensorCalulate,24
008086 01df      	MOVW R26,R30
008087 e0e1      	LDI  R30,LOW(1)
008088 e0f0      	LDI  R31,HIGH(1)
008089 c021      	RJMP _0x34002A
                 ; 001A 0056                 break;
                 ; 001A 0057             }
                 ; 001A 0058             case CAL_EXTLINEAR :{
                 _0x34001B:
00808a 30e2      	CPI  R30,LOW(0x2)
00808b e0a0      	LDI  R26,HIGH(0x2)
00808c 07fa      	CPC  R31,R26
00808d f441      	BRNE _0x34001C
                 ; 001A 0059                 sensorCalulate.sChennel[calConfig.channelID-1].calType = CAL_EXTLINEAR;
00808e 940e ae82 	CALL SUBOPT_0x260
                +
008090 55eb     +SUBI R30 , LOW ( - _sensorCalulate - ( 24 ) )
008091 4ffa     +SBCI R31 , HIGH ( - _sensorCalulate - ( 24 ) )
                 	__ADDW1MN _sensorCalulate,24
008092 01df      	MOVW R26,R30
008093 e0e2      	LDI  R30,LOW(2)
008094 e0f0      	LDI  R31,HIGH(2)
008095 c015      	RJMP _0x34002A
                 ; 001A 005A                 break;
                 ; 001A 005B             }
                 ; 001A 005C             case CAL_EXTPOLYNOMIAL :{
                 _0x34001C:
008096 30e3      	CPI  R30,LOW(0x3)
008097 e0a0      	LDI  R26,HIGH(0x3)
008098 07fa      	CPC  R31,R26
008099 f441      	BRNE _0x34001D
                 ; 001A 005D                 sensorCalulate.sChennel[calConfig.channelID-1].calType = CAL_EXTPOLYNOMIAL;
00809a 940e ae82 	CALL SUBOPT_0x260
                +
00809c 55eb     +SUBI R30 , LOW ( - _sensorCalulate - ( 24 ) )
00809d 4ffa     +SBCI R31 , HIGH ( - _sensorCalulate - ( 24 ) )
                 	__ADDW1MN _sensorCalulate,24
00809e 01df      	MOVW R26,R30
00809f e0e3      	LDI  R30,LOW(3)
0080a0 e0f0      	LDI  R31,HIGH(3)
0080a1 c009      	RJMP _0x34002A
                 ; 001A 005E                 break;
                 ; 001A 005F             }
                 ; 001A 0060             case CAL_DEFAULT:{
                 _0x34001D:
0080a2 9730      	SBIW R30,0
0080a3 f449      	BRNE _0x34001A
                 ; 001A 0061                 sensorCalulate.sChennel[calConfig.channelID-1].calType = CAL_DEFAULT;
0080a4 940e ae82 	CALL SUBOPT_0x260
                +
0080a6 55eb     +SUBI R30 , LOW ( - _sensorCalulate - ( 24 ) )
0080a7 4ffa     +SBCI R31 , HIGH ( - _sensorCalulate - ( 24 ) )
                 	__ADDW1MN _sensorCalulate,24
0080a8 01df      	MOVW R26,R30
0080a9 e0e0      	LDI  R30,LOW(0)
0080aa e0f0      	LDI  R31,HIGH(0)
                 _0x34002A:
0080ab 940e b665 	CALL __EEPROMWRW
                 ; 001A 0062                 break;
                 ; 001A 0063             }
                 ; 001A 0064         }
                 _0x34001A:
                 ; 001A 0065     }else{
0080ad c002      	RJMP _0x34001F
                 _0x340017:
                 ; 001A 0066        printDebug("<calibration>Cal properties:get can not set value.");
0080ae 940e ae8f 	CALL SUBOPT_0x262
                 ; 001A 0067     }
                 _0x34001F:
                 ; 001A 0068 }
                 _0x20E002C:
0080b0 962c      	ADIW R28,12
0080b1 9508      	RET
                 ;void calSetClearPoint(ST_CAL_CONFIG calConfig){
                 ; 001A 0069 void calSetClearPoint(ST_CAL_CONFIG calConfig){
                 ; 001A 006A    if(calConfig.prop=CAL_SET){
                 ;	calConfig -> Y+0
                 ; 001A 006B       sensorCalulate.sChennel[calConfig.channelID-1].stdRef[calConfig.pointID] =  0;
                 ; 001A 006C       sensorCalulate.sChennel[calConfig.channelID-1].sensorRef[calConfig.pointID] = 0;
                 ; 001A 006D    }else{
                 ; 001A 006E       printDebug("<calibration>Cal properties:get can not set value.");
                 ; 001A 006F    }
                 ; 001A 0070 }
                 ;
                 ;float calProcessValue(float sensorValue,unsigned int channelID){
                 ; 001A 0072 float calProcessValue(float sensorValue,unsigned int channelID){
                 _calProcessValue:
                 ; 001A 0073     float offset = 0.0;
                 ; 001A 0074     float sensorRef1 = 0.0,sensorRef2 = 0.0,sensorRef3 = 0.0;
                 ; 001A 0075     float stdMeter1 = 0.0,stdMeter2 = 0.0,stdMeter3 = 0.0;        //standrad  meter
                 ; 001A 0076     float lowRange = 0.0;
                 ; 001A 0077     float stdMeterRange = 0.0;
                 ; 001A 0078     float factorA = 0.0,factorB = 0.0,factorC = 0.0;
                 ; 001A 0079 
                 ; 001A 007A     switch(sensorCalulate.sChennel[channelID-1].calType){
0080b2 93ba      	ST   -Y,R27
0080b3 93aa      	ST   -Y,R26
0080b4 97e0      	SBIW R28,48
0080b5 e380      	LDI  R24,48
0080b6 e0a0      	LDI  R26,LOW(0)
0080b7 e0b0      	LDI  R27,HIGH(0)
0080b8 e0e8      	LDI  R30,LOW(_0x340022*2)
0080b9 e6f4      	LDI  R31,HIGH(_0x340022*2)
0080ba e060      	LDI  R22,BYTE3(_0x340022*2)
0080bb 940e b6a8 	CALL __INITLOCB
                 ;	sensorValue -> Y+50
                 ;	channelID -> Y+48
                 ;	offset -> Y+44
                 ;	sensorRef1 -> Y+40
                 ;	sensorRef2 -> Y+36
                 ;	sensorRef3 -> Y+32
                 ;	stdMeter1 -> Y+28
                 ;	stdMeter2 -> Y+24
                 ;	stdMeter3 -> Y+20
                 ;	lowRange -> Y+16
                 ;	stdMeterRange -> Y+12
                 ;	factorA -> Y+8
                 ;	factorB -> Y+4
                 ;	factorC -> Y+0
0080bd 940e ae95 	CALL SUBOPT_0x263
                +
0080bf 55eb     +SUBI R30 , LOW ( - _sensorCalulate - ( 24 ) )
0080c0 4ffa     +SBCI R31 , HIGH ( - _sensorCalulate - ( 24 ) )
                 	__ADDW1MN _sensorCalulate,24
0080c1 01df      	MOVW R26,R30
0080c2 940e b64d 	CALL __EEPROMRDW
                 ; 001A 007B         case CAL_EXTOFFSET :{
0080c4 30e1      	CPI  R30,LOW(0x1)
0080c5 e0a0      	LDI  R26,HIGH(0x1)
0080c6 07fa      	CPC  R31,R26
0080c7 f4e9      	BRNE _0x340026
                 ; 001A 007C             offset =  sensorCalulate.sChennel[channelID-1].stdRef[CAL_POINT1] - sensorCalulate.sChennel[channelID-1].sensorRef[CAL_POINT1];
0080c8 940e ae95 	CALL SUBOPT_0x263
0080ca 010f      	MOVW R0,R30
0080cb 940e ae99 	CALL SUBOPT_0x264
0080cd 937f      	PUSH R23
0080ce 936f      	PUSH R22
0080cf 93ff      	PUSH R31
0080d0 93ef      	PUSH R30
0080d1 01f0      	MOVW R30,R0
0080d2 940e ae9f 	CALL SUBOPT_0x265
0080d4 91af      	POP  R26
0080d5 91bf      	POP  R27
0080d6 918f      	POP  R24
0080d7 919f      	POP  R25
0080d8 940e aae2 	CALL SUBOPT_0x1D5
                +
0080da a7ec     +STD Y + 44 , R30
0080db a7fd     +STD Y + 44 + 1 , R31
0080dc a76e     +STD Y + 44 + 2 , R22
0080dd a77f     +STD Y + 44 + 3 , R23
                 	__PUTD1S 44
                 ; 001A 007D             sensorValue += offset;
                +
0080de a9aa     +LDD R26 , Y + 50
0080df a9bb     +LDD R27 , Y + 50 + 1
0080e0 a98c     +LDD R24 , Y + 50 + 2
0080e1 a99d     +LDD R25 , Y + 50 + 3
                 	__GETD2S 50
0080e2 940e aea5 	CALL SUBOPT_0x266
                 ; 001A 007E             break;
0080e4 c099      	RJMP _0x340025
                 ; 001A 007F         }
                 ; 001A 0080         case CAL_EXTLINEAR :{
                 _0x340026:
0080e5 30e2      	CPI  R30,LOW(0x2)
0080e6 e0a0      	LDI  R26,HIGH(0x2)
0080e7 07fa      	CPC  R31,R26
0080e8 f5e9      	BRNE _0x340027
                 ; 001A 0081             //sensorValue = (((H28-$B$28)*$E$28)/$F$28)+$A$28;
                 ; 001A 0082             sensorRef1 = sensorCalulate.sChennel[channelID-1].sensorRef[CAL_POINT1];
0080e9 940e ae95 	CALL SUBOPT_0x263
0080eb 940e ae9f 	CALL SUBOPT_0x265
0080ed 940e aeac 	CALL SUBOPT_0x267
                 ; 001A 0083             sensorRef2 = sensorCalulate.sChennel[channelID-1].sensorRef[CAL_POINT2];
0080ef 940e aeb1 	CALL SUBOPT_0x268
                 ; 001A 0084             stdMeter1  = sensorCalulate.sChennel[channelID-1].stdRef[CAL_POINT1];
0080f1 940e ae99 	CALL SUBOPT_0x264
0080f3 940e aebb 	CALL SUBOPT_0x269
                 ; 001A 0085             stdMeter2  = sensorCalulate.sChennel[channelID-1].stdRef[CAL_POINT2];
0080f5 940e aec0 	CALL SUBOPT_0x26A
                 ; 001A 0086             lowRange   =  sensorRef2 - sensorRef1;
                +
0080f7 a5a8     +LDD R26 , Y + 40
0080f8 a5b9     +LDD R27 , Y + 40 + 1
0080f9 a58a     +LDD R24 , Y + 40 + 2
0080fa a59b     +LDD R25 , Y + 40 + 3
                 	__GETD2S 40
                +
0080fb a1ec     +LDD R30 , Y + 36
0080fc a1fd     +LDD R31 , Y + 36 + 1
0080fd a16e     +LDD R22 , Y + 36 + 2
0080fe a17f     +LDD R23 , Y + 36 + 3
                 	__GETD1S 36
0080ff 940e b38f 	CALL __SUBF12
008101 940e adb4 	CALL SUBOPT_0x23D
                 ; 001A 0087             stdMeterRange = stdMeter2 - stdMeter1;
                +
008103 8dac     +LDD R26 , Y + 28
008104 8dbd     +LDD R27 , Y + 28 + 1
008105 8d8e     +LDD R24 , Y + 28 + 2
008106 8d9f     +LDD R25 , Y + 28 + 3
                 	__GETD2S 28
008107 940e a4ae 	CALL SUBOPT_0xCA
008109 940e b38f 	CALL __SUBF12
00810b 940e a503 	CALL SUBOPT_0xD6
                 ; 001A 0088             sensorValue = (((sensorValue-sensorRef1)*stdMeterRange)/lowRange)+stdMeter1;
                +
00810d a5a8     +LDD R26 , Y + 40
00810e a5b9     +LDD R27 , Y + 40 + 1
00810f a58a     +LDD R24 , Y + 40 + 2
008110 a59b     +LDD R25 , Y + 40 + 3
                 	__GETD2S 40
008111 940e aec6 	CALL SUBOPT_0x26B
008113 940e b38f 	CALL __SUBF12
008115 940e 9fa5 	CALL SUBOPT_0x9
008117 940e b3e6 	CALL __MULF12
008119 01df      	MOVW R26,R30
00811a 01cb      	MOVW R24,R22
00811b 940e 9faa 	CALL SUBOPT_0xA
00811d 940e b434 	CALL __DIVF21
                +
00811f 8dac     +LDD R26 , Y + 28
008120 8dbd     +LDD R27 , Y + 28 + 1
008121 8d8e     +LDD R24 , Y + 28 + 2
008122 8d9f     +LDD R25 , Y + 28 + 3
                 	__GETD2S 28
008123 940e aea5 	CALL SUBOPT_0x266
                 ; 001A 0089             break;
008125 c058      	RJMP _0x340025
                 ; 001A 008A         }
                 ; 001A 008B         case CAL_EXTPOLYNOMIAL :{
                 _0x340027:
008126 30e3      	CPI  R30,LOW(0x3)
008127 e0a0      	LDI  R26,HIGH(0x3)
008128 07fa      	CPC  R31,R26
008129 f011      	BREQ PC+3
00812a 940c 817e 	JMP _0x340028
                 ; 001A 008C             sensorRef1 = sensorCalulate.sChennel[channelID-1].sensorRef[CAL_POINT1];
00812c 940e ae95 	CALL SUBOPT_0x263
00812e 940e ae9f 	CALL SUBOPT_0x265
008130 940e aeac 	CALL SUBOPT_0x267
                 ; 001A 008D             sensorRef2 = sensorCalulate.sChennel[channelID-1].sensorRef[CAL_POINT2];
008132 940e aeb1 	CALL SUBOPT_0x268
                 ; 001A 008E             sensorRef3 = sensorCalulate.sChennel[channelID-1].sensorRef[CAL_POINT3];
                +
008134 55ef     +SUBI R30 , LOW ( - _sensorCalulate - ( 20 ) )
008135 4ffa     +SBCI R31 , HIGH ( - _sensorCalulate - ( 20 ) )
                 	__ADDW1MN _sensorCalulate,20
008136 01df      	MOVW R26,R30
008137 940e b649 	CALL __EEPROMRDD
                +
008139 a3e8     +STD Y + 32 , R30
00813a a3f9     +STD Y + 32 + 1 , R31
00813b a36a     +STD Y + 32 + 2 , R22
00813c a37b     +STD Y + 32 + 3 , R23
                 	__PUTD1S 32
                 ; 001A 008F             stdMeter1  = sensorCalulate.sChennel[channelID-1].stdRef[CAL_POINT1];
00813d 940e ae95 	CALL SUBOPT_0x263
00813f 940e ae99 	CALL SUBOPT_0x264
008141 940e aebb 	CALL SUBOPT_0x269
                 ; 001A 0090             stdMeter2  = sensorCalulate.sChennel[channelID-1].stdRef[CAL_POINT2];
008143 940e aec0 	CALL SUBOPT_0x26A
                 ; 001A 0091             stdMeter3  = sensorCalulate.sChennel[channelID-1].stdRef[CAL_POINT3];
008145 940e ae95 	CALL SUBOPT_0x263
                +
008147 56eb     +SUBI R30 , LOW ( - _sensorCalulate - ( 8 ) )
008148 4ffa     +SBCI R31 , HIGH ( - _sensorCalulate - ( 8 ) )
                 	__ADDW1MN _sensorCalulate,8
008149 01df      	MOVW R26,R30
00814a 940e b649 	CALL __EEPROMRDD
00814c 940e adb9 	CALL SUBOPT_0x23E
                 ; 001A 0092 
                 ; 001A 0093             gaussian(sensorRef1,  sensorRef2,  sensorRef3, stdMeter1, stdMeter2, stdMeter3, &factorA, &factorB, &factorC);
00814e 940e aecb 	CALL SUBOPT_0x26C
008150 940e aecb 	CALL SUBOPT_0x26C
008152 940e aecb 	CALL SUBOPT_0x26C
008154 01fe      	MOVW R30,R28
008155 96b0      	ADIW R30,32
008156 93fa      	ST   -Y,R31
008157 93ea      	ST   -Y,R30
008158 940e aaf9 	CALL SUBOPT_0x1DA
00815a 01de      	MOVW R26,R28
00815b 965c      	ADIW R26,28
00815c 940e 7e98 	CALL _gaussian
                 ; 001A 0094             sensorValue = (factorA*sensorValue*sensorValue) + (factorB*sensorValue) + factorC;      //polynomail formula
00815e 940e aec6 	CALL SUBOPT_0x26B
008160 940e a492 	CALL SUBOPT_0xC5
008162 940e b3e6 	CALL __MULF12
                +
008164 a9aa     +LDD R26 , Y + 50
008165 a9bb     +LDD R27 , Y + 50 + 1
008166 a98c     +LDD R24 , Y + 50 + 2
008167 a99d     +LDD R25 , Y + 50 + 3
                 	__GETD2S 50
008168 940e b3e6 	CALL __MULF12
00816a 937f      	PUSH R23
00816b 936f      	PUSH R22
00816c 93ff      	PUSH R31
00816d 93ef      	PUSH R30
00816e 940e aec6 	CALL SUBOPT_0x26B
008170 940e a37b 	CALL SUBOPT_0x96
008172 940e b3e6 	CALL __MULF12
008174 91af      	POP  R26
008175 91bf      	POP  R27
008176 918f      	POP  R24
008177 919f      	POP  R25
008178 940e b396 	CALL __ADDF12
00817a 940e a2bf 	CALL SUBOPT_0x7A
00817c 940e aea5 	CALL SUBOPT_0x266
                 ; 001A 0095 
                 ; 001A 0096             break;
                 ; 001A 0097         }
                 ; 001A 0098         case CAL_DEFAULT:{
                 _0x340028:
                 ; 001A 0099             break;
                 ; 001A 009A         }
                 ; 001A 009B     }
                 _0x340025:
                 ; 001A 009C     return sensorValue;
00817e 940e aec6 	CALL SUBOPT_0x26B
008180 96e6      	ADIW R28,54
008181 9508      	RET
                 ; 001A 009D }
                 
                 	.CSEG
                 _fabs:
008182 940e b62f 	CALL __PUTPARD2
008184 91e9          ld   r30,y+
008185 91f9          ld   r31,y+
008186 9169          ld   r22,y+
008187 9179          ld   r23,y+
008188 777f          cbr  r23,0x80
008189 9508          ret
                 _atoi:
00818a 93ba      	ST   -Y,R27
00818b 93aa      	ST   -Y,R26
00818c 81b9         	ldd  r27,y+1
00818d 81a8         	ld   r26,y
                 __atoi0:
00818e 91ec         	ld   r30,x
00818f 2f8a              mov  r24,r26
008190 2fae      	MOV  R26,R30
008191 940e 9eed 	CALL _isspace
008193 2fa8              mov  r26,r24
008194 23ee         	tst  r30
008195 f011         	breq __atoi1
008196 9611         	adiw r26,1
008197 cff6         	rjmp __atoi0
                 __atoi1:
008198 94e8         	clt
008199 91ec         	ld   r30,x
00819a 32ed         	cpi  r30,'-'
00819b f411         	brne __atoi2
00819c 9468         	set
00819d c002         	rjmp __atoi3
                 __atoi2:
00819e 32eb         	cpi  r30,'+'
00819f f409         	brne __atoi4
                 __atoi3:
0081a0 9611         	adiw r26,1
                 __atoi4:
0081a1 2766         	clr  r22
0081a2 2777         	clr  r23
                 __atoi5:
0081a3 91ec         	ld   r30,x
0081a4 2f8a              mov  r24,r26
0081a5 2fae      	MOV  R26,R30
0081a6 940e 9edb 	CALL _isdigit
0081a8 2fa8              mov  r26,r24
0081a9 23ee         	tst  r30
0081aa f079         	breq __atoi6
0081ab 01fb         	movw r30,r22
0081ac 0f66         	lsl  r22
0081ad 1f77         	rol  r23
0081ae 0f66         	lsl  r22
0081af 1f77         	rol  r23
0081b0 0f6e         	add  r22,r30
0081b1 1f7f         	adc  r23,r31
0081b2 0f66         	lsl  r22
0081b3 1f77         	rol  r23
0081b4 91ed         	ld   r30,x+
0081b5 27ff         	clr  r31
0081b6 53e0         	subi r30,'0'
0081b7 0f6e         	add  r22,r30
0081b8 1f7f         	adc  r23,r31
0081b9 cfe9         	rjmp __atoi5
                 __atoi6:
0081ba 01fb         	movw r30,r22
0081bb f41e         	brtc __atoi7
0081bc 95e0         	com  r30
0081bd 95f0         	com  r31
0081be 9631         	adiw r30,1
                 __atoi7:
0081bf 9622         	adiw r28,2
0081c0 9508         	ret
                 _atol:
0081c1 93ba      	ST   -Y,R27
0081c2 93aa      	ST   -Y,R26
0081c3 81b9          ldd  r27,y+1
0081c4 81a8          ld   r26,y
                 __atol0:
0081c5 91ec          ld   r30,x
0081c6 93af          push r26
0081c7 2fae      	MOV  R26,R30
0081c8 940e 9eed 	CALL _isspace
0081ca 91af          pop  r26
0081cb 23ee          tst  r30
0081cc f011          breq __atol1
0081cd 9611          adiw r26,1
0081ce cff6          rjmp __atol0
                 __atol1:
0081cf 94e8          clt
0081d0 91ec          ld   r30,x
0081d1 32ed          cpi  r30,'-'
0081d2 f411          brne __atol2
0081d3 9468          set
0081d4 c002          rjmp __atol3
                 __atol2:
0081d5 32eb          cpi  r30,'+'
0081d6 f409          brne __atol4
                 __atol3:
0081d7 9611          adiw r26,1
                 __atol4:
0081d8 2400          clr  r0
0081d9 2411          clr  r1
0081da 2788          clr  r24
0081db 2799          clr  r25
                 __atol5:
0081dc 91ec          ld   r30,x
0081dd 93af          push r26
0081de 2fae      	MOV  R26,R30
0081df 940e 9edb 	CALL _isdigit
0081e1 91af          pop  r26
0081e2 23ee          tst  r30
0081e3 f089          breq __atol6
0081e4 01f0          movw r30,r0
0081e5 01bc          movw r22,r24
0081e6 d01b          rcall __atol8
0081e7 d01a          rcall __atol8
0081e8 0e0e          add  r0,r30
0081e9 1e1f          adc  r1,r31
0081ea 1f86          adc  r24,r22
0081eb 1f97          adc  r25,r23
0081ec d015          rcall __atol8
0081ed 91ed          ld   r30,x+
0081ee 27ff          clr  r31
0081ef 53e0          subi r30,'0'
0081f0 0e0e          add  r0,r30
0081f1 1e1f          adc  r1,r31
0081f2 1f8f          adc  r24,r31
0081f3 1f9f          adc  r25,r31
0081f4 cfe7          rjmp __atol5
                 __atol6:
0081f5 01f0          movw r30,r0
0081f6 01bc          movw r22,r24
0081f7 f446          brtc __atol7
0081f8 95e0          com  r30
0081f9 95f0          com  r31
0081fa 9560          com  r22
0081fb 9570          com  r23
0081fc 2788          clr  r24
0081fd 9631          adiw r30,1
0081fe 1f68          adc  r22,r24
0081ff 1f78          adc  r23,r24
                 __atol7:
008200 9622          adiw r28,2
008201 9508          ret
                 
                 __atol8:
008202 0c00          lsl  r0
008203 1c11          rol  r1
008204 1f88          rol  r24
008205 1f99          rol  r25
008206 9508          ret
                 _ftoa:
008207 93ba      	ST   -Y,R27
008208 93aa      	ST   -Y,R26
008209 9724      	SBIW R28,4
00820a 940e ab0a 	CALL SUBOPT_0x1DD
00820c e3ef      	LDI  R30,LOW(63)
00820d 83eb      	STD  Y+3,R30
00820e 931a      	ST   -Y,R17
00820f 930a      	ST   -Y,R16
008210 85eb      	LDD  R30,Y+11
008211 85fc      	LDD  R31,Y+11+1
008212 3fef      	CPI  R30,LOW(0xFFFF)
008213 efaf      	LDI  R26,HIGH(0xFFFF)
008214 07fa      	CPC  R31,R26
008215 f449      	BRNE _0x200000D
008216 940e a78a 	CALL SUBOPT_0x144
                +
008218 e0aa     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
008219 e6b5     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
00821a e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 0 ) )
00821b e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTD2FN _0x2000000,0
00821c 940e 84e4 	CALL _strcpyf
00821e c09f      	RJMP _0x20E002B
                 _0x200000D:
00821f 3fef      	CPI  R30,LOW(0x7FFF)
008220 e7af      	LDI  R26,HIGH(0x7FFF)
008221 07fa      	CPC  R31,R26
008222 f449      	BRNE _0x200000C
008223 940e a78a 	CALL SUBOPT_0x144
                +
008225 e0ab     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
008226 e6b5     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
008227 e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 1 ) )
008228 e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTD2FN _0x2000000,1
008229 940e 84e4 	CALL _strcpyf
00822b c092      	RJMP _0x20E002B
                 _0x200000C:
00822c 85ac      	LDD  R26,Y+12
00822d 23aa      	TST  R26
00822e f452      	BRPL _0x200000F
00822f 940e a1e4 	CALL SUBOPT_0x5B
008231 940e b2f0 	CALL __ANEGF1
008233 940e aece 	CALL SUBOPT_0x26D
008235 940e aed3 	CALL SUBOPT_0x26E
008237 e2ed      	LDI  R30,LOW(45)
008238 93ec      	ST   X,R30
                 _0x200000F:
008239 85a8      	LDD  R26,Y+8
00823a 30a7      	CPI  R26,LOW(0x7)
00823b f010      	BRLO _0x2000010
00823c e0e6      	LDI  R30,LOW(6)
00823d 87e8      	STD  Y+8,R30
                 _0x2000010:
00823e 8518      	LDD  R17,Y+8
                 _0x2000011:
00823f 2fe1      	MOV  R30,R17
008240 5011      	SUBI R17,1
008241 30e0      	CPI  R30,0
008242 f029      	BREQ _0x2000013
008243 940e aeda 	CALL SUBOPT_0x26F
008245 940e a3aa 	CALL SUBOPT_0x9F
008247 cff7      	RJMP _0x2000011
                 _0x2000013:
008248 940e aee3 	CALL SUBOPT_0x270
00824a 940e b396 	CALL __ADDF12
00824c 940e aece 	CALL SUBOPT_0x26D
00824e e010      	LDI  R17,LOW(0)
00824f 940e ae48 	CALL SUBOPT_0x256
008251 940e a3aa 	CALL SUBOPT_0x9F
                 _0x2000014:
008253 940e aee3 	CALL SUBOPT_0x270
008255 940e b479 	CALL __CMPF12
008257 f098      	BRLO _0x2000016
008258 940e a3b4 	CALL SUBOPT_0xA1
00825a 940e aeea 	CALL SUBOPT_0x271
00825c 940e a3aa 	CALL SUBOPT_0x9F
00825e 5f1f      	SUBI R17,-LOW(1)
00825f 3217      	CPI  R17,39
008260 f048      	BRLO _0x2000017
008261 940e a78a 	CALL SUBOPT_0x144
                +
008263 e0af     +LDI R26 , LOW ( 2 * _0x2000000 + ( 5 ) )
008264 e6b5     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 5 ) )
008265 e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 5 ) )
008266 e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 5 ) )
                 	__POINTD2FN _0x2000000,5
008267 940e 84e4 	CALL _strcpyf
008269 c054      	RJMP _0x20E002B
                 _0x2000017:
00826a cfe8      	RJMP _0x2000014
                 _0x2000016:
00826b 3010      	CPI  R17,0
00826c f429      	BRNE _0x2000018
00826d 940e aed3 	CALL SUBOPT_0x26E
00826f e3e0      	LDI  R30,LOW(48)
008270 93ec      	ST   X,R30
008271 c024      	RJMP _0x2000019
                 _0x2000018:
                 _0x200001A:
008272 2fe1      	MOV  R30,R17
008273 5011      	SUBI R17,1
008274 30e0      	CPI  R30,0
008275 f101      	BREQ _0x200001C
008276 940e aeda 	CALL SUBOPT_0x26F
008278 940e aeef 	CALL SUBOPT_0x272
00827a 940e a33b 	CALL SUBOPT_0x8A
00827c 940e 9f40 	CALL _floor
00827e 940e a3aa 	CALL SUBOPT_0x9F
008280 940e aee3 	CALL SUBOPT_0x270
008282 940e b434 	CALL __DIVF21
008284 940e b323 	CALL __CFD1U
008286 2f0e      	MOV  R16,R30
008287 940e aed3 	CALL SUBOPT_0x26E
008289 940e aef4 	CALL SUBOPT_0x273
00828b 940e ab13 	CALL SUBOPT_0x1DF
00828d 940e b3e6 	CALL __MULF12
00828f 940e aefa 	CALL SUBOPT_0x274
008291 940e aae2 	CALL SUBOPT_0x1D5
008293 940e aece 	CALL SUBOPT_0x26D
008295 cfdc      	RJMP _0x200001A
                 _0x200001C:
                 _0x2000019:
008296 85e8      	LDD  R30,Y+8
008297 30e0      	CPI  R30,0
008298 f109      	BREQ _0x20E002A
008299 940e aed3 	CALL SUBOPT_0x26E
00829b e2ee      	LDI  R30,LOW(46)
00829c 93ec      	ST   X,R30
                 _0x200001E:
00829d 85e8      	LDD  R30,Y+8
00829e 50e1      	SUBI R30,LOW(1)
00829f 87e8      	STD  Y+8,R30
0082a0 5fef      	SUBI R30,-LOW(1)
0082a1 f0c1      	BREQ _0x2000020
0082a2 940e aefa 	CALL SUBOPT_0x274
0082a4 940e aeea 	CALL SUBOPT_0x271
0082a6 940e aece 	CALL SUBOPT_0x26D
0082a8 940e a1e4 	CALL SUBOPT_0x5B
0082aa 940e b323 	CALL __CFD1U
0082ac 2f0e      	MOV  R16,R30
0082ad 940e aed3 	CALL SUBOPT_0x26E
0082af 940e aef4 	CALL SUBOPT_0x273
0082b1 940e aefa 	CALL SUBOPT_0x274
0082b3 940e ae7d 	CALL SUBOPT_0x25F
0082b5 940e aae2 	CALL SUBOPT_0x1D5
0082b7 940e aece 	CALL SUBOPT_0x26D
0082b9 cfe3      	RJMP _0x200001E
                 _0x2000020:
                 _0x20E002A:
0082ba 81ae      	LDD  R26,Y+6
0082bb 81bf      	LDD  R27,Y+6+1
0082bc e0e0      	LDI  R30,LOW(0)
0082bd 93ec      	ST   X,R30
                 _0x20E002B:
0082be 8119      	LDD  R17,Y+1
0082bf 8108      	LDD  R16,Y+0
0082c0 962d      	ADIW R28,13
0082c1 9508      	RET
                 _atof:
0082c2 93ba      	ST   -Y,R27
0082c3 93aa      	ST   -Y,R26
0082c4 972a      	SBIW R28,10
0082c5 940e b69a 	CALL __SAVELOCR6
0082c7 e0e0      	LDI  R30,LOW(0)
                +
0082c8 87e8     +STD Y + 8 , R30
0082c9 87e9     +STD Y + 8 + 1 , R30
0082ca 87ea     +STD Y + 8 + 2 , R30
0082cb 87eb     +STD Y + 8 + 3 , R30
                 	__CLRD1S 8
                 _0x200003C:
0082cc 89a8      	LDD  R26,Y+16
0082cd 89b9      	LDD  R27,Y+16+1
0082ce 91ec      	LD   R30,X
0082cf 2f5e      	MOV  R21,R30
0082d0 2fae      	MOV  R26,R30
0082d1 940e 9eed 	CALL _isspace
0082d3 30e0      	CPI  R30,0
0082d4 f019      	BREQ _0x200003E
0082d5 940e aeff 	CALL SUBOPT_0x275
0082d7 cff4      	RJMP _0x200003C
                 _0x200003E:
0082d8 e0e0      	LDI  R30,LOW(0)
0082d9 83ef      	STD  Y+7,R30
0082da 325b      	CPI  R21,43
0082db f021      	BREQ _0x2000073
0082dc 325d      	CPI  R21,45
0082dd f439      	BRNE _0x2000041
0082de e0e1      	LDI  R30,LOW(1)
0082df 83ef      	STD  Y+7,R30
                 _0x2000073:
0082e0 89e8      	LDD  R30,Y+16
0082e1 89f9      	LDD  R31,Y+16+1
0082e2 9631      	ADIW R30,1
0082e3 8be8      	STD  Y+16,R30
0082e4 8bf9      	STD  Y+16+1,R31
                 _0x2000041:
0082e5 e0e0      	LDI  R30,LOW(0)
0082e6 2f4e      	MOV  R20,R30
0082e7 2f5e      	MOV  R21,R30
                +
0082e8 8908     +LDD R16 , Y + 16
0082e9 8919     +LDD R17 , Y + 16 + 1
                 	__GETWRS 16,17,16
                 _0x2000042:
0082ea 89a8      	LDD  R26,Y+16
0082eb 89b9      	LDD  R27,Y+16+1
0082ec 940e ade4 	CALL SUBOPT_0x245
0082ee f449      	BRNE _0x2000045
0082ef 89a8      	LDD  R26,Y+16
0082f0 89b9      	LDD  R27,Y+16+1
0082f1 91ac      	LD   R26,X
0082f2 e2ee      	LDI  R30,LOW(46)
0082f3 940e b52c 	CALL __EQB12
0082f5 2f5e      	MOV  R21,R30
0082f6 30e0      	CPI  R30,0
0082f7 f021      	BREQ _0x2000044
                 _0x2000045:
0082f8 2b45      	OR   R20,R21
0082f9 940e aeff 	CALL SUBOPT_0x275
0082fb cfee      	RJMP _0x2000042
                 _0x2000044:
                +
0082fc 8928     +LDD R18 , Y + 16
0082fd 8939     +LDD R19 , Y + 16 + 1
                 	__GETWRS 18,19,16
0082fe 3040      	CPI  R20,0
0082ff f0f1      	BREQ _0x2000047
008300 89e8      	LDD  R30,Y+16
008301 89f9      	LDD  R31,Y+16+1
008302 9731      	SBIW R30,1
008303 8be8      	STD  Y+16,R30
008304 8bf9      	STD  Y+16+1,R31
                 _0x2000048:
008305 89a8      	LDD  R26,Y+16
008306 89b9      	LDD  R27,Y+16+1
008307 91ac      	LD   R26,X
008308 32ae      	CPI  R26,LOW(0x2E)
008309 f0a1      	BREQ _0x200004A
00830a 940e af05 	CALL SUBOPT_0x276
00830c 940e a492 	CALL SUBOPT_0xC5
00830e 940e ae7d 	CALL SUBOPT_0x25F
008310 940e a33b 	CALL SUBOPT_0x8A
008312 940e a340 	CALL SUBOPT_0x8B
008314 940e b434 	CALL __DIVF21
008316 940e adaf 	CALL SUBOPT_0x23C
008318 89e8      	LDD  R30,Y+16
008319 89f9      	LDD  R31,Y+16+1
00831a 9731      	SBIW R30,1
00831b 8be8      	STD  Y+16,R30
00831c 8bf9      	STD  Y+16+1,R31
00831d cfe7      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
00831e 940e ae48 	CALL SUBOPT_0x256
008320 940e a503 	CALL SUBOPT_0xD6
                 _0x200004B:
008322 89a8      	LDD  R26,Y+16
008323 89b9      	LDD  R27,Y+16+1
008324 9711      	SBIW R26,1
008325 8ba8      	STD  Y+16,R26
008326 8bb9      	STD  Y+16+1,R27
008327 17a0      	CP   R26,R16
008328 07b1      	CPC  R27,R17
008329 f098      	BRLO _0x200004D
00832a 940e af05 	CALL SUBOPT_0x276
00832c 940e 9fa5 	CALL SUBOPT_0x9
00832e 940e ae7d 	CALL SUBOPT_0x25F
008330 940e b3e6 	CALL __MULF12
008332 940e a492 	CALL SUBOPT_0xC5
008334 940e b396 	CALL __ADDF12
008336 940e adaf 	CALL SUBOPT_0x23C
008338 940e af0b 	CALL SUBOPT_0x277
00833a 940e a503 	CALL SUBOPT_0xD6
00833c cfe5      	RJMP _0x200004B
                 _0x200004D:
00833d 01d9      	MOVW R26,R18
                +
00833e 5f2f     +SUBI R18 , LOW ( - 1 )
00833f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
008340 915c      	LD   R21,X
008341 3655      	CPI  R21,101
008342 f019      	BREQ _0x200004F
008343 3455      	CPI  R21,69
008344 f009      	BREQ _0x200004F
008345 c057      	RJMP _0x200004E
                 _0x200004F:
008346 e0e0      	LDI  R30,LOW(0)
008347 2f4e      	MOV  R20,R30
008348 83ee      	STD  Y+6,R30
008349 01d9      	MOVW R26,R18
00834a 915c      	LD   R21,X
00834b 325b      	CPI  R21,43
00834c f021      	BREQ _0x2000074
00834d 325d      	CPI  R21,45
00834e f421      	BRNE _0x2000053
00834f e0e1      	LDI  R30,LOW(1)
008350 83ee      	STD  Y+6,R30
                 _0x2000074:
                +
008351 5f2f     +SUBI R18 , LOW ( - 1 )
008352 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 _0x2000053:
                 _0x2000054:
008353 01d9      	MOVW R26,R18
                +
008354 5f2f     +SUBI R18 , LOW ( - 1 )
008355 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
008356 91ec      	LD   R30,X
008357 2f5e      	MOV  R21,R30
008358 2fae      	MOV  R26,R30
008359 940e 9edb 	CALL _isdigit
00835b 30e0      	CPI  R30,0
00835c f039      	BREQ _0x2000056
00835d e0aa      	LDI  R26,LOW(10)
00835e 024a      	MULS R20,R26
00835f 01f0      	MOVW R30,R0
008360 0fe5      	ADD  R30,R21
008361 53e0      	SUBI R30,LOW(48)
008362 2f4e      	MOV  R20,R30
008363 cfef      	RJMP _0x2000054
                 _0x2000056:
008364 3247      	CPI  R20,39
008365 f068      	BRLO _0x2000057
008366 81ef      	LDD  R30,Y+7
008367 30e0      	CPI  R30,0
008368 f029      	BREQ _0x2000058
                +
008369 efef     +LDI R30 , LOW ( 0xFF7FFFFF )
00836a efff     +LDI R31 , HIGH ( 0xFF7FFFFF )
00836b e76f     +LDI R22 , BYTE3 ( 0xFF7FFFFF )
00836c ef7f     +LDI R23 , BYTE4 ( 0xFF7FFFFF )
                 	__GETD1N 0xFF7FFFFF
00836d c03a      	RJMP _0x20E0029
                 _0x2000058:
                +
00836e efef     +LDI R30 , LOW ( 0x7F7FFFFF )
00836f efff     +LDI R31 , HIGH ( 0x7F7FFFFF )
008370 e76f     +LDI R22 , BYTE3 ( 0x7F7FFFFF )
008371 e77f     +LDI R23 , BYTE4 ( 0x7F7FFFFF )
                 	__GETD1N 0x7F7FFFFF
008372 c035      	RJMP _0x20E0029
                 _0x2000057:
008373 e250      	LDI  R21,LOW(32)
008374 940e ae48 	CALL SUBOPT_0x256
008376 940e a503 	CALL SUBOPT_0xD6
                 _0x2000059:
008378 3050      	CPI  R21,0
008379 f079      	BREQ _0x200005B
00837a 940e a497 	CALL SUBOPT_0xC6
00837c 940e 9fa5 	CALL SUBOPT_0x9
00837e 940e af0e 	CALL SUBOPT_0x278
008380 2fe4      	MOV  R30,R20
008381 23e5      	AND  R30,R21
008382 f021      	BREQ _0x200005C
008383 940e af0b 	CALL SUBOPT_0x277
008385 940e a503 	CALL SUBOPT_0xD6
                 _0x200005C:
008387 9556      	LSR  R21
008388 cfef      	RJMP _0x2000059
                 _0x200005B:
008389 81ee      	LDD  R30,Y+6
00838a 30e0      	CPI  R30,0
00838b f039      	BREQ _0x200005D
00838c 940e a497 	CALL SUBOPT_0xC6
00838e 940e a492 	CALL SUBOPT_0xC5
008390 940e b434 	CALL __DIVF21
008392 c006      	RJMP _0x2000075
                 _0x200005D:
008393 940e a497 	CALL SUBOPT_0xC6
008395 940e a492 	CALL SUBOPT_0xC5
008397 940e b3e6 	CALL __MULF12
                 _0x2000075:
                +
008399 87e8     +STD Y + 8 , R30
00839a 87f9     +STD Y + 8 + 1 , R31
00839b 876a     +STD Y + 8 + 2 , R22
00839c 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                 _0x200004E:
00839d 81ef      	LDD  R30,Y+7
00839e 30e0      	CPI  R30,0
00839f f031      	BREQ _0x200005F
0083a0 940e a118 	CALL SUBOPT_0x3E
0083a2 940e b2f0 	CALL __ANEGF1
0083a4 940e adaf 	CALL SUBOPT_0x23C
                 _0x200005F:
0083a6 940e a118 	CALL SUBOPT_0x3E
                 _0x20E0029:
0083a8 940e b6a1 	CALL __LOADLOCR6
0083aa 9662      	ADIW R28,18
0083ab 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 _srand:
0083ac 940e a308 	CALL SUBOPT_0x83
0083ae 940e b522 	CALL __CWD1
0083b0 940e af12 	CALL SUBOPT_0x279
0083b2 c0da      	RJMP _0x20E0027
                 _rand:
0083b3 91e0 1a49 	LDS  R30,__seed_G100
0083b5 91f0 1a4a 	LDS  R31,__seed_G100+1
0083b7 9160 1a4b 	LDS  R22,__seed_G100+2
0083b9 9170 1a4c 	LDS  R23,__seed_G100+3
                +
0083bb e6ad     +LDI R26 , LOW ( 0x41C64E6D )
0083bc e4be     +LDI R27 , HIGH ( 0x41C64E6D )
0083bd ec86     +LDI R24 , BYTE3 ( 0x41C64E6D )
0083be e491     +LDI R25 , BYTE4 ( 0x41C64E6D )
                 	__GETD2N 0x41C64E6D
0083bf 940e b543 	CALL __MULD12U
                +
0083c1 59ee     +SUBI R30 , LOW ( - 30562 )
0083c2 48f8     +SBCI R31 , HIGH ( - 30562 )
0083c3 4f6f     +SBCI R22 , BYTE3 ( - 30562 )
0083c4 4f7f     +SBCI R23 , BYTE4 ( - 30562 )
                 	__ADDD1N 30562
0083c5 940e af12 	CALL SUBOPT_0x279
0083c7 01fb      	movw r30,r22
0083c8 77ff      	andi r31,0x7F
0083c9 9508      	RET
                 _allocate_block_G100:
0083ca 93ba      	ST   -Y,R27
0083cb 93aa      	ST   -Y,R26
0083cc 9722      	SBIW R28,2
0083cd 940e b69a 	CALL __SAVELOCR6
                +
0083cf e80a     +LDI R16 , LOW ( 7562 )
0083d0 e11d     +LDI R17 , HIGH ( 7562 )
                 	__GETWRN 16,17,7562
0083d1 01d8      	MOVW R26,R16
0083d2 940e a5dc 	CALL SUBOPT_0xFC
                 _0x2000061:
0083d4 2e00      	MOV  R0,R16
0083d5 2a01      	OR   R0,R17
0083d6 f199      	BREQ _0x2000063
0083d7 01d8      	MOVW R26,R16
0083d8 940e b5f6 	CALL __GETW1P
0083da 0fe0      	ADD  R30,R16
0083db 1ff1      	ADC  R31,R17
0083dc 9634      	ADIW R30,4
0083dd 01af      	MOVW R20,R30
0083de 9612      	ADIW R26,2
0083df 940e b5f6 	CALL __GETW1P
0083e1 019f      	MOVW R18,R30
0083e2 9730      	SBIW R30,0
0083e3 f019      	BREQ _0x2000064
                +
0083e4 832e     +STD Y + 6 , R18
0083e5 833f     +STD Y + 6 + 1 , R19
                 	__PUTWSR 18,19,6
0083e6 c004      	RJMP _0x2000065
                 _0x2000064:
0083e7 e0e0      	LDI  R30,LOW(8704)
0083e8 e2f2      	LDI  R31,HIGH(8704)
0083e9 83ee      	STD  Y+6,R30
0083ea 83ff      	STD  Y+6+1,R31
                 _0x2000065:
0083eb 81ae      	LDD  R26,Y+6
0083ec 81bf      	LDD  R27,Y+6+1
0083ed 1ba4      	SUB  R26,R20
0083ee 0bb5      	SBC  R27,R21
0083ef 85e8      	LDD  R30,Y+8
0083f0 85f9      	LDD  R31,Y+8+1
0083f1 9634      	ADIW R30,4
0083f2 17ae      	CP   R26,R30
0083f3 07bf      	CPC  R27,R31
0083f4 f098      	BRLO _0x2000066
0083f5 01fa      	MOVW R30,R20
                +
0083f6 01d8     +MOVW R26 , R16
0083f7 9612     +ADIW R26 , 2
0083f8 93ed     +ST X + , R30
0083f9 93fc     +ST X , R31
                 	__PUTW1RNS 16,2
0083fa 01f9      	MOVW R30,R18
                +
0083fb 01da     +MOVW R26 , R20
0083fc 9612     +ADIW R26 , 2
0083fd 93ed     +ST X + , R30
0083fe 93fc     +ST X , R31
                 	__PUTW1RNS 20,2
0083ff 85e8      	LDD  R30,Y+8
008400 85f9      	LDD  R31,Y+8+1
008401 01da      	MOVW R26,R20
008402 93ed      	ST   X+,R30
008403 93fc      	ST   X,R31
                +
008404 5f4c     +SUBI R20 , LOW ( - 4 )
008405 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
008406 01fa      	MOVW R30,R20
008407 c004      	RJMP _0x20E0028
                 _0x2000066:
008408 0189      	MOVW R16,R18
008409 cfca      	RJMP _0x2000061
                 _0x2000063:
00840a e0e0      	LDI  R30,LOW(0)
00840b e0f0      	LDI  R31,HIGH(0)
                 _0x20E0028:
00840c 940e b6a1 	CALL __LOADLOCR6
00840e 962a      	ADIW R28,10
00840f 9508      	RET
                 _find_prev_block_G100:
008410 940e a279 	CALL SUBOPT_0x6F
                +
008412 e80a     +LDI R16 , LOW ( 7562 )
008413 e11d     +LDI R17 , HIGH ( 7562 )
                 	__GETWRN 16,17,7562
                 _0x2000067:
008414 2e00      	MOV  R0,R16
008415 2a01      	OR   R0,R17
008416 f091      	BREQ _0x2000069
008417 01d8      	MOVW R26,R16
008418 9612      	ADIW R26,2
008419 940e b5f6 	CALL __GETW1P
00841b 019f      	MOVW R18,R30
00841c 01df      	MOVW R26,R30
00841d 81ec      	LDD  R30,Y+4
00841e 81fd      	LDD  R31,Y+4+1
00841f 17ea      	CP   R30,R26
008420 07fb      	CPC  R31,R27
008421 f429      	BRNE _0x200006A
008422 01f8      	MOVW R30,R16
008423 940e b6a3 	CALL __LOADLOCR4
008425 9626      	ADIW R28,6
008426 9508      	RET
                 _0x200006A:
008427 0189      	MOVW R16,R18
008428 cfeb      	RJMP _0x2000067
                 _0x2000069:
008429 940e a71a 	CALL SUBOPT_0x136
00842b 940c 8afe 	JMP  _0x20E001D
                 _realloc:
00842d 93ba      	ST   -Y,R27
00842e 93aa      	ST   -Y,R26
00842f 9722      	SBIW R28,2
008430 940e b69a 	CALL __SAVELOCR6
008432 85ea      	LDD  R30,Y+10
008433 85fb      	LDD  R31,Y+10+1
008434 9730      	SBIW R30,0
008435 f199      	BREQ _0x200006B
008436 9734      	SBIW R30,4
008437 018f      	MOVW R16,R30
008438 01d8      	MOVW R26,R16
008439 dfd6      	RCALL _find_prev_block_G100
00843a 019f      	MOVW R18,R30
00843b 9730      	SBIW R30,0
00843c f161      	BREQ _0x200006C
00843d 01d8      	MOVW R26,R16
00843e 9612      	ADIW R26,2
00843f 940e b5f6 	CALL __GETW1P
                +
008441 01d9     +MOVW R26 , R18
008442 9612     +ADIW R26 , 2
008443 93ed     +ST X + , R30
008444 93fc     +ST X , R31
                 	__PUTW1RNS 18,2
008445 85e8      	LDD  R30,Y+8
008446 85f9      	LDD  R31,Y+8+1
008447 9730      	SBIW R30,0
008448 f101      	BREQ _0x200006D
008449 85a8      	LDD  R26,Y+8
00844a 85b9      	LDD  R27,Y+8+1
00844b df7e      	RCALL _allocate_block_G100
00844c 01af      	MOVW R20,R30
00844d 9730      	SBIW R30,0
00844e f0a9      	BREQ _0x200006E
00844f 01d8      	MOVW R26,R16
008450 940e af1b 	CALL SUBOPT_0x27A
008452 01df      	MOVW R26,R30
008453 85e8      	LDD  R30,Y+8
008454 85f9      	LDD  R31,Y+8+1
008455 17ae      	CP   R26,R30
008456 07bf      	CPC  R27,R31
008457 f420      	BRSH _0x200006F
008458 81ee      	LDD  R30,Y+6
008459 81ff      	LDD  R31,Y+6+1
00845a 87e8      	STD  Y+8,R30
00845b 87f9      	STD  Y+8+1,R31
                 _0x200006F:
00845c 935a      	ST   -Y,R21
00845d 934a      	ST   -Y,R20
00845e 940e ae20 	CALL SUBOPT_0x24E
008460 940e 84b5 	CALL _memmove
008462 940c 8adc 	JMP  _0x20E001F
                 _0x200006E:
008464 01f8      	MOVW R30,R16
                +
008465 01d9     +MOVW R26 , R18
008466 9612     +ADIW R26 , 2
008467 93ed     +ST X + , R30
008468 93fc     +ST X , R31
                 	__PUTW1RNS 18,2
                 _0x200006D:
                 _0x200006C:
                 _0x200006B:
008469 e0e0      	LDI  R30,LOW(0)
00846a e0f0      	LDI  R31,HIGH(0)
00846b 940c 8add 	JMP  _0x20E001E
                 _malloc:
00846d 940e a285 	CALL SUBOPT_0x71
                +
00846f e000     +LDI R16 , LOW ( 0 )
008470 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
008471 81ea      	LDD  R30,Y+2
008472 81fb      	LDD  R31,Y+2+1
008473 9730      	SBIW R30,0
008474 f071      	BREQ _0x2000070
008475 81aa      	LDD  R26,Y+2
008476 81bb      	LDD  R27,Y+2+1
008477 df52      	RCALL _allocate_block_G100
008478 018f      	MOVW R16,R30
008479 9730      	SBIW R30,0
00847a f041      	BREQ _0x2000071
00847b 931a      	ST   -Y,R17
00847c 930a      	ST   -Y,R16
00847d e0e0      	LDI  R30,LOW(0)
00847e 93ea      	ST   -Y,R30
00847f 81ad      	LDD  R26,Y+5
008480 81be      	LDD  R27,Y+5+1
008481 940e 84d4 	CALL _memset
                 _0x2000071:
                 _0x2000070:
008483 01f8      	MOVW R30,R16
008484 8119      	LDD  R17,Y+1
008485 8108      	LDD  R16,Y+0
008486 940c 8508 	JMP  _0x20E0026
                 _free:
008488 940e a308 	CALL SUBOPT_0x83
00848a 940e a532 	CALL SUBOPT_0xDF
00848c dfa0      	RCALL _realloc
                 _0x20E0027:
00848d 9622      	ADIW R28,2
00848e 9508      	RET
                 
                 	.CSEG
                 _memcpy:
00848f 93ba      	ST   -Y,R27
008490 93aa      	ST   -Y,R26
008491 8199          ldd  r25,y+1
008492 8188          ld   r24,y
008493 9600          adiw r24,0
008494 f041          breq memcpy1
008495 81bd          ldd  r27,y+5
008496 81ac          ldd  r26,y+4
008497 81fb          ldd  r31,y+3
008498 81ea          ldd  r30,y+2
                 memcpy0:
008499 9161          ld   r22,z+
00849a 936d          st   x+,r22
00849b 9701          sbiw r24,1
00849c f7e1          brne memcpy0
                 memcpy1:
00849d 81fd          ldd  r31,y+5
00849e 81ec          ldd  r30,y+4
00849f 940c 8afe 	JMP  _0x20E001D
                 _memcpyf:
0084a1 93ba      	ST   -Y,R27
0084a2 93aa      	ST   -Y,R26
0084a3 8199          ldd  r25,y+1
0084a4 8188          ld   r24,y
0084a5 9600          adiw r24,0
0084a6 f051          breq memcpyf1
0084a7 81bf          ldd  r27,y+7
0084a8 81ae          ldd  r26,y+6
0084a9 816c          ldd  r22,y+4
0084aa 81fb          ldd  r31,y+3
0084ab 81ea          ldd  r30,y+2
0084ac bf6b          out  rampz,r22
                 memcpyf0:
0084ad 9007          elpm r0,z+
0084ae 920d          st   x+,r0
0084af 9701          sbiw r24,1
0084b0 f7e1          brne memcpyf0
                 memcpyf1:
0084b1 81ff          ldd  r31,y+7
0084b2 81ee          ldd  r30,y+6
0084b3 940c 8ab9 	JMP  _0x20E0020
                 _memmove:
0084b5 93ba      	ST   -Y,R27
0084b6 93aa      	ST   -Y,R26
0084b7 8199          ldd  r25,y+1
0084b8 8188          ld   r24,y
0084b9 9600          adiw r24,0
0084ba f0a9          breq memmove3
0084bb 81bd          ldd  r27,y+5
0084bc 81ac          ldd  r26,y+4
0084bd 81fb          ldd  r31,y+3
0084be 81ea          ldd  r30,y+2
0084bf 17ea          cp   r30,r26
0084c0 07fb          cpc  r31,r27
0084c1 f071          breq memmove3
0084c2 f02c          brlt memmove1
                 memmove0:
0084c3 9161          ld   r22,z+
0084c4 936d          st   x+,r22
0084c5 9701          sbiw r24,1
0084c6 f7e1          brne memmove0
0084c7 c008          rjmp memmove3
                 memmove1:
0084c8 0fa8          add  r26,r24
0084c9 1fb9          adc  r27,r25
0084ca 0fe8          add  r30,r24
0084cb 1ff9          adc  r31,r25
                 memmove2:
0084cc 9162          ld   r22,-z
0084cd 936e          st   -x,r22
0084ce 9701          sbiw r24,1
0084cf f7e1          brne memmove2
                 memmove3:
0084d0 81fd          ldd  r31,y+5
0084d1 81ec          ldd  r30,y+4
0084d2 940c 8afe 	JMP  _0x20E001D
                 _memset:
0084d4 93ba      	ST   -Y,R27
0084d5 93aa      	ST   -Y,R26
0084d6 81b9          ldd  r27,y+1
0084d7 81a8          ld   r26,y
0084d8 9610          adiw r26,0
0084d9 f031          breq memset1
0084da 81fc          ldd  r31,y+4
0084db 81eb          ldd  r30,y+3
0084dc 816a          ldd  r22,y+2
                 memset0:
0084dd 9361          st   z+,r22
0084de 9711          sbiw r26,1
0084df f7e9          brne memset0
                 memset1:
0084e0 81eb          ldd  r30,y+3
0084e1 81fc          ldd  r31,y+4
0084e2 9625      	ADIW R28,5
0084e3 9508      	RET
                 _strcpyf:
0084e4 940e b62f 	CALL __PUTPARD2
0084e6 91e9          ld   r30,y+
0084e7 91f9          ld   r31,y+
0084e8 9169          ld   r22,y+
0084e9 9179          ld   r23,y+
0084ea 91a9          ld   r26,y+
0084eb 91b9          ld   r27,y+
0084ec 01cd          movw r24,r26
0084ed bf6b          out  rampz,r22
                 strcpyf0:
0084ee 9007          elpm r0,z+
0084ef 920d          st   x+,r0
0084f0 2000          tst  r0
0084f1 f7e1          brne strcpyf0
0084f2 01fc          movw r30,r24
0084f3 9508          ret
                 _strcspn:
0084f4 93ba      	ST   -Y,R27
0084f5 93aa      	ST   -Y,R26
0084f6 81bb          ldd  r27,y+3
0084f7 81aa          ldd  r26,y+2
0084f8 2788          clr  r24
0084f9 2799          clr  r25
                 strcspn0:
0084fa 916d          ld   r22,x+
0084fb 2366          tst  r22
0084fc f051          breq strcspn2
0084fd 81f9          ldd  r31,y+1
0084fe 81e8          ld   r30,y
                 strcspn1:
0084ff 9171          ld   r23,z+
008500 2377          tst  r23
008501 f019          breq strcspn3
008502 1767          cp   r22,r23
008503 f019          breq strcspn2
008504 cffa          rjmp strcspn1
                 strcspn3:
008505 9601          adiw r24,1
008506 cff3          rjmp strcspn0
                 strcspn2:
008507 01fc          movw r30,r24
                 _0x20E0026:
008508 9624      	ADIW R28,4
008509 9508      	RET
                 _strlen:
00850a 93ba      	ST   -Y,R27
00850b 93aa      	ST   -Y,R26
00850c 91a9          ld   r26,y+
00850d 91b9          ld   r27,y+
00850e 27ee          clr  r30
00850f 27ff          clr  r31
                 strlen0:
008510 916d          ld   r22,x+
008511 2366          tst  r22
008512 f011          breq strlen1
008513 9631          adiw r30,1
008514 cffb          rjmp strlen0
                 strlen1:
008515 9508          ret
                 _strlenf:
008516 940e b62f 	CALL __PUTPARD2
008518 27aa          clr  r26
008519 27bb          clr  r27
00851a 91e9          ld   r30,y+
00851b 91f9          ld   r31,y+
00851c 9169          ld   r22,y+
00851d 9179          ld   r23,y+
00851e bf6b          out  rampz,r22
                 strlenf0:
00851f 9007          elpm r0,z+
008520 2000          tst  r0
008521 f011          breq strlenf1
008522 9611          adiw r26,1
008523 cffb          rjmp strlenf0
                 strlenf1:
008524 01fd          movw r30,r26
008525 9508          ret
                 _strncmpf:
008526 93aa      	ST   -Y,R26
008527 9179          ld   r23,y+
008528 91e9          ld   r30,y+
008529 91f9          ld   r31,y+
00852a 9169          ld   r22,y+
00852b 9009          ld   r0,y+
00852c 91a9          ld   r26,y+
00852d 91b9          ld   r27,y+
00852e 2400          clr  r0
00852f 2411          clr  r1
008530 bf6b          out  rampz,r22
                 strncmpf0:
008531 2377          tst  r23
008532 f049          breq strncmpf1
008533 957a          dec  r23
008534 901d          ld   r1,x+
008535 9007          elpm r0,z+
008536 1401          cp   r0,r1
008537 f421          brne strncmpf1
008538 2000          tst  r0
008539 f7b9          brne strncmpf0
                 strncmpf3:
00853a 27ee          clr  r30
00853b c005          rjmp strncmpf2
                 strncmpf1:
00853c 1810          sub  r1,r0
00853d f3e1          breq strncmpf3
00853e e0e1          ldi  r30,1
00853f f408          brcc strncmpf2
008540 50e2          subi r30,2
                 strncmpf2:
008541 9508          ret
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 _wait_ready_G102:
008542 931a      	ST   -Y,R17
008543 e3e2      	LDI  R30,LOW(50)
008544 93e0 1a4f 	STS  _timer2_G102,R30
008546 efef      	LDI  R30,LOW(255)
008547 bdee      	OUT  0x2E,R30
                 _0x2040004:
008548 b5ed      	IN   R30,0x2D
008549 ffe7      	SBRS R30,7
00854a cffd      	RJMP _0x2040004
                 _0x2040008:
00854b efef      	LDI  R30,LOW(255)
00854c bdee      	OUT  0x2E,R30
                 _0x204000A:
00854d b5ed      	IN   R30,0x2D
00854e ffe7      	SBRS R30,7
00854f cffd      	RJMP _0x204000A
008550 b51e      	IN   R17,46
008551 3f1f      	CPI  R17,255
008552 f021      	BREQ _0x204000D
008553 91e0 1a4f 	LDS  R30,_timer2_G102
008555 30e0      	CPI  R30,0
008556 f409      	BRNE _0x204000E
                 _0x204000D:
008557 c001      	RJMP _0x2040009
                 _0x204000E:
008558 cff2      	RJMP _0x2040008
                 _0x2040009:
008559 2fe1      	MOV  R30,R17
00855a 9119      	LD   R17,Y+
00855b 9508      	RET
                 _release_spi_G102:
00855c 9a28      	SBI  0x5,0
00855d efef      	LDI  R30,LOW(255)
00855e bdee      	OUT  0x2E,R30
                 _0x204000F:
00855f b5ed      	IN   R30,0x2D
008560 ffe7      	SBRS R30,7
008561 cffd      	RJMP _0x204000F
008562 9508      	RET
                 _rx_datablock_G102:
008563 93ba      	ST   -Y,R27
008564 93aa      	ST   -Y,R26
008565 940e b69c 	CALL __SAVELOCR4
008567 e0ea      	LDI  R30,LOW(10)
008568 93e0 1a4e 	STS  _timer1_G102,R30
                 _0x2040013:
00856a efef      	LDI  R30,LOW(255)
00856b bdee      	OUT  0x2E,R30
                 _0x2040015:
00856c b5ed      	IN   R30,0x2D
00856d ffe7      	SBRS R30,7
00856e cffd      	RJMP _0x2040015
00856f b51e      	IN   R17,46
008570 3f1f      	CPI  R17,255
008571 f421      	BRNE _0x2040018
008572 91e0 1a4e 	LDS  R30,_timer1_G102
008574 30e0      	CPI  R30,0
008575 f409      	BRNE _0x2040019
                 _0x2040018:
008576 c001      	RJMP _0x2040014
                 _0x2040019:
008577 cff2      	RJMP _0x2040013
                 _0x2040014:
008578 3f1e      	CPI  R17,254
008579 f021      	BREQ _0x204001A
00857a e0e0      	LDI  R30,LOW(0)
00857b 940e b6a3 	CALL __LOADLOCR4
00857d c53b      	RJMP _0x20E0020
                 _0x204001A:
                +
00857e 812e     +LDD R18 , Y + 6
00857f 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                 _0x204001C:
008580 efef      	LDI  R30,LOW(255)
008581 bdee      	OUT  0x2E,R30
                 _0x204001E:
008582 b5ed      	IN   R30,0x2D
008583 ffe7      	SBRS R30,7
008584 cffd      	RJMP _0x204001E
008585 933f      	PUSH R19
008586 932f      	PUSH R18
                +
008587 5f2f     +SUBI R18 , LOW ( - 1 )
008588 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
008589 b5ee      	IN   R30,0x2E
00858a 91af      	POP  R26
00858b 91bf      	POP  R27
00858c 93ec      	ST   X,R30
00858d efef      	LDI  R30,LOW(255)
00858e bdee      	OUT  0x2E,R30
                 _0x2040021:
00858f b5ed      	IN   R30,0x2D
008590 ffe7      	SBRS R30,7
008591 cffd      	RJMP _0x2040021
008592 933f      	PUSH R19
008593 932f      	PUSH R18
                +
008594 5f2f     +SUBI R18 , LOW ( - 1 )
008595 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
008596 b5ee      	IN   R30,0x2E
008597 91af      	POP  R26
008598 91bf      	POP  R27
008599 93ec      	ST   X,R30
00859a efef      	LDI  R30,LOW(255)
00859b bdee      	OUT  0x2E,R30
                 _0x2040024:
00859c b5ed      	IN   R30,0x2D
00859d ffe7      	SBRS R30,7
00859e cffd      	RJMP _0x2040024
00859f 933f      	PUSH R19
0085a0 932f      	PUSH R18
                +
0085a1 5f2f     +SUBI R18 , LOW ( - 1 )
0085a2 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0085a3 b5ee      	IN   R30,0x2E
0085a4 91af      	POP  R26
0085a5 91bf      	POP  R27
0085a6 93ec      	ST   X,R30
0085a7 efef      	LDI  R30,LOW(255)
0085a8 bdee      	OUT  0x2E,R30
                 _0x2040027:
0085a9 b5ed      	IN   R30,0x2D
0085aa ffe7      	SBRS R30,7
0085ab cffd      	RJMP _0x2040027
0085ac 933f      	PUSH R19
0085ad 932f      	PUSH R18
                +
0085ae 5f2f     +SUBI R18 , LOW ( - 1 )
0085af 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0085b0 b5ee      	IN   R30,0x2E
0085b1 91af      	POP  R26
0085b2 91bf      	POP  R27
0085b3 93ec      	ST   X,R30
0085b4 81ec      	LDD  R30,Y+4
0085b5 81fd      	LDD  R31,Y+4+1
0085b6 9734      	SBIW R30,4
0085b7 83ec      	STD  Y+4,R30
0085b8 83fd      	STD  Y+4+1,R31
0085b9 f631      	BRNE _0x204001C
0085ba efef      	LDI  R30,LOW(255)
0085bb bdee      	OUT  0x2E,R30
                 _0x204002A:
0085bc b5ed      	IN   R30,0x2D
0085bd ffe7      	SBRS R30,7
0085be cffd      	RJMP _0x204002A
0085bf efef      	LDI  R30,LOW(255)
0085c0 bdee      	OUT  0x2E,R30
                 _0x204002D:
0085c1 b5ed      	IN   R30,0x2D
0085c2 ffe7      	SBRS R30,7
0085c3 cffd      	RJMP _0x204002D
0085c4 e0e1      	LDI  R30,LOW(1)
0085c5 940e b6a3 	CALL __LOADLOCR4
0085c7 c4f1      	RJMP _0x20E0020
                 _tx_datablock_G102:
0085c8 93aa      	ST   -Y,R26
0085c9 940e b69c 	CALL __SAVELOCR4
0085cb df76      	RCALL _wait_ready_G102
0085cc 3fef      	CPI  R30,LOW(0xFF)
0085cd f021      	BREQ _0x2040030
0085ce e0e0      	LDI  R30,LOW(0)
0085cf 940e b6a3 	CALL __LOADLOCR4
0085d1 c4b3      	RJMP _0x20E0021
                 _0x2040030:
0085d2 81ec      	LDD  R30,Y+4
0085d3 bdee      	OUT  0x2E,R30
                 _0x2040031:
0085d4 b5ed      	IN   R30,0x2D
0085d5 ffe7      	SBRS R30,7
0085d6 cffd      	RJMP _0x2040031
0085d7 81ac      	LDD  R26,Y+4
0085d8 3fad      	CPI  R26,LOW(0xFD)
0085d9 f171      	BREQ _0x2040034
0085da e000      	LDI  R16,LOW(0)
                +
0085db 812d     +LDD R18 , Y + 5
0085dc 813e     +LDD R19 , Y + 5 + 1
                 	__GETWRS 18,19,5
                 _0x2040036:
0085dd 01d9      	MOVW R26,R18
                +
0085de 5f2f     +SUBI R18 , LOW ( - 1 )
0085df 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0085e0 91ec      	LD   R30,X
0085e1 bdee      	OUT  0x2E,R30
                 _0x2040038:
0085e2 b5ed      	IN   R30,0x2D
0085e3 ffe7      	SBRS R30,7
0085e4 cffd      	RJMP _0x2040038
0085e5 01d9      	MOVW R26,R18
                +
0085e6 5f2f     +SUBI R18 , LOW ( - 1 )
0085e7 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0085e8 91ec      	LD   R30,X
0085e9 bdee      	OUT  0x2E,R30
                 _0x204003B:
0085ea b5ed      	IN   R30,0x2D
0085eb ffe7      	SBRS R30,7
0085ec cffd      	RJMP _0x204003B
0085ed 5001      	SUBI R16,LOW(1)
0085ee 3000      	CPI  R16,0
0085ef f769      	BRNE _0x2040036
0085f0 efef      	LDI  R30,LOW(255)
0085f1 bdee      	OUT  0x2E,R30
                 _0x204003E:
0085f2 b5ed      	IN   R30,0x2D
0085f3 ffe7      	SBRS R30,7
0085f4 cffd      	RJMP _0x204003E
0085f5 efef      	LDI  R30,LOW(255)
0085f6 bdee      	OUT  0x2E,R30
                 _0x2040041:
0085f7 b5ed      	IN   R30,0x2D
0085f8 ffe7      	SBRS R30,7
0085f9 cffd      	RJMP _0x2040041
0085fa efef      	LDI  R30,LOW(255)
0085fb bdee      	OUT  0x2E,R30
                 _0x2040044:
0085fc b5ed      	IN   R30,0x2D
0085fd ffe7      	SBRS R30,7
0085fe cffd      	RJMP _0x2040044
0085ff b51e      	IN   R17,46
008600 2fe1      	MOV  R30,R17
008601 71ef      	ANDI R30,LOW(0x1F)
008602 30e5      	CPI  R30,LOW(0x5)
008603 f021      	BREQ _0x2040047
008604 e0e0      	LDI  R30,LOW(0)
008605 940e b6a3 	CALL __LOADLOCR4
008607 c47d      	RJMP _0x20E0021
                 _0x2040047:
                 _0x2040034:
008608 e0e1      	LDI  R30,LOW(1)
008609 940e b6a3 	CALL __LOADLOCR4
00860b c479      	RJMP _0x20E0021
                 _send_cmd_G102:
00860c 940e b62f 	CALL __PUTPARD2
00860e 931a      	ST   -Y,R17
00860f 930a      	ST   -Y,R16
008610 81ee      	LDD  R30,Y+6
008611 78e0      	ANDI R30,LOW(0x80)
008612 f089      	BREQ _0x2040048
008613 81ee      	LDD  R30,Y+6
008614 77ef      	ANDI R30,0x7F
008615 83ee      	STD  Y+6,R30
008616 e7e7      	LDI  R30,LOW(119)
008617 93ea      	ST   -Y,R30
                +
008618 e0a0     +LDI R26 , LOW ( 0x0 )
008619 e0b0     +LDI R27 , HIGH ( 0x0 )
00861a e080     +LDI R24 , BYTE3 ( 0x0 )
00861b e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00861c dfef      	RCALL _send_cmd_G102
00861d 2f0e      	MOV  R16,R30
00861e 3002      	CPI  R16,2
00861f f020      	BRLO _0x2040049
008620 2fe0      	MOV  R30,R16
008621 8119      	LDD  R17,Y+1
008622 8108      	LDD  R16,Y+0
008623 c461      	RJMP _0x20E0021
                 _0x2040049:
                 _0x2040048:
008624 9a28      	SBI  0x5,0
008625 9828      	CBI  0x5,0
008626 df1b      	RCALL _wait_ready_G102
008627 3fef      	CPI  R30,LOW(0xFF)
008628 f021      	BREQ _0x204004A
008629 efef      	LDI  R30,LOW(255)
00862a 8119      	LDD  R17,Y+1
00862b 8108      	LDD  R16,Y+0
00862c c458      	RJMP _0x20E0021
                 _0x204004A:
00862d 81ee      	LDD  R30,Y+6
00862e bdee      	OUT  0x2E,R30
                 _0x204004B:
00862f b5ed      	IN   R30,0x2D
008630 ffe7      	SBRS R30,7
008631 cffd      	RJMP _0x204004B
008632 81ed      	LDD  R30,Y+5
008633 bdee      	OUT  0x2E,R30
                 _0x204004E:
008634 b5ed      	IN   R30,0x2D
008635 ffe7      	SBRS R30,7
008636 cffd      	RJMP _0x204004E
008637 81ec      	LDD  R30,Y+4
008638 bdee      	OUT  0x2E,R30
                 _0x2040051:
008639 b5ed      	IN   R30,0x2D
00863a ffe7      	SBRS R30,7
00863b cffd      	RJMP _0x2040051
00863c 81eb      	LDD  R30,Y+3
00863d bdee      	OUT  0x2E,R30
                 _0x2040054:
00863e b5ed      	IN   R30,0x2D
00863f ffe7      	SBRS R30,7
008640 cffd      	RJMP _0x2040054
008641 81ea      	LDD  R30,Y+2
008642 bdee      	OUT  0x2E,R30
                 _0x2040057:
008643 b5ed      	IN   R30,0x2D
008644 ffe7      	SBRS R30,7
008645 cffd      	RJMP _0x2040057
008646 e011      	LDI  R17,LOW(1)
008647 81ae      	LDD  R26,Y+6
008648 34a0      	CPI  R26,LOW(0x40)
008649 f411      	BRNE _0x204005A
00864a e915      	LDI  R17,LOW(149)
00864b c004      	RJMP _0x204005B
                 _0x204005A:
00864c 81ae      	LDD  R26,Y+6
00864d 34a8      	CPI  R26,LOW(0x48)
00864e f409      	BRNE _0x204005C
00864f e817      	LDI  R17,LOW(135)
                 _0x204005C:
                 _0x204005B:
008650 bd1e      	OUT  0x2E,R17
                 _0x204005D:
008651 b5ed      	IN   R30,0x2D
008652 ffe7      	SBRS R30,7
008653 cffd      	RJMP _0x204005D
008654 81ae      	LDD  R26,Y+6
008655 34ac      	CPI  R26,LOW(0x4C)
008656 f429      	BRNE _0x2040060
008657 efef      	LDI  R30,LOW(255)
008658 bdee      	OUT  0x2E,R30
                 _0x2040061:
008659 b5ed      	IN   R30,0x2D
00865a ffe7      	SBRS R30,7
00865b cffd      	RJMP _0x2040061
                 _0x2040060:
00865c ef1f      	LDI  R17,LOW(255)
                 _0x2040065:
00865d efef      	LDI  R30,LOW(255)
00865e bdee      	OUT  0x2E,R30
                 _0x2040067:
00865f b5ed      	IN   R30,0x2D
008660 ffe7      	SBRS R30,7
008661 cffd      	RJMP _0x2040067
008662 b50e      	IN   R16,46
008663 ff07      	SBRS R16,7
008664 c003      	RJMP _0x204006A
008665 5011      	SUBI R17,LOW(1)
008666 3010      	CPI  R17,0
008667 f409      	BRNE _0x204006B
                 _0x204006A:
008668 c001      	RJMP _0x2040066
                 _0x204006B:
008669 cff3      	RJMP _0x2040065
                 _0x2040066:
00866a 2fe0      	MOV  R30,R16
00866b 8119      	LDD  R17,Y+1
00866c 8108      	LDD  R16,Y+0
00866d c417      	RJMP _0x20E0021
                 _rx_spi4_G102:
00866e 93ba      	ST   -Y,R27
00866f 93aa      	ST   -Y,R26
008670 931a      	ST   -Y,R17
008671 e014      	LDI  R17,4
                 _0x204006D:
008672 efef      	LDI  R30,LOW(255)
008673 bdee      	OUT  0x2E,R30
                 _0x204006F:
008674 b5ed      	IN   R30,0x2D
008675 ffe7      	SBRS R30,7
008676 cffd      	RJMP _0x204006F
008677 81a9      	LDD  R26,Y+1
008678 81ba      	LDD  R27,Y+1+1
008679 9611      	ADIW R26,1
00867a 83a9      	STD  Y+1,R26
00867b 83ba      	STD  Y+1+1,R27
00867c 9711      	SBIW R26,1
00867d b5ee      	IN   R30,0x2E
00867e 93ec      	ST   X,R30
00867f 5011      	SUBI R17,LOW(1)
008680 3010      	CPI  R17,0
008681 f781      	BRNE _0x204006D
008682 c552      	RJMP _0x20E001B
                 _disk_initialize:
008683 93aa      	ST   -Y,R26
008684 9724      	SBIW R28,4
008685 940e b69c 	CALL __SAVELOCR4
008687 85e8      	LDD  R30,Y+8
008688 30e0      	CPI  R30,0
008689 f011      	BREQ _0x2040072
00868a e0e1      	LDI  R30,LOW(1)
00868b c0c4      	RJMP _0x20E0025
                 _0x2040072:
00868c 9808      	CBI  0x1,0
00868d 9809      	CBI  0x1,1
00868e e0ea      	LDI  R30,LOW(10)
00868f 93e0 1a4e 	STS  _timer1_G102,R30
                 _0x2040073:
008691 91e0 1a4e 	LDS  R30,_timer1_G102
008693 30e0      	CPI  R30,0
008694 f7e1      	BRNE _0x2040073
008695 91e0 1a4d 	LDS  R30,_status_G102
008697 70e2      	ANDI R30,LOW(0x2)
008698 f009      	BREQ _0x2040076
008699 c0b4      	RJMP _0x20E0024
                 _0x2040076:
00869a 9a20      	SBI  0x4,0
00869b 9a28      	SBI  0x5,0
00869c b1e5      	IN   R30,0x5
00869d 7fe9      	ANDI R30,LOW(0xF9)
00869e b9e5      	OUT  0x5,R30
00869f 9a2b      	SBI  0x5,3
0086a0 9823      	CBI  0x4,3
0086a1 b1e4      	IN   R30,0x4
0086a2 60e7      	ORI  R30,LOW(0x7)
0086a3 b9e4      	OUT  0x4,R30
0086a4 e5e2      	LDI  R30,LOW(82)
0086a5 bdec      	OUT  0x2C,R30
0086a6 e0e0      	LDI  R30,LOW(0)
0086a7 bded      	OUT  0x2D,R30
0086a8 ef3f      	LDI  R19,LOW(255)
                 _0x2040078:
0086a9 e01a      	LDI  R17,LOW(10)
                 _0x204007B:
0086aa efef      	LDI  R30,LOW(255)
0086ab bdee      	OUT  0x2E,R30
                 _0x204007D:
0086ac b5ed      	IN   R30,0x2D
0086ad ffe7      	SBRS R30,7
0086ae cffd      	RJMP _0x204007D
0086af 5011      	SUBI R17,LOW(1)
0086b0 3010      	CPI  R17,0
0086b1 f7c1      	BRNE _0x204007B
0086b2 e4e0      	LDI  R30,LOW(64)
0086b3 93ea      	ST   -Y,R30
                +
0086b4 e0a0     +LDI R26 , LOW ( 0x0 )
0086b5 e0b0     +LDI R27 , HIGH ( 0x0 )
0086b6 e080     +LDI R24 , BYTE3 ( 0x0 )
0086b7 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
0086b8 df53      	RCALL _send_cmd_G102
0086b9 2f0e      	MOV  R16,R30
0086ba 5031      	SUBI R19,LOW(1)
0086bb 3001      	CPI  R16,1
0086bc f011      	BREQ _0x2040080
0086bd 3030      	CPI  R19,0
0086be f409      	BRNE _0x2040081
                 _0x2040080:
0086bf c001      	RJMP _0x2040079
                 _0x2040081:
0086c0 cfe8      	RJMP _0x2040078
                 _0x2040079:
0086c1 e030      	LDI  R19,LOW(0)
0086c2 3001      	CPI  R16,1
0086c3 f011      	BREQ PC+3
0086c4 940c 872e 	JMP _0x2040082
0086c6 e6e4      	LDI  R30,LOW(100)
0086c7 93e0 1a4e 	STS  _timer1_G102,R30
0086c9 e4e8      	LDI  R30,LOW(72)
0086ca 93ea      	ST   -Y,R30
                +
0086cb eaaa     +LDI R26 , LOW ( 0x1AA )
0086cc e0b1     +LDI R27 , HIGH ( 0x1AA )
0086cd e080     +LDI R24 , BYTE3 ( 0x1AA )
0086ce e090     +LDI R25 , BYTE4 ( 0x1AA )
                 	__GETD2N 0x1AA
0086cf df3c      	RCALL _send_cmd_G102
0086d0 30e1      	CPI  R30,LOW(0x1)
0086d1 f591      	BRNE _0x2040083
0086d2 01de      	MOVW R26,R28
0086d3 9614      	ADIW R26,4
0086d4 df99      	RCALL _rx_spi4_G102
0086d5 81ae      	LDD  R26,Y+6
0086d6 30a1      	CPI  R26,LOW(0x1)
0086d7 f419      	BRNE _0x2040085
0086d8 81af      	LDD  R26,Y+7
0086d9 3aaa      	CPI  R26,LOW(0xAA)
0086da f009      	BREQ _0x2040086
                 _0x2040085:
0086db c027      	RJMP _0x2040084
                 _0x2040086:
                 _0x2040087:
0086dc 91e0 1a4e 	LDS  R30,_timer1_G102
0086de 30e0      	CPI  R30,0
0086df f049      	BREQ _0x204008A
0086e0 eee9      	LDI  R30,LOW(233)
0086e1 93ea      	ST   -Y,R30
                +
0086e2 e0a0     +LDI R26 , LOW ( 0x40000000 )
0086e3 e0b0     +LDI R27 , HIGH ( 0x40000000 )
0086e4 e080     +LDI R24 , BYTE3 ( 0x40000000 )
0086e5 e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
0086e6 df25      	RCALL _send_cmd_G102
0086e7 30e0      	CPI  R30,0
0086e8 f409      	BRNE _0x204008B
                 _0x204008A:
0086e9 c001      	RJMP _0x2040089
                 _0x204008B:
0086ea cff1      	RJMP _0x2040087
                 _0x2040089:
0086eb 91e0 1a4e 	LDS  R30,_timer1_G102
0086ed 30e0      	CPI  R30,0
0086ee f049      	BREQ _0x204008D
0086ef e7ea      	LDI  R30,LOW(122)
0086f0 93ea      	ST   -Y,R30
                +
0086f1 e0a0     +LDI R26 , LOW ( 0x0 )
0086f2 e0b0     +LDI R27 , HIGH ( 0x0 )
0086f3 e080     +LDI R24 , BYTE3 ( 0x0 )
0086f4 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
0086f5 df16      	RCALL _send_cmd_G102
0086f6 30e0      	CPI  R30,0
0086f7 f009      	BREQ _0x204008E
                 _0x204008D:
0086f8 c00a      	RJMP _0x204008C
                 _0x204008E:
0086f9 01de      	MOVW R26,R28
0086fa 9614      	ADIW R26,4
0086fb df72      	RCALL _rx_spi4_G102
0086fc 81ec      	LDD  R30,Y+4
0086fd 74e0      	ANDI R30,LOW(0x40)
0086fe f011      	BREQ _0x204008F
0086ff e0ec      	LDI  R30,LOW(12)
008700 c001      	RJMP _0x2040090
                 _0x204008F:
008701 e0e4      	LDI  R30,LOW(4)
                 _0x2040090:
008702 2f3e      	MOV  R19,R30
                 _0x204008C:
                 _0x2040084:
008703 c02a      	RJMP _0x2040092
                 _0x2040083:
008704 eee9      	LDI  R30,LOW(233)
008705 93ea      	ST   -Y,R30
                +
008706 e0a0     +LDI R26 , LOW ( 0x0 )
008707 e0b0     +LDI R27 , HIGH ( 0x0 )
008708 e080     +LDI R24 , BYTE3 ( 0x0 )
008709 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00870a df01      	RCALL _send_cmd_G102
00870b 30e2      	CPI  R30,LOW(0x2)
00870c f418      	BRSH _0x2040093
00870d e032      	LDI  R19,LOW(2)
00870e ee09      	LDI  R16,LOW(233)
00870f c002      	RJMP _0x2040094
                 _0x2040093:
008710 e031      	LDI  R19,LOW(1)
008711 e401      	LDI  R16,LOW(65)
                 _0x2040094:
                 _0x2040095:
008712 91e0 1a4e 	LDS  R30,_timer1_G102
008714 30e0      	CPI  R30,0
008715 f041      	BREQ _0x2040098
008716 930a      	ST   -Y,R16
                +
008717 e0a0     +LDI R26 , LOW ( 0x0 )
008718 e0b0     +LDI R27 , HIGH ( 0x0 )
008719 e080     +LDI R24 , BYTE3 ( 0x0 )
00871a e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00871b def0      	RCALL _send_cmd_G102
00871c 30e0      	CPI  R30,0
00871d f409      	BRNE _0x2040099
                 _0x2040098:
00871e c001      	RJMP _0x2040097
                 _0x2040099:
00871f cff2      	RJMP _0x2040095
                 _0x2040097:
008720 91e0 1a4e 	LDS  R30,_timer1_G102
008722 30e0      	CPI  R30,0
008723 f049      	BREQ _0x204009B
008724 e5e0      	LDI  R30,LOW(80)
008725 93ea      	ST   -Y,R30
                +
008726 e0a0     +LDI R26 , LOW ( 0x200 )
008727 e0b2     +LDI R27 , HIGH ( 0x200 )
008728 e080     +LDI R24 , BYTE3 ( 0x200 )
008729 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00872a dee1      	RCALL _send_cmd_G102
00872b 30e0      	CPI  R30,0
00872c f009      	BREQ _0x204009A
                 _0x204009B:
00872d e030      	LDI  R19,LOW(0)
                 _0x204009A:
                 _0x2040092:
                 _0x2040082:
00872e 9330 1a50 	STS  _card_type_G102,R19
008730 de2b      	RCALL _release_spi_G102
008731 3030      	CPI  R19,0
008732 f051      	BREQ _0x204009D
008733 91e0 1a4d 	LDS  R30,_status_G102
008735 7fee      	ANDI R30,0xFE
008736 93e0 1a4d 	STS  _status_G102,R30
008738 e5e0      	LDI  R30,LOW(80)
008739 bdec      	OUT  0x2C,R30
00873a e0e1      	LDI  R30,LOW(1)
00873b bded      	OUT  0x2D,R30
00873c c011      	RJMP _0x204009E
                 _0x204009D:
00873d 9828      	CBI  0x5,0
00873e de03      	RCALL _wait_ready_G102
00873f de1c      	RCALL _release_spi_G102
008740 e0e0      	LDI  R30,LOW(0)
008741 bdec      	OUT  0x2C,R30
008742 b1e4      	IN   R30,0x4
008743 7fe0      	ANDI R30,LOW(0xF0)
008744 b9e4      	OUT  0x4,R30
008745 b1e5      	IN   R30,0x5
008746 7fe0      	ANDI R30,LOW(0xF0)
008747 b9e5      	OUT  0x5,R30
008748 9820      	CBI  0x4,0
008749 91e0 1a4d 	LDS  R30,_status_G102
00874b 60e1      	ORI  R30,1
00874c 93e0 1a4d 	STS  _status_G102,R30
                 _0x204009E:
                 _0x20E0024:
00874e 91e0 1a4d 	LDS  R30,_status_G102
                 _0x20E0025:
008750 940e b6a3 	CALL __LOADLOCR4
008752 9629      	ADIW R28,9
008753 9508      	RET
                 _disk_status:
008754 93aa      	ST   -Y,R26
008755 81e8      	LD   R30,Y
008756 30e0      	CPI  R30,0
008757 f011      	BREQ _0x204009F
008758 e0e1      	LDI  R30,LOW(1)
008759 c002      	RJMP _0x20E0023
                 _0x204009F:
00875a 91e0 1a4d 	LDS  R30,_status_G102
                 _0x20E0023:
00875c 9621      	ADIW R28,1
00875d 9508      	RET
                 _disk_read:
00875e 93aa      	ST   -Y,R26
00875f 81ef      	LDD  R30,Y+7
008760 30e0      	CPI  R30,0
008761 f419      	BRNE _0x20400A1
008762 81e8      	LD   R30,Y
008763 30e0      	CPI  R30,0
008764 f411      	BRNE _0x20400A0
                 _0x20400A1:
008765 e0e4      	LDI  R30,LOW(4)
008766 c352      	RJMP _0x20E0020
                 _0x20400A0:
008767 91e0 1a4d 	LDS  R30,_status_G102
008769 70e1      	ANDI R30,LOW(0x1)
00876a f011      	BREQ _0x20400A3
00876b e0e3      	LDI  R30,LOW(3)
00876c c34c      	RJMP _0x20E0020
                 _0x20400A3:
00876d 91e0 1a50 	LDS  R30,_card_type_G102
00876f 70e8      	ANDI R30,LOW(0x8)
008770 f471      	BRNE _0x20400A4
                +
008771 81e9     +LDD R30 , Y + 1
008772 81fa     +LDD R31 , Y + 1 + 1
008773 816b     +LDD R22 , Y + 1 + 2
008774 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
008775 e0a0     +LDI R26 , LOW ( 0x200 )
008776 e0b2     +LDI R27 , HIGH ( 0x200 )
008777 e080     +LDI R24 , BYTE3 ( 0x200 )
008778 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
008779 940e b543 	CALL __MULD12U
                +
00877b 83e9     +STD Y + 1 , R30
00877c 83fa     +STD Y + 1 + 1 , R31
00877d 836b     +STD Y + 1 + 2 , R22
00877e 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 _0x20400A4:
00877f 81a8      	LD   R26,Y
008780 30a1      	CPI  R26,LOW(0x1)
008781 f4b1      	BRNE _0x20400A5
008782 e5e1      	LDI  R30,LOW(81)
008783 93ea      	ST   -Y,R30
                +
008784 81aa     +LDD R26 , Y + 2
008785 81bb     +LDD R27 , Y + 2 + 1
008786 818c     +LDD R24 , Y + 2 + 2
008787 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
008788 de83      	RCALL _send_cmd_G102
008789 30e0      	CPI  R30,0
00878a f449      	BRNE _0x20400A7
00878b 81ed      	LDD  R30,Y+5
00878c 81fe      	LDD  R31,Y+5+1
00878d 93fa      	ST   -Y,R31
00878e 93ea      	ST   -Y,R30
00878f e0a0      	LDI  R26,LOW(512)
008790 e0b2      	LDI  R27,HIGH(512)
008791 ddd1      	RCALL _rx_datablock_G102
008792 30e0      	CPI  R30,0
008793 f409      	BRNE _0x20400A8
                 _0x20400A7:
008794 c002      	RJMP _0x20400A6
                 _0x20400A8:
008795 e0e0      	LDI  R30,LOW(0)
008796 83e8      	ST   Y,R30
                 _0x20400A6:
008797 c023      	RJMP _0x20400A9
                 _0x20400A5:
008798 e5e2      	LDI  R30,LOW(82)
008799 93ea      	ST   -Y,R30
                +
00879a 81aa     +LDD R26 , Y + 2
00879b 81bb     +LDD R27 , Y + 2 + 1
00879c 818c     +LDD R24 , Y + 2 + 2
00879d 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00879e de6d      	RCALL _send_cmd_G102
00879f 30e0      	CPI  R30,0
0087a0 f4d1      	BRNE _0x20400AA
                 _0x20400AC:
0087a1 81ed      	LDD  R30,Y+5
0087a2 81fe      	LDD  R31,Y+5+1
0087a3 93fa      	ST   -Y,R31
0087a4 93ea      	ST   -Y,R30
0087a5 e0a0      	LDI  R26,LOW(512)
0087a6 e0b2      	LDI  R27,HIGH(512)
0087a7 ddbb      	RCALL _rx_datablock_G102
0087a8 30e0      	CPI  R30,0
0087a9 f051      	BREQ _0x20400AD
0087aa 81ed      	LDD  R30,Y+5
0087ab 81fe      	LDD  R31,Y+5+1
0087ac 50e0      	SUBI R30,LOW(-512)
0087ad 4ffe      	SBCI R31,HIGH(-512)
0087ae 83ed      	STD  Y+5,R30
0087af 83fe      	STD  Y+5+1,R31
0087b0 81e8      	LD   R30,Y
0087b1 50e1      	SUBI R30,LOW(1)
0087b2 83e8      	ST   Y,R30
0087b3 f769      	BRNE _0x20400AC
                 _0x20400AD:
0087b4 e4ec      	LDI  R30,LOW(76)
0087b5 93ea      	ST   -Y,R30
                +
0087b6 e0a0     +LDI R26 , LOW ( 0x0 )
0087b7 e0b0     +LDI R27 , HIGH ( 0x0 )
0087b8 e080     +LDI R24 , BYTE3 ( 0x0 )
0087b9 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
0087ba de51      	RCALL _send_cmd_G102
                 _0x20400AA:
                 _0x20400A9:
0087bb dda0      	RCALL _release_spi_G102
0087bc 81e8      	LD   R30,Y
0087bd 30e0      	CPI  R30,0
0087be f011      	BREQ _0x20400AF
0087bf e0e1      	LDI  R30,LOW(1)
0087c0 c001      	RJMP _0x20400B0
                 _0x20400AF:
0087c1 e0e0      	LDI  R30,LOW(0)
                 _0x20400B0:
0087c2 c2f6      	RJMP _0x20E0020
                 _disk_write:
0087c3 93aa      	ST   -Y,R26
0087c4 81ef      	LDD  R30,Y+7
0087c5 30e0      	CPI  R30,0
0087c6 f419      	BRNE _0x20400B3
0087c7 81e8      	LD   R30,Y
0087c8 30e0      	CPI  R30,0
0087c9 f411      	BRNE _0x20400B2
                 _0x20400B3:
0087ca e0e4      	LDI  R30,LOW(4)
0087cb c2ed      	RJMP _0x20E0020
                 _0x20400B2:
0087cc 91e0 1a4d 	LDS  R30,_status_G102
0087ce 70e1      	ANDI R30,LOW(0x1)
0087cf f011      	BREQ _0x20400B5
0087d0 e0e3      	LDI  R30,LOW(3)
0087d1 c2e7      	RJMP _0x20E0020
                 _0x20400B5:
0087d2 91e0 1a4d 	LDS  R30,_status_G102
0087d4 70e4      	ANDI R30,LOW(0x4)
0087d5 f011      	BREQ _0x20400B6
0087d6 e0e2      	LDI  R30,LOW(2)
0087d7 c2e1      	RJMP _0x20E0020
                 _0x20400B6:
0087d8 91e0 1a50 	LDS  R30,_card_type_G102
0087da 70e8      	ANDI R30,LOW(0x8)
0087db f471      	BRNE _0x20400B7
                +
0087dc 81e9     +LDD R30 , Y + 1
0087dd 81fa     +LDD R31 , Y + 1 + 1
0087de 816b     +LDD R22 , Y + 1 + 2
0087df 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
0087e0 e0a0     +LDI R26 , LOW ( 0x200 )
0087e1 e0b2     +LDI R27 , HIGH ( 0x200 )
0087e2 e080     +LDI R24 , BYTE3 ( 0x200 )
0087e3 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
0087e4 940e b543 	CALL __MULD12U
                +
0087e6 83e9     +STD Y + 1 , R30
0087e7 83fa     +STD Y + 1 + 1 , R31
0087e8 836b     +STD Y + 1 + 2 , R22
0087e9 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 _0x20400B7:
0087ea 81a8      	LD   R26,Y
0087eb 30a1      	CPI  R26,LOW(0x1)
0087ec f4a9      	BRNE _0x20400B8
0087ed e5e8      	LDI  R30,LOW(88)
0087ee 93ea      	ST   -Y,R30
                +
0087ef 81aa     +LDD R26 , Y + 2
0087f0 81bb     +LDD R27 , Y + 2 + 1
0087f1 818c     +LDD R24 , Y + 2 + 2
0087f2 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0087f3 de18      	RCALL _send_cmd_G102
0087f4 30e0      	CPI  R30,0
0087f5 f441      	BRNE _0x20400BA
0087f6 81ed      	LDD  R30,Y+5
0087f7 81fe      	LDD  R31,Y+5+1
0087f8 93fa      	ST   -Y,R31
0087f9 93ea      	ST   -Y,R30
0087fa efae      	LDI  R26,LOW(254)
0087fb ddcc      	RCALL _tx_datablock_G102
0087fc 30e0      	CPI  R30,0
0087fd f409      	BRNE _0x20400BB
                 _0x20400BA:
0087fe c002      	RJMP _0x20400B9
                 _0x20400BB:
0087ff e0e0      	LDI  R30,LOW(0)
008800 83e8      	ST   Y,R30
                 _0x20400B9:
008801 c030      	RJMP _0x20400BC
                 _0x20400B8:
008802 91e0 1a50 	LDS  R30,_card_type_G102
008804 70e6      	ANDI R30,LOW(0x6)
008805 f039      	BREQ _0x20400BD
008806 ede7      	LDI  R30,LOW(215)
008807 93ea      	ST   -Y,R30
008808 81a9      	LDD  R26,Y+1
008809 27bb      	CLR  R27
00880a 2788      	CLR  R24
00880b 2799      	CLR  R25
00880c ddff      	RCALL _send_cmd_G102
                 _0x20400BD:
00880d e5e9      	LDI  R30,LOW(89)
00880e 93ea      	ST   -Y,R30
                +
00880f 81aa     +LDD R26 , Y + 2
008810 81bb     +LDD R27 , Y + 2 + 1
008811 818c     +LDD R24 , Y + 2 + 2
008812 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
008813 ddf8      	RCALL _send_cmd_G102
008814 30e0      	CPI  R30,0
008815 f4e1      	BRNE _0x20400BE
                 _0x20400C0:
008816 81ed      	LDD  R30,Y+5
008817 81fe      	LDD  R31,Y+5+1
008818 93fa      	ST   -Y,R31
008819 93ea      	ST   -Y,R30
00881a efac      	LDI  R26,LOW(252)
00881b ddac      	RCALL _tx_datablock_G102
00881c 30e0      	CPI  R30,0
00881d f051      	BREQ _0x20400C1
00881e 81ed      	LDD  R30,Y+5
00881f 81fe      	LDD  R31,Y+5+1
008820 50e0      	SUBI R30,LOW(-512)
008821 4ffe      	SBCI R31,HIGH(-512)
008822 83ed      	STD  Y+5,R30
008823 83fe      	STD  Y+5+1,R31
008824 81e8      	LD   R30,Y
008825 50e1      	SUBI R30,LOW(1)
008826 83e8      	ST   Y,R30
008827 f771      	BRNE _0x20400C0
                 _0x20400C1:
008828 e0e0      	LDI  R30,LOW(0)
008829 e0f0      	LDI  R31,HIGH(0)
00882a 93fa      	ST   -Y,R31
00882b 93ea      	ST   -Y,R30
00882c efad      	LDI  R26,LOW(253)
00882d dd9a      	RCALL _tx_datablock_G102
00882e 30e0      	CPI  R30,0
00882f f411      	BRNE _0x20400C3
008830 e0e1      	LDI  R30,LOW(1)
008831 83e8      	ST   Y,R30
                 _0x20400C3:
                 _0x20400BE:
                 _0x20400BC:
008832 dd29      	RCALL _release_spi_G102
008833 81e8      	LD   R30,Y
008834 30e0      	CPI  R30,0
008835 f011      	BREQ _0x20400C4
008836 e0e1      	LDI  R30,LOW(1)
008837 c001      	RJMP _0x20400C5
                 _0x20400C4:
008838 e0e0      	LDI  R30,LOW(0)
                 _0x20400C5:
008839 c27f      	RJMP _0x20E0020
                 _disk_ioctl:
00883a 93ba      	ST   -Y,R27
00883b 93aa      	ST   -Y,R26
00883c 9760      	SBIW R28,16
00883d 940e b69a 	CALL __SAVELOCR6
00883f 8de9      	LDD  R30,Y+25
008840 30e0      	CPI  R30,0
008841 f011      	BREQ _0x20400C7
008842 e0e4      	LDI  R30,LOW(4)
008843 c182      	RJMP _0x20E0022
                 _0x20400C7:
008844 e011      	LDI  R17,LOW(1)
008845 91e0 1a4d 	LDS  R30,_status_G102
008847 70e1      	ANDI R30,LOW(0x1)
008848 f011      	BREQ _0x20400C8
008849 e0e3      	LDI  R30,LOW(3)
00884a c17b      	RJMP _0x20E0022
                 _0x20400C8:
                +
00884b 894e     +LDD R20 , Y + 22
00884c 895f     +LDD R21 , Y + 22 + 1
                 	__GETWRS 20,21,22
00884d 8de8      	LDD  R30,Y+24
00884e 30e0      	CPI  R30,0
00884f f431      	BRNE _0x20400CC
008850 9828      	CBI  0x5,0
008851 dcf0      	RCALL _wait_ready_G102
008852 3fef      	CPI  R30,LOW(0xFF)
008853 f409      	BRNE _0x20400CD
008854 e010      	LDI  R17,LOW(0)
                 _0x20400CD:
008855 c16e      	RJMP _0x20400CB
                 _0x20400CC:
008856 30e1      	CPI  R30,LOW(0x1)
008857 f011      	BREQ PC+3
008858 940c 88b4 	JMP _0x20400CE
00885a e4e9      	LDI  R30,LOW(73)
00885b 93ea      	ST   -Y,R30
                +
00885c e0a0     +LDI R26 , LOW ( 0x0 )
00885d e0b0     +LDI R27 , HIGH ( 0x0 )
00885e e080     +LDI R24 , BYTE3 ( 0x0 )
00885f e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
008860 ddab      	RCALL _send_cmd_G102
008861 30e0      	CPI  R30,0
008862 f449      	BRNE _0x20400D0
008863 01fe      	MOVW R30,R28
008864 9636      	ADIW R30,6
008865 93fa      	ST   -Y,R31
008866 93ea      	ST   -Y,R30
008867 e1a0      	LDI  R26,LOW(16)
008868 e0b0      	LDI  R27,0
008869 dcf9      	RCALL _rx_datablock_G102
00886a 30e0      	CPI  R30,0
00886b f409      	BRNE _0x20400D1
                 _0x20400D0:
00886c c046      	RJMP _0x20400CF
                 _0x20400D1:
00886d 81ee      	LDD  R30,Y+6
00886e 95e2      	SWAP R30
00886f 70ef      	ANDI R30,0xF
008870 95e6      	LSR  R30
008871 95e6      	LSR  R30
008872 30e1      	CPI  R30,LOW(0x1)
008873 f469      	BRNE _0x20400D2
008874 e0e0      	LDI  R30,0
008875 85fe      	LDD  R31,Y+14
008876 85af      	LDD  R26,Y+15
008877 e0b0      	LDI  R27,0
008878 0fea      	ADD  R30,R26
008879 1ffb      	ADC  R31,R27
00887a 9631      	ADIW R30,1
00887b 019f      	MOVW R18,R30
00887c 01d9      	MOVW R26,R18
00887d 2788      	CLR  R24
00887e 2799      	CLR  R25
00887f e0ea      	LDI  R30,LOW(10)
008880 c02c      	RJMP _0x2040101
                 _0x20400D2:
008881 85eb      	LDD  R30,Y+11
008882 70ef      	ANDI R30,LOW(0xF)
008883 2fae      	MOV  R26,R30
008884 89e8      	LDD  R30,Y+16
008885 78e0      	ANDI R30,LOW(0x80)
008886 1fee      	ROL  R30
008887 e0e0      	LDI  R30,0
008888 1fee      	ROL  R30
008889 0fae      	ADD  R26,R30
00888a 85ef      	LDD  R30,Y+15
00888b 70e3      	ANDI R30,LOW(0x3)
00888c 0fee      	LSL  R30
00888d 0fea      	ADD  R30,R26
00888e 5fee      	SUBI R30,-LOW(2)
00888f 2f0e      	MOV  R16,R30
008890 85ee      	LDD  R30,Y+14
008891 95e2      	SWAP R30
008892 70ef      	ANDI R30,0xF
008893 95e6      	LSR  R30
008894 95e6      	LSR  R30
008895 2fae      	MOV  R26,R30
008896 85ed      	LDD  R30,Y+13
008897 e0f0      	LDI  R31,0
008898 940e b4ec 	CALL __LSLW2
00889a e0b0      	LDI  R27,0
00889b 0fae      	ADD  R26,R30
00889c 1fbf      	ADC  R27,R31
00889d 85ec      	LDD  R30,Y+12
00889e 70e3      	ANDI R30,LOW(0x3)
00889f e0f0      	LDI  R31,0
0088a0 940e b4ec 	CALL __LSLW2
0088a2 2ffe      	MOV  R31,R30
0088a3 e0e0      	LDI  R30,0
0088a4 0fea      	ADD  R30,R26
0088a5 1ffb      	ADC  R31,R27
0088a6 9631      	ADIW R30,1
0088a7 019f      	MOVW R18,R30
0088a8 01d9      	MOVW R26,R18
0088a9 2788      	CLR  R24
0088aa 2799      	CLR  R25
0088ab 2fe0      	MOV  R30,R16
0088ac 50e9      	SUBI R30,LOW(9)
                 _0x2040101:
0088ad 940e b4d0 	CALL __LSLD12
0088af 01da      	MOVW R26,R20
0088b0 940e b605 	CALL __PUTDP1
0088b2 e010      	LDI  R17,LOW(0)
                 _0x20400CF:
0088b3 c110      	RJMP _0x20400CB
                 _0x20400CE:
0088b4 30e2      	CPI  R30,LOW(0x2)
0088b5 f439      	BRNE _0x20400D4
0088b6 01da      	MOVW R26,R20
0088b7 e0e0      	LDI  R30,LOW(512)
0088b8 e0f2      	LDI  R31,HIGH(512)
0088b9 93ed      	ST   X+,R30
0088ba 93fc      	ST   X,R31
0088bb e010      	LDI  R17,LOW(0)
0088bc c107      	RJMP _0x20400CB
                 _0x20400D4:
0088bd 30e3      	CPI  R30,LOW(0x3)
0088be f011      	BREQ PC+3
0088bf 940c 8969 	JMP _0x20400D5
0088c1 91e0 1a50 	LDS  R30,_card_type_G102
0088c3 70e4      	ANDI R30,LOW(0x4)
0088c4 f179      	BREQ _0x20400D6
0088c5 eced      	LDI  R30,LOW(205)
0088c6 93ea      	ST   -Y,R30
                +
0088c7 e0a0     +LDI R26 , LOW ( 0x0 )
0088c8 e0b0     +LDI R27 , HIGH ( 0x0 )
0088c9 e080     +LDI R24 , BYTE3 ( 0x0 )
0088ca e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
0088cb dd40      	RCALL _send_cmd_G102
0088cc 30e0      	CPI  R30,0
0088cd f529      	BRNE _0x20400D7
0088ce efef      	LDI  R30,LOW(255)
0088cf bdee      	OUT  0x2E,R30
                 _0x20400D8:
0088d0 b5ed      	IN   R30,0x2D
0088d1 ffe7      	SBRS R30,7
0088d2 cffd      	RJMP _0x20400D8
0088d3 01fe      	MOVW R30,R28
0088d4 9636      	ADIW R30,6
0088d5 93fa      	ST   -Y,R31
0088d6 93ea      	ST   -Y,R30
0088d7 e1a0      	LDI  R26,LOW(16)
0088d8 e0b0      	LDI  R27,0
0088d9 dc89      	RCALL _rx_datablock_G102
0088da 30e0      	CPI  R30,0
0088db f0b9      	BREQ _0x20400DB
0088dc e300      	LDI  R16,LOW(48)
                 _0x20400DD:
0088dd 3000      	CPI  R16,0
0088de f039      	BREQ _0x20400DE
0088df efef      	LDI  R30,LOW(255)
0088e0 bdee      	OUT  0x2E,R30
                 _0x20400DF:
0088e1 b5ed      	IN   R30,0x2D
0088e2 ffe7      	SBRS R30,7
0088e3 cffd      	RJMP _0x20400DF
0088e4 5001      	SUBI R16,1
0088e5 cff7      	RJMP _0x20400DD
                 _0x20400DE:
0088e6 89e8      	LDD  R30,Y+16
0088e7 95e2      	SWAP R30
0088e8 70ef      	ANDI R30,0xF
                +
0088e9 e1a0     +LDI R26 , LOW ( 0x10 )
0088ea e0b0     +LDI R27 , HIGH ( 0x10 )
0088eb e080     +LDI R24 , BYTE3 ( 0x10 )
0088ec e090     +LDI R25 , BYTE4 ( 0x10 )
                 	__GETD2N 0x10
0088ed 940e b4d0 	CALL __LSLD12
0088ef 01da      	MOVW R26,R20
0088f0 940e b605 	CALL __PUTDP1
0088f2 e010      	LDI  R17,LOW(0)
                 _0x20400DB:
                 _0x20400D7:
0088f3 c074      	RJMP _0x20400E2
                 _0x20400D6:
0088f4 e4e9      	LDI  R30,LOW(73)
0088f5 93ea      	ST   -Y,R30
                +
0088f6 e0a0     +LDI R26 , LOW ( 0x0 )
0088f7 e0b0     +LDI R27 , HIGH ( 0x0 )
0088f8 e080     +LDI R24 , BYTE3 ( 0x0 )
0088f9 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
0088fa dd11      	RCALL _send_cmd_G102
0088fb 30e0      	CPI  R30,0
0088fc f449      	BRNE _0x20400E4
0088fd 01fe      	MOVW R30,R28
0088fe 9636      	ADIW R30,6
0088ff 93fa      	ST   -Y,R31
008900 93ea      	ST   -Y,R30
008901 e1a0      	LDI  R26,LOW(16)
008902 e0b0      	LDI  R27,0
008903 dc5f      	RCALL _rx_datablock_G102
008904 30e0      	CPI  R30,0
008905 f409      	BRNE _0x20400E5
                 _0x20400E4:
008906 c061      	RJMP _0x20400E3
                 _0x20400E5:
008907 91e0 1a50 	LDS  R30,_card_type_G102
008909 70e2      	ANDI R30,LOW(0x2)
00890a f151      	BREQ _0x20400E6
00890b 89e8      	LDD  R30,Y+16
00890c 73ef      	ANDI R30,LOW(0x3F)
00890d 27ff      	CLR  R31
00890e 2766      	CLR  R22
00890f 2777      	CLR  R23
008910 940e b508 	CALL __LSLD1
008912 937f      	PUSH R23
008913 936f      	PUSH R22
008914 93ff      	PUSH R31
008915 93ef      	PUSH R30
008916 89e9      	LDD  R30,Y+17
008917 78e0      	ANDI R30,LOW(0x80)
008918 27ff      	CLR  R31
008919 2766      	CLR  R22
00891a 2777      	CLR  R23
00891b 01df      	MOVW R26,R30
00891c 01cb      	MOVW R24,R22
00891d e0e7      	LDI  R30,LOW(7)
00891e 940e b4dc 	CALL __LSRD12
008920 91af      	POP  R26
008921 91bf      	POP  R27
008922 918f      	POP  R24
008923 919f      	POP  R25
008924 940e b49d 	CALL __ADDD12
                +
008926 5fef     +SUBI R30 , LOW ( - 1 )
008927 4fff     +SBCI R31 , HIGH ( - 1 )
008928 4f6f     +SBCI R22 , BYTE3 ( - 1 )
008929 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00892a 01df      	MOVW R26,R30
00892b 01cb      	MOVW R24,R22
00892c 89eb      	LDD  R30,Y+19
00892d 95e2      	SWAP R30
00892e 70ef      	ANDI R30,0xF
00892f 95e6      	LSR  R30
008930 95e6      	LSR  R30
008931 50e1      	SUBI R30,LOW(1)
008932 940e b4d0 	CALL __LSLD12
008934 c02f      	RJMP _0x2040102
                 _0x20400E6:
008935 89e8      	LDD  R30,Y+16
008936 77ec      	ANDI R30,LOW(0x7C)
008937 95e6      	LSR  R30
008938 95e6      	LSR  R30
008939 27ff      	CLR  R31
00893a 2766      	CLR  R22
00893b 2777      	CLR  R23
                +
00893c 5fef     +SUBI R30 , LOW ( - 1 )
00893d 4fff     +SBCI R31 , HIGH ( - 1 )
00893e 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00893f 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
008940 937f      	PUSH R23
008941 936f      	PUSH R22
008942 93ff      	PUSH R31
008943 93ef      	PUSH R30
008944 89e9      	LDD  R30,Y+17
008945 70e3      	ANDI R30,LOW(0x3)
008946 27ff      	CLR  R31
008947 2766      	CLR  R22
008948 2777      	CLR  R23
008949 01df      	MOVW R26,R30
00894a 01cb      	MOVW R24,R22
00894b e0e3      	LDI  R30,LOW(3)
00894c 940e b4d0 	CALL __LSLD12
00894e 01df      	MOVW R26,R30
00894f 01cb      	MOVW R24,R22
008950 89e9      	LDD  R30,Y+17
008951 7ee0      	ANDI R30,LOW(0xE0)
008952 95e2      	SWAP R30
008953 70ef      	ANDI R30,0xF
008954 95e6      	LSR  R30
008955 27ff      	CLR  R31
008956 2766      	CLR  R22
008957 2777      	CLR  R23
008958 940e b49d 	CALL __ADDD12
                +
00895a 5fef     +SUBI R30 , LOW ( - 1 )
00895b 4fff     +SBCI R31 , HIGH ( - 1 )
00895c 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00895d 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00895e 91af      	POP  R26
00895f 91bf      	POP  R27
008960 918f      	POP  R24
008961 919f      	POP  R25
008962 940e b543 	CALL __MULD12U
                 _0x2040102:
008964 01da      	MOVW R26,R20
008965 940e b605 	CALL __PUTDP1
008967 e010      	LDI  R17,LOW(0)
                 _0x20400E3:
                 _0x20400E2:
008968 c05b      	RJMP _0x20400CB
                 _0x20400D5:
008969 30ea      	CPI  R30,LOW(0xA)
00896a f431      	BRNE _0x20400E8
00896b 91e0 1a50 	LDS  R30,_card_type_G102
00896d 01da      	MOVW R26,R20
00896e 93ec      	ST   X,R30
00896f e010      	LDI  R17,LOW(0)
008970 c053      	RJMP _0x20400CB
                 _0x20400E8:
008971 30eb      	CPI  R30,LOW(0xB)
008972 f499      	BRNE _0x20400E9
008973 e4e9      	LDI  R30,LOW(73)
008974 93ea      	ST   -Y,R30
                +
008975 e0a0     +LDI R26 , LOW ( 0x0 )
008976 e0b0     +LDI R27 , HIGH ( 0x0 )
008977 e080     +LDI R24 , BYTE3 ( 0x0 )
008978 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
008979 dc92      	RCALL _send_cmd_G102
00897a 30e0      	CPI  R30,0
00897b f439      	BRNE _0x20400EB
00897c 935a      	ST   -Y,R21
00897d 934a      	ST   -Y,R20
00897e e1a0      	LDI  R26,LOW(16)
00897f e0b0      	LDI  R27,0
008980 dbe2      	RCALL _rx_datablock_G102
008981 30e0      	CPI  R30,0
008982 f409      	BRNE _0x20400EC
                 _0x20400EB:
008983 c001      	RJMP _0x20400EA
                 _0x20400EC:
008984 e010      	LDI  R17,LOW(0)
                 _0x20400EA:
008985 c03e      	RJMP _0x20400CB
                 _0x20400E9:
008986 30ec      	CPI  R30,LOW(0xC)
008987 f499      	BRNE _0x20400ED
008988 e4ea      	LDI  R30,LOW(74)
008989 93ea      	ST   -Y,R30
                +
00898a e0a0     +LDI R26 , LOW ( 0x0 )
00898b e0b0     +LDI R27 , HIGH ( 0x0 )
00898c e080     +LDI R24 , BYTE3 ( 0x0 )
00898d e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00898e dc7d      	RCALL _send_cmd_G102
00898f 30e0      	CPI  R30,0
008990 f439      	BRNE _0x20400EF
008991 935a      	ST   -Y,R21
008992 934a      	ST   -Y,R20
008993 e1a0      	LDI  R26,LOW(16)
008994 e0b0      	LDI  R27,0
008995 dbcd      	RCALL _rx_datablock_G102
008996 30e0      	CPI  R30,0
008997 f409      	BRNE _0x20400F0
                 _0x20400EF:
008998 c001      	RJMP _0x20400EE
                 _0x20400F0:
008999 e010      	LDI  R17,LOW(0)
                 _0x20400EE:
00899a c029      	RJMP _0x20400CB
                 _0x20400ED:
00899b 30ed      	CPI  R30,LOW(0xD)
00899c f469      	BRNE _0x20400F1
00899d e7ea      	LDI  R30,LOW(122)
00899e 93ea      	ST   -Y,R30
                +
00899f e0a0     +LDI R26 , LOW ( 0x0 )
0089a0 e0b0     +LDI R27 , HIGH ( 0x0 )
0089a1 e080     +LDI R24 , BYTE3 ( 0x0 )
0089a2 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
0089a3 dc68      	RCALL _send_cmd_G102
0089a4 30e0      	CPI  R30,0
0089a5 f419      	BRNE _0x20400F2
0089a6 01da      	MOVW R26,R20
0089a7 dcc6      	RCALL _rx_spi4_G102
0089a8 e010      	LDI  R17,LOW(0)
                 _0x20400F2:
0089a9 c01a      	RJMP _0x20400CB
                 _0x20400F1:
0089aa 30ee      	CPI  R30,LOW(0xE)
0089ab f4b9      	BRNE _0x20400F9
0089ac eced      	LDI  R30,LOW(205)
0089ad 93ea      	ST   -Y,R30
                +
0089ae e0a0     +LDI R26 , LOW ( 0x0 )
0089af e0b0     +LDI R27 , HIGH ( 0x0 )
0089b0 e080     +LDI R24 , BYTE3 ( 0x0 )
0089b1 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
0089b2 dc59      	RCALL _send_cmd_G102
0089b3 30e0      	CPI  R30,0
0089b4 f469      	BRNE _0x20400F4
0089b5 efef      	LDI  R30,LOW(255)
0089b6 bdee      	OUT  0x2E,R30
                 _0x20400F5:
0089b7 b5ed      	IN   R30,0x2D
0089b8 ffe7      	SBRS R30,7
0089b9 cffd      	RJMP _0x20400F5
0089ba 935a      	ST   -Y,R21
0089bb 934a      	ST   -Y,R20
0089bc e4a0      	LDI  R26,LOW(64)
0089bd e0b0      	LDI  R27,0
0089be dba4      	RCALL _rx_datablock_G102
0089bf 30e0      	CPI  R30,0
0089c0 f009      	BREQ _0x20400F8
0089c1 e010      	LDI  R17,LOW(0)
                 _0x20400F8:
                 _0x20400F4:
0089c2 c001      	RJMP _0x20400CB
                 _0x20400F9:
0089c3 e014      	LDI  R17,LOW(4)
                 _0x20400CB:
0089c4 db97      	RCALL _release_spi_G102
0089c5 2fe1      	MOV  R30,R17
                 _0x20E0022:
0089c6 940e b6a1 	CALL __LOADLOCR6
0089c8 966a      	ADIW R28,26
0089c9 9508      	RET
                 _disk_timerproc:
0089ca 931a      	ST   -Y,R17
0089cb 930a      	ST   -Y,R16
0089cc 9110 1a4e 	LDS  R17,_timer1_G102
0089ce 3010      	CPI  R17,0
0089cf f019      	BREQ _0x20400FA
0089d0 5011      	SUBI R17,LOW(1)
0089d1 9310 1a4e 	STS  _timer1_G102,R17
                 _0x20400FA:
0089d3 9110 1a4f 	LDS  R17,_timer2_G102
0089d5 3010      	CPI  R17,0
0089d6 f019      	BREQ _0x20400FB
0089d7 5011      	SUBI R17,LOW(1)
0089d8 9310 1a4f 	STS  _timer2_G102,R17
                 _0x20400FB:
0089da 9110 1a51 	LDS  R17,_pv_S102000B000
0089dc b1e0      	IN   R30,0x0
0089dd 70e2      	ANDI R30,LOW(0x2)
0089de 2fae      	MOV  R26,R30
0089df b1e0      	IN   R30,0x0
0089e0 70e1      	ANDI R30,LOW(0x1)
0089e1 2bea      	OR   R30,R26
0089e2 93e0 1a51 	STS  _pv_S102000B000,R30
0089e4 17e1      	CP   R30,R17
0089e5 f481      	BRNE _0x20400FC
0089e6 9100 1a4d 	LDS  R16,_status_G102
0089e8 70e2      	ANDI R30,LOW(0x2)
0089e9 f011      	BREQ _0x20400FD
0089ea 6004      	ORI  R16,LOW(4)
0089eb c001      	RJMP _0x20400FE
                 _0x20400FD:
0089ec 7f0b      	ANDI R16,LOW(251)
                 _0x20400FE:
0089ed 91e0 1a51 	LDS  R30,_pv_S102000B000
0089ef 70e1      	ANDI R30,LOW(0x1)
0089f0 f011      	BREQ _0x20400FF
0089f1 6003      	ORI  R16,LOW(3)
0089f2 c001      	RJMP _0x2040100
                 _0x20400FF:
0089f3 7f0d      	ANDI R16,LOW(253)
                 _0x2040100:
0089f4 9300 1a4d 	STS  _status_G102,R16
                 _0x20400FC:
0089f6 9109      	LD   R16,Y+
0089f7 9119      	LD   R17,Y+
0089f8 9508      	RET
                 
                 	.CSEG
                 _get_fattime:
0089f9 9727      	SBIW R28,7
0089fa 91a0 1434 	LDS  R26,_prtc_get_time
0089fc 91b0 1435 	LDS  R27,_prtc_get_time+1
0089fe 9180 1436 	LDS  R24,_prtc_get_time+2
008a00 9190 1437 	LDS  R25,_prtc_get_time+3
008a02 940e b68a 	CALL __CPD02
008a04 f059      	BREQ _0x2060004
008a05 91a0 1438 	LDS  R26,_prtc_get_date
008a07 91b0 1439 	LDS  R27,_prtc_get_date+1
008a09 9180 143a 	LDS  R24,_prtc_get_date+2
008a0b 9190 143b 	LDS  R25,_prtc_get_date+3
008a0d 940e b68a 	CALL __CPD02
008a0f f429      	BRNE _0x2060003
                 _0x2060004:
                +
008a10 e0e0     +LDI R30 , LOW ( 0x3A210000 )
008a11 e0f0     +LDI R31 , HIGH ( 0x3A210000 )
008a12 e261     +LDI R22 , BYTE3 ( 0x3A210000 )
008a13 e37a     +LDI R23 , BYTE4 ( 0x3A210000 )
                 	__GETD1N 0x3A210000
008a14 c070      	RJMP _0x20E0021
                 _0x2060003:
008a15 940e a14f 	CALL SUBOPT_0x46
008a17 940e a1af 	CALL SUBOPT_0x53
008a19 01de      	MOVW R26,R28
008a1a 9618      	ADIW R26,8
                +
008a1b 91e0 1434+LDS R30 , _prtc_get_time + ( 0 )
008a1d 91f0 1435+LDS R31 , _prtc_get_time + ( 0 ) + 1
008a1f 9160 1436+LDS R22 , _prtc_get_time + ( 0 ) + 2
008a21 bf6c     +OUT EIND , R22
008a22 9519     +EICALL
                 	__CALL1MN _prtc_get_time,0
008a23 01fe      	MOVW R30,R28
008a24 9633      	ADIW R30,3
008a25 940e ac15 	CALL SUBOPT_0x207
008a27 01de      	MOVW R26,R28
008a28 9614      	ADIW R26,4
                +
008a29 91e0 1438+LDS R30 , _prtc_get_date + ( 0 )
008a2b 91f0 1439+LDS R31 , _prtc_get_date + ( 0 ) + 1
008a2d 9160 143a+LDS R22 , _prtc_get_date + ( 0 ) + 2
008a2f bf6c     +OUT EIND , R22
008a30 9519     +EICALL
                 	__CALL1MN _prtc_get_date,0
008a31 81e8      	LD   R30,Y
008a32 81f9      	LDD  R31,Y+1
008a33 5bec      	SUBI R30,LOW(1980)
008a34 40f7      	SBCI R31,HIGH(1980)
008a35 2766      	CLR  R22
008a36 2777      	CLR  R23
008a37 01df      	MOVW R26,R30
008a38 01cb      	MOVW R24,R22
008a39 e1e9      	LDI  R30,LOW(25)
008a3a 940e b4d0 	CALL __LSLD12
008a3c 937f      	PUSH R23
008a3d 936f      	PUSH R22
008a3e 93ff      	PUSH R31
008a3f 93ef      	PUSH R30
008a40 81ea      	LDD  R30,Y+2
008a41 940e af20 	CALL SUBOPT_0x27B
008a43 01df      	MOVW R26,R30
008a44 01cb      	MOVW R24,R22
008a45 e1e5      	LDI  R30,LOW(21)
008a46 940e b4d0 	CALL __LSLD12
008a48 91af      	POP  R26
008a49 91bf      	POP  R27
008a4a 918f      	POP  R24
008a4b 919f      	POP  R25
008a4c 940e b4b6 	CALL __ORD12
008a4e 01df      	MOVW R26,R30
008a4f 01cb      	MOVW R24,R22
008a50 81eb      	LDD  R30,Y+3
008a51 940e af20 	CALL SUBOPT_0x27B
008a53 940e b517 	CALL __LSLD16
008a55 940e b4b6 	CALL __ORD12
008a57 937f      	PUSH R23
008a58 936f      	PUSH R22
008a59 93ff      	PUSH R31
008a5a 93ef      	PUSH R30
008a5b 81ee      	LDD  R30,Y+6
008a5c 940e af20 	CALL SUBOPT_0x27B
008a5e 01df      	MOVW R26,R30
008a5f 01cb      	MOVW R24,R22
008a60 e0eb      	LDI  R30,LOW(11)
008a61 940e b4d0 	CALL __LSLD12
008a63 91af      	POP  R26
008a64 91bf      	POP  R27
008a65 918f      	POP  R24
008a66 919f      	POP  R25
008a67 940e b4b6 	CALL __ORD12
008a69 937f      	PUSH R23
008a6a 936f      	PUSH R22
008a6b 93ff      	PUSH R31
008a6c 93ef      	PUSH R30
008a6d 81ed      	LDD  R30,Y+5
008a6e 940e af20 	CALL SUBOPT_0x27B
008a70 01df      	MOVW R26,R30
008a71 01cb      	MOVW R24,R22
008a72 e0e5      	LDI  R30,LOW(5)
008a73 940e b4d0 	CALL __LSLD12
008a75 91af      	POP  R26
008a76 91bf      	POP  R27
008a77 918f      	POP  R24
008a78 919f      	POP  R25
008a79 940e b4b6 	CALL __ORD12
008a7b 01df      	MOVW R26,R30
008a7c 01cb      	MOVW R24,R22
008a7d 81ec      	LDD  R30,Y+4
008a7e e0f0      	LDI  R31,0
008a7f 95f5      	ASR  R31
008a80 95e7      	ROR  R30
008a81 940e b522 	CALL __CWD1
008a83 940e b4b6 	CALL __ORD12
                 _0x20E0021:
008a85 9627      	ADIW R28,7
008a86 9508      	RET
                 _mem_cpy_G103:
008a87 940e a279 	CALL SUBOPT_0x6F
                +
008a89 8508     +LDD R16 , Y + 8
008a8a 8519     +LDD R17 , Y + 8 + 1
                 	__GETWRS 16,17,8
                +
008a8b 812e     +LDD R18 , Y + 6
008a8c 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                 _0x2060006:
008a8d 81ec      	LDD  R30,Y+4
008a8e 81fd      	LDD  R31,Y+4+1
008a8f 9731      	SBIW R30,1
008a90 83ec      	STD  Y+4,R30
008a91 83fd      	STD  Y+4+1,R31
008a92 9631      	ADIW R30,1
008a93 f061      	BREQ _0x2060008
008a94 931f      	PUSH R17
008a95 930f      	PUSH R16
                +
008a96 5f0f     +SUBI R16 , LOW ( - 1 )
008a97 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008a98 01d9      	MOVW R26,R18
                +
008a99 5f2f     +SUBI R18 , LOW ( - 1 )
008a9a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
008a9b 91ec      	LD   R30,X
008a9c 91af      	POP  R26
008a9d 91bf      	POP  R27
008a9e 93ec      	ST   X,R30
008a9f cfed      	RJMP _0x2060006
                 _0x2060008:
008aa0 940e b6a3 	CALL __LOADLOCR4
008aa2 c423      	RJMP _0x20E0018
                 _mem_set_G103:
008aa3 940e a285 	CALL SUBOPT_0x71
                +
008aa5 810e     +LDD R16 , Y + 6
008aa6 811f     +LDD R17 , Y + 6 + 1
                 	__GETWRS 16,17,6
                 _0x206000C:
008aa7 81ea      	LDD  R30,Y+2
008aa8 81fb      	LDD  R31,Y+2+1
008aa9 9731      	SBIW R30,1
008aaa 83ea      	STD  Y+2,R30
008aab 83fb      	STD  Y+2+1,R31
008aac 9631      	ADIW R30,1
008aad f049      	BREQ _0x206000E
008aae 931f      	PUSH R17
008aaf 930f      	PUSH R16
                +
008ab0 5f0f     +SUBI R16 , LOW ( - 1 )
008ab1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008ab2 81ec      	LDD  R30,Y+4
008ab3 91af      	POP  R26
008ab4 91bf      	POP  R27
008ab5 93ec      	ST   X,R30
008ab6 cff0      	RJMP _0x206000C
                 _0x206000E:
008ab7 8119      	LDD  R17,Y+1
008ab8 8108      	LDD  R16,Y+0
                 _0x20E0020:
008ab9 9628      	ADIW R28,8
008aba 9508      	RET
                 _mem_cmp_G103:
008abb 940e a962 	CALL SUBOPT_0x193
                +
008abd 850a     +LDD R16 , Y + 10
008abe 851b     +LDD R17 , Y + 10 + 1
                 	__GETWRS 16,17,10
                +
008abf 8528     +LDD R18 , Y + 8
008ac0 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                +
008ac1 e040     +LDI R20 , LOW ( 0 )
008ac2 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x206000F:
008ac3 81ee      	LDD  R30,Y+6
008ac4 81ff      	LDD  R31,Y+6+1
008ac5 9731      	SBIW R30,1
008ac6 83ee      	STD  Y+6,R30
008ac7 83ff      	STD  Y+6+1,R31
008ac8 9631      	ADIW R30,1
008ac9 f081      	BREQ _0x2060012
008aca 01d8      	MOVW R26,R16
                +
008acb 5f0f     +SUBI R16 , LOW ( - 1 )
008acc 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008acd 900c      	LD   R0,X
008ace 2411      	CLR  R1
008acf 01d9      	MOVW R26,R18
                +
008ad0 5f2f     +SUBI R18 , LOW ( - 1 )
008ad1 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
008ad2 91ac      	LD   R26,X
008ad3 27bb      	CLR  R27
008ad4 01f0      	MOVW R30,R0
008ad5 1bea      	SUB  R30,R26
008ad6 0bfb      	SBC  R31,R27
008ad7 01af      	MOVW R20,R30
008ad8 9730      	SBIW R30,0
008ad9 f009      	BREQ _0x2060013
                 _0x2060012:
008ada c001      	RJMP _0x2060011
                 _0x2060013:
008adb cfe7      	RJMP _0x206000F
                 _0x2060011:
                 _0x20E001F:
008adc 01fa      	MOVW R30,R20
                 _0x20E001E:
008add 940e b6a1 	CALL __LOADLOCR6
008adf 962c      	ADIW R28,12
008ae0 9508      	RET
                 _chk_chrf_G103:
008ae1 93ba      	ST   -Y,R27
008ae2 93aa      	ST   -Y,R26
                 _0x2060014:
008ae3 940e a3af 	CALL SUBOPT_0xA0
                +
008ae5 bf6b     +OUT RAMPZ , R22
008ae6 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
008ae7 30e0      	CPI  R30,0
008ae8 f051      	BREQ _0x2060017
008ae9 940e a3af 	CALL SUBOPT_0xA0
                +
008aeb bf6b     +OUT RAMPZ , R22
008aec 91a6     +ELPM R26 , Z
                 	__GETBRPF 26
008aed 81e8      	LD   R30,Y
008aee 81f9      	LDD  R31,Y+1
008aef e0b0      	LDI  R27,0
008af0 17ea      	CP   R30,R26
008af1 07fb      	CPC  R31,R27
008af2 f409      	BRNE _0x2060018
                 _0x2060017:
008af3 c005      	RJMP _0x2060016
                 _0x2060018:
008af4 01de      	MOVW R26,R28
008af5 9612      	ADIW R26,2
008af6 940e af24 	CALL SUBOPT_0x27C
008af8 cfea      	RJMP _0x2060014
                 _0x2060016:
008af9 940e a3af 	CALL SUBOPT_0xA0
                +
008afb bf6b     +OUT RAMPZ , R22
008afc 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
008afd e0f0      	LDI  R31,0
                 _0x20E001D:
008afe 9626      	ADIW R28,6
008aff 9508      	RET
                 _move_window_G103:
008b00 940e b62f 	CALL __PUTPARD2
008b02 9724      	SBIW R28,4
008b03 931a      	ST   -Y,R17
008b04 85a9      	LDD  R26,Y+9
008b05 85ba      	LDD  R27,Y+9+1
008b06 969e      	ADIW R26,46
008b07 940e af2c 	CALL SUBOPT_0x27D
008b09 940e af33 	CALL SUBOPT_0x27E
008b0b 940e ac06 	CALL SUBOPT_0x204
008b0d 940e b690 	CALL __CPD12
008b0f f411      	BRNE PC+3
008b10 940c 8b62 	JMP _0x2060019
008b12 85e9      	LDD  R30,Y+9
008b13 85fa      	LDD  R31,Y+9+1
008b14 81e4      	LDD  R30,Z+4
008b15 30e0      	CPI  R30,0
008b16 f199      	BREQ _0x206001A
008b17 940e af38 	CALL SUBOPT_0x27F
008b19 30e0      	CPI  R30,0
008b1a f011      	BREQ _0x206001B
008b1b e0e1      	LDI  R30,LOW(1)
008b1c c046      	RJMP _0x20E001C
                 _0x206001B:
008b1d 85a9      	LDD  R26,Y+9
008b1e 85ba      	LDD  R27,Y+9+1
008b1f 9614      	ADIW R26,4
008b20 e0e0      	LDI  R30,LOW(0)
008b21 93ec      	ST   X,R30
008b22 85e9      	LDD  R30,Y+9
008b23 85fa      	LDD  R31,Y+9+1
008b24 940e af48 	CALL SUBOPT_0x280
008b26 010d      	MOVW R0,R26
008b27 85a9      	LDD  R26,Y+9
008b28 85ba      	LDD  R27,Y+9+1
008b29 965a      	ADIW R26,26
008b2a 940e b5fa 	CALL __GETD1P
008b2c 01d0      	MOVW R26,R0
008b2d 940e b49d 	CALL __ADDD12
008b2f 940e ac06 	CALL SUBOPT_0x204
008b31 940e b695 	CALL __CPD21
008b33 f4b0      	BRSH _0x206001C
008b34 85e9      	LDD  R30,Y+9
008b35 85fa      	LDD  R31,Y+9+1
008b36 8113      	LDD  R17,Z+3
                 _0x206001E:
008b37 3012      	CPI  R17,2
008b38 f088      	BRLO _0x206001F
008b39 85a9      	LDD  R26,Y+9
008b3a 85ba      	LDD  R27,Y+9+1
008b3b 965a      	ADIW R26,26
008b3c 940e b5fa 	CALL __GETD1P
008b3e 940e ac06 	CALL SUBOPT_0x204
008b40 940e b49d 	CALL __ADDD12
                +
008b42 83e9     +STD Y + 1 , R30
008b43 83fa     +STD Y + 1 + 1 , R31
008b44 836b     +STD Y + 1 + 2 , R22
008b45 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
008b46 940e af38 	CALL SUBOPT_0x27F
008b48 5011      	SUBI R17,1
008b49 cfed      	RJMP _0x206001E
                 _0x206001F:
                 _0x206001C:
                 _0x206001A:
008b4a 940e af33 	CALL SUBOPT_0x27E
008b4c 940e b67e 	CALL __CPD10
008b4e f099      	BREQ _0x2060020
008b4f 85e9      	LDD  R30,Y+9
008b50 85fa      	LDD  R31,Y+9+1
008b51 81a1      	LDD  R26,Z+1
008b52 93aa      	ST   -Y,R26
008b53 85ea      	LDD  R30,Y+10
008b54 85fb      	LDD  R31,Y+10+1
008b55 96f2      	ADIW R30,50
008b56 940e af4d 	CALL SUBOPT_0x281
008b58 f011      	BREQ _0x2060021
008b59 e0e1      	LDI  R30,LOW(1)
008b5a c008      	RJMP _0x20E001C
                 _0x2060021:
008b5b 940e af33 	CALL SUBOPT_0x27E
                +
008b5d 85a9     +LDD R26 , Y + 9
008b5e 85ba     +LDD R27 , Y + 9 + 1
008b5f 969e     +ADIW R26 , 46
008b60 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 9,46
                 _0x2060020:
                 _0x2060019:
008b62 e0e0      	LDI  R30,LOW(0)
                 _0x20E001C:
008b63 8118      	LDD  R17,Y+0
008b64 962b      	ADIW R28,11
008b65 9508      	RET
                 _sync_G103:
008b66 93ba      	ST   -Y,R27
008b67 93aa      	ST   -Y,R26
008b68 931a      	ST   -Y,R17
008b69 81e9      	LDD  R30,Y+1
008b6a 81fa      	LDD  R31,Y+1+1
008b6b 940e af58 	CALL SUBOPT_0x282
008b6d 2f1e      	MOV  R17,R30
008b6e 3010      	CPI  R17,0
008b6f f011      	BREQ PC+3
008b70 940c 8bd4 	JMP _0x2060022
008b72 81a9      	LDD  R26,Y+1
008b73 81ba      	LDD  R27,Y+1+1
008b74 91ac      	LD   R26,X
008b75 30a3      	CPI  R26,LOW(0x3)
008b76 f429      	BRNE _0x2060024
008b77 81e9      	LDD  R30,Y+1
008b78 81fa      	LDD  R31,Y+1+1
008b79 81e5      	LDD  R30,Z+5
008b7a 30e0      	CPI  R30,0
008b7b f409      	BRNE _0x2060025
                 _0x2060024:
008b7c c04b      	RJMP _0x2060023
                 _0x2060025:
008b7d 81a9      	LDD  R26,Y+1
008b7e 81ba      	LDD  R27,Y+1+1
008b7f 969e      	ADIW R26,46
008b80 940e a2c9 	CALL SUBOPT_0x7C
008b82 81e9      	LDD  R30,Y+1
008b83 81fa      	LDD  R31,Y+1+1
008b84 940e af60 	CALL SUBOPT_0x283
008b86 81e9      	LDD  R30,Y+1
008b87 81fa      	LDD  R31,Y+1+1
008b88 96f2      	ADIW R30,50
008b89 50e2      	SUBI R30,LOW(-510)
008b8a 4ffe      	SBCI R31,HIGH(-510)
008b8b e5a5      	LDI  R26,LOW(43605)
008b8c eaba      	LDI  R27,HIGH(43605)
008b8d 83a0      	STD  Z+0,R26
008b8e 83b1      	STD  Z+1,R27
008b8f 81e9      	LDD  R30,Y+1
008b90 81fa      	LDD  R31,Y+1+1
008b91 96f2      	ADIW R30,50
                +
008b92 e5a2     +LDI R26 , LOW ( 0x41615252 )
008b93 e5b2     +LDI R27 , HIGH ( 0x41615252 )
008b94 e681     +LDI R24 , BYTE3 ( 0x41615252 )
008b95 e491     +LDI R25 , BYTE4 ( 0x41615252 )
                 	__GETD2N 0x41615252
008b96 940e aaf1 	CALL SUBOPT_0x1D8
008b98 81e9      	LDD  R30,Y+1
008b99 81fa      	LDD  R31,Y+1+1
008b9a 96f2      	ADIW R30,50
008b9b 51ec      	SUBI R30,LOW(-484)
008b9c 4ffe      	SBCI R31,HIGH(-484)
                +
008b9d e7a2     +LDI R26 , LOW ( 0x61417272 )
008b9e e7b2     +LDI R27 , HIGH ( 0x61417272 )
008b9f e481     +LDI R24 , BYTE3 ( 0x61417272 )
008ba0 e691     +LDI R25 , BYTE4 ( 0x61417272 )
                 	__GETD2N 0x61417272
008ba1 940e aaf1 	CALL SUBOPT_0x1D8
008ba3 81e9      	LDD  R30,Y+1
008ba4 81fa      	LDD  R31,Y+1+1
008ba5 96f2      	ADIW R30,50
008ba6 51e8      	SUBI R30,LOW(-488)
008ba7 4ffe      	SBCI R31,HIGH(-488)
008ba8 010f      	MOVW R0,R30
008ba9 81a9      	LDD  R26,Y+1
008baa 81ba      	LDD  R27,Y+1+1
008bab 961e      	ADIW R26,14
008bac 940e af6b 	CALL SUBOPT_0x284
008bae 96f2      	ADIW R30,50
008baf 51e4      	SUBI R30,LOW(-492)
008bb0 4ffe      	SBCI R31,HIGH(-492)
008bb1 010f      	MOVW R0,R30
008bb2 81a9      	LDD  R26,Y+1
008bb3 81ba      	LDD  R27,Y+1+1
008bb4 961a      	ADIW R26,10
008bb5 940e af6b 	CALL SUBOPT_0x284
008bb7 81a1      	LDD  R26,Z+1
008bb8 93aa      	ST   -Y,R26
008bb9 81ea      	LDD  R30,Y+2
008bba 81fb      	LDD  R31,Y+2+1
008bbb 96f2      	ADIW R30,50
008bbc 93fa      	ST   -Y,R31
008bbd 93ea      	ST   -Y,R30
008bbe 81ec      	LDD  R30,Y+4
008bbf 81fd      	LDD  R31,Y+4+1
008bc0 940e af73 	CALL SUBOPT_0x285
008bc2 dc00      	RCALL _disk_write
008bc3 81a9      	LDD  R26,Y+1
008bc4 81ba      	LDD  R27,Y+1+1
008bc5 9615      	ADIW R26,5
008bc6 e0e0      	LDI  R30,LOW(0)
008bc7 93ec      	ST   X,R30
                 _0x2060023:
008bc8 81e9      	LDD  R30,Y+1
008bc9 81fa      	LDD  R31,Y+1+1
008bca 81a1      	LDD  R26,Z+1
008bcb 93aa      	ST   -Y,R26
008bcc e0e0      	LDI  R30,LOW(0)
008bcd 93ea      	ST   -Y,R30
008bce e0a0      	LDI  R26,LOW(0)
008bcf e0b0      	LDI  R27,HIGH(0)
008bd0 dc69      	RCALL _disk_ioctl
008bd1 30e0      	CPI  R30,0
008bd2 f009      	BREQ _0x2060026
008bd3 e011      	LDI  R17,LOW(1)
                 _0x2060026:
                 _0x2060022:
008bd4 2fe1      	MOV  R30,R17
                 _0x20E001B:
008bd5 8118      	LDD  R17,Y+0
008bd6 9623      	ADIW R28,3
008bd7 9508      	RET
                 _get_fat:
008bd8 940e b62f 	CALL __PUTPARD2
008bda 9724      	SBIW R28,4
008bdb 940e b69c 	CALL __SAVELOCR4
008bdd 940e a492 	CALL SUBOPT_0xC5
008bdf 940e af7b 	CALL SUBOPT_0x286
008be1 f050      	BRLO _0x2060028
008be2 85ac      	LDD  R26,Y+12
008be3 85bd      	LDD  R27,Y+12+1
008be4 965e      	ADIW R26,30
008be5 940e b5fa 	CALL __GETD1P
008be7 940e a492 	CALL SUBOPT_0xC5
008be9 940e b695 	CALL __CPD21
008beb f018      	BRLO _0x2060027
                 _0x2060028:
008bec 940e af83 	CALL SUBOPT_0x287
008bee c061      	RJMP _0x20E001A
                 _0x2060027:
008bef 85ac      	LDD  R26,Y+12
008bf0 85bd      	LDD  R27,Y+12+1
008bf1 9692      	ADIW R26,34
008bf2 940e af88 	CALL SUBOPT_0x288
008bf4 85ac      	LDD  R26,Y+12
008bf5 85bd      	LDD  R27,Y+12+1
008bf6 91ec      	LD   R30,X
008bf7 940e a93c 	CALL SUBOPT_0x18C
008bf9 f541      	BRNE _0x206002D
                +
008bfa 8528     +LDD R18 , Y + 8
008bfb 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
008bfc 01f9      	MOVW R30,R18
008bfd 95f6      	LSR  R31
008bfe 95e7      	ROR  R30
                +
008bff 0f2e     +ADD R18 , R30
008c00 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
008c01 940e af8c 	CALL SUBOPT_0x289
008c03 f009      	BREQ _0x206002E
008c04 c049      	RJMP _0x206002C
                 _0x206002E:
008c05 940e af9f 	CALL SUBOPT_0x28A
008c07 910c      	LD   R16,X
008c08 2711      	CLR  R17
                +
008c09 5f2f     +SUBI R18 , LOW ( - 1 )
008c0a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
008c0b 940e af8c 	CALL SUBOPT_0x289
008c0d f009      	BREQ _0x206002F
008c0e c03f      	RJMP _0x206002C
                 _0x206002F:
008c0f 940e af9f 	CALL SUBOPT_0x28A
008c11 91ec      	LD   R30,X
008c12 2ffe      	MOV  R31,R30
008c13 e0e0      	LDI  R30,0
                +
008c14 2b0e     +OR R16 , R30
008c15 2b1f     +OR R17 , R31
                 	__ORWRR 16,17,30,31
008c16 85e8      	LDD  R30,Y+8
008c17 70e1      	ANDI R30,LOW(0x1)
008c18 f021      	BREQ _0x2060030
008c19 01f8      	MOVW R30,R16
008c1a 940e b4fa 	CALL __LSRW4
008c1c c002      	RJMP _0x206022B
                 _0x2060030:
008c1d 01f8      	MOVW R30,R16
008c1e 70ff      	ANDI R31,HIGH(0xFFF)
                 _0x206022B:
008c1f 2766      	CLR  R22
008c20 2777      	CLR  R23
008c21 c02e      	RJMP _0x20E001A
                 _0x206002D:
008c22 30e2      	CPI  R30,LOW(0x2)
008c23 e0a0      	LDI  R26,HIGH(0x2)
008c24 07fa      	CPC  R31,R26
008c25 f489      	BRNE _0x2060033
008c26 940e afa7 	CALL SUBOPT_0x28B
008c28 940e afad 	CALL SUBOPT_0x28C
008c2a 940e afb4 	CALL SUBOPT_0x28D
008c2c f509      	BRNE _0x206002C
008c2d 85a8      	LDD  R26,Y+8
008c2e 85b9      	LDD  R27,Y+8+1
008c2f e0e2      	LDI  R30,LOW(2)
008c30 940e afbc 	CALL SUBOPT_0x28E
008c32 0fae      	ADD  R26,R30
008c33 1fbf      	ADC  R27,R31
008c34 940e a029 	CALL SUBOPT_0x1C
008c36 c019      	RJMP _0x20E001A
                 _0x2060033:
008c37 30e3      	CPI  R30,LOW(0x3)
008c38 e0a0      	LDI  R26,HIGH(0x3)
008c39 07fa      	CPC  R31,R26
008c3a f499      	BRNE _0x206002C
008c3b 940e afa7 	CALL SUBOPT_0x28B
008c3d 940e afc3 	CALL SUBOPT_0x28F
008c3f 940e afb4 	CALL SUBOPT_0x28D
008c41 f461      	BRNE _0x206002C
008c42 85a8      	LDD  R26,Y+8
008c43 85b9      	LDD  R27,Y+8+1
008c44 e0e4      	LDI  R30,LOW(4)
008c45 940e afbc 	CALL SUBOPT_0x28E
008c47 940e a019 	CALL SUBOPT_0x19
                +
008c49 7fef     +ANDI R30 , LOW ( 0xFFFFFFF )
008c4a 7fff     +ANDI R31 , HIGH ( 0xFFFFFFF )
008c4b 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFFF )
008c4c 707f     +ANDI R23 , BYTE4 ( 0xFFFFFFF )
                 	__ANDD1N 0xFFFFFFF
008c4d c002      	RJMP _0x20E001A
                 _0x206002C:
008c4e 940e a054 	CALL SUBOPT_0x23
                 _0x20E001A:
008c50 940e b6a3 	CALL __LOADLOCR4
008c52 962e      	ADIW R28,14
008c53 9508      	RET
                 _put_fat:
008c54 940e b62f 	CALL __PUTPARD2
008c56 9724      	SBIW R28,4
008c57 940e b69a 	CALL __SAVELOCR6
008c59 940e aaec 	CALL SUBOPT_0x1D7
008c5b 940e af7b 	CALL SUBOPT_0x286
008c5d f050      	BRLO _0x2060038
008c5e 89aa      	LDD  R26,Y+18
008c5f 89bb      	LDD  R27,Y+18+1
008c60 965e      	ADIW R26,30
008c61 940e b5fa 	CALL __GETD1P
008c63 940e aaec 	CALL SUBOPT_0x1D7
008c65 940e b695 	CALL __CPD21
008c67 f010      	BRLO _0x2060037
                 _0x2060038:
008c68 e052      	LDI  R21,LOW(2)
008c69 c08a      	RJMP _0x206003A
                 _0x2060037:
008c6a 89aa      	LDD  R26,Y+18
008c6b 89bb      	LDD  R27,Y+18+1
008c6c 9692      	ADIW R26,34
008c6d 940e b5fa 	CALL __GETD1P
008c6f 940e a3be 	CALL SUBOPT_0xA3
008c71 89aa      	LDD  R26,Y+18
008c72 89bb      	LDD  R27,Y+18+1
008c73 91ec      	LD   R30,X
008c74 940e a93c 	CALL SUBOPT_0x18C
008c76 f011      	BREQ PC+3
008c77 940c 8cc0 	JMP _0x206003E
                +
008c79 850e     +LDD R16 , Y + 14
008c7a 851f     +LDD R17 , Y + 14 + 1
                 	__GETWRS 16,17,14
008c7b 01f8      	MOVW R30,R16
008c7c 95f6      	LSR  R31
008c7d 95e7      	ROR  R30
                +
008c7e 0f0e     +ADD R16 , R30
008c7f 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
008c80 940e ac9e 	CALL SUBOPT_0x21B
008c82 940e afca 	CALL SUBOPT_0x290
008c84 f009      	BREQ _0x206003F
008c85 c069      	RJMP _0x206003D
                 _0x206003F:
008c86 940e afda 	CALL SUBOPT_0x291
008c88 f051      	BREQ _0x2060040
008c89 01d9      	MOVW R26,R18
008c8a 91ec      	LD   R30,X
008c8b 70ef      	ANDI R30,LOW(0xF)
008c8c 2fae      	MOV  R26,R30
008c8d 85ea      	LDD  R30,Y+10
008c8e e0f0      	LDI  R31,0
008c8f 940e b4e8 	CALL __LSLW4
008c91 2bea      	OR   R30,R26
008c92 c001      	RJMP _0x2060041
                 _0x2060040:
008c93 85ea      	LDD  R30,Y+10
                 _0x2060041:
008c94 01d9      	MOVW R26,R18
008c95 93ec      	ST   X,R30
                +
008c96 5f0f     +SUBI R16 , LOW ( - 1 )
008c97 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008c98 89aa      	LDD  R26,Y+18
008c99 89bb      	LDD  R27,Y+18+1
008c9a 9614      	ADIW R26,4
008c9b e0e1      	LDI  R30,LOW(1)
008c9c 93ec      	ST   X,R30
008c9d 940e ac9e 	CALL SUBOPT_0x21B
008c9f 940e afca 	CALL SUBOPT_0x290
008ca1 f009      	BREQ _0x2060043
008ca2 c04c      	RJMP _0x206003D
                 _0x2060043:
008ca3 940e afda 	CALL SUBOPT_0x291
008ca5 f049      	BREQ _0x2060044
008ca6 940e a13a 	CALL SUBOPT_0x42
008ca8 e0e4      	LDI  R30,LOW(4)
008ca9 940e b4dc 	CALL __LSRD12
008cab 27ff      	CLR  R31
008cac 2766      	CLR  R22
008cad 2777      	CLR  R23
008cae c00e      	RJMP _0x2060045
                 _0x2060044:
008caf 01d9      	MOVW R26,R18
008cb0 91ec      	LD   R30,X
008cb1 7fe0      	ANDI R30,LOW(0xF0)
008cb2 2e1e      	MOV  R1,R30
008cb3 940e a13a 	CALL SUBOPT_0x42
008cb5 e0e8      	LDI  R30,LOW(8)
008cb6 940e b4dc 	CALL __LSRD12
008cb8 27ff      	CLR  R31
008cb9 2766      	CLR  R22
008cba 2777      	CLR  R23
008cbb 70ef      	ANDI R30,LOW(0xF)
008cbc 29e1      	OR   R30,R1
                 _0x2060045:
008cbd 01d9      	MOVW R26,R18
008cbe 93ec      	ST   X,R30
008cbf c02f      	RJMP _0x206003D
                 _0x206003E:
008cc0 30e2      	CPI  R30,LOW(0x2)
008cc1 e0a0      	LDI  R26,HIGH(0x2)
008cc2 07fa      	CPC  R31,R26
008cc3 f4a9      	BRNE _0x2060047
008cc4 940e ac9e 	CALL SUBOPT_0x21B
008cc6 940e afe5 	CALL SUBOPT_0x292
008cc8 940e afad 	CALL SUBOPT_0x28C
008cca 940e afea 	CALL SUBOPT_0x293
008ccc f511      	BRNE _0x206003D
008ccd 85ae      	LDD  R26,Y+14
008cce 85bf      	LDD  R27,Y+14+1
008ccf e0e2      	LDI  R30,LOW(2)
008cd0 940e aff3 	CALL SUBOPT_0x294
008cd2 0fea      	ADD  R30,R26
008cd3 1ffb      	ADC  R31,R27
008cd4 85aa      	LDD  R26,Y+10
008cd5 85bb      	LDD  R27,Y+10+1
008cd6 83a0      	STD  Z+0,R26
008cd7 83b1      	STD  Z+1,R27
008cd8 c016      	RJMP _0x206003D
                 _0x2060047:
008cd9 30e3      	CPI  R30,LOW(0x3)
008cda e0a0      	LDI  R26,HIGH(0x3)
008cdb 07fa      	CPC  R31,R26
008cdc f489      	BRNE _0x206004B
008cdd 940e ac9e 	CALL SUBOPT_0x21B
008cdf 940e afe5 	CALL SUBOPT_0x292
008ce1 940e afc3 	CALL SUBOPT_0x28F
008ce3 940e afea 	CALL SUBOPT_0x293
008ce5 f449      	BRNE _0x206003D
008ce6 85ae      	LDD  R26,Y+14
008ce7 85bf      	LDD  R27,Y+14+1
008ce8 e0e4      	LDI  R30,LOW(4)
008ce9 940e aff3 	CALL SUBOPT_0x294
008ceb 940e aad8 	CALL SUBOPT_0x1D3
008ced c001      	RJMP _0x206003D
                 _0x206004B:
008cee e052      	LDI  R21,LOW(2)
                 _0x206003D:
008cef 89aa      	LDD  R26,Y+18
008cf0 89bb      	LDD  R27,Y+18+1
008cf1 9614      	ADIW R26,4
008cf2 e0e1      	LDI  R30,LOW(1)
008cf3 93ec      	ST   X,R30
                 _0x206003A:
008cf4 2fe5      	MOV  R30,R21
008cf5 940e b6a1 	CALL __LOADLOCR6
008cf7 9664      	ADIW R28,20
008cf8 9508      	RET
                 _remove_chain_G103:
008cf9 940e b62f 	CALL __PUTPARD2
008cfb 9724      	SBIW R28,4
008cfc 931a      	ST   -Y,R17
008cfd 940e affa 	CALL SUBOPT_0x295
008cff 940e af7b 	CALL SUBOPT_0x286
008d01 f018      	BRLO _0x206004D
008d02 940e afff 	CALL SUBOPT_0x296
008d04 f010      	BRLO _0x206004C
                 _0x206004D:
008d05 e012      	LDI  R17,LOW(2)
008d06 c03e      	RJMP _0x206004F
                 _0x206004C:
008d07 e010      	LDI  R17,LOW(0)
                 _0x2060050:
008d08 940e afff 	CALL SUBOPT_0x296
008d0a f5d0      	BRSH _0x2060052
008d0b 940e a8f1 	CALL SUBOPT_0x17E
008d0d 940e a1c6 	CALL SUBOPT_0x57
008d0f dec8      	RCALL _get_fat
                +
008d10 83e9     +STD Y + 1 , R30
008d11 83fa     +STD Y + 1 + 1 , R31
008d12 836b     +STD Y + 1 + 2 , R22
008d13 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
008d14 940e b008 	CALL SUBOPT_0x297
008d16 940e b67e 	CALL __CPD10
008d18 f161      	BREQ _0x2060052
008d19 940e ac06 	CALL SUBOPT_0x204
008d1b 940e b00d 	CALL SUBOPT_0x298
008d1d f411      	BRNE _0x2060054
008d1e e012      	LDI  R17,LOW(2)
008d1f c025      	RJMP _0x2060052
                 _0x2060054:
008d20 940e ac06 	CALL SUBOPT_0x204
008d22 940e a091 	CALL SUBOPT_0x2B
008d24 f411      	BRNE _0x2060055
008d25 e011      	LDI  R17,LOW(1)
008d26 c01e      	RJMP _0x2060052
                 _0x2060055:
008d27 940e a8f1 	CALL SUBOPT_0x17E
008d29 940e a0ca 	CALL SUBOPT_0x31
008d2b 940e b015 	CALL SUBOPT_0x299
008d2d df26      	RCALL _put_fat
008d2e 2f1e      	MOV  R17,R30
008d2f 3010      	CPI  R17,0
008d30 f4a1      	BRNE _0x2060052
008d31 85e9      	LDD  R30,Y+9
008d32 85fa      	LDD  R31,Y+9+1
008d33 940e b01a 	CALL SUBOPT_0x29A
008d35 f051      	BREQ _0x2060057
008d36 85a9      	LDD  R26,Y+9
008d37 85ba      	LDD  R27,Y+9+1
008d38 961e      	ADIW R26,14
008d39 940e a2f0 	CALL SUBOPT_0x80
008d3b 85a9      	LDD  R26,Y+9
008d3c 85ba      	LDD  R27,Y+9+1
008d3d 9615      	ADIW R26,5
008d3e e0e1      	LDI  R30,LOW(1)
008d3f 93ec      	ST   X,R30
                 _0x2060057:
008d40 940e b008 	CALL SUBOPT_0x297
008d42 940e b020 	CALL SUBOPT_0x29B
008d44 cfc3      	RJMP _0x2060050
                 _0x2060052:
                 _0x206004F:
008d45 2fe1      	MOV  R30,R17
008d46 8118      	LDD  R17,Y+0
008d47 c26d      	RJMP _0x20E0016
                 _create_chain_G103:
008d48 940e b62f 	CALL __PUTPARD2
008d4a 9760      	SBIW R28,16
008d4b 89ac      	LDD  R26,Y+20
008d4c 89bd      	LDD  R27,Y+20+1
008d4d 965e      	ADIW R26,30
008d4e 940e b5fa 	CALL __GETD1P
008d50 940e a34c 	CALL SUBOPT_0x8D
008d52 940e 9faa 	CALL SUBOPT_0xA
008d54 940e b67e 	CALL __CPD10
008d56 f4b1      	BRNE _0x2060058
008d57 89ac      	LDD  R26,Y+20
008d58 89bd      	LDD  R27,Y+20+1
008d59 961a      	ADIW R26,10
008d5a 940e af88 	CALL SUBOPT_0x288
008d5c 940e a37b 	CALL SUBOPT_0x96
008d5e 940e b68a 	CALL __CPD02
008d60 f039      	BREQ _0x206005A
008d61 940e a2a0 	CALL SUBOPT_0x75
008d63 940e a37b 	CALL SUBOPT_0x96
008d65 940e b695 	CALL __CPD21
008d67 f020      	BRLO _0x2060059
                 _0x206005A:
008d68 940e af83 	CALL SUBOPT_0x287
008d6a 940e a376 	CALL SUBOPT_0x95
                 _0x2060059:
008d6c c01d      	RJMP _0x206005C
                 _0x2060058:
008d6d 940e b025 	CALL SUBOPT_0x29C
008d6f 940e b02a 	CALL SUBOPT_0x29D
008d71 de66      	RCALL _get_fat
008d72 940e a503 	CALL SUBOPT_0xD6
008d74 940e 9fa5 	CALL SUBOPT_0x9
008d76 940e af7b 	CALL SUBOPT_0x286
008d78 f418      	BRSH _0x206005D
008d79 940e af83 	CALL SUBOPT_0x287
008d7b c085      	RJMP _0x20E0019
                 _0x206005D:
008d7c 940e a2a0 	CALL SUBOPT_0x75
008d7e 940e 9fa5 	CALL SUBOPT_0x9
008d80 940e b695 	CALL __CPD21
008d82 f418      	BRSH _0x206005E
008d83 940e a497 	CALL SUBOPT_0xC6
008d85 c07b      	RJMP _0x20E0019
                 _0x206005E:
008d86 940e 9faa 	CALL SUBOPT_0xA
008d88 940e a376 	CALL SUBOPT_0x95
                 _0x206005C:
008d8a 940e a2ac 	CALL SUBOPT_0x77
008d8c 940e adaf 	CALL SUBOPT_0x23C
                 _0x2060060:
008d8e 940e a118 	CALL SUBOPT_0x3E
008d90 940e a3e0 	CALL SUBOPT_0xA9
008d92 940e adaf 	CALL SUBOPT_0x23C
008d94 940e a2a0 	CALL SUBOPT_0x75
008d96 940e a492 	CALL SUBOPT_0xC5
008d98 940e b695 	CALL __CPD21
008d9a f050      	BRLO _0x2060062
008d9b 940e b02f 	CALL SUBOPT_0x29E
008d9d 940e adaf 	CALL SUBOPT_0x23C
008d9f 940e b034 	CALL SUBOPT_0x29F
008da1 f418      	BRSH _0x2060063
008da2 940e b03b 	CALL SUBOPT_0x2A0
008da4 c05c      	RJMP _0x20E0019
                 _0x2060063:
                 _0x2060062:
008da5 940e b025 	CALL SUBOPT_0x29C
008da7 940e a13a 	CALL SUBOPT_0x42
008da9 de2e      	RCALL _get_fat
008daa 940e a50d 	CALL SUBOPT_0xD8
008dac 940e b67e 	CALL __CPD10
008dae f091      	BREQ _0x2060061
008daf 940e a17e 	CALL SUBOPT_0x4C
008db1 f029      	BREQ _0x2060066
008db2 940e 9fa5 	CALL SUBOPT_0x9
008db4 940e b00d 	CALL SUBOPT_0x298
008db6 f419      	BRNE _0x2060065
                 _0x2060066:
008db7 940e a497 	CALL SUBOPT_0xC6
008db9 c047      	RJMP _0x20E0019
                 _0x2060065:
008dba 940e b034 	CALL SUBOPT_0x29F
008dbc f419      	BRNE _0x2060068
008dbd 940e b03b 	CALL SUBOPT_0x2A0
008dbf c041      	RJMP _0x20E0019
                 _0x2060068:
008dc0 cfcd      	RJMP _0x2060060
                 _0x2060061:
008dc1 940e b025 	CALL SUBOPT_0x29C
008dc3 940e a486 	CALL SUBOPT_0xC2
008dc5 940e b62a 	CALL __PUTPARD1
                +
008dc7 efaf     +LDI R26 , LOW ( 0xFFFFFFF )
008dc8 efbf     +LDI R27 , HIGH ( 0xFFFFFFF )
008dc9 ef8f     +LDI R24 , BYTE3 ( 0xFFFFFFF )
008dca e09f     +LDI R25 , BYTE4 ( 0xFFFFFFF )
                 	__GETD2N 0xFFFFFFF
008dcb de88      	RCALL _put_fat
008dcc 30e0      	CPI  R30,0
008dcd f019      	BREQ _0x2060069
008dce 940e a054 	CALL SUBOPT_0x23
008dd0 c030      	RJMP _0x20E0019
                 _0x2060069:
008dd1 940e 9faa 	CALL SUBOPT_0xA
008dd3 940e b67e 	CALL __CPD10
008dd5 f071      	BREQ _0x206006A
008dd6 940e b025 	CALL SUBOPT_0x29C
008dd8 940e a481 	CALL SUBOPT_0xC1
008dda 940e b62a 	CALL __PUTPARD1
008ddc 940e aaec 	CALL SUBOPT_0x1D7
008dde de75      	RCALL _put_fat
008ddf 30e0      	CPI  R30,0
008de0 f019      	BREQ _0x206006B
008de1 940e a054 	CALL SUBOPT_0x23
008de3 c01d      	RJMP _0x20E0019
                 _0x206006B:
                 _0x206006A:
008de4 940e a118 	CALL SUBOPT_0x3E
                +
008de6 89ac     +LDD R26 , Y + 20
008de7 89bd     +LDD R27 , Y + 20 + 1
008de8 961a     +ADIW R26 , 10
008de9 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 20,10
008deb 89ec      	LDD  R30,Y+20
008dec 89fd      	LDD  R31,Y+20+1
008ded 940e b01a 	CALL SUBOPT_0x29A
008def f079      	BREQ _0x206006C
008df0 89ac      	LDD  R26,Y+20
008df1 89bd      	LDD  R27,Y+20+1
008df2 961e      	ADIW R26,14
008df3 940e b600 	CALL __GETD1P_INC
008df5 9731      	SBIW R30,1
008df6 4060      	SBCI R22,0
008df7 4070      	SBCI R23,0
008df8 940e b60a 	CALL __PUTDP1_DEC
008dfa 89ac      	LDD  R26,Y+20
008dfb 89bd      	LDD  R27,Y+20+1
008dfc 9615      	ADIW R26,5
008dfd e0e1      	LDI  R30,LOW(1)
008dfe 93ec      	ST   X,R30
                 _0x206006C:
008dff 940e a118 	CALL SUBOPT_0x3E
                 _0x20E0019:
008e01 9666      	ADIW R28,22
008e02 9508      	RET
                 _clust2sect:
008e03 940e b62f 	CALL __PUTPARD2
008e05 940e a2a0 	CALL SUBOPT_0x75
                +
008e07 50e2     +SUBI R30 , LOW ( 2 )
008e08 40f0     +SBCI R31 , HIGH ( 2 )
008e09 4060     +SBCI R22 , BYTE3 ( 2 )
008e0a 4070     +SBCI R23 , BYTE4 ( 2 )
                 	__SUBD1N 2
008e0b 940e a34c 	CALL SUBOPT_0x8D
008e0d 81ec      	LDD  R30,Y+4
008e0e 81fd      	LDD  R31,Y+4+1
                +
008e0f 8da6     +LDD R26 , Z + 30
008e10 8db7     +LDD R27 , Z + 30 + 1
008e11 a180     +LDD R24 , Z + 30 + 2
008e12 a191     +LDD R25 , Z + 30 + 3
                 	__GETD2Z 30
008e13 940e b02f 	CALL SUBOPT_0x29E
008e15 940e a3f6 	CALL SUBOPT_0xAD
008e17 940e a2bf 	CALL SUBOPT_0x7A
008e19 940e b695 	CALL __CPD21
008e1b f018      	BRLO _0x206006D
008e1c 940e b03b 	CALL SUBOPT_0x2A0
008e1e c385      	RJMP _0x20E0012
                 _0x206006D:
008e1f 81ec      	LDD  R30,Y+4
008e20 81fd      	LDD  R31,Y+4+1
008e21 940e ac03 	CALL SUBOPT_0x203
008e23 940e a2bf 	CALL SUBOPT_0x7A
008e25 940e ac0b 	CALL SUBOPT_0x205
008e27 937f      	PUSH R23
008e28 936f      	PUSH R22
008e29 93ff      	PUSH R31
008e2a 93ef      	PUSH R30
008e2b 81ac      	LDD  R26,Y+4
008e2c 81bd      	LDD  R27,Y+4+1
008e2d 969a      	ADIW R26,42
008e2e 940e b5fa 	CALL __GETD1P
008e30 91af      	POP  R26
008e31 91bf      	POP  R27
008e32 918f      	POP  R24
008e33 919f      	POP  R25
008e34 940e b49d 	CALL __ADDD12
008e36 c36d      	RJMP _0x20E0012
                 _dir_seek_G103:
008e37 940e a518 	CALL SUBOPT_0xDA
008e39 930a      	ST   -Y,R16
008e3a 81ee      	LDD  R30,Y+6
008e3b 81ff      	LDD  R31,Y+6+1
                +
008e3c 85a8     +LDD R26 , Y + 8
008e3d 85b9     +LDD R27 , Y + 8 + 1
008e3e 9614     +ADIW R26 , 4
008e3f 93ed     +ST X + , R30
008e40 93fc     +ST X , R31
                 	__PUTW1SNS 8,4
008e41 85a8      	LDD  R26,Y+8
008e42 85b9      	LDD  R27,Y+8+1
008e43 9616      	ADIW R26,6
008e44 940e b5fa 	CALL __GETD1P
008e46 940e a51d 	CALL SUBOPT_0xDB
008e48 940e b00d 	CALL SUBOPT_0x298
008e4a f029      	BREQ _0x206006F
008e4b 940e b040 	CALL SUBOPT_0x2A1
008e4d 940e b045 	CALL SUBOPT_0x2A2
008e4f f010      	BRLO _0x206006E
                 _0x206006F:
008e50 e0e2      	LDI  R30,LOW(2)
008e51 c072      	RJMP _0x20E0017
                 _0x206006E:
008e52 940e aa43 	CALL SUBOPT_0x1BC
008e54 f429      	BRNE _0x2060072
008e55 940e b040 	CALL SUBOPT_0x2A1
008e57 81a0      	LD   R26,Z
008e58 30a3      	CPI  R26,LOW(0x3)
008e59 f009      	BREQ _0x2060073
                 _0x2060072:
008e5a c008      	RJMP _0x2060071
                 _0x2060073:
008e5b 940e b040 	CALL SUBOPT_0x2A1
008e5d 96b6      	ADIW R30,38
008e5e 01df      	MOVW R26,R30
008e5f 940e b5fa 	CALL __GETD1P
008e61 940e a3aa 	CALL SUBOPT_0x9F
                 _0x2060071:
008e63 940e aa43 	CALL SUBOPT_0x1BC
008e65 f481      	BRNE _0x2060074
008e66 940e b04e 	CALL SUBOPT_0x2A3
008e68 9638      	ADIW R30,8
008e69 01df      	MOVW R26,R30
008e6a 940e a887 	CALL SUBOPT_0x16B
008e6c f010      	BRLO _0x2060075
008e6d e0e2      	LDI  R30,LOW(2)
008e6e c055      	RJMP _0x20E0017
                 _0x2060075:
008e6f 940e b040 	CALL SUBOPT_0x2A1
008e71 96b6      	ADIW R30,38
008e72 01df      	MOVW R26,R30
008e73 940e b5fa 	CALL __GETD1P
008e75 c033      	RJMP _0x206022C
                 _0x2060074:
008e76 940e b040 	CALL SUBOPT_0x2A1
008e78 81e2      	LDD  R30,Z+2
008e79 e1a0      	LDI  R26,LOW(16)
008e7a 9fea      	MUL  R30,R26
008e7b 0180      	MOVW R16,R0
                 _0x2060077:
008e7c 81ae      	LDD  R26,Y+6
008e7d 81bf      	LDD  R27,Y+6+1
008e7e 17a0      	CP   R26,R16
008e7f 07b1      	CPC  R27,R17
008e80 f108      	BRLO _0x2060079
008e81 940e b040 	CALL SUBOPT_0x2A1
008e83 93fa      	ST   -Y,R31
008e84 93ea      	ST   -Y,R30
008e85 940e a37b 	CALL SUBOPT_0x96
008e87 dd50      	RCALL _get_fat
008e88 940e a51d 	CALL SUBOPT_0xDB
008e8a 940e a091 	CALL SUBOPT_0x2B
008e8c f411      	BRNE _0x206007A
008e8d e0e1      	LDI  R30,LOW(1)
008e8e c035      	RJMP _0x20E0017
                 _0x206007A:
008e8f 940e a3b4 	CALL SUBOPT_0xA1
008e91 940e af7b 	CALL SUBOPT_0x286
008e93 f028      	BRLO _0x206007C
008e94 940e b040 	CALL SUBOPT_0x2A1
008e96 940e b045 	CALL SUBOPT_0x2A2
008e98 f010      	BRLO _0x206007B
                 _0x206007C:
008e99 e0e2      	LDI  R30,LOW(2)
008e9a c029      	RJMP _0x20E0017
                 _0x206007B:
008e9b 81ee      	LDD  R30,Y+6
008e9c 81ff      	LDD  R31,Y+6+1
008e9d 1be0      	SUB  R30,R16
008e9e 0bf1      	SBC  R31,R17
008e9f 83ee      	STD  Y+6,R30
008ea0 83ff      	STD  Y+6+1,R31
008ea1 cfda      	RJMP _0x2060077
                 _0x2060079:
008ea2 940e b04e 	CALL SUBOPT_0x2A3
008ea4 93fa      	ST   -Y,R31
008ea5 93ea      	ST   -Y,R30
008ea6 940e a37b 	CALL SUBOPT_0x96
008ea8 df5a      	RCALL _clust2sect
                 _0x206022C:
008ea9 01df      	MOVW R26,R30
008eaa 01cb      	MOVW R24,R22
008eab 81ee      	LDD  R30,Y+6
008eac 81ff      	LDD  R31,Y+6+1
008ead 940e b4fa 	CALL __LSRW4
008eaf 940e b056 	CALL SUBOPT_0x2A4
                +
008eb1 85a8     +LDD R26 , Y + 8
008eb2 85b9     +LDD R27 , Y + 8 + 1
008eb3 961e     +ADIW R26 , 14
008eb4 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 8,14
008eb6 940e b040 	CALL SUBOPT_0x2A1
008eb8 96f2      	ADIW R30,50
008eb9 01df      	MOVW R26,R30
008eba 81ee      	LDD  R30,Y+6
008ebb 81ff      	LDD  R31,Y+6+1
008ebc 940e b05b 	CALL SUBOPT_0x2A5
                +
008ebe 85a8     +LDD R26 , Y + 8
008ebf 85b9     +LDD R27 , Y + 8 + 1
008ec0 9652     +ADIW R26 , 18
008ec1 93ed     +ST X + , R30
008ec2 93fc     +ST X , R31
                 	__PUTW1SNS 8,18
008ec3 e0e0      	LDI  R30,LOW(0)
                 _0x20E0017:
008ec4 8119      	LDD  R17,Y+1
008ec5 8108      	LDD  R16,Y+0
                 _0x20E0018:
008ec6 962a      	ADIW R28,10
008ec7 9508      	RET
                 _dir_next_G103:
008ec8 93aa      	ST   -Y,R26
008ec9 9724      	SBIW R28,4
008eca 940e b69c 	CALL __SAVELOCR4
008ecc 85a9      	LDD  R26,Y+9
008ecd 85ba      	LDD  R27,Y+9+1
008ece 9614      	ADIW R26,4
008ecf 940e b5f6 	CALL __GETW1P
008ed1 9631      	ADIW R30,1
008ed2 018f      	MOVW R16,R30
008ed3 2e00      	MOV  R0,R16
008ed4 2a01      	OR   R0,R17
008ed5 f031      	BREQ _0x206007F
008ed6 85a9      	LDD  R26,Y+9
008ed7 85ba      	LDD  R27,Y+9+1
008ed8 961e      	ADIW R26,14
008ed9 940e b063 	CALL SUBOPT_0x2A6
008edb f411      	BRNE _0x206007E
                 _0x206007F:
008edc e0e4      	LDI  R30,LOW(4)
008edd c0d5      	RJMP _0x20E0015
                 _0x206007E:
008ede 01f8      	MOVW R30,R16
008edf 70ef      	ANDI R30,LOW(0xF)
008ee0 f011      	BREQ PC+3
008ee1 940c 8fa0 	JMP _0x2060081
008ee3 85a9      	LDD  R26,Y+9
008ee4 85ba      	LDD  R27,Y+9+1
008ee5 961e      	ADIW R26,14
008ee6 940e a2f0 	CALL SUBOPT_0x80
008ee8 85a9      	LDD  R26,Y+9
008ee9 85ba      	LDD  R27,Y+9+1
008eea 961a      	ADIW R26,10
008eeb 940e b063 	CALL SUBOPT_0x2A6
008eed f451      	BRNE _0x2060082
008eee 940e b068 	CALL SUBOPT_0x2A7
008ef0 9638      	ADIW R30,8
008ef1 01df      	MOVW R26,R30
008ef2 940e a993 	CALL SUBOPT_0x19B
008ef4 f010      	BRLO _0x2060083
008ef5 e0e4      	LDI  R30,LOW(4)
008ef6 c0bc      	RJMP _0x20E0015
                 _0x2060083:
008ef7 c0a8      	RJMP _0x2060084
                 _0x2060082:
008ef8 01f8      	MOVW R30,R16
008ef9 940e b4fa 	CALL __LSRW4
008efb 010f      	MOVW R0,R30
008efc 940e b068 	CALL SUBOPT_0x2A7
008efe 940e ac03 	CALL SUBOPT_0x203
008f00 9731      	SBIW R30,1
008f01 21e0      	AND  R30,R0
008f02 21f1      	AND  R31,R1
008f03 9730      	SBIW R30,0
008f04 f011      	BREQ PC+3
008f05 940c 8fa0 	JMP _0x2060085
008f07 940e b068 	CALL SUBOPT_0x2A7
008f09 940e b06d 	CALL SUBOPT_0x2A8
008f0b dccc      	RCALL _get_fat
008f0c 940e a376 	CALL SUBOPT_0x95
008f0e 940e a37b 	CALL SUBOPT_0x96
008f10 940e af7b 	CALL SUBOPT_0x286
008f12 f410      	BRSH _0x2060086
008f13 e0e2      	LDI  R30,LOW(2)
008f14 c09e      	RJMP _0x20E0015
                 _0x2060086:
008f15 940e a37b 	CALL SUBOPT_0x96
008f17 940e a091 	CALL SUBOPT_0x2B
008f19 f411      	BRNE _0x2060087
008f1a e0e1      	LDI  R30,LOW(1)
008f1b c097      	RJMP _0x20E0015
                 _0x2060087:
008f1c 940e b068 	CALL SUBOPT_0x2A7
008f1e 940e b076 	CALL SUBOPT_0x2A9
008f20 940e a37b 	CALL SUBOPT_0x96
008f22 940e b695 	CALL __CPD21
008f24 f410      	BRSH PC+3
008f25 940c 8f90 	JMP _0x2060088
008f27 85e8      	LDD  R30,Y+8
008f28 30e0      	CPI  R30,0
008f29 f411      	BRNE _0x2060089
008f2a e0e4      	LDI  R30,LOW(4)
008f2b c087      	RJMP _0x20E0015
                 _0x2060089:
008f2c 940e b068 	CALL SUBOPT_0x2A7
008f2e 940e b06d 	CALL SUBOPT_0x2A8
008f30 de17      	RCALL _create_chain_G103
008f31 940e a395 	CALL SUBOPT_0x9B
008f33 940e b67e 	CALL __CPD10
008f35 f411      	BRNE _0x206008A
008f36 e0e7      	LDI  R30,LOW(7)
008f37 c07b      	RJMP _0x20E0015
                 _0x206008A:
008f38 940e a37b 	CALL SUBOPT_0x96
008f3a 940e b00d 	CALL SUBOPT_0x298
008f3c f411      	BRNE _0x206008B
008f3d e0e2      	LDI  R30,LOW(2)
008f3e c074      	RJMP _0x20E0015
                 _0x206008B:
008f3f 940e a37b 	CALL SUBOPT_0x96
008f41 940e a091 	CALL SUBOPT_0x2B
008f43 f411      	BRNE _0x206008C
008f44 e0e1      	LDI  R30,LOW(1)
008f45 c06d      	RJMP _0x20E0015
                 _0x206008C:
008f46 940e b068 	CALL SUBOPT_0x2A7
008f48 940e af58 	CALL SUBOPT_0x282
008f4a 30e0      	CPI  R30,0
008f4b f011      	BREQ _0x206008D
008f4c e0e1      	LDI  R30,LOW(1)
008f4d c065      	RJMP _0x20E0015
                 _0x206008D:
008f4e 940e b068 	CALL SUBOPT_0x2A7
008f50 940e af60 	CALL SUBOPT_0x283
008f52 940e b068 	CALL SUBOPT_0x2A7
008f54 01df      	MOVW R26,R30
008f55 96be      	ADIW R30,46
008f56 93ff      	PUSH R31
008f57 93ef      	PUSH R30
008f58 01fd      	MOVW R30,R26
008f59 940e b07b 	CALL SUBOPT_0x2AA
008f5b 91af      	POP  R26
008f5c 91bf      	POP  R27
008f5d 940e b605 	CALL __PUTDP1
008f5f e030      	LDI  R19,LOW(0)
                 _0x206008F:
008f60 940e b068 	CALL SUBOPT_0x2A7
008f62 81e2      	LDD  R30,Z+2
008f63 173e      	CP   R19,R30
008f64 f4c0      	BRSH _0x2060090
008f65 940e b068 	CALL SUBOPT_0x2A7
008f67 9634      	ADIW R30,4
008f68 e0a1      	LDI  R26,LOW(1)
008f69 83a0      	STD  Z+0,R26
008f6a 940e b068 	CALL SUBOPT_0x2A7
008f6c 940e af58 	CALL SUBOPT_0x282
008f6e 30e0      	CPI  R30,0
008f6f f011      	BREQ _0x2060091
008f70 e0e1      	LDI  R30,LOW(1)
008f71 c041      	RJMP _0x20E0015
                 _0x2060091:
008f72 940e b068 	CALL SUBOPT_0x2A7
008f74 96be      	ADIW R30,46
008f75 01df      	MOVW R26,R30
008f76 940e a2f0 	CALL SUBOPT_0x80
008f78 9731      	SBIW R30,1
008f79 4060      	SBCI R22,0
008f7a 4070      	SBCI R23,0
008f7b 5f3f      	SUBI R19,-1
008f7c cfe3      	RJMP _0x206008F
                 _0x2060090:
008f7d 940e b068 	CALL SUBOPT_0x2A7
008f7f 96be      	ADIW R30,46
008f80 93ff      	PUSH R31
008f81 93ef      	PUSH R30
008f82 01df      	MOVW R26,R30
008f83 940e b5fa 	CALL __GETD1P
008f85 01df      	MOVW R26,R30
008f86 01cb      	MOVW R24,R22
008f87 2fe3      	MOV  R30,R19
008f88 940e af20 	CALL SUBOPT_0x27B
008f8a 940e a3f6 	CALL SUBOPT_0xAD
008f8c 91af      	POP  R26
008f8d 91bf      	POP  R27
008f8e 940e b605 	CALL __PUTDP1
                 _0x2060088:
008f90 940e a2ac 	CALL SUBOPT_0x77
                +
008f92 85a9     +LDD R26 , Y + 9
008f93 85ba     +LDD R27 , Y + 9 + 1
008f94 961a     +ADIW R26 , 10
008f95 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 9,10
008f97 940e b068 	CALL SUBOPT_0x2A7
008f99 940e b07b 	CALL SUBOPT_0x2AA
                +
008f9b 85a9     +LDD R26 , Y + 9
008f9c 85ba     +LDD R27 , Y + 9 + 1
008f9d 961e     +ADIW R26 , 14
008f9e 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 9,14
                 _0x2060085:
                 _0x2060084:
                 _0x2060081:
008fa0 01f8      	MOVW R30,R16
                +
008fa1 85a9     +LDD R26 , Y + 9
008fa2 85ba     +LDD R27 , Y + 9 + 1
008fa3 9614     +ADIW R26 , 4
008fa4 93ed     +ST X + , R30
008fa5 93fc     +ST X , R31
                 	__PUTW1SNS 9,4
008fa6 940e b068 	CALL SUBOPT_0x2A7
008fa8 96f2      	ADIW R30,50
008fa9 01df      	MOVW R26,R30
008faa 01f8      	MOVW R30,R16
008fab 940e b05b 	CALL SUBOPT_0x2A5
                +
008fad 85a9     +LDD R26 , Y + 9
008fae 85ba     +LDD R27 , Y + 9 + 1
008faf 9652     +ADIW R26 , 18
008fb0 93ed     +ST X + , R30
008fb1 93fc     +ST X , R31
                 	__PUTW1SNS 9,18
008fb2 e0e0      	LDI  R30,LOW(0)
                 _0x20E0015:
008fb3 940e b6a3 	CALL __LOADLOCR4
                 _0x20E0016:
008fb5 962b      	ADIW R28,11
008fb6 9508      	RET
                 _dir_find_G103:
008fb7 940e a279 	CALL SUBOPT_0x6F
008fb9 81ec      	LDD  R30,Y+4
008fba 81fd      	LDD  R31,Y+4+1
008fbb 940e a532 	CALL SUBOPT_0xDF
008fbd de79      	RCALL _dir_seek_G103
008fbe 2f1e      	MOV  R17,R30
008fbf 3010      	CPI  R17,0
008fc0 f021      	BREQ _0x2060092
008fc1 2fe1      	MOV  R30,R17
008fc2 940e b6a3 	CALL __LOADLOCR4
008fc4 c1df      	RJMP _0x20E0012
                 _0x2060092:
                 _0x2060094:
008fc5 940e b081 	CALL SUBOPT_0x2AB
008fc7 f4e9      	BRNE _0x2060095
008fc8 81ac      	LDD  R26,Y+4
008fc9 81bd      	LDD  R27,Y+4+1
008fca 9652      	ADIW R26,18
008fcb 912d      	LD   R18,X+
008fcc 913c      	LD   R19,X
008fcd 01d9      	MOVW R26,R18
008fce 910c      	LD   R16,X
008fcf 3000      	CPI  R16,0
008fd0 f411      	BRNE _0x2060097
008fd1 e014      	LDI  R17,LOW(4)
008fd2 c012      	RJMP _0x2060095
                 _0x2060097:
008fd3 01f9      	MOVW R30,R18
008fd4 85e3      	LDD  R30,Z+11
008fd5 70e8      	ANDI R30,LOW(0x8)
008fd6 f429      	BRNE _0x2060099
008fd7 940e b092 	CALL SUBOPT_0x2AC
008fd9 dae1      	RCALL _mem_cmp_G103
008fda 9730      	SBIW R30,0
008fdb f009      	BREQ _0x206009A
                 _0x2060099:
008fdc c001      	RJMP _0x2060098
                 _0x206009A:
008fdd c007      	RJMP _0x2060095
                 _0x2060098:
008fde 940e acc3 	CALL SUBOPT_0x21F
008fe0 e0a0      	LDI  R26,LOW(0)
008fe1 dee6      	RCALL _dir_next_G103
008fe2 2f1e      	MOV  R17,R30
008fe3 3010      	CPI  R17,0
008fe4 f301      	BREQ _0x2060094
                 _0x2060095:
008fe5 2fe1      	MOV  R30,R17
008fe6 940e b6a3 	CALL __LOADLOCR4
008fe8 c1bb      	RJMP _0x20E0012
                 _dir_register_G103:
008fe9 940e a279 	CALL SUBOPT_0x6F
008feb 81ec      	LDD  R30,Y+4
008fec 81fd      	LDD  R31,Y+4+1
008fed 940e a532 	CALL SUBOPT_0xDF
008fef de47      	RCALL _dir_seek_G103
008ff0 2f1e      	MOV  R17,R30
008ff1 3010      	CPI  R17,0
008ff2 f4a1      	BRNE _0x20600A7
                 _0x20600A9:
008ff3 940e b081 	CALL SUBOPT_0x2AB
008ff5 f489      	BRNE _0x20600AA
008ff6 81ec      	LDD  R30,Y+4
008ff7 81fd      	LDD  R31,Y+4+1
008ff8 89a2      	LDD  R26,Z+18
008ff9 89b3      	LDD  R27,Z+19
008ffa 910c      	LD   R16,X
008ffb 3e05      	CPI  R16,229
008ffc f011      	BREQ _0x20600AD
008ffd 3000      	CPI  R16,0
008ffe f409      	BRNE _0x20600AC
                 _0x20600AD:
008fff c007      	RJMP _0x20600AA
                 _0x20600AC:
009000 940e acc3 	CALL SUBOPT_0x21F
009002 e0a1      	LDI  R26,LOW(1)
009003 dec4      	RCALL _dir_next_G103
009004 2f1e      	MOV  R17,R30
009005 3010      	CPI  R17,0
009006 f361      	BREQ _0x20600A9
                 _0x20600AA:
                 _0x20600A7:
009007 3010      	CPI  R17,0
009008 f529      	BRNE _0x20600AF
009009 940e b081 	CALL SUBOPT_0x2AB
00900b f511      	BRNE _0x20600B0
00900c 81ac      	LDD  R26,Y+4
00900d 81bd      	LDD  R27,Y+4+1
00900e 9652      	ADIW R26,18
00900f 912d      	LD   R18,X+
009010 913c      	LD   R19,X
009011 933a      	ST   -Y,R19
009012 932a      	ST   -Y,R18
009013 e0e0      	LDI  R30,LOW(0)
009014 e0f0      	LDI  R31,HIGH(0)
009015 93fa      	ST   -Y,R31
009016 93ea      	ST   -Y,R30
009017 e2a0      	LDI  R26,LOW(32)
009018 e0b0      	LDI  R27,0
009019 da89      	RCALL _mem_set_G103
00901a 940e b092 	CALL SUBOPT_0x2AC
00901c da6a      	RCALL _mem_cpy_G103
00901d 81ac      	LDD  R26,Y+4
00901e 81bd      	LDD  R27,Y+4+1
00901f 9654      	ADIW R26,20
009020 940e b5f6 	CALL __GETW1P
009022 85e3      	LDD  R30,Z+11
009023 71e8      	ANDI R30,LOW(0x18)
                +
009024 01d9     +MOVW R26 , R18
009025 961c     +ADIW R26 , 12
009026 93ec     +ST X , R30
                 	__PUTB1RNS 18,12
009027 81ac      	LDD  R26,Y+4
009028 81bd      	LDD  R27,Y+4+1
009029 940e b5f6 	CALL __GETW1P
00902b 9634      	ADIW R30,4
00902c e0a1      	LDI  R26,LOW(1)
00902d 83a0      	STD  Z+0,R26
                 _0x20600B0:
                 _0x20600AF:
00902e 2fe1      	MOV  R30,R17
00902f 940e b6a3 	CALL __LOADLOCR4
009031 c172      	RJMP _0x20E0012
                 _create_name_G103:
009032 93ba      	ST   -Y,R27
009033 93aa      	ST   -Y,R26
009034 9725      	SBIW R28,5
009035 940e b69a 	CALL __SAVELOCR6
009037 85ad      	LDD  R26,Y+13
009038 85be      	LDD  R27,Y+13+1
009039 9654      	ADIW R26,20
00903a 914d      	LD   R20,X+
00903b 915c      	LD   R21,X
00903c 935a      	ST   -Y,R21
00903d 934a      	ST   -Y,R20
00903e e2e0      	LDI  R30,LOW(32)
00903f e0f0      	LDI  R31,HIGH(32)
009040 93fa      	ST   -Y,R31
009041 93ea      	ST   -Y,R30
009042 940e a0f3 	CALL SUBOPT_0x38
009044 da5e      	RCALL _mem_set_G103
009045 e0e0      	LDI  R30,LOW(0)
009046 87e8      	STD  Y+8,R30
009047 87e9      	STD  Y+8+1,R30
009048 2f1e      	MOV  R17,R30
009049 2f2e      	MOV  R18,R30
00904a e0e8      	LDI  R30,LOW(8)
00904b 87ea      	STD  Y+10,R30
00904c 85ab      	LDD  R26,Y+11
00904d 85bc      	LDD  R27,Y+11+1
00904e 940e af1b 	CALL SUBOPT_0x27A
009050 85e8      	LDD  R30,Y+8
009051 85f9      	LDD  R31,Y+8+1
009052 940e b09c 	CALL SUBOPT_0x2AD
009054 91ac      	LD   R26,X
009055 32ae      	CPI  R26,LOW(0x2E)
009056 f549      	BRNE _0x20600B3
                 _0x20600B5:
009057 940e a27e 	CALL SUBOPT_0x70
009059 940e b09c 	CALL SUBOPT_0x2AD
00905b 910c      	LD   R16,X
00905c 320e      	CPI  R16,46
00905d f421      	BRNE _0x20600B8
00905e 85a8      	LDD  R26,Y+8
00905f 85b9      	LDD  R27,Y+8+1
009060 9713      	SBIW R26,3
009061 f00c      	BRLT _0x20600B7
                 _0x20600B8:
009062 c003      	RJMP _0x20600B6
                 _0x20600B7:
009063 940e b0a1 	CALL SUBOPT_0x2AE
009065 cff1      	RJMP _0x20600B5
                 _0x20600B6:
009066 320f      	CPI  R16,47
009067 f021      	BREQ _0x20600BB
009068 350c      	CPI  R16,92
009069 f011      	BREQ _0x20600BB
00906a 3201      	CPI  R16,33
00906b f408      	BRSH _0x20600BC
                 _0x20600BB:
00906c c002      	RJMP _0x20600BA
                 _0x20600BC:
00906d e0e6      	LDI  R30,LOW(6)
00906e c07d      	RJMP _0x20E0013
                 _0x20600BA:
00906f 85e8      	LDD  R30,Y+8
009070 85f9      	LDD  R31,Y+8+1
009071 940e ae78 	CALL SUBOPT_0x25E
009073 85ab      	LDD  R26,Y+11
009074 85bc      	LDD  R27,Y+11+1
009075 93ed      	ST   X+,R30
009076 93fc      	ST   X,R31
009077 3201      	CPI  R16,33
009078 f410      	BRSH _0x20600BD
009079 e2e4      	LDI  R30,LOW(36)
00907a c001      	RJMP _0x20600BE
                 _0x20600BD:
00907b e2e0      	LDI  R30,LOW(32)
                 _0x20600BE:
                +
00907c 01da     +MOVW R26 , R20
00907d 961b     +ADIW R26 , 11
00907e 93ec     +ST X , R30
                 	__PUTB1RNS 20,11
00907f c06b      	RJMP _0x20E0014
                 _0x20600B3:
                 _0x20600C1:
009080 940e a27e 	CALL SUBOPT_0x70
009082 940e b09c 	CALL SUBOPT_0x2AD
009084 910c      	LD   R16,X
009085 3201      	CPI  R16,33
009086 f020      	BRLO _0x20600C4
009087 320f      	CPI  R16,47
009088 f011      	BREQ _0x20600C4
009089 350c      	CPI  R16,92
00908a f409      	BRNE _0x20600C3
                 _0x20600C4:
00908b c035      	RJMP _0x20600C2
                 _0x20600C3:
00908c 320e      	CPI  R16,46
00908d f019      	BREQ _0x20600C7
00908e 85ea      	LDD  R30,Y+10
00908f 172e      	CP   R18,R30
009090 f068      	BRLO _0x20600C6
                 _0x20600C7:
009091 85aa      	LDD  R26,Y+10
009092 30a8      	CPI  R26,LOW(0x8)
009093 f411      	BRNE _0x20600CA
009094 320e      	CPI  R16,46
009095 f011      	BREQ _0x20600C9
                 _0x20600CA:
009096 e0e6      	LDI  R30,LOW(6)
009097 c054      	RJMP _0x20E0013
                 _0x20600C9:
009098 e028      	LDI  R18,LOW(8)
009099 e0eb      	LDI  R30,LOW(11)
00909a 87ea      	STD  Y+10,R30
00909b 0f11      	LSL  R17
00909c 0f11      	LSL  R17
00909d c022      	RJMP _0x20600C0
                 _0x20600C6:
00909e 3800      	CPI  R16,128
00909f f018      	BRLO _0x20600CC
0090a0 6013      	ORI  R17,LOW(3)
0090a1 e0e6      	LDI  R30,LOW(6)
0090a2 c049      	RJMP _0x20E0013
                 _0x20600CC:
                +
0090a3 e9ee     +LDI R30 , LOW ( 2 * _k1 + ( 0 ) )
0090a4 e0f1     +LDI R31 , HIGH ( 2 * _k1 + ( 0 ) )
0090a5 e060     +LDI R22 , BYTE3 ( 2 * _k1 + ( 0 ) )
0090a6 e070     +LDI R23 , BYTE4 ( 2 * _k1 + ( 0 ) )
                 	__POINTD1FN _k1,0
0090a7 940e b62a 	CALL __PUTPARD1
0090a9 2fa0      	MOV  R26,R16
0090aa 27bb      	CLR  R27
0090ab da35      	RCALL _chk_chrf_G103
0090ac 9730      	SBIW R30,0
0090ad f011      	BREQ _0x20600D2
0090ae e0e6      	LDI  R30,LOW(6)
0090af c03c      	RJMP _0x20E0013
                 _0x20600D2:
0090b0 3401      	CPI  R16,65
0090b1 f010      	BRLO _0x20600D4
0090b2 350b      	CPI  R16,91
0090b3 f008      	BRLO _0x20600D5
                 _0x20600D4:
0090b4 c002      	RJMP _0x20600D3
                 _0x20600D5:
0090b5 6012      	ORI  R17,LOW(2)
0090b6 c007      	RJMP _0x20600D6
                 _0x20600D3:
0090b7 3601      	CPI  R16,97
0090b8 f010      	BRLO _0x20600D8
0090b9 370b      	CPI  R16,123
0090ba f008      	BRLO _0x20600D9
                 _0x20600D8:
0090bb c002      	RJMP _0x20600D7
                 _0x20600D9:
0090bc 6011      	ORI  R17,LOW(1)
0090bd 5200      	SUBI R16,LOW(32)
                 _0x20600D7:
                 _0x20600D6:
0090be 940e b0a1 	CALL SUBOPT_0x2AE
                 _0x20600C0:
0090c0 cfbf      	RJMP _0x20600C1
                 _0x20600C2:
0090c1 85e8      	LDD  R30,Y+8
0090c2 85f9      	LDD  R31,Y+8+1
0090c3 940e ae78 	CALL SUBOPT_0x25E
0090c5 85ab      	LDD  R26,Y+11
0090c6 85bc      	LDD  R27,Y+11+1
0090c7 93ed      	ST   X+,R30
0090c8 93fc      	ST   X,R31
0090c9 3201      	CPI  R16,33
0090ca f410      	BRSH _0x20600DA
0090cb e0e4      	LDI  R30,LOW(4)
0090cc c001      	RJMP _0x20600DB
                 _0x20600DA:
0090cd e0e0      	LDI  R30,LOW(0)
                 _0x20600DB:
0090ce 2f0e      	MOV  R16,R30
0090cf 3020      	CPI  R18,0
0090d0 f411      	BRNE _0x20600DD
0090d1 e0e6      	LDI  R30,LOW(6)
0090d2 c019      	RJMP _0x20E0013
                 _0x20600DD:
0090d3 01da      	MOVW R26,R20
0090d4 91ac      	LD   R26,X
0090d5 3ea5      	CPI  R26,LOW(0xE5)
0090d6 f419      	BRNE _0x20600DE
0090d7 01da      	MOVW R26,R20
0090d8 e0e5      	LDI  R30,LOW(5)
0090d9 93ec      	ST   X,R30
                 _0x20600DE:
0090da 85aa      	LDD  R26,Y+10
0090db 30a8      	CPI  R26,LOW(0x8)
0090dc f411      	BRNE _0x20600DF
0090dd 0f11      	LSL  R17
0090de 0f11      	LSL  R17
                 _0x20600DF:
0090df 2fe1      	MOV  R30,R17
0090e0 70e3      	ANDI R30,LOW(0x3)
0090e1 30e1      	CPI  R30,LOW(0x1)
0090e2 f409      	BRNE _0x20600E0
0090e3 6100      	ORI  R16,LOW(16)
                 _0x20600E0:
0090e4 2fe1      	MOV  R30,R17
0090e5 70ec      	ANDI R30,LOW(0xC)
0090e6 30e4      	CPI  R30,LOW(0x4)
0090e7 f409      	BRNE _0x20600E1
0090e8 6008      	ORI  R16,LOW(8)
                 _0x20600E1:
0090e9 01fa      	MOVW R30,R20
                +
0090ea 8703     +STD Z + 11 , R16
                 	__PUTBZR 16,11
                 _0x20E0014:
0090eb e0e0      	LDI  R30,LOW(0)
                 _0x20E0013:
0090ec 940e b6a1 	CALL __LOADLOCR6
0090ee 962f      	ADIW R28,15
0090ef 9508      	RET
                 _follow_path_G103:
0090f0 940e a279 	CALL SUBOPT_0x6F
                 _0x20600F7:
0090f2 e0e1      	LDI  R30,LOW(1)
0090f3 30e0      	CPI  R30,0
0090f4 f029      	BREQ _0x20600FA
0090f5 81ac      	LDD  R26,Y+4
0090f6 81bd      	LDD  R27,Y+4+1
0090f7 91ac      	LD   R26,X
0090f8 32a0      	CPI  R26,LOW(0x20)
0090f9 f009      	BREQ _0x20600FB
                 _0x20600FA:
0090fa c006      	RJMP _0x20600F9
                 _0x20600FB:
0090fb 81ec      	LDD  R30,Y+4
0090fc 81fd      	LDD  R31,Y+4+1
0090fd 9631      	ADIW R30,1
0090fe 83ec      	STD  Y+4,R30
0090ff 83fd      	STD  Y+4+1,R31
009100 cff1      	RJMP _0x20600F7
                 _0x20600F9:
009101 81ac      	LDD  R26,Y+4
009102 81bd      	LDD  R27,Y+4+1
009103 91ac      	LD   R26,X
009104 32af      	CPI  R26,LOW(0x2F)
009105 f029      	BREQ _0x20600FD
009106 81ac      	LDD  R26,Y+4
009107 81bd      	LDD  R27,Y+4+1
009108 91ac      	LD   R26,X
009109 35ac      	CPI  R26,LOW(0x5C)
00910a f459      	BRNE _0x20600FC
                 _0x20600FD:
00910b 81ec      	LDD  R30,Y+4
00910c 81fd      	LDD  R31,Y+4+1
00910d 9631      	ADIW R30,1
00910e 83ec      	STD  Y+4,R30
00910f 83fd      	STD  Y+4+1,R31
009110 81ae      	LDD  R26,Y+6
009111 81bf      	LDD  R27,Y+6+1
009112 9616      	ADIW R26,6
009113 940e a2c9 	CALL SUBOPT_0x7C
009115 c00a      	RJMP _0x20600FF
                 _0x20600FC:
009116 81ae      	LDD  R26,Y+6
009117 81bf      	LDD  R27,Y+6+1
009118 940e b5f6 	CALL __GETW1P
00911a 9676      	ADIW R30,22
00911b 01df      	MOVW R26,R30
00911c 940e b5fa 	CALL __GETD1P
00911e 940e b0ac 	CALL SUBOPT_0x2B0
                 _0x20600FF:
009120 81ac      	LDD  R26,Y+4
009121 81bd      	LDD  R27,Y+4+1
009122 91ac      	LD   R26,X
009123 27bb      	CLR  R27
009124 9790      	SBIW R26,32
009125 f460      	BRSH _0x2060100
009126 81ee      	LDD  R30,Y+6
009127 81ff      	LDD  R31,Y+6+1
009128 940e a532 	CALL SUBOPT_0xDF
00912a dd0c      	RCALL _dir_seek_G103
00912b 2f1e      	MOV  R17,R30
00912c 81ae      	LDD  R26,Y+6
00912d 81bf      	LDD  R27,Y+6+1
00912e 9652      	ADIW R26,18
00912f 940e a5dc 	CALL SUBOPT_0xFC
009131 c03d      	RJMP _0x2060101
                 _0x2060100:
                 _0x2060103:
009132 940e a78a 	CALL SUBOPT_0x144
009134 01de      	MOVW R26,R28
009135 9616      	ADIW R26,6
009136 defb      	RCALL _create_name_G103
009137 2f1e      	MOV  R17,R30
009138 3010      	CPI  R17,0
009139 f5a9      	BRNE _0x2060104
00913a 81ae      	LDD  R26,Y+6
00913b 81bf      	LDD  R27,Y+6+1
00913c de7a      	RCALL _dir_find_G103
00913d 2f1e      	MOV  R17,R30
00913e 81ae      	LDD  R26,Y+6
00913f 81bf      	LDD  R27,Y+6+1
009140 9654      	ADIW R26,20
009141 940e b5f6 	CALL __GETW1P
009143 85e3      	LDD  R30,Z+11
009144 70e4      	ANDI R30,LOW(0x4)
009145 2f0e      	MOV  R16,R30
009146 3010      	CPI  R17,0
009147 f039      	BREQ _0x2060106
009148 3014      	CPI  R17,4
009149 f411      	BRNE _0x2060108
00914a 3000      	CPI  R16,0
00914b f009      	BREQ _0x2060109
                 _0x2060108:
00914c c001      	RJMP _0x2060107
                 _0x2060109:
00914d e015      	LDI  R17,LOW(5)
                 _0x2060107:
00914e c020      	RJMP _0x2060104
                 _0x2060106:
00914f 3000      	CPI  R16,0
009150 f4f1      	BRNE _0x2060104
009151 81ae      	LDD  R26,Y+6
009152 81bf      	LDD  R27,Y+6+1
009153 9652      	ADIW R26,18
009154 912d      	LD   R18,X+
009155 913c      	LD   R19,X
009156 01f9      	MOVW R30,R18
009157 85e3      	LDD  R30,Z+11
009158 71e0      	ANDI R30,LOW(0x10)
009159 f411      	BRNE _0x206010B
00915a e015      	LDI  R17,LOW(5)
00915b c013      	RJMP _0x2060104
                 _0x206010B:
00915c 940e b0b2 	CALL SUBOPT_0x2B1
00915e 940e b517 	CALL __LSLD16
009160 937f      	PUSH R23
009161 936f      	PUSH R22
009162 93ff      	PUSH R31
009163 93ef      	PUSH R30
009164 940e b0b6 	CALL SUBOPT_0x2B2
009166 91af      	POP  R26
009167 91bf      	POP  R27
009168 918f      	POP  R24
009169 919f      	POP  R25
00916a 940e b0bb 	CALL SUBOPT_0x2B3
00916c 940e b0ac 	CALL SUBOPT_0x2B0
00916e cfc3      	RJMP _0x2060103
                 _0x2060104:
                 _0x2060101:
00916f 2fe1      	MOV  R30,R17
009170 940e b6a3 	CALL __LOADLOCR4
009172 9628      	ADIW R28,8
009173 9508      	RET
                 _check_fs_G103:
009174 940e b62f 	CALL __PUTPARD2
009176 81ec      	LDD  R30,Y+4
009177 81fd      	LDD  R31,Y+4+1
009178 81a1      	LDD  R26,Z+1
009179 93aa      	ST   -Y,R26
00917a 81ed      	LDD  R30,Y+5
00917b 81fe      	LDD  R31,Y+5+1
00917c 96f2      	ADIW R30,50
00917d 93fa      	ST   -Y,R31
00917e 93ea      	ST   -Y,R30
                +
00917f 81eb     +LDD R30 , Y + 3
009180 81fc     +LDD R31 , Y + 3 + 1
009181 816d     +LDD R22 , Y + 3 + 2
009182 817e     +LDD R23 , Y + 3 + 3
                 	__GETD1S 3
009183 940e b0c0 	CALL SUBOPT_0x2B4
009185 f011      	BREQ _0x206010C
009186 e0e3      	LDI  R30,LOW(3)
009187 c01c      	RJMP _0x20E0012
                 _0x206010C:
009188 81ec      	LDD  R30,Y+4
009189 81fd      	LDD  R31,Y+4+1
00918a 940e b0c7 	CALL SUBOPT_0x2B5
00918c f011      	BREQ _0x206010D
00918d e0e2      	LDI  R30,LOW(2)
00918e c015      	RJMP _0x20E0012
                 _0x206010D:
00918f 81ac      	LDD  R26,Y+4
009190 81bd      	LDD  R27,Y+4+1
009191 59a8      	SUBI R26,LOW(-104)
009192 4fbf      	SBCI R27,HIGH(-104)
009193 940e b0d1 	CALL SUBOPT_0x2B6
009195 f411      	BRNE _0x206010E
009196 e0e0      	LDI  R30,LOW(0)
009197 c00c      	RJMP _0x20E0012
                 _0x206010E:
009198 81ec      	LDD  R30,Y+4
009199 81fd      	LDD  R31,Y+4+1
00919a 96f2      	ADIW R30,50
00919b 5aee      	SUBI R30,LOW(-82)
00919c 4fff      	SBCI R31,HIGH(-82)
00919d 01df      	MOVW R26,R30
00919e 940e b0d1 	CALL SUBOPT_0x2B6
0091a0 f411      	BRNE _0x206010F
0091a1 e0e0      	LDI  R30,LOW(0)
0091a2 c001      	RJMP _0x20E0012
                 _0x206010F:
0091a3 e0e1      	LDI  R30,LOW(1)
                 _0x20E0012:
0091a4 9626      	ADIW R28,6
0091a5 9508      	RET
                 _chk_mounted:
0091a6 93aa      	ST   -Y,R26
0091a7 9764      	SBIW R28,20
0091a8 940e b69a 	CALL __SAVELOCR6
0091aa 8dad      	LDD  R26,Y+29
0091ab 8dbe      	LDD  R27,Y+29+1
0091ac 940e b5f6 	CALL __GETW1P
0091ae 87e8      	STD  Y+8,R30
0091af 87f9      	STD  Y+8+1,R31
0091b0 85a8      	LDD  R26,Y+8
0091b1 85b9      	LDD  R27,Y+8+1
0091b2 91ec      	LD   R30,X
0091b3 53e0      	SUBI R30,LOW(48)
0091b4 2f0e      	MOV  R16,R30
0091b5 300a      	CPI  R16,10
0091b6 f420      	BRSH _0x2060111
0091b7 9611      	ADIW R26,1
0091b8 91ac      	LD   R26,X
0091b9 33aa      	CPI  R26,LOW(0x3A)
0091ba f009      	BREQ _0x2060112
                 _0x2060111:
0091bb c00a      	RJMP _0x2060110
                 _0x2060112:
0091bc 85e8      	LDD  R30,Y+8
0091bd 85f9      	LDD  R31,Y+8+1
0091be 9632      	ADIW R30,2
0091bf 940e a8e9 	CALL SUBOPT_0x17C
0091c1 8dad      	LDD  R26,Y+29
0091c2 8dbe      	LDD  R27,Y+29+1
0091c3 93ed      	ST   X+,R30
0091c4 93fc      	ST   X,R31
0091c5 c002      	RJMP _0x2060113
                 _0x2060110:
0091c6 9100 1a56 	LDS  R16,_Drive_G103
                 _0x2060113:
0091c8 3001      	CPI  R16,1
0091c9 f010      	BRLO _0x2060114
0091ca e0eb      	LDI  R30,LOW(11)
0091cb c1c3      	RJMP _0x20E0010
                 _0x2060114:
0091cc 2fe0      	MOV  R30,R16
0091cd 940e b0df 	CALL SUBOPT_0x2B7
0091cf 940e ae73 	CALL SUBOPT_0x25D
0091d1 83ee      	STD  Y+6,R30
0091d2 83ff      	STD  Y+6+1,R31
0091d3 8dab      	LDD  R26,Y+27
0091d4 8dbc      	LDD  R27,Y+27+1
0091d5 93ed      	ST   X+,R30
0091d6 93fc      	ST   X,R31
0091d7 9730      	SBIW R30,0
0091d8 f411      	BRNE _0x2060115
0091d9 e0ec      	LDI  R30,LOW(12)
0091da c1b4      	RJMP _0x20E0010
                 _0x2060115:
0091db 81ae      	LDD  R26,Y+6
0091dc 81bf      	LDD  R27,Y+6+1
0091dd 91ec      	LD   R30,X
0091de 30e0      	CPI  R30,0
0091df f089      	BREQ _0x2060116
0091e0 81ee      	LDD  R30,Y+6
0091e1 81ff      	LDD  R31,Y+6+1
0091e2 81a1      	LDD  R26,Z+1
0091e3 940e 8754 	CALL _disk_status
0091e5 2f5e      	MOV  R21,R30
0091e6 fd50      	SBRC R21,0
0091e7 c009      	RJMP _0x2060117
0091e8 8dea      	LDD  R30,Y+26
0091e9 30e0      	CPI  R30,0
0091ea f011      	BREQ _0x2060119
0091eb fd52      	SBRC R21,2
0091ec c001      	RJMP _0x206011A
                 _0x2060119:
0091ed c002      	RJMP _0x2060118
                 _0x206011A:
0091ee e0ea      	LDI  R30,LOW(10)
0091ef c19f      	RJMP _0x20E0010
                 _0x2060118:
0091f0 c19d      	RJMP _0x20E0011
                 _0x2060117:
                 _0x2060116:
0091f1 81ae      	LDD  R26,Y+6
0091f2 81bf      	LDD  R27,Y+6+1
0091f3 e0e0      	LDI  R30,LOW(0)
0091f4 93ec      	ST   X,R30
0091f5 2fe0      	MOV  R30,R16
                +
0091f6 81ae     +LDD R26 , Y + 6
0091f7 81bf     +LDD R27 , Y + 6 + 1
0091f8 9611     +ADIW R26 , 1
0091f9 93ec     +ST X , R30
                 	__PUTB1SNS 6,1
0091fa 81ee      	LDD  R30,Y+6
0091fb 81ff      	LDD  R31,Y+6+1
0091fc 81a1      	LDD  R26,Z+1
0091fd 940e 8683 	CALL _disk_initialize
0091ff 2f5e      	MOV  R21,R30
009200 ff50      	SBRS R21,0
009201 c002      	RJMP _0x206011B
009202 e0e3      	LDI  R30,LOW(3)
009203 c18b      	RJMP _0x20E0010
                 _0x206011B:
009204 8dea      	LDD  R30,Y+26
009205 30e0      	CPI  R30,0
009206 f011      	BREQ _0x206011D
009207 fd52      	SBRC R21,2
009208 c001      	RJMP _0x206011E
                 _0x206011D:
009209 c002      	RJMP _0x206011C
                 _0x206011E:
00920a e0ea      	LDI  R30,LOW(10)
00920b c183      	RJMP _0x20E0010
                 _0x206011C:
00920c 940e a78a 	CALL SUBOPT_0x144
00920e 940e b03b 	CALL SUBOPT_0x2A0
009210 940e adbe 	CALL SUBOPT_0x23F
009212 01df      	MOVW R26,R30
009213 01cb      	MOVW R24,R22
009214 df5f      	RCALL _check_fs_G103
009215 2f1e      	MOV  R17,R30
009216 3011      	CPI  R17,1
009217 f4c1      	BRNE _0x206011F
009218 81ee      	LDD  R30,Y+6
009219 81ff      	LDD  R31,Y+6+1
00921a 96f2      	ADIW R30,50
00921b 54e2      	SUBI R30,LOW(-446)
00921c 4ffe      	SBCI R31,HIGH(-446)
00921d 019f      	MOVW R18,R30
00921e 01f9      	MOVW R30,R18
00921f 81e4      	LDD  R30,Z+4
009220 30e0      	CPI  R30,0
009221 f071      	BREQ _0x2060120
009222 01d9      	MOVW R26,R18
009223 9618      	ADIW R26,8
009224 940e b5fa 	CALL __GETD1P
009226 940e a3fb 	CALL SUBOPT_0xAE
009228 940e a78a 	CALL SUBOPT_0x144
                +
00922a 8da8     +LDD R26 , Y + 24
00922b 8db9     +LDD R27 , Y + 24 + 1
00922c 8d8a     +LDD R24 , Y + 24 + 2
00922d 8d9b     +LDD R25 , Y + 24 + 3
                 	__GETD2S 24
00922e df45      	RCALL _check_fs_G103
00922f 2f1e      	MOV  R17,R30
                 _0x2060120:
                 _0x206011F:
009230 3013      	CPI  R17,3
009231 f411      	BRNE _0x2060121
009232 e0e1      	LDI  R30,LOW(1)
009233 c15b      	RJMP _0x20E0010
                 _0x2060121:
009234 3010      	CPI  R17,0
009235 f449      	BRNE _0x2060123
009236 81ae      	LDD  R26,Y+6
009237 81bf      	LDD  R27,Y+6+1
009238 96dd      	ADIW R26,61
009239 940e b5f6 	CALL __GETW1P
00923b 30e0      	CPI  R30,LOW(0x200)
00923c e0a2      	LDI  R26,HIGH(0x200)
00923d 07fa      	CPC  R31,R26
00923e f011      	BREQ _0x2060122
                 _0x2060123:
00923f e0ed      	LDI  R30,LOW(13)
009240 c14e      	RJMP _0x20E0010
                 _0x2060122:
009241 81ae      	LDD  R26,Y+6
009242 81bf      	LDD  R27,Y+6+1
009243 5ba8      	SUBI R26,LOW(-72)
009244 4fbf      	SBCI R27,HIGH(-72)
009245 940e a029 	CALL SUBOPT_0x1C
009247 940e b0e5 	CALL SUBOPT_0x2B8
009249 940e a481 	CALL SUBOPT_0xC1
00924b 940e b67e 	CALL __CPD10
00924d f441      	BRNE _0x2060125
00924e 81ae      	LDD  R26,Y+6
00924f 81bf      	LDD  R27,Y+6+1
009250 5aaa      	SUBI R26,LOW(-86)
009251 4fbf      	SBCI R27,HIGH(-86)
009252 940e b5fa 	CALL __GETD1P
009254 940e b0e5 	CALL SUBOPT_0x2B8
                 _0x2060125:
009256 940e a481 	CALL SUBOPT_0xC1
                +
009258 81ae     +LDD R26 , Y + 6
009259 81bf     +LDD R27 , Y + 6 + 1
00925a 965a     +ADIW R26 , 26
00925b 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 6,26
00925d 81ee      	LDD  R30,Y+6
00925e 81ff      	LDD  R31,Y+6+1
00925f 5bee      	SUBI R30,LOW(-66)
009260 4fff      	SBCI R31,HIGH(-66)
009261 81e0      	LD   R30,Z
                +
009262 81ae     +LDD R26 , Y + 6
009263 81bf     +LDD R27 , Y + 6 + 1
009264 9613     +ADIW R26 , 3
009265 93ec     +ST X , R30
                 	__PUTB1SNS 6,3
009266 81ee      	LDD  R30,Y+6
009267 81ff      	LDD  R31,Y+6+1
009268 81e3      	LDD  R30,Z+3
009269 e0f0      	LDI  R31,0
00926a 940e b02a 	CALL SUBOPT_0x29D
00926c 940e ac0b 	CALL SUBOPT_0x205
00926e 940e b0e5 	CALL SUBOPT_0x2B8
009270 940e b0ea 	CALL SUBOPT_0x2B9
009272 940e a477 	CALL SUBOPT_0xBF
009274 940e b056 	CALL SUBOPT_0x2A4
                +
009276 81ae     +LDD R26 , Y + 6
009277 81bf     +LDD R27 , Y + 6 + 1
009278 9692     +ADIW R26 , 34
009279 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 6,34
00927b 81ee      	LDD  R30,Y+6
00927c 81ff      	LDD  R31,Y+6+1
00927d ade7      	LDD  R30,Z+63
                +
00927e 81ae     +LDD R26 , Y + 6
00927f 81bf     +LDD R27 , Y + 6 + 1
009280 9612     +ADIW R26 , 2
009281 93ec     +ST X , R30
                 	__PUTB1SNS 6,2
009282 81ae      	LDD  R26,Y+6
009283 81bf      	LDD  R27,Y+6+1
009284 5bad      	SUBI R26,LOW(-67)
009285 4fbf      	SBCI R27,HIGH(-67)
009286 940e b5f6 	CALL __GETW1P
                +
009288 81ae     +LDD R26 , Y + 6
009289 81bf     +LDD R27 , Y + 6 + 1
00928a 9618     +ADIW R26 , 8
00928b 93ed     +ST X + , R30
00928c 93fc     +ST X , R31
                 	__PUTW1SNS 6,8
00928d 81ae      	LDD  R26,Y+6
00928e 81bf      	LDD  R27,Y+6+1
00928f 5bab      	SUBI R26,LOW(-69)
009290 4fbf      	SBCI R27,HIGH(-69)
009291 940e a029 	CALL SUBOPT_0x1C
009293 940e aae7 	CALL SUBOPT_0x1D6
009295 940e a199 	CALL SUBOPT_0x50
009297 940e b67e 	CALL __CPD10
009299 f441      	BRNE _0x2060126
00929a 81ae      	LDD  R26,Y+6
00929b 81bf      	LDD  R27,Y+6+1
00929c 5aae      	SUBI R26,LOW(-82)
00929d 4fbf      	SBCI R27,HIGH(-82)
00929e 940e b5fa 	CALL __GETD1P
0092a0 940e aae7 	CALL SUBOPT_0x1D6
                 _0x2060126:
0092a2 940e b0ea 	CALL SUBOPT_0x2B9
0092a4 940e aaec 	CALL SUBOPT_0x1D7
0092a6 2766      	CLR  R22
0092a7 2777      	CLR  R23
0092a8 940e a3f6 	CALL SUBOPT_0xAD
0092aa 940e b02a 	CALL SUBOPT_0x29D
0092ac 940e b4a7 	CALL __SUBD12
0092ae 937f      	PUSH R23
0092af 936f      	PUSH R22
0092b0 93ff      	PUSH R31
0092b1 93ef      	PUSH R30
0092b2 940e b0f1 	CALL SUBOPT_0x2BA
0092b4 91af      	POP  R26
0092b5 91bf      	POP  R27
0092b6 918f      	POP  R24
0092b7 919f      	POP  R25
0092b8 2766      	CLR  R22
0092b9 2777      	CLR  R23
0092ba 940e b4ac 	CALL __SUBD21
0092bc 81ee      	LDD  R30,Y+6
0092bd 81ff      	LDD  R31,Y+6+1
0092be 940e ac03 	CALL SUBOPT_0x203
0092c0 940e b522 	CALL __CWD1
0092c2 940e b599 	CALL __DIVD21U
                +
0092c4 5fee     +SUBI R30 , LOW ( - 2 )
0092c5 4fff     +SBCI R31 , HIGH ( - 2 )
0092c6 4f6f     +SBCI R22 , BYTE3 ( - 2 )
0092c7 4f7f     +SBCI R23 , BYTE4 ( - 2 )
                 	__ADDD1N 2
0092c8 940e aad3 	CALL SUBOPT_0x1D2
                +
0092ca 81ae     +LDD R26 , Y + 6
0092cb 81bf     +LDD R27 , Y + 6 + 1
0092cc 965e     +ADIW R26 , 30
0092cd 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 6,30
0092cf e011      	LDI  R17,LOW(1)
0092d0 940e a13a 	CALL SUBOPT_0x42
                +
0092d2 3fa7     +CPI R26 , LOW ( 0xFF7 )
0092d3 e0ef     +LDI R30 , HIGH ( 0xFF7 )
0092d4 07be     +CPC R27 , R30
0092d5 e0e0     +LDI R30 , BYTE3 ( 0xFF7 )
0092d6 078e     +CPC R24 , R30
0092d7 e0e0     +LDI R30 , BYTE4 ( 0xFF7 )
0092d8 079e     +CPC R25 , R30
                 	__CPD2N 0xFF7
0092d9 f008      	BRLO _0x2060127
0092da e012      	LDI  R17,LOW(2)
                 _0x2060127:
0092db 940e a13a 	CALL SUBOPT_0x42
                +
0092dd 3fa7     +CPI R26 , LOW ( 0xFFF7 )
0092de efef     +LDI R30 , HIGH ( 0xFFF7 )
0092df 07be     +CPC R27 , R30
0092e0 e0e0     +LDI R30 , BYTE3 ( 0xFFF7 )
0092e1 078e     +CPC R24 , R30
0092e2 e0e0     +LDI R30 , BYTE4 ( 0xFFF7 )
0092e3 079e     +CPC R25 , R30
                 	__CPD2N 0xFFF7
0092e4 f008      	BRLO _0x2060128
0092e5 e013      	LDI  R17,LOW(3)
                 _0x2060128:
0092e6 3013      	CPI  R17,3
0092e7 f439      	BRNE _0x2060129
0092e8 81ae      	LDD  R26,Y+6
0092e9 81bf      	LDD  R27,Y+6+1
0092ea 5aa2      	SUBI R26,LOW(-94)
0092eb 4fbf      	SBCI R27,HIGH(-94)
0092ec 940e b5fa 	CALL __GETD1P
0092ee c002      	RJMP _0x206022D
                 _0x2060129:
0092ef 940e b0f9 	CALL SUBOPT_0x2BB
                 _0x206022D:
                +
0092f1 81ae     +LDD R26 , Y + 6
0092f2 81bf     +LDD R27 , Y + 6 + 1
0092f3 9696     +ADIW R26 , 38
0092f4 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 6,38
0092f6 940e b0f9 	CALL SUBOPT_0x2BB
0092f8 937f      	PUSH R23
0092f9 936f      	PUSH R22
0092fa 93ff      	PUSH R31
0092fb 93ef      	PUSH R30
0092fc 940e b0f1 	CALL SUBOPT_0x2BA
0092fe 91af      	POP  R26
0092ff 91bf      	POP  R27
009300 918f      	POP  R24
009301 919f      	POP  R25
009302 940e b056 	CALL SUBOPT_0x2A4
                +
009304 81ae     +LDD R26 , Y + 6
009305 81bf     +LDD R27 , Y + 6 + 1
009306 969a     +ADIW R26 , 42
009307 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 6,42
009309 81ae      	LDD  R26,Y+6
00930a 81bf      	LDD  R27,Y+6+1
00930b 961e      	ADIW R26,14
00930c 940e a054 	CALL SUBOPT_0x23
00930e 940e b605 	CALL __PUTDP1
009310 81ae      	LDD  R26,Y+6
009311 81bf      	LDD  R27,Y+6+1
009312 9614      	ADIW R26,4
009313 e0e0      	LDI  R30,LOW(0)
009314 93ec      	ST   X,R30
009315 3013      	CPI  R17,3
009316 f011      	BREQ PC+3
009317 940c 937a 	JMP _0x206012B
009319 81ae      	LDD  R26,Y+6
00931a 81bf      	LDD  R27,Y+6+1
00931b 9615      	ADIW R26,5
00931c 93ec      	ST   X,R30
00931d 81ae      	LDD  R26,Y+6
00931e 81bf      	LDD  R27,Y+6+1
00931f 59ae      	SUBI R26,LOW(-98)
009320 4fbf      	SBCI R27,HIGH(-98)
009321 940e b5f6 	CALL __GETW1P
009323 940e a477 	CALL SUBOPT_0xBF
009325 940e b056 	CALL SUBOPT_0x2A4
                +
009327 81ae     +LDD R26 , Y + 6
009328 81bf     +LDD R27 , Y + 6 + 1
009329 9652     +ADIW R26 , 18
00932a 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 6,18
00932c 81ee      	LDD  R30,Y+6
00932d 81ff      	LDD  R31,Y+6+1
00932e 81a1      	LDD  R26,Z+1
00932f 93aa      	ST   -Y,R26
009330 81ef      	LDD  R30,Y+7
009331 85f8      	LDD  R31,Y+7+1
009332 96f2      	ADIW R30,50
009333 93fa      	ST   -Y,R31
009334 93ea      	ST   -Y,R30
009335 85e9      	LDD  R30,Y+9
009336 85fa      	LDD  R31,Y+9+1
009337 940e af73 	CALL SUBOPT_0x285
009339 940e 875e 	CALL _disk_read
00933b 30e0      	CPI  R30,0
00933c f511      	BRNE _0x206012D
00933d 81ee      	LDD  R30,Y+6
00933e 81ff      	LDD  R31,Y+6+1
00933f 940e b0c7 	CALL SUBOPT_0x2B5
009341 f4e9      	BRNE _0x206012D
009342 81ae      	LDD  R26,Y+6
009343 81bf      	LDD  R27,Y+6+1
009344 96d2      	ADIW R26,50
009345 940e b5fa 	CALL __GETD1P
                +
009347 35e2     +CPI R30 , LOW ( 0x41615252 )
009348 e5a2     +LDI R26 , HIGH ( 0x41615252 )
009349 07fa     +CPC R31 , R26
00934a e6a1     +LDI R26 , BYTE3 ( 0x41615252 )
00934b 076a     +CPC R22 , R26
00934c e4a1     +LDI R26 , BYTE4 ( 0x41615252 )
00934d 077a     +CPC R23 , R26
                 	__CPD1N 0x41615252
00934e f481      	BRNE _0x206012D
00934f 81ee      	LDD  R30,Y+6
009350 81ff      	LDD  R31,Y+6+1
009351 96f2      	ADIW R30,50
009352 51ec      	SUBI R30,LOW(-484)
009353 4ffe      	SBCI R31,HIGH(-484)
009354 01df      	MOVW R26,R30
009355 940e b5fa 	CALL __GETD1P
                +
009357 37e2     +CPI R30 , LOW ( 0x61417272 )
009358 e7a2     +LDI R26 , HIGH ( 0x61417272 )
009359 07fa     +CPC R31 , R26
00935a e4a1     +LDI R26 , BYTE3 ( 0x61417272 )
00935b 076a     +CPC R22 , R26
00935c e6a1     +LDI R26 , BYTE4 ( 0x61417272 )
00935d 077a     +CPC R23 , R26
                 	__CPD1N 0x61417272
00935e f009      	BREQ _0x206012E
                 _0x206012D:
00935f c01a      	RJMP _0x206012C
                 _0x206012E:
009360 81ee      	LDD  R30,Y+6
009361 81ff      	LDD  R31,Y+6+1
009362 96f2      	ADIW R30,50
009363 51e4      	SUBI R30,LOW(-492)
009364 4ffe      	SBCI R31,HIGH(-492)
009365 01df      	MOVW R26,R30
009366 940e b5fa 	CALL __GETD1P
                +
009368 81ae     +LDD R26 , Y + 6
009369 81bf     +LDD R27 , Y + 6 + 1
00936a 961a     +ADIW R26 , 10
00936b 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 6,10
00936d 81ee      	LDD  R30,Y+6
00936e 81ff      	LDD  R31,Y+6+1
00936f 96f2      	ADIW R30,50
009370 51e8      	SUBI R30,LOW(-488)
009371 4ffe      	SBCI R31,HIGH(-488)
009372 01df      	MOVW R26,R30
009373 940e b5fa 	CALL __GETD1P
                +
009375 81ae     +LDD R26 , Y + 6
009376 81bf     +LDD R27 , Y + 6 + 1
009377 961e     +ADIW R26 , 14
009378 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 6,14
                 _0x206012C:
                 _0x206012B:
00937a 81ae      	LDD  R26,Y+6
00937b 81bf      	LDD  R27,Y+6+1
00937c 931c      	ST   X,R17
00937d 969e      	ADIW R26,46
00937e 940e a2c9 	CALL SUBOPT_0x7C
009380 81ae      	LDD  R26,Y+6
009381 81bf      	LDD  R27,Y+6+1
009382 9656      	ADIW R26,22
009383 940e a2c9 	CALL SUBOPT_0x7C
009385 e5a4      	LDI  R26,LOW(_Fsid_G103)
009386 e1ba      	LDI  R27,HIGH(_Fsid_G103)
009387 940e a273 	CALL SUBOPT_0x6E
                +
009389 81ae     +LDD R26 , Y + 6
00938a 81bf     +LDD R27 , Y + 6 + 1
00938b 9616     +ADIW R26 , 6
00938c 93ed     +ST X + , R30
00938d 93fc     +ST X , R31
                 	__PUTW1SNS 6,6
                 _0x20E0011:
00938e e0e0      	LDI  R30,LOW(0)
                 _0x20E0010:
00938f 940e b6a1 	CALL __LOADLOCR6
009391 966f      	ADIW R28,31
009392 9508      	RET
                 _validate_G103:
009393 940e abb5 	CALL SUBOPT_0x1F7
009395 9730      	SBIW R30,0
009396 f071      	BREQ _0x2060130
009397 81aa      	LDD  R26,Y+2
009398 81bb      	LDD  R27,Y+2+1
009399 91ec      	LD   R30,X
00939a 30e0      	CPI  R30,0
00939b f049      	BREQ _0x2060130
00939c 81ea      	LDD  R30,Y+2
00939d 81fb      	LDD  R31,Y+2+1
00939e 81a6      	LDD  R26,Z+6
00939f 81b7      	LDD  R27,Z+7
0093a0 81e8      	LD   R30,Y
0093a1 81f9      	LDD  R31,Y+1
0093a2 17ea      	CP   R30,R26
0093a3 07fb      	CPC  R31,R27
0093a4 f011      	BREQ _0x206012F
                 _0x2060130:
0093a5 e0e9      	LDI  R30,LOW(9)
0093a6 c00a      	RJMP _0x20E000F
                 _0x206012F:
0093a7 81ea      	LDD  R30,Y+2
0093a8 81fb      	LDD  R31,Y+2+1
0093a9 81a1      	LDD  R26,Z+1
0093aa 940e 8754 	CALL _disk_status
0093ac 70e1      	ANDI R30,LOW(0x1)
0093ad f011      	BREQ _0x2060132
0093ae e0e3      	LDI  R30,LOW(3)
0093af c001      	RJMP _0x20E000F
                 _0x2060132:
0093b0 e0e0      	LDI  R30,LOW(0)
                 _0x20E000F:
0093b1 9624      	ADIW R28,4
0093b2 9508      	RET
                 _f_mount:
0093b3 940e a285 	CALL SUBOPT_0x71
0093b5 81ac      	LDD  R26,Y+4
0093b6 30a1      	CPI  R26,LOW(0x1)
0093b7 f010      	BRLO _0x2060133
0093b8 e0eb      	LDI  R30,LOW(11)
0093b9 c01f      	RJMP _0x20E000E
                 _0x2060133:
0093ba 81ec      	LDD  R30,Y+4
0093bb 940e b0df 	CALL SUBOPT_0x2B7
0093bd 0fae      	ADD  R26,R30
0093be 1fbf      	ADC  R27,R31
0093bf 910d      	LD   R16,X+
0093c0 911c      	LD   R17,X
0093c1 2e00      	MOV  R0,R16
0093c2 2a01      	OR   R0,R17
0093c3 f019      	BREQ _0x2060134
0093c4 01d8      	MOVW R26,R16
0093c5 e0e0      	LDI  R30,LOW(0)
0093c6 93ec      	ST   X,R30
                 _0x2060134:
0093c7 81ea      	LDD  R30,Y+2
0093c8 81fb      	LDD  R31,Y+2+1
0093c9 9730      	SBIW R30,0
0093ca f021      	BREQ _0x2060135
0093cb 81aa      	LDD  R26,Y+2
0093cc 81bb      	LDD  R27,Y+2+1
0093cd e0e0      	LDI  R30,LOW(0)
0093ce 93ec      	ST   X,R30
                 _0x2060135:
0093cf 81ec      	LDD  R30,Y+4
0093d0 940e b0df 	CALL SUBOPT_0x2B7
0093d2 0fea      	ADD  R30,R26
0093d3 1ffb      	ADC  R31,R27
0093d4 81aa      	LDD  R26,Y+2
0093d5 81bb      	LDD  R27,Y+2+1
0093d6 83a0      	STD  Z+0,R26
0093d7 83b1      	STD  Z+1,R27
0093d8 e0e0      	LDI  R30,LOW(0)
                 _0x20E000E:
0093d9 8119      	LDD  R17,Y+1
0093da 8108      	LDD  R16,Y+0
0093db 9625      	ADIW R28,5
0093dc 9508      	RET
                 _f_open:
0093dd 93aa      	ST   -Y,R26
0093de 97a2      	SBIW R28,34
0093df 940e b69c 	CALL __SAVELOCR4
0093e1 a5a9      	LDD  R26,Y+41
0093e2 a5ba      	LDD  R27,Y+41+1
0093e3 940e a5dc 	CALL SUBOPT_0xFC
0093e5 a1ee      	LDD  R30,Y+38
0093e6 71ef      	ANDI R30,LOW(0x1F)
0093e7 a3ee      	STD  Y+38,R30
0093e8 01fe      	MOVW R30,R28
0093e9 96b7      	ADIW R30,39
0093ea 93fa      	ST   -Y,R31
0093eb 93ea      	ST   -Y,R30
0093ec 940e a1e9 	CALL SUBOPT_0x5C
0093ee a5ea      	LDD  R30,Y+42
0093ef 71ee      	ANDI R30,LOW(0x1E)
0093f0 2fae      	MOV  R26,R30
0093f1 ddb4      	RCALL _chk_mounted
0093f2 2f1e      	MOV  R17,R30
0093f3 3010      	CPI  R17,0
0093f4 f011      	BREQ _0x2060136
0093f5 2fe1      	MOV  R30,R17
0093f6 c10f      	RJMP _0x20E000D
                 _0x2060136:
0093f7 01fe      	MOVW R30,R28
0093f8 9634      	ADIW R30,4
0093f9 a3ec      	STD  Y+36,R30
0093fa a3fd      	STD  Y+36+1,R31
0093fb 940e a180 	CALL SUBOPT_0x4D
0093fd a5a9      	LDD  R26,Y+41
0093fe a5ba      	LDD  R27,Y+41+1
0093ff dcf0      	RCALL _follow_path_G103
009400 2f1e      	MOV  R17,R30
009401 a1ee      	LDD  R30,Y+38
009402 71ec      	ANDI R30,LOW(0x1C)
009403 f411      	BRNE PC+3
009404 940c 9499 	JMP _0x2060137
009406 9728      	SBIW R28,8
009407 3010      	CPI  R17,0
009408 f089      	BREQ _0x2060138
009409 3014      	CPI  R17,4
00940a f421      	BRNE _0x2060139
00940b 01de      	MOVW R26,R28
00940c 9658      	ADIW R26,24
00940d dbdb      	RCALL _dir_register_G103
00940e 2f1e      	MOV  R17,R30
                 _0x2060139:
00940f 3010      	CPI  R17,0
009410 f019      	BREQ _0x206013A
009411 2fe1      	MOV  R30,R17
009412 9628      	ADIW R28,8
009413 c0f2      	RJMP _0x20E000D
                 _0x206013A:
009414 a5ee      	LDD  R30,Y+46
009415 60e8      	ORI  R30,8
009416 a7ee      	STD  Y+46,R30
                +
009417 a52a     +LDD R18 , Y + 42
009418 a53b     +LDD R19 , Y + 42 + 1
                 	__GETWRS 18,19,42
009419 c066      	RJMP _0x206013B
                 _0x2060138:
00941a a5ee      	LDD  R30,Y+46
00941b 70e4      	ANDI R30,LOW(0x4)
00941c f019      	BREQ _0x206013C
00941d e0e8      	LDI  R30,LOW(8)
00941e 9628      	ADIW R28,8
00941f c0e6      	RJMP _0x20E000D
                 _0x206013C:
                +
009420 a52a     +LDD R18 , Y + 42
009421 a53b     +LDD R19 , Y + 42 + 1
                 	__GETWRS 18,19,42
009422 2e02      	MOV  R0,R18
009423 2a03      	OR   R0,R19
009424 f021      	BREQ _0x206013E
009425 01f9      	MOVW R30,R18
009426 85e3      	LDD  R30,Z+11
009427 71e1      	ANDI R30,LOW(0x11)
009428 f019      	BREQ _0x206013D
                 _0x206013E:
009429 e0e7      	LDI  R30,LOW(7)
00942a 9628      	ADIW R28,8
00942b c0da      	RJMP _0x20E000D
                 _0x206013D:
00942c a5ee      	LDD  R30,Y+46
00942d 70e8      	ANDI R30,LOW(0x8)
00942e f411      	BRNE PC+3
00942f 940c 9480 	JMP _0x2060140
009431 940e b0b2 	CALL SUBOPT_0x2B1
009433 940e b517 	CALL __LSLD16
009435 937f      	PUSH R23
009436 936f      	PUSH R22
009437 93ff      	PUSH R31
009438 93ef      	PUSH R30
009439 940e b0b6 	CALL SUBOPT_0x2B2
00943b 91af      	POP  R26
00943c 91bf      	POP  R27
00943d 918f      	POP  R24
00943e 919f      	POP  R25
00943f 940e b0bb 	CALL SUBOPT_0x2B3
009441 940e a34c 	CALL SUBOPT_0x8D
009443 01f9      	MOVW R30,R18
009444 9674      	ADIW R30,20
009445 e0a0      	LDI  R26,LOW(0)
009446 e0b0      	LDI  R27,HIGH(0)
009447 83a0      	STD  Z+0,R26
009448 83b1      	STD  Z+1,R27
009449 01f9      	MOVW R30,R18
00944a 967a      	ADIW R30,26
00944b 83a0      	STD  Z+0,R26
00944c 83b1      	STD  Z+1,R27
00944d 01f9      	MOVW R30,R18
00944e 967c      	ADIW R30,28
00944f 940e b015 	CALL SUBOPT_0x299
009451 940e aaf1 	CALL SUBOPT_0x1D8
009453 8da8      	LDD  R26,Y+24
009454 8db9      	LDD  R27,Y+24+1
009455 9614      	ADIW R26,4
009456 e0e1      	LDI  R30,LOW(1)
009457 93ec      	ST   X,R30
009458 8da8      	LDD  R26,Y+24
009459 8db9      	LDD  R27,Y+24+1
00945a 969e      	ADIW R26,46
00945b 940e af88 	CALL SUBOPT_0x288
00945d 940e a2a0 	CALL SUBOPT_0x75
00945f 940e b67e 	CALL __CPD10
009461 f0a1      	BREQ _0x2060141
009462 940e ac62 	CALL SUBOPT_0x213
009464 940e a3b4 	CALL SUBOPT_0xA1
009466 d892      	RCALL _remove_chain_G103
009467 2f1e      	MOV  R17,R30
009468 3010      	CPI  R17,0
009469 f019      	BREQ _0x2060142
00946a 2fe1      	MOV  R30,R17
00946b 9628      	ADIW R28,8
00946c c099      	RJMP _0x20E000D
                 _0x2060142:
00946d 940e a2a0 	CALL SUBOPT_0x75
00946f 940e a49c 	CALL SUBOPT_0xC7
                +
009471 8da8     +LDD R26 , Y + 24
009472 8db9     +LDD R27 , Y + 24 + 1
009473 961a     +ADIW R26 , 10
009474 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 24,10
                 _0x2060141:
009476 940e ac62 	CALL SUBOPT_0x213
009478 940e a16e 	CALL SUBOPT_0x49
00947a 940e b101 	CALL SUBOPT_0x2BC
00947c f019      	BREQ _0x2060143
00947d 2fe1      	MOV  R30,R17
00947e 9628      	ADIW R28,8
00947f c086      	RJMP _0x20E000D
                 _0x2060143:
                 _0x2060140:
                 _0x206013B:
009480 a5ee      	LDD  R30,Y+46
009481 70e8      	ANDI R30,LOW(0x8)
009482 f0a1      	BREQ _0x2060144
009483 01f9      	MOVW R30,R18
009484 963b      	ADIW R30,11
009485 e0a0      	LDI  R26,LOW(0)
009486 83a0      	STD  Z+0,R26
009487 940e 89f9 	CALL _get_fattime
009489 940e a395 	CALL SUBOPT_0x9B
                +
00948b 01d9     +MOVW R26 , R18
00948c 961e     +ADIW R26 , 14
00948d 940e b605+CALL __PUTDP1
                 	__PUTD1RNS 18,14
00948f 8da8      	LDD  R26,Y+24
009490 8db9      	LDD  R27,Y+24+1
009491 9614      	ADIW R26,4
009492 e0e1      	LDI  R30,LOW(1)
009493 93ec      	ST   X,R30
009494 a5ee      	LDD  R30,Y+46
009495 62e0      	ORI  R30,0x20
009496 a7ee      	STD  Y+46,R30
                 _0x2060144:
009497 9628      	ADIW R28,8
009498 c019      	RJMP _0x2060145
                 _0x2060137:
009499 3010      	CPI  R17,0
00949a f011      	BREQ _0x2060146
00949b 2fe1      	MOV  R30,R17
00949c c069      	RJMP _0x20E000D
                 _0x2060146:
                +
00949d a12a     +LDD R18 , Y + 34
00949e a13b     +LDD R19 , Y + 34 + 1
                 	__GETWRS 18,19,34
00949f 2e02      	MOV  R0,R18
0094a0 2a03      	OR   R0,R19
0094a1 f021      	BREQ _0x2060148
0094a2 01f9      	MOVW R30,R18
0094a3 85e3      	LDD  R30,Z+11
0094a4 71e0      	ANDI R30,LOW(0x10)
0094a5 f011      	BREQ _0x2060147
                 _0x2060148:
0094a6 e0e4      	LDI  R30,LOW(4)
0094a7 c05e      	RJMP _0x20E000D
                 _0x2060147:
0094a8 a1ee      	LDD  R30,Y+38
0094a9 70e2      	ANDI R30,LOW(0x2)
0094aa f021      	BREQ _0x206014B
0094ab 01f9      	MOVW R30,R18
0094ac 85e3      	LDD  R30,Z+11
0094ad 70e1      	ANDI R30,LOW(0x1)
0094ae f409      	BRNE _0x206014C
                 _0x206014B:
0094af c002      	RJMP _0x206014A
                 _0x206014C:
0094b0 e0e7      	LDI  R30,LOW(7)
0094b1 c054      	RJMP _0x20E000D
                 _0x206014A:
                 _0x2060145:
0094b2 89a8      	LDD  R26,Y+16
0094b3 89b9      	LDD  R27,Y+16+1
0094b4 969e      	ADIW R26,46
0094b5 940e b5fa 	CALL __GETD1P
                +
0094b7 a5a9     +LDD R26 , Y + 41
0094b8 a5ba     +LDD R27 , Y + 41 + 1
0094b9 965a     +ADIW R26 , 26
0094ba 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 41,26
0094bc a1ea      	LDD  R30,Y+34
0094bd a1fb      	LDD  R31,Y+34+1
                +
0094be a5a9     +LDD R26 , Y + 41
0094bf a5ba     +LDD R27 , Y + 41 + 1
0094c0 965e     +ADIW R26 , 30
0094c1 93ed     +ST X + , R30
0094c2 93fc     +ST X , R31
                 	__PUTW1SNS 41,30
0094c3 a1ee      	LDD  R30,Y+38
                +
0094c4 a5a9     +LDD R26 , Y + 41
0094c5 a5ba     +LDD R27 , Y + 41 + 1
0094c6 9614     +ADIW R26 , 4
0094c7 93ec     +ST X , R30
                 	__PUTB1SNS 41,4
0094c8 940e b0b2 	CALL SUBOPT_0x2B1
0094ca 940e b517 	CALL __LSLD16
0094cc 937f      	PUSH R23
0094cd 936f      	PUSH R22
0094ce 93ff      	PUSH R31
0094cf 93ef      	PUSH R30
0094d0 940e b0b6 	CALL SUBOPT_0x2B2
0094d2 91af      	POP  R26
0094d3 91bf      	POP  R27
0094d4 918f      	POP  R24
0094d5 919f      	POP  R25
0094d6 940e b0bb 	CALL SUBOPT_0x2B3
                +
0094d8 a5a9     +LDD R26 , Y + 41
0094d9 a5ba     +LDD R27 , Y + 41 + 1
0094da 961e     +ADIW R26 , 14
0094db 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 41,14
0094dd 01d9      	MOVW R26,R18
0094de 965c      	ADIW R26,28
0094df 940e b5fa 	CALL __GETD1P
                +
0094e1 a5a9     +LDD R26 , Y + 41
0094e2 a5ba     +LDD R27 , Y + 41 + 1
0094e3 961a     +ADIW R26 , 10
0094e4 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 41,10
0094e6 a5a9      	LDD  R26,Y+41
0094e7 a5ba      	LDD  R27,Y+41+1
0094e8 9616      	ADIW R26,6
0094e9 940e a2c9 	CALL SUBOPT_0x7C
0094eb a5a9      	LDD  R26,Y+41
0094ec a5ba      	LDD  R27,Y+41+1
0094ed 9615      	ADIW R26,5
0094ee efef      	LDI  R30,LOW(255)
0094ef 93ec      	ST   X,R30
0094f0 a5a9      	LDD  R26,Y+41
0094f1 a5ba      	LDD  R27,Y+41+1
0094f2 9656      	ADIW R26,22
0094f3 940e a2c9 	CALL SUBOPT_0x7C
0094f5 89e8      	LDD  R30,Y+16
0094f6 89f9      	LDD  R31,Y+16+1
0094f7 a5a9      	LDD  R26,Y+41
0094f8 a5ba      	LDD  R27,Y+41+1
0094f9 93ed      	ST   X+,R30
0094fa 93fc      	ST   X,R31
0094fb 89a8      	LDD  R26,Y+16
0094fc 89b9      	LDD  R27,Y+16+1
0094fd 9616      	ADIW R26,6
0094fe 940e b5f6 	CALL __GETW1P
                +
009500 a5a9     +LDD R26 , Y + 41
009501 a5ba     +LDD R27 , Y + 41 + 1
009502 9612     +ADIW R26 , 2
009503 93ed     +ST X + , R30
009504 93fc     +ST X , R31
                 	__PUTW1SNS 41,2
009505 e0e0      	LDI  R30,LOW(0)
                 _0x20E000D:
009506 940e b6a3 	CALL __LOADLOCR4
009508 96ab      	ADIW R28,43
009509 9508      	RET
                 _f_read:
00950a 93ba      	ST   -Y,R27
00950b 93aa      	ST   -Y,R26
00950c 972e      	SBIW R28,14
00950d 940e b69a 	CALL __SAVELOCR6
00950f 8de8      	LDD  R30,Y+24
009510 8df9      	LDD  R31,Y+24+1
009511 83ee      	STD  Y+6,R30
009512 83ff      	STD  Y+6+1,R31
009513 89ac      	LDD  R26,Y+20
009514 89bd      	LDD  R27,Y+20+1
009515 940e a5dc 	CALL SUBOPT_0xFC
009517 940e b106 	CALL SUBOPT_0x2BD
009519 940e b10b 	CALL SUBOPT_0x2BE
00951b 940e b110 	CALL SUBOPT_0x2BF
00951d f011      	BREQ _0x206014D
00951e 2fe1      	MOV  R30,R17
00951f c14b      	RJMP _0x20E000C
                 _0x206014D:
009520 8dea      	LDD  R30,Y+26
009521 8dfb      	LDD  R31,Y+26+1
009522 81a4      	LDD  R26,Z+4
009523 78a0      	ANDI R26,LOW(0x80)
009524 f011      	BREQ _0x206014E
009525 e0e2      	LDI  R30,LOW(2)
009526 c144      	RJMP _0x20E000C
                 _0x206014E:
009527 8dea      	LDD  R30,Y+26
009528 8dfb      	LDD  R31,Y+26+1
009529 81a4      	LDD  R26,Z+4
00952a 70a1      	ANDI R26,LOW(0x1)
00952b f411      	BRNE _0x206014F
00952c e0e7      	LDI  R30,LOW(7)
00952d c13d      	RJMP _0x20E000C
                 _0x206014F:
00952e 8dea      	LDD  R30,Y+26
00952f 8dfb      	LDD  R31,Y+26+1
                +
009530 85a2     +LDD R26 , Z + 10
009531 85b3     +LDD R27 , Z + 10 + 1
009532 8584     +LDD R24 , Z + 10 + 2
009533 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
009534 939f      	PUSH R25
009535 938f      	PUSH R24
009536 93bf      	PUSH R27
009537 93af      	PUSH R26
009538 940e b117 	CALL SUBOPT_0x2C0
00953a 91ef      	POP  R30
00953b 91ff      	POP  R31
00953c 916f      	POP  R22
00953d 917f      	POP  R23
00953e 940e b4a7 	CALL __SUBD12
009540 940e adaf 	CALL SUBOPT_0x23C
009542 940e a118 	CALL SUBOPT_0x3E
009544 89ae      	LDD  R26,Y+22
009545 89bf      	LDD  R27,Y+22+1
009546 2788      	CLR  R24
009547 2799      	CLR  R25
009548 940e b690 	CALL __CPD12
00954a f420      	BRSH _0x2060150
00954b 85e8      	LDD  R30,Y+8
00954c 85f9      	LDD  R31,Y+8+1
00954d 8bee      	STD  Y+22,R30
00954e 8bff      	STD  Y+22+1,R31
                 _0x2060150:
                 _0x2060152:
00954f 89ee      	LDD  R30,Y+22
009550 89ff      	LDD  R31,Y+22+1
009551 9730      	SBIW R30,0
009552 f411      	BRNE PC+3
009553 940c 966a 	JMP _0x2060153
009555 940e b117 	CALL SUBOPT_0x2C0
009557 940e b11e 	CALL SUBOPT_0x2C1
009559 f011      	BREQ PC+3
00955a 940c 9637 	JMP _0x2060154
00955c 8dea      	LDD  R30,Y+26
00955d 8dfb      	LDD  R31,Y+26+1
00955e 8005      	LDD  R0,Z+5
00955f 940e b106 	CALL SUBOPT_0x2BD
009561 81e2      	LDD  R30,Z+2
009562 160e      	CP   R0,R30
009563 f198      	BRLO _0x2060155
009564 940e b117 	CALL SUBOPT_0x2C0
009566 940e b68a 	CALL __CPD02
009568 f431      	BRNE _0x2060156
009569 8daa      	LDD  R26,Y+26
00956a 8dbb      	LDD  R27,Y+26+1
00956b 961e      	ADIW R26,14
00956c 940e b5fa 	CALL __GETD1P
00956e c008      	RJMP _0x2060157
                 _0x2060156:
00956f 940e b106 	CALL SUBOPT_0x2BD
009571 940e b10b 	CALL SUBOPT_0x2BE
009573 940e b123 	CALL SUBOPT_0x2C2
009575 940e 8bd8 	CALL _get_fat
                 _0x2060157:
009577 940e adb4 	CALL SUBOPT_0x23D
009579 940e afe5 	CALL SUBOPT_0x292
00957b 940e af7b 	CALL SUBOPT_0x286
00957d f420      	BRSH _0x2060159
00957e 940e b128 	CALL SUBOPT_0x2C3
009580 e0e2      	LDI  R30,LOW(2)
009581 c0e9      	RJMP _0x20E000C
                 _0x2060159:
009582 940e afe5 	CALL SUBOPT_0x292
009584 940e a091 	CALL SUBOPT_0x2B
009586 f421      	BRNE _0x206015A
009587 940e b128 	CALL SUBOPT_0x2C3
009589 e0e1      	LDI  R30,LOW(1)
00958a c0e0      	RJMP _0x20E000C
                 _0x206015A:
00958b 940e 9faa 	CALL SUBOPT_0xA
                +
00958d 8daa     +LDD R26 , Y + 26
00958e 8dbb     +LDD R27 , Y + 26 + 1
00958f 9652     +ADIW R26 , 18
009590 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 26,18
009592 8daa      	LDD  R26,Y+26
009593 8dbb      	LDD  R27,Y+26+1
009594 9615      	ADIW R26,5
009595 e0e0      	LDI  R30,LOW(0)
009596 93ec      	ST   X,R30
                 _0x2060155:
009597 940e b106 	CALL SUBOPT_0x2BD
009599 940e b10b 	CALL SUBOPT_0x2BE
00959b 940e b123 	CALL SUBOPT_0x2C2
00959d d865      	RCALL _clust2sect
00959e 940e a50d 	CALL SUBOPT_0xD8
0095a0 940e b67e 	CALL __CPD10
0095a2 f421      	BRNE _0x206015B
0095a3 940e b128 	CALL SUBOPT_0x2C3
0095a5 e0e2      	LDI  R30,LOW(2)
0095a6 c0c4      	RJMP _0x20E000C
                 _0x206015B:
0095a7 940e b12f 	CALL SUBOPT_0x2C4
0095a9 940e 9fa5 	CALL SUBOPT_0x9
0095ab 940e a390 	CALL SUBOPT_0x9A
0095ad 940e a503 	CALL SUBOPT_0xD6
0095af 89ae      	LDD  R26,Y+22
0095b0 89bf      	LDD  R27,Y+22+1
0095b1 940e b134 	CALL SUBOPT_0x2C5
0095b3 f411      	BRNE PC+3
0095b4 940c 9602 	JMP _0x206015C
0095b6 8dea      	LDD  R30,Y+26
0095b7 8dfb      	LDD  R31,Y+26+1
0095b8 81e5      	LDD  R30,Z+5
0095b9 940e b0a8 	CALL SUBOPT_0x2AF
0095bb 010f      	MOVW R0,R30
0095bc 940e b106 	CALL SUBOPT_0x2BD
0095be 81e2      	LDD  R30,Z+2
0095bf 940e a95d 	CALL SUBOPT_0x192
0095c1 f450      	BRSH _0x206015D
0095c2 940e b106 	CALL SUBOPT_0x2BD
0095c4 940e ac03 	CALL SUBOPT_0x203
0095c6 01df      	MOVW R26,R30
0095c7 940e b12f 	CALL SUBOPT_0x2C4
0095c9 1bae      	SUB  R26,R30
0095ca 0bbf      	SBC  R27,R31
0095cb 01ad      	MOVW R20,R26
                 _0x206015D:
0095cc 940e b106 	CALL SUBOPT_0x2BD
0095ce 940e b13c 	CALL SUBOPT_0x2C6
                +
0095d0 85ef     +LDD R30 , Y + 15
0095d1 89f8     +LDD R31 , Y + 15 + 1
0095d2 8969     +LDD R22 , Y + 15 + 2
0095d3 897a     +LDD R23 , Y + 15 + 3
                 	__GETD1S 15
0095d4 940e b62a 	CALL __PUTPARD1
0095d6 2fa4      	MOV  R26,R20
0095d7 940e 875e 	CALL _disk_read
0095d9 30e0      	CPI  R30,0
0095da f021      	BREQ _0x206015E
0095db 940e b128 	CALL SUBOPT_0x2C3
0095dd e0e1      	LDI  R30,LOW(1)
0095de c08c      	RJMP _0x20E000C
                 _0x206015E:
0095df 8dea      	LDD  R30,Y+26
0095e0 8dfb      	LDD  R31,Y+26+1
0095e1 81a4      	LDD  R26,Z+4
0095e2 74a0      	ANDI R26,LOW(0x40)
0095e3 f029      	BREQ _0x2060160
0095e4 940e b143 	CALL SUBOPT_0x2C7
0095e6 940e b14b 	CALL SUBOPT_0x2C8
0095e8 f008      	BRLO _0x2060161
                 _0x2060160:
0095e9 c013      	RJMP _0x206015F
                 _0x2060161:
0095ea 940e b143 	CALL SUBOPT_0x2C7
0095ec 940e b153 	CALL SUBOPT_0x2C9
0095ee 81ae      	LDD  R26,Y+6
0095ef 81bf      	LDD  R27,Y+6+1
0095f0 2788      	CLR  R24
0095f1 2799      	CLR  R25
0095f2 940e a024 	CALL SUBOPT_0x1B
0095f4 8dec      	LDD  R30,Y+28
0095f5 8dfd      	LDD  R31,Y+28+1
0095f6 96b0      	ADIW R30,32
0095f7 93fa      	ST   -Y,R31
0095f8 93ea      	ST   -Y,R30
0095f9 e0a0      	LDI  R26,LOW(512)
0095fa e0b2      	LDI  R27,HIGH(512)
0095fb 940e 8a87 	CALL _mem_cpy_G103
                 _0x206015F:
0095fd 8daa      	LDD  R26,Y+26
0095fe 8dbb      	LDD  R27,Y+26+1
0095ff 940e b15c 	CALL SUBOPT_0x2CA
009601 c053      	RJMP _0x2060151
                 _0x206015C:
009602 8dea      	LDD  R30,Y+26
009603 8dfb      	LDD  R31,Y+26+1
009604 81a4      	LDD  R26,Z+4
009605 74a0      	ANDI R26,LOW(0x40)
009606 f089      	BREQ _0x2060162
009607 940e b106 	CALL SUBOPT_0x2BD
009609 940e b167 	CALL SUBOPT_0x2CB
00960b 8ded      	LDD  R30,Y+29
00960c 8dfe      	LDD  R31,Y+29+1
00960d 940e b16f 	CALL SUBOPT_0x2CC
00960f f021      	BREQ _0x2060163
009610 940e b128 	CALL SUBOPT_0x2C3
009612 e0e1      	LDI  R30,LOW(1)
009613 c057      	RJMP _0x20E000C
                 _0x2060163:
009614 8daa      	LDD  R26,Y+26
009615 8dbb      	LDD  R27,Y+26+1
009616 940e b17a 	CALL SUBOPT_0x2CD
                 _0x2060162:
009618 940e b143 	CALL SUBOPT_0x2C7
00961a 940e b690 	CALL __CPD12
00961c f079      	BREQ _0x2060164
00961d 940e b106 	CALL SUBOPT_0x2BD
00961f 940e b167 	CALL SUBOPT_0x2CB
                +
009621 85ef     +LDD R30 , Y + 15
009622 89f8     +LDD R31 , Y + 15 + 1
009623 8969     +LDD R22 , Y + 15 + 2
009624 897a     +LDD R23 , Y + 15 + 3
                 	__GETD1S 15
009625 940e b0c0 	CALL SUBOPT_0x2B4
009627 f021      	BREQ _0x2060165
009628 940e b128 	CALL SUBOPT_0x2C3
00962a e0e1      	LDI  R30,LOW(1)
00962b c03f      	RJMP _0x20E000C
                 _0x2060165:
                 _0x2060164:
00962c 940e a497 	CALL SUBOPT_0xC6
                +
00962e 8daa     +LDD R26 , Y + 26
00962f 8dbb     +LDD R27 , Y + 26 + 1
009630 9656     +ADIW R26 , 22
009631 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 26,22
009633 8daa      	LDD  R26,Y+26
009634 8dbb      	LDD  R27,Y+26+1
009635 940e b17f 	CALL SUBOPT_0x2CE
                 _0x2060154:
009637 8daa      	LDD  R26,Y+26
009638 8dbb      	LDD  R27,Y+26+1
009639 940e b184 	CALL SUBOPT_0x2CF
00963b e0a0      	LDI  R26,LOW(512)
00963c e0b2      	LDI  R27,HIGH(512)
00963d 1bae      	SUB  R26,R30
00963e 0bbf      	SBC  R27,R31
00963f 019d      	MOVW R18,R26
009640 89ee      	LDD  R30,Y+22
009641 89ff      	LDD  R31,Y+22+1
009642 17e2      	CP   R30,R18
009643 07f3      	CPC  R31,R19
009644 f410      	BRSH _0x2060166
                +
009645 892e     +LDD R18 , Y + 22
009646 893f     +LDD R19 , Y + 22 + 1
                 	__GETWRS 18,19,22
                 _0x2060166:
009647 940e a78a 	CALL SUBOPT_0x144
009649 8dac      	LDD  R26,Y+28
00964a 8dbd      	LDD  R27,Y+28+1
00964b 940e b184 	CALL SUBOPT_0x2CF
00964d 8dac      	LDD  R26,Y+28
00964e 8dbd      	LDD  R27,Y+28+1
00964f 9690      	ADIW R26,32
009650 940e a024 	CALL SUBOPT_0x1B
009652 01d9      	MOVW R26,R18
009653 940e 8a87 	CALL _mem_cpy_G103
                 _0x2060151:
009655 01f9      	MOVW R30,R18
009656 940e a956 	CALL SUBOPT_0x191
009658 8dea      	LDD  R30,Y+26
009659 8dfb      	LDD  R31,Y+26+1
00965a 940e b189 	CALL SUBOPT_0x2D0
00965c 01d0      	MOVW R26,R0
00965d 940e b605 	CALL __PUTDP1
00965f 89ac      	LDD  R26,Y+20
009660 89bd      	LDD  R27,Y+20+1
009661 940e b192 	CALL SUBOPT_0x2D1
009663 89ee      	LDD  R30,Y+22
009664 89ff      	LDD  R31,Y+22+1
009665 1be2      	SUB  R30,R18
009666 0bf3      	SBC  R31,R19
009667 8bee      	STD  Y+22,R30
009668 8bff      	STD  Y+22+1,R31
009669 cee5      	RJMP _0x2060152
                 _0x2060153:
00966a e0e0      	LDI  R30,LOW(0)
                 _0x20E000C:
00966b 940e b6a1 	CALL __LOADLOCR6
00966d 966c      	ADIW R28,28
00966e 9508      	RET
                 _f_write:
00966f 93ba      	ST   -Y,R27
009670 93aa      	ST   -Y,R26
009671 972a      	SBIW R28,10
009672 940e b69a 	CALL __SAVELOCR6
009674 89ec      	LDD  R30,Y+20
009675 89fd      	LDD  R31,Y+20+1
009676 83ee      	STD  Y+6,R30
009677 83ff      	STD  Y+6+1,R31
009678 89a8      	LDD  R26,Y+16
009679 89b9      	LDD  R27,Y+16+1
00967a 940e a5dc 	CALL SUBOPT_0xFC
00967c 940e b199 	CALL SUBOPT_0x2D2
00967e 940e b19e 	CALL SUBOPT_0x2D3
009680 940e b110 	CALL SUBOPT_0x2BF
009682 f011      	BREQ _0x2060167
009683 2fe1      	MOV  R30,R17
009684 c185      	RJMP _0x20E000B
                 _0x2060167:
009685 89ee      	LDD  R30,Y+22
009686 89ff      	LDD  R31,Y+22+1
009687 81a4      	LDD  R26,Z+4
009688 78a0      	ANDI R26,LOW(0x80)
009689 f011      	BREQ _0x2060168
00968a e0e2      	LDI  R30,LOW(2)
00968b c17e      	RJMP _0x20E000B
                 _0x2060168:
00968c 89ee      	LDD  R30,Y+22
00968d 89ff      	LDD  R31,Y+22+1
00968e 81a4      	LDD  R26,Z+4
00968f 70a2      	ANDI R26,LOW(0x2)
009690 f411      	BRNE _0x2060169
009691 e0e7      	LDI  R30,LOW(7)
009692 c177      	RJMP _0x20E000B
                 _0x2060169:
009693 89ee      	LDD  R30,Y+22
009694 89ff      	LDD  R31,Y+22+1
                +
009695 85a2     +LDD R26 , Z + 10
009696 85b3     +LDD R27 , Z + 10 + 1
009697 8584     +LDD R24 , Z + 10 + 2
009698 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
009699 89ea      	LDD  R30,Y+18
00969a 89fb      	LDD  R31,Y+18+1
00969b 940e b056 	CALL SUBOPT_0x2A4
00969d 937f      	PUSH R23
00969e 936f      	PUSH R22
00969f 93ff      	PUSH R31
0096a0 93ef      	PUSH R30
0096a1 940e b1a3 	CALL SUBOPT_0x2D4
0096a3 91af      	POP  R26
0096a4 91bf      	POP  R27
0096a5 918f      	POP  R24
0096a6 919f      	POP  R25
0096a7 940e b695 	CALL __CPD21
0096a9 f418      	BRSH _0x206016A
0096aa e0e0      	LDI  R30,LOW(0)
0096ab 8bea      	STD  Y+18,R30
0096ac 8beb      	STD  Y+18+1,R30
                 _0x206016A:
                 _0x206016C:
0096ad 89ea      	LDD  R30,Y+18
0096ae 89fb      	LDD  R31,Y+18+1
0096af 9730      	SBIW R30,0
0096b0 f411      	BRNE PC+3
0096b1 940c 97f0 	JMP _0x206016D
0096b3 940e b1a9 	CALL SUBOPT_0x2D5
0096b5 940e b11e 	CALL SUBOPT_0x2C1
0096b7 f011      	BREQ PC+3
0096b8 940c 97b7 	JMP _0x206016E
0096ba 89ee      	LDD  R30,Y+22
0096bb 89ff      	LDD  R31,Y+22+1
0096bc 8005      	LDD  R0,Z+5
0096bd 940e b199 	CALL SUBOPT_0x2D2
0096bf 81e2      	LDD  R30,Z+2
0096c0 160e      	CP   R0,R30
0096c1 f410      	BRSH PC+3
0096c2 940c 970c 	JMP _0x206016F
0096c4 89ae      	LDD  R26,Y+22
0096c5 89bf      	LDD  R27,Y+22+1
0096c6 9616      	ADIW R26,6
0096c7 940e b063 	CALL SUBOPT_0x2A6
0096c9 f4b1      	BRNE _0x2060170
0096ca 89ae      	LDD  R26,Y+22
0096cb 89bf      	LDD  R27,Y+22+1
0096cc 961e      	ADIW R26,14
0096cd 940e b5fa 	CALL __GETD1P
0096cf 940e a50d 	CALL SUBOPT_0xD8
0096d1 940e b67e 	CALL __CPD10
0096d3 f459      	BRNE _0x2060171
0096d4 940e b199 	CALL SUBOPT_0x2D2
0096d6 940e b1b0 	CALL SUBOPT_0x2D6
0096d8 940e a503 	CALL SUBOPT_0xD6
                +
0096da 89ae     +LDD R26 , Y + 22
0096db 89bf     +LDD R27 , Y + 22 + 1
0096dc 961e     +ADIW R26 , 14
0096dd 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 22,14
                 _0x2060171:
0096df c00a      	RJMP _0x2060172
                 _0x2060170:
0096e0 940e b199 	CALL SUBOPT_0x2D2
0096e2 940e b19e 	CALL SUBOPT_0x2D3
0096e4 940e b123 	CALL SUBOPT_0x2C2
0096e6 940e 8d48 	CALL _create_chain_G103
0096e8 940e a503 	CALL SUBOPT_0xD6
                 _0x2060172:
0096ea 940e a497 	CALL SUBOPT_0xC6
0096ec 940e b67e 	CALL __CPD10
0096ee f409      	BRNE _0x2060173
0096ef c100      	RJMP _0x206016D
                 _0x2060173:
0096f0 940e 9fa5 	CALL SUBOPT_0x9
0096f2 940e b00d 	CALL SUBOPT_0x298
0096f4 f421      	BRNE _0x2060174
0096f5 940e b1b5 	CALL SUBOPT_0x2D7
0096f7 e0e2      	LDI  R30,LOW(2)
0096f8 c111      	RJMP _0x20E000B
                 _0x2060174:
0096f9 940e a17e 	CALL SUBOPT_0x4C
0096fb f421      	BRNE _0x2060175
0096fc 940e b1b5 	CALL SUBOPT_0x2D7
0096fe e0e1      	LDI  R30,LOW(1)
0096ff c10a      	RJMP _0x20E000B
                 _0x2060175:
009700 940e a497 	CALL SUBOPT_0xC6
                +
009702 89ae     +LDD R26 , Y + 22
009703 89bf     +LDD R27 , Y + 22 + 1
009704 9652     +ADIW R26 , 18
009705 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 22,18
009707 89ae      	LDD  R26,Y+22
009708 89bf      	LDD  R27,Y+22+1
009709 9615      	ADIW R26,5
00970a e0e0      	LDI  R30,LOW(0)
00970b 93ec      	ST   X,R30
                 _0x206016F:
00970c 89ee      	LDD  R30,Y+22
00970d 89ff      	LDD  R31,Y+22+1
00970e 81a4      	LDD  R26,Z+4
00970f 74a0      	ANDI R26,LOW(0x40)
009710 f089      	BREQ _0x2060176
009711 940e b199 	CALL SUBOPT_0x2D2
009713 940e b1bc 	CALL SUBOPT_0x2D8
009715 8de9      	LDD  R30,Y+25
009716 8dfa      	LDD  R31,Y+25+1
009717 940e b16f 	CALL SUBOPT_0x2CC
009719 f021      	BREQ _0x2060177
00971a 940e b1b5 	CALL SUBOPT_0x2D7
00971c e0e1      	LDI  R30,LOW(1)
00971d c0ec      	RJMP _0x20E000B
                 _0x2060177:
00971e 89ae      	LDD  R26,Y+22
00971f 89bf      	LDD  R27,Y+22+1
009720 940e b17a 	CALL SUBOPT_0x2CD
                 _0x2060176:
009722 940e b199 	CALL SUBOPT_0x2D2
009724 940e b19e 	CALL SUBOPT_0x2D3
009726 940e b123 	CALL SUBOPT_0x2C2
009728 940e 8e03 	CALL _clust2sect
00972a 940e adaf 	CALL SUBOPT_0x23C
00972c 940e a118 	CALL SUBOPT_0x3E
00972e 940e b67e 	CALL __CPD10
009730 f421      	BRNE _0x2060178
009731 940e b1b5 	CALL SUBOPT_0x2D7
009733 e0e2      	LDI  R30,LOW(2)
009734 c0d5      	RJMP _0x20E000B
                 _0x2060178:
009735 940e b1c4 	CALL SUBOPT_0x2D9
009737 940e a492 	CALL SUBOPT_0xC5
009739 940e a390 	CALL SUBOPT_0x9A
00973b 940e adaf 	CALL SUBOPT_0x23C
00973d 89aa      	LDD  R26,Y+18
00973e 89bb      	LDD  R27,Y+18+1
00973f 940e b134 	CALL SUBOPT_0x2C5
009741 f411      	BRNE PC+3
009742 940c 978e 	JMP _0x2060179
009744 89ee      	LDD  R30,Y+22
009745 89ff      	LDD  R31,Y+22+1
009746 81e5      	LDD  R30,Z+5
009747 940e b0a8 	CALL SUBOPT_0x2AF
009749 010f      	MOVW R0,R30
00974a 940e b199 	CALL SUBOPT_0x2D2
00974c 81e2      	LDD  R30,Z+2
00974d 940e a95d 	CALL SUBOPT_0x192
00974f f450      	BRSH _0x206017A
009750 940e b199 	CALL SUBOPT_0x2D2
009752 940e ac03 	CALL SUBOPT_0x203
009754 01df      	MOVW R26,R30
009755 940e b1c4 	CALL SUBOPT_0x2D9
009757 1bae      	SUB  R26,R30
009758 0bbf      	SBC  R27,R31
009759 01ad      	MOVW R20,R26
                 _0x206017A:
00975a 940e b199 	CALL SUBOPT_0x2D2
00975c 940e b13c 	CALL SUBOPT_0x2C6
00975e 940e a1b4 	CALL SUBOPT_0x54
009760 2fa4      	MOV  R26,R20
009761 940e 87c3 	CALL _disk_write
009763 30e0      	CPI  R30,0
009764 f021      	BREQ _0x206017B
009765 940e b1b5 	CALL SUBOPT_0x2D7
009767 e0e1      	LDI  R30,LOW(1)
009768 c0a1      	RJMP _0x20E000B
                 _0x206017B:
009769 940e b1c9 	CALL SUBOPT_0x2DA
00976b 940e b14b 	CALL SUBOPT_0x2C8
00976d f4d8      	BRSH _0x206017C
00976e 89ee      	LDD  R30,Y+22
00976f 89ff      	LDD  R31,Y+22+1
009770 96b0      	ADIW R30,32
009771 940e b19e 	CALL SUBOPT_0x2D3
                +
009773 89a6     +LDD R26 , Z + 22
009774 89b7     +LDD R27 , Z + 22 + 1
009775 8d80     +LDD R24 , Z + 22 + 2
009776 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
009777 940e a486 	CALL SUBOPT_0xC2
009779 940e b153 	CALL SUBOPT_0x2C9
00977b 85a8      	LDD  R26,Y+8
00977c 85b9      	LDD  R27,Y+8+1
00977d 2788      	CLR  R24
00977e 2799      	CLR  R25
00977f 940e a024 	CALL SUBOPT_0x1B
009781 e0a0      	LDI  R26,LOW(512)
009782 e0b2      	LDI  R27,HIGH(512)
009783 940e 8a87 	CALL _mem_cpy_G103
009785 89ae      	LDD  R26,Y+22
009786 89bf      	LDD  R27,Y+22+1
009787 940e b17a 	CALL SUBOPT_0x2CD
                 _0x206017C:
009789 89ae      	LDD  R26,Y+22
00978a 89bf      	LDD  R27,Y+22+1
00978b 940e b15c 	CALL SUBOPT_0x2CA
00978d c04d      	RJMP _0x206016B
                 _0x2060179:
00978e 940e b1c9 	CALL SUBOPT_0x2DA
009790 940e b690 	CALL __CPD12
009792 f0c9      	BREQ _0x206017D
009793 940e b1a9 	CALL SUBOPT_0x2D5
009795 010d      	MOVW R0,R26
009796 940e b1a3 	CALL SUBOPT_0x2D4
009798 01d0      	MOVW R26,R0
009799 940e b695 	CALL __CPD21
00979b f458      	BRSH _0x206017F
00979c 940e b199 	CALL SUBOPT_0x2D2
00979e 940e b1bc 	CALL SUBOPT_0x2D8
0097a0 940e a1b4 	CALL SUBOPT_0x54
0097a2 e0a1      	LDI  R26,LOW(1)
0097a3 940e 875e 	CALL _disk_read
0097a5 30e0      	CPI  R30,0
0097a6 f409      	BRNE _0x2060180
                 _0x206017F:
0097a7 c004      	RJMP _0x206017E
                 _0x2060180:
0097a8 940e b1b5 	CALL SUBOPT_0x2D7
0097aa e0e1      	LDI  R30,LOW(1)
0097ab c05e      	RJMP _0x20E000B
                 _0x206017E:
                 _0x206017D:
0097ac 940e a118 	CALL SUBOPT_0x3E
                +
0097ae 89ae     +LDD R26 , Y + 22
0097af 89bf     +LDD R27 , Y + 22 + 1
0097b0 9656     +ADIW R26 , 22
0097b1 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 22,22
0097b3 89ae      	LDD  R26,Y+22
0097b4 89bf      	LDD  R27,Y+22+1
0097b5 940e b17f 	CALL SUBOPT_0x2CE
                 _0x206016E:
0097b7 89ae      	LDD  R26,Y+22
0097b8 89bf      	LDD  R27,Y+22+1
0097b9 940e b184 	CALL SUBOPT_0x2CF
0097bb e0a0      	LDI  R26,LOW(512)
0097bc e0b2      	LDI  R27,HIGH(512)
0097bd 1bae      	SUB  R26,R30
0097be 0bbf      	SBC  R27,R31
0097bf 019d      	MOVW R18,R26
0097c0 89ea      	LDD  R30,Y+18
0097c1 89fb      	LDD  R31,Y+18+1
0097c2 17e2      	CP   R30,R18
0097c3 07f3      	CPC  R31,R19
0097c4 f410      	BRSH _0x2060181
                +
0097c5 892a     +LDD R18 , Y + 18
0097c6 893b     +LDD R19 , Y + 18 + 1
                 	__GETWRS 18,19,18
                 _0x2060181:
0097c7 89ae      	LDD  R26,Y+22
0097c8 89bf      	LDD  R27,Y+22+1
0097c9 940e b184 	CALL SUBOPT_0x2CF
0097cb 89ae      	LDD  R26,Y+22
0097cc 89bf      	LDD  R27,Y+22+1
0097cd 9690      	ADIW R26,32
0097ce 940e a024 	CALL SUBOPT_0x1B
0097d0 940e a8ec 	CALL SUBOPT_0x17D
0097d2 01d9      	MOVW R26,R18
0097d3 940e 8a87 	CALL _mem_cpy_G103
0097d5 89ae      	LDD  R26,Y+22
0097d6 89bf      	LDD  R27,Y+22+1
0097d7 9614      	ADIW R26,4
0097d8 91ec      	LD   R30,X
0097d9 64e0      	ORI  R30,0x40
0097da 93ec      	ST   X,R30
                 _0x206016B:
0097db 01f9      	MOVW R30,R18
0097dc 940e a956 	CALL SUBOPT_0x191
0097de 89ee      	LDD  R30,Y+22
0097df 89ff      	LDD  R31,Y+22+1
0097e0 940e b189 	CALL SUBOPT_0x2D0
0097e2 01d0      	MOVW R26,R0
0097e3 940e b605 	CALL __PUTDP1
0097e5 89a8      	LDD  R26,Y+16
0097e6 89b9      	LDD  R27,Y+16+1
0097e7 940e b192 	CALL SUBOPT_0x2D1
0097e9 89ea      	LDD  R30,Y+18
0097ea 89fb      	LDD  R31,Y+18+1
0097eb 1be2      	SUB  R30,R18
0097ec 0bf3      	SBC  R31,R19
0097ed 8bea      	STD  Y+18,R30
0097ee 8bfb      	STD  Y+18+1,R31
0097ef cebd      	RJMP _0x206016C
                 _0x206016D:
0097f0 940e b1a9 	CALL SUBOPT_0x2D5
0097f2 010d      	MOVW R0,R26
0097f3 940e b1a3 	CALL SUBOPT_0x2D4
0097f5 01d0      	MOVW R26,R0
0097f6 940e b690 	CALL __CPD12
0097f8 f450      	BRSH _0x2060182
0097f9 89ae      	LDD  R26,Y+22
0097fa 89bf      	LDD  R27,Y+22+1
0097fb 9616      	ADIW R26,6
0097fc 940e b5fa 	CALL __GETD1P
                +
0097fe 89ae     +LDD R26 , Y + 22
0097ff 89bf     +LDD R27 , Y + 22 + 1
009800 961a     +ADIW R26 , 10
009801 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 22,10
                 _0x2060182:
009803 89ae      	LDD  R26,Y+22
009804 89bf      	LDD  R27,Y+22+1
009805 9614      	ADIW R26,4
009806 91ec      	LD   R30,X
009807 62e0      	ORI  R30,0x20
009808 93ec      	ST   X,R30
009809 e0e0      	LDI  R30,LOW(0)
                 _0x20E000B:
00980a 940e b6a1 	CALL __LOADLOCR6
00980c 9668      	ADIW R28,24
00980d 9508      	RET
                 _f_sync:
00980e 93ba      	ST   -Y,R27
00980f 93aa      	ST   -Y,R26
009810 9724      	SBIW R28,4
009811 940e b69c 	CALL __SAVELOCR4
009813 940e b040 	CALL SUBOPT_0x2A1
009815 93fa      	ST   -Y,R31
009816 93ea      	ST   -Y,R30
009817 85ea      	LDD  R30,Y+10
009818 85fb      	LDD  R31,Y+10+1
009819 940e b110 	CALL SUBOPT_0x2BF
00981b f011      	BREQ PC+3
00981c 940c 988e 	JMP _0x2060183
00981e 85e8      	LDD  R30,Y+8
00981f 85f9      	LDD  R31,Y+8+1
009820 81a4      	LDD  R26,Z+4
009821 72a0      	ANDI R26,LOW(0x20)
009822 f411      	BRNE PC+3
009823 940c 988e 	JMP _0x2060184
009825 81a4      	LDD  R26,Z+4
009826 74a0      	ANDI R26,LOW(0x40)
009827 f0a1      	BREQ _0x2060185
009828 940e b040 	CALL SUBOPT_0x2A1
00982a 81e1      	LDD  R30,Z+1
00982b 93ea      	ST   -Y,R30
00982c 85e9      	LDD  R30,Y+9
00982d 85fa      	LDD  R31,Y+9+1
00982e 96b0      	ADIW R30,32
00982f 93fa      	ST   -Y,R31
009830 93ea      	ST   -Y,R30
009831 85eb      	LDD  R30,Y+11
009832 85fc      	LDD  R31,Y+11+1
009833 940e b16f 	CALL SUBOPT_0x2CC
009835 f011      	BREQ _0x2060186
009836 e0e1      	LDI  R30,LOW(1)
009837 c057      	RJMP _0x20E000A
                 _0x2060186:
009838 85a8      	LDD  R26,Y+8
009839 85b9      	LDD  R27,Y+8+1
00983a 940e b17a 	CALL SUBOPT_0x2CD
                 _0x2060185:
00983c 940e b040 	CALL SUBOPT_0x2A1
00983e 93fa      	ST   -Y,R31
00983f 93ea      	ST   -Y,R30
009840 85ea      	LDD  R30,Y+10
009841 85fb      	LDD  R31,Y+10+1
                +
009842 8da2     +LDD R26 , Z + 26
009843 8db3     +LDD R27 , Z + 26 + 1
009844 8d84     +LDD R24 , Z + 26 + 2
009845 8d95     +LDD R25 , Z + 26 + 3
                 	__GETD2Z 26
009846 940e b101 	CALL SUBOPT_0x2BC
009848 f011      	BREQ PC+3
009849 940c 988e 	JMP _0x2060187
00984b 85a8      	LDD  R26,Y+8
00984c 85b9      	LDD  R27,Y+8+1
00984d 965e      	ADIW R26,30
00984e 912d      	LD   R18,X+
00984f 913c      	LD   R19,X
009850 01d9      	MOVW R26,R18
009851 961b      	ADIW R26,11
009852 91ec      	LD   R30,X
009853 62e0      	ORI  R30,0x20
009854 93ec      	ST   X,R30
009855 85a8      	LDD  R26,Y+8
009856 85b9      	LDD  R27,Y+8+1
009857 961a      	ADIW R26,10
009858 940e b5fa 	CALL __GETD1P
                +
00985a 01d9     +MOVW R26 , R18
00985b 965c     +ADIW R26 , 28
00985c 940e b605+CALL __PUTDP1
                 	__PUTD1RNS 18,28
00985e 85a8      	LDD  R26,Y+8
00985f 85b9      	LDD  R27,Y+8+1
009860 961e      	ADIW R26,14
009861 940e b5f6 	CALL __GETW1P
                +
009863 01d9     +MOVW R26 , R18
009864 965a     +ADIW R26 , 26
009865 93ed     +ST X + , R30
009866 93fc     +ST X , R31
                 	__PUTW1RNS 18,26
009867 85e8      	LDD  R30,Y+8
009868 85f9      	LDD  R31,Y+8+1
                +
009869 85a6     +LDD R26 , Z + 14
00986a 85b7     +LDD R27 , Z + 14 + 1
00986b 8980     +LDD R24 , Z + 14 + 2
00986c 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00986d 01fd      	MOVW R30,R26
00986e 01bc      	MOVW R22,R24
00986f 940e b512 	CALL __LSRD16
                +
009871 01d9     +MOVW R26 , R18
009872 9654     +ADIW R26 , 20
009873 93ed     +ST X + , R30
009874 93fc     +ST X , R31
                 	__PUTW1RNS 18,20
009875 940e 89f9 	CALL _get_fattime
009877 940e a395 	CALL SUBOPT_0x9B
                +
009879 01d9     +MOVW R26 , R18
00987a 9656     +ADIW R26 , 22
00987b 940e b605+CALL __PUTDP1
                 	__PUTD1RNS 18,22
00987d 85a8      	LDD  R26,Y+8
00987e 85b9      	LDD  R27,Y+8+1
00987f 9614      	ADIW R26,4
009880 91ec      	LD   R30,X
009881 7def      	ANDI R30,0xDF
009882 93ec      	ST   X,R30
009883 940e b040 	CALL SUBOPT_0x2A1
009885 9634      	ADIW R30,4
009886 e0a1      	LDI  R26,LOW(1)
009887 83a0      	STD  Z+0,R26
009888 940e b040 	CALL SUBOPT_0x2A1
00988a 01df      	MOVW R26,R30
00988b 940e 8b66 	CALL _sync_G103
00988d 2f1e      	MOV  R17,R30
                 _0x2060187:
                 _0x2060184:
                 _0x2060183:
00988e 2fe1      	MOV  R30,R17
                 _0x20E000A:
00988f 940e b6a3 	CALL __LOADLOCR4
009891 962a      	ADIW R28,10
009892 9508      	RET
                 _f_close:
009893 93ba      	ST   -Y,R27
009894 93aa      	ST   -Y,R26
009895 931a      	ST   -Y,R17
009896 81a9      	LDD  R26,Y+1
009897 81ba      	LDD  R27,Y+1+1
009898 df75      	RCALL _f_sync
009899 2f1e      	MOV  R17,R30
00989a 3010      	CPI  R17,0
00989b f421      	BRNE _0x2060188
00989c 81a9      	LDD  R26,Y+1
00989d 81ba      	LDD  R27,Y+1+1
00989e 940e a5dc 	CALL SUBOPT_0xFC
                 _0x2060188:
0098a0 2fe1      	MOV  R30,R17
0098a1 c29f      	RJMP _0x20E0005
                 _f_lseek:
0098a2 940e b62f 	CALL __PUTPARD2
0098a4 9760      	SBIW R28,16
0098a5 931a      	ST   -Y,R17
0098a6 940e b1d1 	CALL SUBOPT_0x2DB
0098a8 93fa      	ST   -Y,R31
0098a9 93ea      	ST   -Y,R30
0098aa 89ef      	LDD  R30,Y+23
0098ab 8df8      	LDD  R31,Y+23+1
0098ac 940e b110 	CALL SUBOPT_0x2BF
0098ae f009      	BREQ _0x2060191
0098af c18f      	RJMP _0x20E0009
                 _0x2060191:
0098b0 89ed      	LDD  R30,Y+21
0098b1 89fe      	LDD  R31,Y+21+1
0098b2 81a4      	LDD  R26,Z+4
0098b3 78a0      	ANDI R26,LOW(0x80)
0098b4 f011      	BREQ _0x2060192
0098b5 e0e2      	LDI  R30,LOW(2)
0098b6 c189      	RJMP _0x20E0008
                 _0x2060192:
0098b7 940e b1d6 	CALL SUBOPT_0x2DC
0098b9 940e b1dc 	CALL SUBOPT_0x2DD
0098bb 940e b690 	CALL __CPD12
0098bd f428      	BRSH _0x2060194
0098be 89ed      	LDD  R30,Y+21
0098bf 89fe      	LDD  R31,Y+21+1
0098c0 81a4      	LDD  R26,Z+4
0098c1 70a2      	ANDI R26,LOW(0x2)
0098c2 f009      	BREQ _0x2060195
                 _0x2060194:
0098c3 c004      	RJMP _0x2060193
                 _0x2060195:
0098c4 940e b1d6 	CALL SUBOPT_0x2DC
0098c6 940e b1e1 	CALL SUBOPT_0x2DE
                 _0x2060193:
0098c8 89ad      	LDD  R26,Y+21
0098c9 89be      	LDD  R27,Y+21+1
0098ca 9616      	ADIW R26,6
0098cb 940e af2c 	CALL SUBOPT_0x27D
0098cd 940e b03b 	CALL SUBOPT_0x2A0
0098cf 940e b020 	CALL SUBOPT_0x29B
0098d1 940e b1e6 	CALL SUBOPT_0x2DF
0098d3 9615      	ADIW R26,5
0098d4 efef      	LDI  R30,LOW(255)
0098d5 93ec      	ST   X,R30
0098d6 940e b1dc 	CALL SUBOPT_0x2DD
0098d8 940e b68a 	CALL __CPD02
0098da f010      	BRLO PC+3
0098db 940c 99e8 	JMP _0x2060196
0098dd 940e b1d1 	CALL SUBOPT_0x2DB
0098df 940e ac03 	CALL SUBOPT_0x203
0098e1 940e b522 	CALL __CWD1
                +
0098e3 e0a0     +LDI R26 , LOW ( 0x200 )
0098e4 e0b2     +LDI R27 , HIGH ( 0x200 )
0098e5 e080     +LDI R24 , BYTE3 ( 0x200 )
0098e6 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
0098e7 940e b543 	CALL __MULD12U
0098e9 940e aece 	CALL SUBOPT_0x26D
0098eb 940e ac06 	CALL SUBOPT_0x204
0098ed 940e b68a 	CALL __CPD02
0098ef f498      	BRSH _0x2060198
0098f0 940e b1ee 	CALL SUBOPT_0x2E0
0098f2 940e b1f3 	CALL SUBOPT_0x2E1
0098f4 937f      	PUSH R23
0098f5 936f      	PUSH R22
0098f6 93ff      	PUSH R31
0098f7 93ef      	PUSH R30
0098f8 940e b008 	CALL SUBOPT_0x297
0098fa 940e b1f3 	CALL SUBOPT_0x2E1
0098fc 91af      	POP  R26
0098fd 91bf      	POP  R27
0098fe 918f      	POP  R24
0098ff 919f      	POP  R25
009900 940e b695 	CALL __CPD21
009902 f408      	BRSH _0x2060199
                 _0x2060198:
009903 c021      	RJMP _0x2060197
                 _0x2060199:
009904 940e b008 	CALL SUBOPT_0x297
009906 940e a49c 	CALL SUBOPT_0xC7
009908 01df      	MOVW R26,R30
009909 01cb      	MOVW R24,R22
00990a 940e a1e4 	CALL SUBOPT_0x5B
00990c 940e a49c 	CALL SUBOPT_0xC7
00990e 940e b527 	CALL __COMD1
009910 940e b4b1 	CALL __ANDD12
009912 940e b1e6 	CALL SUBOPT_0x2DF
009914 9616      	ADIW R26,6
009915 940e b5fa 	CALL __GETD1P
009917 940e b1dc 	CALL SUBOPT_0x2DD
009919 940e b4ac 	CALL __SUBD21
                +
00991b 8ba9     +STD Y + 17 , R26
00991c 8bba     +STD Y + 17 + 1 , R27
00991d 8b8b     +STD Y + 17 + 2 , R24
00991e 8b9c     +STD Y + 17 + 3 , R25
                 	__PUTD2S 17
00991f 89ad      	LDD  R26,Y+21
009920 89be      	LDD  R27,Y+21+1
009921 9652      	ADIW R26,18
009922 940e b1fc 	CALL SUBOPT_0x2E2
009924 c02b      	RJMP _0x206019A
                 _0x2060197:
009925 89ad      	LDD  R26,Y+21
009926 89be      	LDD  R27,Y+21+1
009927 961e      	ADIW R26,14
009928 940e b1fc 	CALL SUBOPT_0x2E2
00992a 940e b203 	CALL SUBOPT_0x2E3
00992c 940e b67e 	CALL __CPD10
00992e f4f9      	BRNE _0x206019B
00992f 940e b1d1 	CALL SUBOPT_0x2DB
009931 940e b1b0 	CALL SUBOPT_0x2D6
009933 940e b208 	CALL SUBOPT_0x2E4
009935 940e b20d 	CALL SUBOPT_0x2E5
009937 940e b00d 	CALL SUBOPT_0x298
009939 f421      	BRNE _0x206019C
00993a 940e b212 	CALL SUBOPT_0x2E6
00993c e0e2      	LDI  R30,LOW(2)
00993d c102      	RJMP _0x20E0008
                 _0x206019C:
00993e 940e b20d 	CALL SUBOPT_0x2E5
009940 940e a091 	CALL SUBOPT_0x2B
009942 f421      	BRNE _0x206019D
009943 940e b212 	CALL SUBOPT_0x2E6
009945 e0e1      	LDI  R30,LOW(1)
009946 c0f9      	RJMP _0x20E0008
                 _0x206019D:
009947 940e b203 	CALL SUBOPT_0x2E3
                +
009949 89ad     +LDD R26 , Y + 21
00994a 89be     +LDD R27 , Y + 21 + 1
00994b 961e     +ADIW R26 , 14
00994c 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 21,14
                 _0x206019B:
00994e 940e b219 	CALL SUBOPT_0x2E7
                 _0x206019A:
009950 940e b203 	CALL SUBOPT_0x2E3
009952 940e b67e 	CALL __CPD10
009954 f411      	BRNE PC+3
009955 940c 99e8 	JMP _0x206019E
                 _0x206019F:
009957 940e a1e4 	CALL SUBOPT_0x5B
009959 940e b1dc 	CALL SUBOPT_0x2DD
00995b 940e b690 	CALL __CPD12
00995d f010      	BRLO PC+3
00995e 940c 99af 	JMP _0x20601A1
009960 89ed      	LDD  R30,Y+21
009961 89fe      	LDD  R31,Y+21+1
009962 81a4      	LDD  R26,Z+4
009963 70a2      	ANDI R26,LOW(0x2)
009964 f099      	BREQ _0x20601A2
009965 940e b1d1 	CALL SUBOPT_0x2DB
009967 940e b220 	CALL SUBOPT_0x2E8
009969 940e 8d48 	CALL _create_chain_G103
00996b 940e b208 	CALL SUBOPT_0x2E4
00996d 940e b203 	CALL SUBOPT_0x2E3
00996f 940e b67e 	CALL __CPD10
009971 f429      	BRNE _0x20601A3
009972 940e a1e4 	CALL SUBOPT_0x5B
009974 940e b1e1 	CALL SUBOPT_0x2DE
009976 c038      	RJMP _0x20601A1
                 _0x20601A3:
009977 c008      	RJMP _0x20601A4
                 _0x20601A2:
009978 940e b1d1 	CALL SUBOPT_0x2DB
00997a 940e b220 	CALL SUBOPT_0x2E8
00997c 940e 8bd8 	CALL _get_fat
00997e 940e b208 	CALL SUBOPT_0x2E4
                 _0x20601A4:
009980 940e b20d 	CALL SUBOPT_0x2E5
009982 940e a091 	CALL SUBOPT_0x2B
009984 f421      	BRNE _0x20601A5
009985 940e b212 	CALL SUBOPT_0x2E6
009987 e0e1      	LDI  R30,LOW(1)
009988 c0b7      	RJMP _0x20E0008
                 _0x20601A5:
009989 940e b20d 	CALL SUBOPT_0x2E5
00998b 940e af7b 	CALL SUBOPT_0x286
00998d f048      	BRLO _0x20601A7
00998e 940e b1d1 	CALL SUBOPT_0x2DB
009990 940e b076 	CALL SUBOPT_0x2A9
009992 940e b20d 	CALL SUBOPT_0x2E5
009994 940e b695 	CALL __CPD21
009996 f020      	BRLO _0x20601A6
                 _0x20601A7:
009997 940e b212 	CALL SUBOPT_0x2E6
009999 e0e2      	LDI  R30,LOW(2)
00999a c0a5      	RJMP _0x20E0008
                 _0x20601A6:
00999b 940e b219 	CALL SUBOPT_0x2E7
00999d 940e b227 	CALL SUBOPT_0x2E9
00999f 940e aefa 	CALL SUBOPT_0x274
0099a1 940e b49d 	CALL __ADDD12
0099a3 01d0      	MOVW R26,R0
0099a4 940e b605 	CALL __PUTDP1
0099a6 940e aefa 	CALL SUBOPT_0x274
0099a8 940e b1ee 	CALL SUBOPT_0x2E0
0099aa 940e b4a7 	CALL __SUBD12
0099ac 940e b1e1 	CALL SUBOPT_0x2DE
0099ae cfa8      	RJMP _0x206019F
                 _0x20601A1:
0099af 940e b227 	CALL SUBOPT_0x2E9
0099b1 940e b1dc 	CALL SUBOPT_0x2DD
0099b3 940e b49d 	CALL __ADDD12
0099b5 01d0      	MOVW R26,R0
0099b6 940e b605 	CALL __PUTDP1
0099b8 940e b1dc 	CALL SUBOPT_0x2DD
                +
0099ba e0e0     +LDI R30 , LOW ( 0x200 )
0099bb e0f2     +LDI R31 , HIGH ( 0x200 )
0099bc e060     +LDI R22 , BYTE3 ( 0x200 )
0099bd e070     +LDI R23 , BYTE4 ( 0x200 )
                 	__GETD1N 0x200
0099be 940e b599 	CALL __DIVD21U
                +
0099c0 89ad     +LDD R26 , Y + 21
0099c1 89be     +LDD R27 , Y + 21 + 1
0099c2 9615     +ADIW R26 , 5
0099c3 93ec     +ST X , R30
                 	__PUTB1SNS 21,5
0099c4 940e b1ee 	CALL SUBOPT_0x2E0
0099c6 70f1      	ANDI R31,HIGH(0x1FF)
0099c7 9730      	SBIW R30,0
0099c8 f0f9      	BREQ _0x20601A9
0099c9 940e b1d1 	CALL SUBOPT_0x2DB
0099cb 940e b220 	CALL SUBOPT_0x2E8
0099cd 940e 8e03 	CALL _clust2sect
0099cf 940e b020 	CALL SUBOPT_0x29B
0099d1 940e af33 	CALL SUBOPT_0x27E
0099d3 940e b67e 	CALL __CPD10
0099d5 f421      	BRNE _0x20601AA
0099d6 940e b212 	CALL SUBOPT_0x2E6
0099d8 e0e2      	LDI  R30,LOW(2)
0099d9 c066      	RJMP _0x20E0008
                 _0x20601AA:
0099da 89ed      	LDD  R30,Y+21
0099db 89fe      	LDD  R31,Y+21+1
0099dc 81e5      	LDD  R30,Z+5
0099dd e0f0      	LDI  R31,0
0099de 940e affa 	CALL SUBOPT_0x295
0099e0 940e a390 	CALL SUBOPT_0x9A
0099e2 940e b020 	CALL SUBOPT_0x29B
0099e4 89ad      	LDD  R26,Y+21
0099e5 89be      	LDD  R27,Y+21+1
0099e6 940e b17f 	CALL SUBOPT_0x2CE
                 _0x20601A9:
                 _0x206019E:
                 _0x2060196:
0099e8 940e b22f 	CALL SUBOPT_0x2EA
0099ea 940e b11e 	CALL SUBOPT_0x2C1
0099ec f051      	BREQ _0x20601AC
0099ed 89ad      	LDD  R26,Y+21
0099ee 89be      	LDD  R27,Y+21+1
0099ef 9656      	ADIW R26,22
0099f0 940e b5fa 	CALL __GETD1P
0099f2 940e affa 	CALL SUBOPT_0x295
0099f4 940e b690 	CALL __CPD12
0099f6 f409      	BRNE _0x20601AD
                 _0x20601AC:
0099f7 c02e      	RJMP _0x20601AB
                 _0x20601AD:
0099f8 89ed      	LDD  R30,Y+21
0099f9 89fe      	LDD  R31,Y+21+1
0099fa 81a4      	LDD  R26,Z+4
0099fb 74a0      	ANDI R26,LOW(0x40)
0099fc f0a1      	BREQ _0x20601AE
0099fd 940e b1d1 	CALL SUBOPT_0x2DB
0099ff 81e1      	LDD  R30,Z+1
009a00 93ea      	ST   -Y,R30
009a01 89ee      	LDD  R30,Y+22
009a02 89ff      	LDD  R31,Y+22+1
009a03 96b0      	ADIW R30,32
009a04 940e b19e 	CALL SUBOPT_0x2D3
009a06 940e b16f 	CALL SUBOPT_0x2CC
009a08 f021      	BREQ _0x20601AF
009a09 940e b212 	CALL SUBOPT_0x2E6
009a0b e0e1      	LDI  R30,LOW(1)
009a0c c033      	RJMP _0x20E0008
                 _0x20601AF:
009a0d 89ad      	LDD  R26,Y+21
009a0e 89be      	LDD  R27,Y+21+1
009a0f 940e b17a 	CALL SUBOPT_0x2CD
                 _0x20601AE:
009a11 940e b1d1 	CALL SUBOPT_0x2DB
009a13 81e1      	LDD  R30,Z+1
009a14 93ea      	ST   -Y,R30
009a15 89ee      	LDD  R30,Y+22
009a16 89ff      	LDD  R31,Y+22+1
009a17 96b0      	ADIW R30,32
009a18 940e af4d 	CALL SUBOPT_0x281
009a1a f021      	BREQ _0x20601B0
009a1b 940e b212 	CALL SUBOPT_0x2E6
009a1d e0e1      	LDI  R30,LOW(1)
009a1e c021      	RJMP _0x20E0008
                 _0x20601B0:
009a1f 940e af33 	CALL SUBOPT_0x27E
                +
009a21 89ad     +LDD R26 , Y + 21
009a22 89be     +LDD R27 , Y + 21 + 1
009a23 9656     +ADIW R26 , 22
009a24 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 21,22
                 _0x20601AB:
009a26 940e b22f 	CALL SUBOPT_0x2EA
009a28 010d      	MOVW R0,R26
009a29 940e b1d6 	CALL SUBOPT_0x2DC
009a2b 01d0      	MOVW R26,R0
009a2c 940e b690 	CALL __CPD12
009a2e f480      	BRSH _0x20601B1
009a2f 89ad      	LDD  R26,Y+21
009a30 89be      	LDD  R27,Y+21+1
009a31 9616      	ADIW R26,6
009a32 940e b5fa 	CALL __GETD1P
                +
009a34 89ad     +LDD R26 , Y + 21
009a35 89be     +LDD R27 , Y + 21 + 1
009a36 961a     +ADIW R26 , 10
009a37 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 21,10
009a39 89ad      	LDD  R26,Y+21
009a3a 89be      	LDD  R27,Y+21+1
009a3b 9614      	ADIW R26,4
009a3c 91ec      	LD   R30,X
009a3d 62e0      	ORI  R30,0x20
009a3e 93ec      	ST   X,R30
                 _0x20601B1:
                 _0x20E0009:
009a3f 2fe1      	MOV  R30,R17
                 _0x20E0008:
009a40 8118      	LDD  R17,Y+0
009a41 9667      	ADIW R28,23
009a42 9508      	RET
                 _f_getfree:
009a43 93ba      	ST   -Y,R27
009a44 93aa      	ST   -Y,R26
009a45 9760      	SBIW R28,16
009a46 940e b69a 	CALL __SAVELOCR6
009a48 01fe      	MOVW R30,R28
009a49 967a      	ADIW R30,26
009a4a 93fa      	ST   -Y,R31
009a4b 93ea      	ST   -Y,R30
009a4c 940e ac62 	CALL SUBOPT_0x213
009a4e e0a0      	LDI  R26,LOW(0)
009a4f 940e 91a6 	CALL _chk_mounted
009a51 2f1e      	MOV  R17,R30
009a52 3010      	CPI  R17,0
009a53 f011      	BREQ _0x20601C3
009a54 2fe1      	MOV  R30,R17
009a55 c0cd      	RJMP _0x20E0006
                 _0x20601C3:
009a56 940e b199 	CALL SUBOPT_0x2D2
009a58 010f      	MOVW R0,R30
009a59 963e      	ADIW R30,14
009a5a 01df      	MOVW R26,R30
009a5b 940e b5fa 	CALL __GETD1P
009a5d 937f      	PUSH R23
009a5e 936f      	PUSH R22
009a5f 93ff      	PUSH R31
009a60 93ef      	PUSH R30
009a61 01d0      	MOVW R26,R0
009a62 965e      	ADIW R26,30
009a63 940e b5fa 	CALL __GETD1P
                +
009a65 50e2     +SUBI R30 , LOW ( 2 )
009a66 40f0     +SBCI R31 , HIGH ( 2 )
009a67 4060     +SBCI R22 , BYTE3 ( 2 )
009a68 4070     +SBCI R23 , BYTE4 ( 2 )
                 	__SUBD1N 2
009a69 91af      	POP  R26
009a6a 91bf      	POP  R27
009a6b 918f      	POP  R24
009a6c 919f      	POP  R25
009a6d 940e b690 	CALL __CPD12
009a6f f038      	BRLO _0x20601C4
009a70 940e b199 	CALL SUBOPT_0x2D2
009a72 963e      	ADIW R30,14
009a73 01df      	MOVW R26,R30
009a74 940e b5fa 	CALL __GETD1P
009a76 c0a7      	RJMP _0x20E0007
                 _0x20601C4:
009a77 940e b199 	CALL SUBOPT_0x2D2
009a79 8100      	LD   R16,Z
009a7a e0e0      	LDI  R30,LOW(0)
                +
009a7b 8bea     +STD Y + 18 , R30
009a7c 8beb     +STD Y + 18 + 1 , R30
009a7d 8bec     +STD Y + 18 + 2 , R30
009a7e 8bed     +STD Y + 18 + 3 , R30
                 	__CLRD1S 18
009a7f 3001      	CPI  R16,1
009a80 f5c9      	BRNE _0x20601C5
009a81 940e b02f 	CALL SUBOPT_0x29E
009a83 940e aae7 	CALL SUBOPT_0x1D6
                 _0x20601C7:
009a85 940e b199 	CALL SUBOPT_0x2D2
009a87 93fa      	ST   -Y,R31
009a88 93ea      	ST   -Y,R30
009a89 940e afe5 	CALL SUBOPT_0x292
009a8b 940e 8bd8 	CALL _get_fat
009a8d 940e a3be 	CALL SUBOPT_0xA3
009a8f 940e a16e 	CALL SUBOPT_0x49
009a91 940e a091 	CALL SUBOPT_0x2B
009a93 f411      	BRNE _0x20601C9
009a94 e0e1      	LDI  R30,LOW(1)
009a95 c08d      	RJMP _0x20E0006
                 _0x20601C9:
009a96 940e a16e 	CALL SUBOPT_0x49
009a98 940e b00d 	CALL SUBOPT_0x298
009a9a f411      	BRNE _0x20601CA
009a9b e0e2      	LDI  R30,LOW(2)
009a9c c086      	RJMP _0x20E0006
                 _0x20601CA:
009a9d 940e a3b9 	CALL SUBOPT_0xA2
009a9f 940e b67e 	CALL __CPD10
009aa1 f411      	BRNE _0x20601CB
009aa2 940e b236 	CALL SUBOPT_0x2EB
                 _0x20601CB:
009aa4 940e a199 	CALL SUBOPT_0x50
009aa6 940e a3e0 	CALL SUBOPT_0xA9
009aa8 940e aae7 	CALL SUBOPT_0x1D6
009aaa 937f      	PUSH R23
009aab 936f      	PUSH R22
009aac 93ff      	PUSH R31
009aad 93ef      	PUSH R30
009aae 940e b199 	CALL SUBOPT_0x2D2
009ab0 940e b076 	CALL SUBOPT_0x2A9
009ab2 91af      	POP  R26
009ab3 91bf      	POP  R27
009ab4 918f      	POP  R24
009ab5 919f      	POP  R25
009ab6 940e b695 	CALL __CPD21
009ab8 f260      	BRLO _0x20601C7
009ab9 c054      	RJMP _0x20601CC
                 _0x20601C5:
009aba 940e b199 	CALL SUBOPT_0x2D2
009abc 940e b076 	CALL SUBOPT_0x2A9
009abe 940e aae7 	CALL SUBOPT_0x1D6
009ac0 940e b199 	CALL SUBOPT_0x2D2
009ac2 96b2      	ADIW R30,34
009ac3 01df      	MOVW R26,R30
009ac4 940e b5fa 	CALL __GETD1P
009ac6 940e aad3 	CALL SUBOPT_0x1D2
009ac8 940e 9f57 	CALL SUBOPT_0x0
                 _0x20601CE:
009aca 2e02      	MOV  R0,R18
009acb 2a03      	OR   R0,R19
009acc f4d1      	BRNE _0x20601D0
009acd 940e b199 	CALL SUBOPT_0x2D2
009acf 93fa      	ST   -Y,R31
009ad0 93ea      	ST   -Y,R30
009ad1 940e a497 	CALL SUBOPT_0xC6
009ad3 940e a3e0 	CALL SUBOPT_0xA9
009ad5 940e a503 	CALL SUBOPT_0xD6
009ad7 9731      	SBIW R30,1
009ad8 4060      	SBCI R22,0
009ad9 4070      	SBCI R23,0
009ada 01df      	MOVW R26,R30
009adb 01cb      	MOVW R24,R22
009adc 940e b101 	CALL SUBOPT_0x2BC
009ade f011      	BREQ _0x20601D1
009adf 2fe1      	MOV  R30,R17
009ae0 c042      	RJMP _0x20E0006
                 _0x20601D1:
009ae1 940e b199 	CALL SUBOPT_0x2D2
009ae3 96f2      	ADIW R30,50
009ae4 01af      	MOVW R20,R30
                +
009ae5 e020     +LDI R18 , LOW ( 512 )
009ae6 e032     +LDI R19 , HIGH ( 512 )
                 	__GETWRN 18,19,512
                 _0x20601D0:
009ae7 3002      	CPI  R16,2
009ae8 f461      	BRNE _0x20601D2
009ae9 01da      	MOVW R26,R20
009aea 940e b5f6 	CALL __GETW1P
009aec 9730      	SBIW R30,0
009aed f411      	BRNE _0x20601D3
009aee 940e b236 	CALL SUBOPT_0x2EB
                 _0x20601D3:
                +
009af0 5f4e     +SUBI R20 , LOW ( - 2 )
009af1 4f5f     +SBCI R21 , HIGH ( - 2 )
                 	__ADDWRN 20,21,2
                +
009af2 5022     +SUBI R18 , LOW ( 2 )
009af3 4030     +SBCI R19 , HIGH ( 2 )
                 	__SUBWRN 18,19,2
009af4 c010      	RJMP _0x20601D4
                 _0x20601D2:
009af5 01da      	MOVW R26,R20
009af6 940e b5fa 	CALL __GETD1P
                +
009af8 7fef     +ANDI R30 , LOW ( 0xFFFFFFF )
009af9 7fff     +ANDI R31 , HIGH ( 0xFFFFFFF )
009afa 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFFF )
009afb 707f     +ANDI R23 , BYTE4 ( 0xFFFFFFF )
                 	__ANDD1N 0xFFFFFFF
009afc 940e b67e 	CALL __CPD10
009afe f411      	BRNE _0x20601D5
009aff 940e b236 	CALL SUBOPT_0x2EB
                 _0x20601D5:
                +
009b01 5f4c     +SUBI R20 , LOW ( - 4 )
009b02 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
                +
009b03 5024     +SUBI R18 , LOW ( 4 )
009b04 4030     +SBCI R19 , HIGH ( 4 )
                 	__SUBWRN 18,19,4
                 _0x20601D4:
009b05 940e a199 	CALL SUBOPT_0x50
009b07 9731      	SBIW R30,1
009b08 4060      	SBCI R22,0
009b09 4070      	SBCI R23,0
009b0a 940e aae7 	CALL SUBOPT_0x1D6
009b0c f009      	BREQ _0x20601CF
009b0d cfbc      	RJMP _0x20601CE
                 _0x20601CF:
                 _0x20601CC:
009b0e 940e b199 	CALL SUBOPT_0x2D2
009b10 963e      	ADIW R30,14
009b11 940e b02a 	CALL SUBOPT_0x29D
009b13 940e aaf1 	CALL SUBOPT_0x1D8
009b15 3003      	CPI  R16,3
009b16 f429      	BRNE _0x20601D6
009b17 940e b199 	CALL SUBOPT_0x2D2
009b19 9635      	ADIW R30,5
009b1a e0a1      	LDI  R26,LOW(1)
009b1b 83a0      	STD  Z+0,R26
                 _0x20601D6:
009b1c 940e a481 	CALL SUBOPT_0xC1
                 _0x20E0007:
009b1e 8da8      	LDD  R26,Y+24
009b1f 8db9      	LDD  R27,Y+24+1
009b20 940e b605 	CALL __PUTDP1
009b22 e0e0      	LDI  R30,LOW(0)
                 _0x20E0006:
009b23 940e b6a1 	CALL __LOADLOCR6
009b25 966c      	ADIW R28,28
009b26 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
009b27 93aa      	ST   -Y,R26
                 _0x2080003:
009b28 91e0 00c0 	LDS  R30,192
009b2a 72e0      	ANDI R30,LOW(0x20)
009b2b f3e1      	BREQ _0x2080003
009b2c 81e8      	LD   R30,Y
009b2d 93e0 00c6 	STS  198,R30
009b2f 9621      	ADIW R28,1
009b30 9508      	RET
                 _puts:
009b31 93ba      	ST   -Y,R27
009b32 93aa      	ST   -Y,R26
009b33 931a      	ST   -Y,R17
                 _0x2080006:
009b34 81a9      	LDD  R26,Y+1
009b35 81ba      	LDD  R27,Y+1+1
009b36 91ed      	LD   R30,X+
009b37 83a9      	STD  Y+1,R26
009b38 83ba      	STD  Y+1+1,R27
009b39 2f1e      	MOV  R17,R30
009b3a 30e0      	CPI  R30,0
009b3b f019      	BREQ _0x2080008
009b3c 2fa1      	MOV  R26,R17
009b3d dfe9      	RCALL _putchar
009b3e cff5      	RJMP _0x2080006
                 _0x2080008:
009b3f e0aa      	LDI  R26,LOW(10)
009b40 dfe6      	RCALL _putchar
                 _0x20E0005:
009b41 8118      	LDD  R17,Y+0
009b42 9623      	ADIW R28,3
009b43 9508      	RET
                 _put_buff_G104:
009b44 940e a285 	CALL SUBOPT_0x71
009b46 81aa      	LDD  R26,Y+2
009b47 81bb      	LDD  R27,Y+2+1
009b48 9612      	ADIW R26,2
009b49 940e b5f6 	CALL __GETW1P
009b4b 9730      	SBIW R30,0
009b4c f129      	BREQ _0x208002A
009b4d 81aa      	LDD  R26,Y+2
009b4e 81bb      	LDD  R27,Y+2+1
009b4f 9614      	ADIW R26,4
009b50 940e b5f6 	CALL __GETW1P
009b52 018f      	MOVW R16,R30
009b53 9730      	SBIW R30,0
009b54 f061      	BREQ _0x208002C
                +
009b55 3002     +CPI R16 , LOW ( 2 )
009b56 e0e0     +LDI R30 , HIGH ( 2 )
009b57 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
009b58 f0c0      	BRLO _0x208002D
009b59 01f8      	MOVW R30,R16
009b5a 9731      	SBIW R30,1
009b5b 018f      	MOVW R16,R30
                +
009b5c 81aa     +LDD R26 , Y + 2
009b5d 81bb     +LDD R27 , Y + 2 + 1
009b5e 9614     +ADIW R26 , 4
009b5f 93ed     +ST X + , R30
009b60 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x208002C:
009b61 81aa      	LDD  R26,Y+2
009b62 81bb      	LDD  R27,Y+2+1
009b63 9612      	ADIW R26,2
009b64 940e a273 	CALL SUBOPT_0x6E
009b66 9731      	SBIW R30,1
009b67 81ac      	LDD  R26,Y+4
009b68 83a0      	STD  Z+0,R26
009b69 81aa      	LDD  R26,Y+2
009b6a 81bb      	LDD  R27,Y+2+1
009b6b 940e b5f6 	CALL __GETW1P
009b6d 23ff      	TST  R31
009b6e f012      	BRMI _0x208002E
009b6f 940e a273 	CALL SUBOPT_0x6E
                 _0x208002E:
                 _0x208002D:
009b71 c006      	RJMP _0x208002F
                 _0x208002A:
009b72 81aa      	LDD  R26,Y+2
009b73 81bb      	LDD  R27,Y+2+1
009b74 efef      	LDI  R30,LOW(65535)
009b75 efff      	LDI  R31,HIGH(65535)
009b76 93ed      	ST   X+,R30
009b77 93fc      	ST   X,R31
                 _0x208002F:
009b78 8119      	LDD  R17,Y+1
009b79 8108      	LDD  R16,Y+0
009b7a 9625      	ADIW R28,5
009b7b 9508      	RET
                 __ftoe_G104:
009b7c 93ba      	ST   -Y,R27
009b7d 93aa      	ST   -Y,R26
009b7e 9724      	SBIW R28,4
009b7f e0e0      	LDI  R30,LOW(0)
009b80 83e8      	ST   Y,R30
009b81 83e9      	STD  Y+1,R30
009b82 e8e0      	LDI  R30,LOW(128)
009b83 83ea      	STD  Y+2,R30
009b84 e3ef      	LDI  R30,LOW(63)
009b85 83eb      	STD  Y+3,R30
009b86 940e b69c 	CALL __SAVELOCR4
009b88 85ee      	LDD  R30,Y+14
009b89 85ff      	LDD  R31,Y+14+1
009b8a 3fef      	CPI  R30,LOW(0xFFFF)
009b8b efaf      	LDI  R26,HIGH(0xFFFF)
009b8c 07fa      	CPC  R31,R26
009b8d f459      	BRNE _0x2080037
009b8e 940e a8ec 	CALL SUBOPT_0x17D
                +
009b90 e1a6     +LDI R26 , LOW ( 2 * _0x2080000 + ( 0 ) )
009b91 e6b5     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 0 ) )
009b92 e080     +LDI R24 , BYTE3 ( 2 * _0x2080000 + ( 0 ) )
009b93 e090     +LDI R25 , BYTE4 ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTD2FN _0x2080000,0
009b94 940e 84e4 	CALL _strcpyf
009b96 940e b6a3 	CALL __LOADLOCR4
009b98 c340      	RJMP _0x20E0003
                 _0x2080037:
009b99 3fef      	CPI  R30,LOW(0x7FFF)
009b9a e7af      	LDI  R26,HIGH(0x7FFF)
009b9b 07fa      	CPC  R31,R26
009b9c f459      	BRNE _0x2080036
009b9d 940e a8ec 	CALL SUBOPT_0x17D
                +
009b9f e1a7     +LDI R26 , LOW ( 2 * _0x2080000 + ( 1 ) )
009ba0 e6b5     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 1 ) )
009ba1 e080     +LDI R24 , BYTE3 ( 2 * _0x2080000 + ( 1 ) )
009ba2 e090     +LDI R25 , BYTE4 ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTD2FN _0x2080000,1
009ba3 940e 84e4 	CALL _strcpyf
009ba5 940e b6a3 	CALL __LOADLOCR4
009ba7 c331      	RJMP _0x20E0003
                 _0x2080036:
009ba8 85ab      	LDD  R26,Y+11
009ba9 30a7      	CPI  R26,LOW(0x7)
009baa f010      	BRLO _0x2080039
009bab e0e6      	LDI  R30,LOW(6)
009bac 87eb      	STD  Y+11,R30
                 _0x2080039:
009bad 851b      	LDD  R17,Y+11
                 _0x208003A:
009bae 2fe1      	MOV  R30,R17
009baf 5011      	SUBI R17,1
009bb0 30e0      	CPI  R30,0
009bb1 f029      	BREQ _0x208003C
009bb2 940e b23b 	CALL SUBOPT_0x2EC
009bb4 940e a376 	CALL SUBOPT_0x95
009bb6 cff7      	RJMP _0x208003A
                 _0x208003C:
009bb7 940e a497 	CALL SUBOPT_0xC6
009bb9 940e b67e 	CALL __CPD10
009bbb f431      	BRNE _0x208003D
009bbc e030      	LDI  R19,LOW(0)
009bbd 940e b23b 	CALL SUBOPT_0x2EC
009bbf 940e a376 	CALL SUBOPT_0x95
009bc1 c02e      	RJMP _0x208003E
                 _0x208003D:
009bc2 853b      	LDD  R19,Y+11
009bc3 940e b23e 	CALL SUBOPT_0x2ED
009bc5 f009      	BREQ PC+2
009bc6 f410      	BRCC PC+3
009bc7 940c 9bd5 	JMP  _0x208003F
009bc9 940e b23b 	CALL SUBOPT_0x2EC
009bcb 940e a376 	CALL SUBOPT_0x95
                 _0x2080040:
009bcd 940e b23e 	CALL SUBOPT_0x2ED
009bcf f020      	BRLO _0x2080042
009bd0 940e b245 	CALL SUBOPT_0x2EE
009bd2 5f3f      	SUBI R19,-LOW(1)
009bd3 cff9      	RJMP _0x2080040
                 _0x2080042:
009bd4 c00d      	RJMP _0x2080043
                 _0x208003F:
                 _0x2080044:
009bd5 940e b23e 	CALL SUBOPT_0x2ED
009bd7 f430      	BRSH _0x2080046
009bd8 940e af0b 	CALL SUBOPT_0x277
009bda 940e a503 	CALL SUBOPT_0xD6
009bdc 5031      	SUBI R19,LOW(1)
009bdd cff7      	RJMP _0x2080044
                 _0x2080046:
009bde 940e b23b 	CALL SUBOPT_0x2EC
009be0 940e a376 	CALL SUBOPT_0x95
                 _0x2080043:
009be2 940e a497 	CALL SUBOPT_0xC6
009be4 940e aeef 	CALL SUBOPT_0x272
009be6 940e b396 	CALL __ADDF12
009be8 940e a503 	CALL SUBOPT_0xD6
009bea 940e b23e 	CALL SUBOPT_0x2ED
009bec f018      	BRLO _0x2080047
009bed 940e b245 	CALL SUBOPT_0x2EE
009bef 5f3f      	SUBI R19,-LOW(1)
                 _0x2080047:
                 _0x208003E:
009bf0 e010      	LDI  R17,LOW(0)
                 _0x2080048:
009bf1 85eb      	LDD  R30,Y+11
009bf2 17e1      	CP   R30,R17
009bf3 f1a8      	BRLO _0x208004A
009bf4 940e a37b 	CALL SUBOPT_0x96
                +
009bf6 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
009bf7 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
009bf8 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
009bf9 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
009bfa 940e b3e6 	CALL __MULF12
009bfc 940e aeef 	CALL SUBOPT_0x272
009bfe 940e a33b 	CALL SUBOPT_0x8A
009c00 940e 9f40 	CALL _floor
009c02 940e a395 	CALL SUBOPT_0x9B
009c04 940e 9fa5 	CALL SUBOPT_0x9
009c06 940e b434 	CALL __DIVF21
009c08 940e b323 	CALL __CFD1U
009c0a 2f0e      	MOV  R16,R30
009c0b 940e b24c 	CALL SUBOPT_0x2EF
009c0d 2fe0      	MOV  R30,R16
009c0e 5de0      	SUBI R30,-LOW(48)
009c0f 93ec      	ST   X,R30
009c10 2fe0      	MOV  R30,R16
009c11 27ff      	CLR  R31
009c12 2766      	CLR  R22
009c13 2777      	CLR  R23
009c14 940e b35c 	CALL __CDF1
009c16 940e a37b 	CALL SUBOPT_0x96
009c18 940e b3e6 	CALL __MULF12
009c1a 940e 9fa5 	CALL SUBOPT_0x9
009c1c 940e aae2 	CALL SUBOPT_0x1D5
009c1e 940e a503 	CALL SUBOPT_0xD6
009c20 2fe1      	MOV  R30,R17
009c21 5f1f      	SUBI R17,-1
009c22 30e0      	CPI  R30,0
009c23 f669      	BRNE _0x2080048
009c24 940e b24c 	CALL SUBOPT_0x2EF
009c26 e2ee      	LDI  R30,LOW(46)
009c27 93ec      	ST   X,R30
009c28 cfc8      	RJMP _0x2080048
                 _0x208004A:
009c29 940e a27e 	CALL SUBOPT_0x70
009c2b 85aa      	LDD  R26,Y+10
009c2c 83a0      	STD  Z+0,R26
009c2d 3030      	CPI  R19,0
009c2e f42c      	BRGE _0x208004C
009c2f 9531      	NEG  R19
009c30 85a8      	LDD  R26,Y+8
009c31 85b9      	LDD  R27,Y+8+1
009c32 e2ed      	LDI  R30,LOW(45)
009c33 c003      	RJMP _0x2080137
                 _0x208004C:
009c34 85a8      	LDD  R26,Y+8
009c35 85b9      	LDD  R27,Y+8+1
009c36 e2eb      	LDI  R30,LOW(43)
                 _0x2080137:
009c37 93ec      	ST   X,R30
009c38 85e8      	LDD  R30,Y+8
009c39 85f9      	LDD  R31,Y+8+1
009c3a 9631      	ADIW R30,1
009c3b 940e a8e9 	CALL SUBOPT_0x17C
009c3d 9631      	ADIW R30,1
009c3e 87e8      	STD  Y+8,R30
009c3f 87f9      	STD  Y+8+1,R31
009c40 9731      	SBIW R30,1
009c41 01bf      	MOVW R22,R30
009c42 2fa3      	MOV  R26,R19
009c43 e0ea      	LDI  R30,LOW(10)
009c44 940e b57c 	CALL __DIVB21
009c46 5de0      	SUBI R30,-LOW(48)
009c47 01db      	MOVW R26,R22
009c48 93ec      	ST   X,R30
009c49 940e a27e 	CALL SUBOPT_0x70
009c4b 01bf      	MOVW R22,R30
009c4c 2fa3      	MOV  R26,R19
009c4d e0ea      	LDI  R30,LOW(10)
009c4e 940e b5be 	CALL __MODB21
009c50 5de0      	SUBI R30,-LOW(48)
009c51 01db      	MOVW R26,R22
009c52 93ec      	ST   X,R30
009c53 85a8      	LDD  R26,Y+8
009c54 85b9      	LDD  R27,Y+8+1
009c55 e0e0      	LDI  R30,LOW(0)
009c56 93ec      	ST   X,R30
009c57 940e b6a3 	CALL __LOADLOCR4
009c59 c27f      	RJMP _0x20E0003
                 __print_G104:
009c5a 93ba      	ST   -Y,R27
009c5b 93aa      	ST   -Y,R26
009c5c 97ef      	SBIW R28,63
009c5d 9765      	SBIW R28,21
009c5e 940e b69a 	CALL __SAVELOCR6
009c60 e010      	LDI  R17,0
                +
009c61 01fe     +MOVW R30 , R28
009c62 5ae4     +SUBI R30 , LOW ( - 92 )
009c63 4fff     +SBCI R31 , HIGH ( - 92 )
009c64 9001     +LD R0 , Z +
009c65 9011     +LD R1 , Z +
009c66 9161     +LD R22 , Z +
009c67 8170     +LD R23 , Z
009c68 01f0     +MOVW R30 , R0
                 	__GETD1SX 92
009c69 940e adaf 	CALL SUBOPT_0x23C
                +
009c6b 01fe     +MOVW R30 , R28
009c6c 5ae6     +SUBI R30 , LOW ( - 90 )
009c6d 4fff     +SBCI R31 , HIGH ( - 90 )
009c6e 9001     +LD R0 , Z +
009c6f 81f0     +LD R31 , Z
009c70 2de0     +MOV R30 , R0
                 	__GETW1SX 90
009c71 83ee      	STD  Y+6,R30
009c72 83ff      	STD  Y+6+1,R31
009c73 81ae      	LDD  R26,Y+6
009c74 81bf      	LDD  R27,Y+6+1
009c75 940e a5dc 	CALL SUBOPT_0xFC
                 _0x208004E:
009c77 01de      	MOVW R26,R28
009c78 59ae      	SUBI R26,LOW(-(98))
009c79 4fbf      	SBCI R27,HIGH(-(98))
009c7a 940e af24 	CALL SUBOPT_0x27C
                +
009c7c bf6b     +OUT RAMPZ , R22
009c7d 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
009c7e 2f2e      	MOV  R18,R30
009c7f 30e0      	CPI  R30,0
009c80 f411      	BRNE PC+3
009c81 940c 9e74 	JMP _0x2080050
009c83 2fe1      	MOV  R30,R17
009c84 30e0      	CPI  R30,0
009c85 f439      	BRNE _0x2080054
009c86 3225      	CPI  R18,37
009c87 f411      	BRNE _0x2080055
009c88 e011      	LDI  R17,LOW(1)
009c89 c002      	RJMP _0x2080056
                 _0x2080055:
009c8a 940e b253 	CALL SUBOPT_0x2F0
                 _0x2080056:
009c8c c1e6      	RJMP _0x2080053
                 _0x2080054:
009c8d 30e1      	CPI  R30,LOW(0x1)
009c8e f4c1      	BRNE _0x2080057
009c8f 3225      	CPI  R18,37
009c90 f419      	BRNE _0x2080058
009c91 940e b253 	CALL SUBOPT_0x2F0
009c93 c1de      	RJMP _0x2080138
                 _0x2080058:
009c94 e012      	LDI  R17,LOW(2)
009c95 e0e0      	LDI  R30,LOW(0)
009c96 8fe9      	STD  Y+25,R30
009c97 e000      	LDI  R16,LOW(0)
009c98 322d      	CPI  R18,45
009c99 f411      	BRNE _0x2080059
009c9a e001      	LDI  R16,LOW(1)
009c9b c1d7      	RJMP _0x2080053
                 _0x2080059:
009c9c 322b      	CPI  R18,43
009c9d f419      	BRNE _0x208005A
009c9e e2eb      	LDI  R30,LOW(43)
009c9f 8fe9      	STD  Y+25,R30
009ca0 c1d2      	RJMP _0x2080053
                 _0x208005A:
009ca1 3220      	CPI  R18,32
009ca2 f419      	BRNE _0x208005B
009ca3 e2e0      	LDI  R30,LOW(32)
009ca4 8fe9      	STD  Y+25,R30
009ca5 c1cd      	RJMP _0x2080053
                 _0x208005B:
009ca6 c002      	RJMP _0x208005C
                 _0x2080057:
009ca7 30e2      	CPI  R30,LOW(0x2)
009ca8 f439      	BRNE _0x208005D
                 _0x208005C:
009ca9 e050      	LDI  R21,LOW(0)
009caa e013      	LDI  R17,LOW(3)
009cab 3320      	CPI  R18,48
009cac f411      	BRNE _0x208005E
009cad 6800      	ORI  R16,LOW(128)
009cae c1c4      	RJMP _0x2080053
                 _0x208005E:
009caf c002      	RJMP _0x208005F
                 _0x208005D:
009cb0 30e3      	CPI  R30,LOW(0x3)
009cb1 f491      	BRNE _0x2080060
                 _0x208005F:
009cb2 3320      	CPI  R18,48
009cb3 f010      	BRLO _0x2080062
009cb4 332a      	CPI  R18,58
009cb5 f008      	BRLO _0x2080063
                 _0x2080062:
009cb6 c007      	RJMP _0x2080061
                 _0x2080063:
009cb7 e0aa      	LDI  R26,LOW(10)
009cb8 9f5a      	MUL  R21,R26
009cb9 2d50      	MOV  R21,R0
009cba 2fe2      	MOV  R30,R18
009cbb 53e0      	SUBI R30,LOW(48)
009cbc 0f5e      	ADD  R21,R30
009cbd c1b5      	RJMP _0x2080053
                 _0x2080061:
009cbe e040      	LDI  R20,LOW(0)
009cbf 322e      	CPI  R18,46
009cc0 f411      	BRNE _0x2080064
009cc1 e014      	LDI  R17,LOW(4)
009cc2 c1b0      	RJMP _0x2080053
                 _0x2080064:
009cc3 c00f      	RJMP _0x2080065
                 _0x2080060:
009cc4 30e4      	CPI  R30,LOW(0x4)
009cc5 f499      	BRNE _0x2080067
009cc6 3320      	CPI  R18,48
009cc7 f010      	BRLO _0x2080069
009cc8 332a      	CPI  R18,58
009cc9 f008      	BRLO _0x208006A
                 _0x2080069:
009cca c008      	RJMP _0x2080068
                 _0x208006A:
009ccb 6200      	ORI  R16,LOW(32)
009ccc e0aa      	LDI  R26,LOW(10)
009ccd 9f4a      	MUL  R20,R26
009cce 2d40      	MOV  R20,R0
009ccf 2fe2      	MOV  R30,R18
009cd0 53e0      	SUBI R30,LOW(48)
009cd1 0f4e      	ADD  R20,R30
009cd2 c1a0      	RJMP _0x2080053
                 _0x2080068:
                 _0x2080065:
009cd3 362c      	CPI  R18,108
009cd4 f419      	BRNE _0x208006B
009cd5 6002      	ORI  R16,LOW(2)
009cd6 e015      	LDI  R17,LOW(5)
009cd7 c19b      	RJMP _0x2080053
                 _0x208006B:
009cd8 c004      	RJMP _0x208006C
                 _0x2080067:
009cd9 30e5      	CPI  R30,LOW(0x5)
009cda f011      	BREQ PC+3
009cdb 940c 9e73 	JMP _0x2080053
                 _0x208006C:
009cdd 2fe2      	MOV  R30,R18
009cde 36e3      	CPI  R30,LOW(0x63)
009cdf f459      	BRNE _0x2080071
009ce0 940e b25b 	CALL SUBOPT_0x2F1
009ce2 940e b262 	CALL SUBOPT_0x2F2
009ce4 940e b25b 	CALL SUBOPT_0x2F1
009ce6 81a4      	LDD  R26,Z+4
009ce7 93aa      	ST   -Y,R26
009ce8 940e b269 	CALL SUBOPT_0x2F3
009cea c187      	RJMP _0x2080072
                 _0x2080071:
009ceb 34e5      	CPI  R30,LOW(0x45)
009cec f011      	BREQ _0x2080075
009ced 36e5      	CPI  R30,LOW(0x65)
009cee f409      	BRNE _0x2080076
                 _0x2080075:
009cef c004      	RJMP _0x2080077
                 _0x2080076:
009cf0 36e6      	CPI  R30,LOW(0x66)
009cf1 f011      	BREQ PC+3
009cf2 940c 9d36 	JMP _0x2080078
                 _0x2080077:
009cf4 01fe      	MOVW R30,R28
009cf5 967a      	ADIW R30,26
009cf6 8be8      	STD  Y+16,R30
009cf7 8bf9      	STD  Y+16+1,R31
009cf8 940e b270 	CALL SUBOPT_0x2F4
009cfa 940e b5fa 	CALL __GETD1P
009cfc 940e a503 	CALL SUBOPT_0xD6
009cfe 940e b277 	CALL SUBOPT_0x2F5
009d00 85af      	LDD  R26,Y+15
009d01 23aa      	TST  R26
009d02 f022      	BRMI _0x2080079
009d03 8da9      	LDD  R26,Y+25
009d04 32ab      	CPI  R26,LOW(0x2B)
009d05 f049      	BREQ _0x208007B
009d06 c014      	RJMP _0x208007C
                 _0x2080079:
009d07 940e a497 	CALL SUBOPT_0xC6
009d09 940e b2f0 	CALL __ANEGF1
009d0b 940e a503 	CALL SUBOPT_0xD6
009d0d e2ed      	LDI  R30,LOW(45)
009d0e 8fe9      	STD  Y+25,R30
                 _0x208007B:
009d0f ff07      	SBRS R16,7
009d10 c005      	RJMP _0x208007D
009d11 8de9      	LDD  R30,Y+25
009d12 93ea      	ST   -Y,R30
009d13 940e b269 	CALL SUBOPT_0x2F3
009d15 c005      	RJMP _0x208007E
                 _0x208007D:
009d16 940e aeff 	CALL SUBOPT_0x275
009d18 9731      	SBIW R30,1
009d19 8da9      	LDD  R26,Y+25
009d1a 83a0      	STD  Z+0,R26
                 _0x208007E:
                 _0x208007C:
009d1b ff05      	SBRS R16,5
009d1c e046      	LDI  R20,LOW(6)
009d1d 3626      	CPI  R18,102
009d1e f441      	BRNE _0x2080080
009d1f 940e a7da 	CALL SUBOPT_0x153
009d21 934a      	ST   -Y,R20
009d22 89ad      	LDD  R26,Y+21
009d23 89be      	LDD  R27,Y+21+1
009d24 940e 8207 	CALL _ftoa
009d26 c007      	RJMP _0x2080081
                 _0x2080080:
009d27 940e a7da 	CALL SUBOPT_0x153
009d29 934a      	ST   -Y,R20
009d2a 932a      	ST   -Y,R18
009d2b 89ae      	LDD  R26,Y+22
009d2c 89bf      	LDD  R27,Y+22+1
009d2d de4e      	RCALL __ftoe_G104
                 _0x2080081:
009d2e 01fe      	MOVW R30,R28
009d2f 967a      	ADIW R30,26
009d30 940e ae68 	CALL SUBOPT_0x25B
009d32 940e 850a 	CALL _strlen
009d34 2f1e      	MOV  R17,R30
009d35 c027      	RJMP _0x2080082
                 _0x2080078:
009d36 37e3      	CPI  R30,LOW(0x73)
009d37 f469      	BRNE _0x2080084
009d38 940e b277 	CALL SUBOPT_0x2F5
009d3a 940e b270 	CALL SUBOPT_0x2F4
009d3c 9614      	ADIW R26,4
009d3d 940e b5f6 	CALL __GETW1P
009d3f 940e ae68 	CALL SUBOPT_0x25B
009d41 940e 850a 	CALL _strlen
009d43 2f1e      	MOV  R17,R30
009d44 c011      	RJMP _0x2080085
                 _0x2080084:
009d45 37e0      	CPI  R30,LOW(0x70)
009d46 f4d9      	BRNE _0x2080087
009d47 940e b277 	CALL SUBOPT_0x2F5
009d49 940e b270 	CALL SUBOPT_0x2F4
009d4b 9614      	ADIW R26,4
009d4c 940e b5fa 	CALL __GETD1P
009d4e 940e adb4 	CALL SUBOPT_0x23D
009d50 940e afe5 	CALL SUBOPT_0x292
009d52 940e 8516 	CALL _strlenf
009d54 2f1e      	MOV  R17,R30
009d55 6008      	ORI  R16,LOW(8)
                 _0x2080085:
009d56 770f      	ANDI R16,LOW(127)
009d57 3040      	CPI  R20,0
009d58 f011      	BREQ _0x2080089
009d59 1741      	CP   R20,R17
009d5a f008      	BRLO _0x208008A
                 _0x2080089:
009d5b c001      	RJMP _0x2080088
                 _0x208008A:
009d5c 2f14      	MOV  R17,R20
                 _0x2080088:
                 _0x2080082:
009d5d e040      	LDI  R20,LOW(0)
009d5e e0e0      	LDI  R30,LOW(0)
009d5f 8fe8      	STD  Y+24,R30
009d60 e030      	LDI  R19,LOW(0)
009d61 c072      	RJMP _0x208008B
                 _0x2080087:
009d62 36e4      	CPI  R30,LOW(0x64)
009d63 f011      	BREQ _0x208008E
009d64 36e9      	CPI  R30,LOW(0x69)
009d65 f411      	BRNE _0x208008F
                 _0x208008E:
009d66 6004      	ORI  R16,LOW(4)
009d67 c002      	RJMP _0x2080090
                 _0x208008F:
009d68 37e5      	CPI  R30,LOW(0x75)
009d69 f4a1      	BRNE _0x2080091
                 _0x2080090:
009d6a e0ea      	LDI  R30,LOW(10)
009d6b 8fe8      	STD  Y+24,R30
009d6c ff01      	SBRS R16,1
009d6d c008      	RJMP _0x2080092
                +
009d6e e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
009d6f ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
009d70 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
009d71 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
009d72 940e adb9 	CALL SUBOPT_0x23E
009d74 e01a      	LDI  R17,LOW(10)
009d75 c023      	RJMP _0x2080093
                 _0x2080092:
                +
009d76 e1e0     +LDI R30 , LOW ( 0x2710 )
009d77 e2f7     +LDI R31 , HIGH ( 0x2710 )
009d78 e060     +LDI R22 , BYTE3 ( 0x2710 )
009d79 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
009d7a 940e adb9 	CALL SUBOPT_0x23E
009d7c e015      	LDI  R17,LOW(5)
009d7d c01b      	RJMP _0x2080093
                 _0x2080091:
009d7e 35e8      	CPI  R30,LOW(0x58)
009d7f f411      	BRNE _0x2080095
009d80 6008      	ORI  R16,LOW(8)
009d81 c004      	RJMP _0x2080096
                 _0x2080095:
009d82 37e8      	CPI  R30,LOW(0x78)
009d83 f011      	BREQ PC+3
009d84 940c 9e72 	JMP _0x20800D4
                 _0x2080096:
009d86 e1e0      	LDI  R30,LOW(16)
009d87 8fe8      	STD  Y+24,R30
009d88 ff01      	SBRS R16,1
009d89 c008      	RJMP _0x2080098
                +
009d8a e0e0     +LDI R30 , LOW ( 0x10000000 )
009d8b e0f0     +LDI R31 , HIGH ( 0x10000000 )
009d8c e060     +LDI R22 , BYTE3 ( 0x10000000 )
009d8d e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
009d8e 940e adb9 	CALL SUBOPT_0x23E
009d90 e018      	LDI  R17,LOW(8)
009d91 c007      	RJMP _0x2080093
                 _0x2080098:
                +
009d92 e0e0     +LDI R30 , LOW ( 0x1000 )
009d93 e1f0     +LDI R31 , HIGH ( 0x1000 )
009d94 e060     +LDI R22 , BYTE3 ( 0x1000 )
009d95 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
009d96 940e adb9 	CALL SUBOPT_0x23E
009d98 e014      	LDI  R17,LOW(4)
                 _0x2080093:
009d99 3040      	CPI  R20,0
009d9a f011      	BREQ _0x2080099
009d9b 770f      	ANDI R16,LOW(127)
009d9c c001      	RJMP _0x208009A
                 _0x2080099:
009d9d e041      	LDI  R20,LOW(1)
                 _0x208009A:
009d9e ff01      	SBRS R16,1
009d9f c008      	RJMP _0x208009B
009da0 940e b277 	CALL SUBOPT_0x2F5
009da2 940e b270 	CALL SUBOPT_0x2F4
009da4 9614      	ADIW R26,4
009da5 940e b5fa 	CALL __GETD1P
009da7 c013      	RJMP _0x2080139
                 _0x208009B:
009da8 ff02      	SBRS R16,2
009da9 c00a      	RJMP _0x208009D
009daa 940e b277 	CALL SUBOPT_0x2F5
009dac 940e b270 	CALL SUBOPT_0x2F4
009dae 9614      	ADIW R26,4
009daf 940e b5f6 	CALL __GETW1P
009db1 940e b522 	CALL __CWD1
009db3 c007      	RJMP _0x2080139
                 _0x208009D:
009db4 940e b277 	CALL SUBOPT_0x2F5
009db6 940e b270 	CALL SUBOPT_0x2F4
009db8 9614      	ADIW R26,4
009db9 940e a029 	CALL SUBOPT_0x1C
                 _0x2080139:
                +
009dbb 87ec     +STD Y + 12 , R30
009dbc 87fd     +STD Y + 12 + 1 , R31
009dbd 876e     +STD Y + 12 + 2 , R22
009dbe 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
009dbf ff02      	SBRS R16,2
009dc0 c012      	RJMP _0x208009F
009dc1 85af      	LDD  R26,Y+15
009dc2 23aa      	TST  R26
009dc3 f442      	BRPL _0x20800A0
009dc4 940e a497 	CALL SUBOPT_0xC6
009dc6 940e b4bf 	CALL __ANEGD1
009dc8 940e a503 	CALL SUBOPT_0xD6
009dca e2ed      	LDI  R30,LOW(45)
009dcb 8fe9      	STD  Y+25,R30
                 _0x20800A0:
009dcc 8de9      	LDD  R30,Y+25
009dcd 30e0      	CPI  R30,0
009dce f019      	BREQ _0x20800A1
009dcf 5f1f      	SUBI R17,-LOW(1)
009dd0 5f4f      	SUBI R20,-LOW(1)
009dd1 c001      	RJMP _0x20800A2
                 _0x20800A1:
009dd2 7f0b      	ANDI R16,LOW(251)
                 _0x20800A2:
                 _0x208009F:
009dd3 2f34      	MOV  R19,R20
                 _0x208008B:
009dd4 fd00      	SBRC R16,0
009dd5 c014      	RJMP _0x20800A3
                 _0x20800A4:
009dd6 1715      	CP   R17,R21
009dd7 f410      	BRSH _0x20800A7
009dd8 1735      	CP   R19,R21
009dd9 f008      	BRLO _0x20800A8
                 _0x20800A7:
009dda c00f      	RJMP _0x20800A6
                 _0x20800A8:
009ddb ff07      	SBRS R16,7
009ddc c008      	RJMP _0x20800A9
009ddd ff02      	SBRS R16,2
009dde c004      	RJMP _0x20800AA
009ddf 7f0b      	ANDI R16,LOW(251)
009de0 8d29      	LDD  R18,Y+25
009de1 5011      	SUBI R17,LOW(1)
009de2 c001      	RJMP _0x20800AB
                 _0x20800AA:
009de3 e320      	LDI  R18,LOW(48)
                 _0x20800AB:
009de4 c001      	RJMP _0x20800AC
                 _0x20800A9:
009de5 e220      	LDI  R18,LOW(32)
                 _0x20800AC:
009de6 940e b253 	CALL SUBOPT_0x2F0
009de8 5051      	SUBI R21,LOW(1)
009de9 cfec      	RJMP _0x20800A4
                 _0x20800A6:
                 _0x20800A3:
                 _0x20800AD:
009dea 1714      	CP   R17,R20
009deb f490      	BRSH _0x20800AF
009dec 6100      	ORI  R16,LOW(16)
009ded ff02      	SBRS R16,2
009dee c006      	RJMP _0x20800B0
009def 940e b279 	CALL SUBOPT_0x2F6
009df1 f009      	BREQ _0x20800B1
009df2 5051      	SUBI R21,LOW(1)
                 _0x20800B1:
009df3 5011      	SUBI R17,LOW(1)
009df4 5041      	SUBI R20,LOW(1)
                 _0x20800B0:
009df5 e3e0      	LDI  R30,LOW(48)
009df6 93ea      	ST   -Y,R30
009df7 940e b269 	CALL SUBOPT_0x2F3
009df9 3050      	CPI  R21,0
009dfa f009      	BREQ _0x20800B2
009dfb 5051      	SUBI R21,LOW(1)
                 _0x20800B2:
009dfc 5041      	SUBI R20,LOW(1)
009dfd cfec      	RJMP _0x20800AD
                 _0x20800AF:
009dfe 2f31      	MOV  R19,R17
009dff 8de8      	LDD  R30,Y+24
009e00 30e0      	CPI  R30,0
009e01 f4c1      	BRNE _0x20800B3
                 _0x20800B4:
009e02 3030      	CPI  R19,0
009e03 f0a9      	BREQ _0x20800B6
009e04 ff03      	SBRS R16,3
009e05 c007      	RJMP _0x20800B7
009e06 01de      	MOVW R26,R28
009e07 9650      	ADIW R26,16
009e08 940e af24 	CALL SUBOPT_0x27C
                +
009e0a bf6b     +OUT RAMPZ , R22
009e0b 9126     +ELPM R18 , Z
                 	__GETBRPF 18
009e0c c005      	RJMP _0x20800B8
                 _0x20800B7:
009e0d 89a8      	LDD  R26,Y+16
009e0e 89b9      	LDD  R27,Y+16+1
009e0f 912d      	LD   R18,X+
009e10 8ba8      	STD  Y+16,R26
009e11 8bb9      	STD  Y+16+1,R27
                 _0x20800B8:
009e12 940e b253 	CALL SUBOPT_0x2F0
009e14 3050      	CPI  R21,0
009e15 f009      	BREQ _0x20800B9
009e16 5051      	SUBI R21,LOW(1)
                 _0x20800B9:
009e17 5031      	SUBI R19,LOW(1)
009e18 cfe9      	RJMP _0x20800B4
                 _0x20800B6:
009e19 c04e      	RJMP _0x20800BA
                 _0x20800B3:
                 _0x20800BC:
009e1a 940e a4a9 	CALL SUBOPT_0xC9
009e1c 940e 9fa5 	CALL SUBOPT_0x9
009e1e 940e b599 	CALL __DIVD21U
009e20 2f2e      	MOV  R18,R30
009e21 302a      	CPI  R18,10
009e22 f030      	BRLO _0x20800BE
009e23 ff03      	SBRS R16,3
009e24 c002      	RJMP _0x20800BF
009e25 5c29      	SUBI R18,-LOW(55)
009e26 c001      	RJMP _0x20800C0
                 _0x20800BF:
009e27 5a29      	SUBI R18,-LOW(87)
                 _0x20800C0:
009e28 c001      	RJMP _0x20800C1
                 _0x20800BE:
009e29 5d20      	SUBI R18,-LOW(48)
                 _0x20800C1:
009e2a fd04      	SBRC R16,4
009e2b c01c      	RJMP _0x20800C3
009e2c 3321      	CPI  R18,49
009e2d f438      	BRSH _0x20800C5
                +
009e2e 89ac     +LDD R26 , Y + 20
009e2f 89bd     +LDD R27 , Y + 20 + 1
009e30 898e     +LDD R24 , Y + 20 + 2
009e31 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
009e32 940e b00d 	CALL SUBOPT_0x298
009e34 f409      	BRNE _0x20800C4
                 _0x20800C5:
009e35 c00b      	RJMP _0x20800C7
                 _0x20800C4:
009e36 1743      	CP   R20,R19
009e37 f440      	BRSH _0x208013A
009e38 1753      	CP   R21,R19
009e39 f010      	BRLO _0x20800CA
009e3a ff00      	SBRS R16,0
009e3b c001      	RJMP _0x20800CB
                 _0x20800CA:
009e3c c010      	RJMP _0x20800C9
                 _0x20800CB:
009e3d e220      	LDI  R18,LOW(32)
009e3e ff07      	SBRS R16,7
009e3f c008      	RJMP _0x20800CC
                 _0x208013A:
009e40 e320      	LDI  R18,LOW(48)
                 _0x20800C7:
009e41 6100      	ORI  R16,LOW(16)
009e42 ff02      	SBRS R16,2
009e43 c004      	RJMP _0x20800CD
009e44 940e b279 	CALL SUBOPT_0x2F6
009e46 f009      	BREQ _0x20800CE
009e47 5051      	SUBI R21,LOW(1)
                 _0x20800CE:
                 _0x20800CD:
                 _0x20800CC:
                 _0x20800C3:
009e48 940e b253 	CALL SUBOPT_0x2F0
009e4a 3050      	CPI  R21,0
009e4b f009      	BREQ _0x20800CF
009e4c 5051      	SUBI R21,LOW(1)
                 _0x20800CF:
                 _0x20800C9:
009e4d 5031      	SUBI R19,LOW(1)
009e4e 940e a4a9 	CALL SUBOPT_0xC9
009e50 940e 9fa5 	CALL SUBOPT_0x9
009e52 940e b5d8 	CALL __MODD21U
009e54 940e a503 	CALL SUBOPT_0xD6
009e56 8de8      	LDD  R30,Y+24
                +
009e57 89ac     +LDD R26 , Y + 20
009e58 89bd     +LDD R27 , Y + 20 + 1
009e59 898e     +LDD R24 , Y + 20 + 2
009e5a 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
009e5b 27ff      	CLR  R31
009e5c 2766      	CLR  R22
009e5d 2777      	CLR  R23
009e5e 940e b599 	CALL __DIVD21U
009e60 940e adb9 	CALL SUBOPT_0x23E
009e62 940e a4a9 	CALL SUBOPT_0xC9
009e64 940e b67e 	CALL __CPD10
009e66 f009      	BREQ _0x20800BD
009e67 cfb2      	RJMP _0x20800BC
                 _0x20800BD:
                 _0x20800BA:
009e68 ff00      	SBRS R16,0
009e69 c008      	RJMP _0x20800D0
                 _0x20800D1:
009e6a 3050      	CPI  R21,0
009e6b f031      	BREQ _0x20800D3
009e6c 5051      	SUBI R21,LOW(1)
009e6d e2e0      	LDI  R30,LOW(32)
009e6e 93ea      	ST   -Y,R30
009e6f 940e b269 	CALL SUBOPT_0x2F3
009e71 cff8      	RJMP _0x20800D1
                 _0x20800D3:
                 _0x20800D0:
                 _0x20800D4:
                 _0x2080072:
                 _0x2080138:
009e72 e010      	LDI  R17,LOW(0)
                 _0x2080053:
009e73 ce03      	RJMP _0x208004E
                 _0x2080050:
009e74 81ae      	LDD  R26,Y+6
009e75 81bf      	LDD  R27,Y+6+1
009e76 940e b5f6 	CALL __GETW1P
009e78 940e b6a1 	CALL __LOADLOCR6
009e7a 96ef      	ADIW R28,63
009e7b 96a7      	ADIW R28,39
009e7c 9508      	RET
                 _sprintf:
009e7d 92ff      	PUSH R15
009e7e 2ef8      	MOV  R15,R24
009e7f 9726      	SBIW R28,6
009e80 940e b69c 	CALL __SAVELOCR4
009e82 01de      	MOVW R26,R28
009e83 961e      	ADIW R26,14
009e84 940e b499 	CALL __ADDW2R15
009e86 940e b5f6 	CALL __GETW1P
009e88 9730      	SBIW R30,0
009e89 f419      	BRNE _0x20800D5
009e8a efef      	LDI  R30,LOW(65535)
009e8b efff      	LDI  R31,HIGH(65535)
009e8c c01f      	RJMP _0x20E0004
                 _0x20800D5:
009e8d 01de      	MOVW R26,R28
009e8e 9616      	ADIW R26,6
009e8f 940e b499 	CALL __ADDW2R15
009e91 018d      	MOVW R16,R26
009e92 01de      	MOVW R26,R28
009e93 961e      	ADIW R26,14
009e94 940e b499 	CALL __ADDW2R15
009e96 940e af1b 	CALL SUBOPT_0x27A
009e98 e0e0      	LDI  R30,LOW(0)
009e99 87e8      	STD  Y+8,R30
009e9a 87e9      	STD  Y+8+1,R30
009e9b 01de      	MOVW R26,R28
009e9c 961a      	ADIW R26,10
009e9d 940e ae07 	CALL SUBOPT_0x24A
009e9f 931a      	ST   -Y,R17
009ea0 930a      	ST   -Y,R16
009ea1 940e b28e 	CALL SUBOPT_0x2F7
009ea3 01de      	MOVW R26,R28
009ea4 961e      	ADIW R26,14
009ea5 ddb4      	RCALL __print_G104
009ea6 019f      	MOVW R18,R30
009ea7 81ae      	LDD  R26,Y+6
009ea8 81bf      	LDD  R27,Y+6+1
009ea9 e0e0      	LDI  R30,LOW(0)
009eaa 93ec      	ST   X,R30
009eab 01f9      	MOVW R30,R18
                 _0x20E0004:
009eac 940e b6a3 	CALL __LOADLOCR4
009eae 962a      	ADIW R28,10
009eaf 90ff      	POP  R15
009eb0 9508      	RET
                 _vsprintf:
009eb1 93ba      	ST   -Y,R27
009eb2 93aa      	ST   -Y,R26
009eb3 9726      	SBIW R28,6
009eb4 931a      	ST   -Y,R17
009eb5 930a      	ST   -Y,R16
009eb6 85ee      	LDD  R30,Y+14
009eb7 85ff      	LDD  R31,Y+14+1
009eb8 9730      	SBIW R30,0
009eb9 f419      	BRNE _0x20800D8
009eba efef      	LDI  R30,LOW(65535)
009ebb efff      	LDI  R31,HIGH(65535)
009ebc c01a      	RJMP _0x20E0002
                 _0x20800D8:
009ebd 85ee      	LDD  R30,Y+14
009ebe 85ff      	LDD  R31,Y+14+1
009ebf 83ec      	STD  Y+4,R30
009ec0 83fd      	STD  Y+4+1,R31
009ec1 e0e0      	LDI  R30,LOW(0)
009ec2 83ee      	STD  Y+6,R30
009ec3 83ef      	STD  Y+6+1,R30
009ec4 940e a486 	CALL SUBOPT_0xC2
009ec6 940e b62a 	CALL __PUTPARD1
009ec8 85ec      	LDD  R30,Y+12
009ec9 85fd      	LDD  R31,Y+12+1
009eca 93fa      	ST   -Y,R31
009ecb 93ea      	ST   -Y,R30
009ecc 940e b28e 	CALL SUBOPT_0x2F7
009ece 01de      	MOVW R26,R28
009ecf 961c      	ADIW R26,12
009ed0 dd89      	RCALL __print_G104
009ed1 018f      	MOVW R16,R30
009ed2 81ac      	LDD  R26,Y+4
009ed3 81bd      	LDD  R27,Y+4+1
009ed4 e0e0      	LDI  R30,LOW(0)
009ed5 93ec      	ST   X,R30
009ed6 01f8      	MOVW R30,R16
                 _0x20E0002:
009ed7 8119      	LDD  R17,Y+1
009ed8 8108      	LDD  R16,Y+0
                 _0x20E0003:
009ed9 9660      	ADIW R28,16
009eda 9508      	RET
                 
                 	.CSEG
                 _isdigit:
009edb 93aa      	ST   -Y,R26
009edc e0e1          ldi  r30,1
009edd 91f9          ld   r31,y+
009ede 33f0          cpi  r31,'0'
009edf f010          brlo isdigit0
009ee0 33fa          cpi  r31,'9'+1
009ee1 f008          brlo isdigit1
                 isdigit0:
009ee2 27ee          clr  r30
                 isdigit1:
009ee3 9508          ret
                 _isprint:
009ee4 93aa      	ST   -Y,R26
009ee5 e0e1          ldi  r30,1
009ee6 91f9          ld   r31,y+
009ee7 32f0          cpi  r31,32
009ee8 f010          brlo isprint0
009ee9 38f0          cpi  r31,128
009eea f008          brlo isprint1
                 isprint0:
009eeb 27ee          clr  r30
                 isprint1:
009eec 9508          ret
                 _isspace:
009eed 93aa      	ST   -Y,R26
009eee e0e1          ldi  r30,1
009eef 91f9          ld   r31,y+
009ef0 32f0          cpi  r31,' '
009ef1 f029          breq isspace1
009ef2 30f9          cpi  r31,9
009ef3 f010          brlo isspace0
009ef4 30fe          cpi  r31,13+1
009ef5 f008          brlo isspace1
                 isspace0:
009ef6 27ee          clr  r30
                 isspace1:
009ef7 9508          ret
                 _isxdigit:
009ef8 93aa      	ST   -Y,R26
009ef9 e0e1          ldi  r30,1
009efa 91f9          ld   r31,y+
009efb 53f0          subi r31,0x30
009efc f040          brcs isxdigit0
009efd 30fa          cpi  r31,10
009efe f038          brcs isxdigit1
009eff 75ff          andi r31,0x5f
009f00 50f7          subi r31,7
009f01 30fa          cpi  r31,10
009f02 f010          brcs isxdigit0
009f03 31f0          cpi  r31,16
009f04 f008          brcs isxdigit1
                 isxdigit0:
009f05 27ee          clr  r30
                 isxdigit1:
009f06 9508          ret
                 _tolower:
009f07 93aa      	ST   -Y,R26
009f08 91e9          ld   r30,y+
009f09 34e1          cpi  r30,'A'
009f0a f018          brlo tolower1
009f0b 35eb          cpi  r30,'Z'+1
009f0c f408          brcc tolower1
009f0d 5ee0          subi r30,-32
                 tolower1:
009f0e 9508          ret
                 
                 	.CSEG
                 _ftrunc:
009f0f 940e b62f 	CALL __PUTPARD2
009f11 817b         ldd  r23,y+3
009f12 816a         ldd  r22,y+2
009f13 81f9         ldd  r31,y+1
009f14 81e8         ld   r30,y
009f15 fb77         bst  r23,7
009f16 0f77         lsl  r23
009f17 fd67         sbrc r22,7
009f18 6071         sbr  r23,1
009f19 2f97         mov  r25,r23
009f1a 579e         subi r25,0x7e
009f1b f081         breq __ftrunc0
009f1c f078         brcs __ftrunc0
009f1d 3198         cpi  r25,24
009f1e f490         brsh __ftrunc1
009f1f 27aa         clr  r26
009f20 27bb         clr  r27
009f21 2788         clr  r24
                 __ftrunc2:
009f22 9408         sec
009f23 9587         ror  r24
009f24 95b7         ror  r27
009f25 95a7         ror  r26
009f26 959a         dec  r25
009f27 f7d1         brne __ftrunc2
009f28 23ea         and  r30,r26
009f29 23fb         and  r31,r27
009f2a 2368         and  r22,r24
009f2b c005         rjmp __ftrunc1
                 __ftrunc0:
009f2c 94e8         clt
009f2d 2777         clr  r23
009f2e 27ee         clr  r30
009f2f 27ff         clr  r31
009f30 2766         clr  r22
                 __ftrunc1:
009f31 776f         cbr  r22,0x80
009f32 9576         lsr  r23
009f33 f408         brcc __ftrunc3
009f34 6860         sbr  r22,0x80
                 __ftrunc3:
009f35 f977         bld  r23,7
009f36 91a9         ld   r26,y+
009f37 91b9         ld   r27,y+
009f38 9189         ld   r24,y+
009f39 9199         ld   r25,y+
009f3a 17ea         cp   r30,r26
009f3b 07fb         cpc  r31,r27
009f3c 0768         cpc  r22,r24
009f3d 0779         cpc  r23,r25
009f3e fb97         bst  r25,7
009f3f 9508         ret
                 _floor:
009f40 940e b62f 	CALL __PUTPARD2
009f42 940e a2bf 	CALL SUBOPT_0x7A
009f44 940e 9f0f 	CALL _ftrunc
009f46 940e a34c 	CALL SUBOPT_0x8D
009f48 f419          brne __floor1
                 __floor0:
009f49 940e a2a0 	CALL SUBOPT_0x75
009f4b c009      	RJMP _0x20E0001
                 __floor1:
009f4c f7e6          brtc __floor0
009f4d 940e a2a0 	CALL SUBOPT_0x75
                +
009f4f e0a0     +LDI R26 , LOW ( 0x3F800000 )
009f50 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
009f51 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
009f52 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
009f53 940e b38f 	CALL __SUBF12
                 _0x20E0001:
009f55 9624      	ADIW R28,4
009f56 9508      	RET
                 
                 	.DSEG
                 _flag_PackageTerminate3:
000d6e           	.BYTE 0x1
                 _rxPackage3:
000d6f           	.BYTE 0x40
                 _rx_buffer0:
000daf           	.BYTE 0x1F4
                 _rx_wr_index0:
000fa3           	.BYTE 0x2
                 _rx_rd_index0:
000fa5           	.BYTE 0x2
                 _rx_counter0:
000fa7           	.BYTE 0x2
                 _configRd:
000fa9           	.BYTE 0x145
                 _configLen:
0010ee           	.BYTE 0x2
                 _config_start:
0010f0           	.BYTE 0x1
                 _config_ready:
0010f1           	.BYTE 0x1
                 _config_end:
0010f2           	.BYTE 0x1
                 _config_response:
0010f3           	.BYTE 0x1
                 _hwCalId:
0010f4           	.BYTE 0x2
                 
                 	.ESEG
                 _config_prop:
000000 45
000001 6e
000002 64
000003 50        	.DB  0x45,0x6E,0x64,0x50
000004 6f
000005 69
000006 6e
000007 74        	.DB  0x6F,0x69,0x6E,0x74
000008 00
000009 00
00000a 00
00000b 00        	.DB  0x0,0x0,0x0,0x0
00000c 00
00000d 00
00000e 00
00000f 00        	.DB  0x0,0x0,0x0,0x0
000010 00
000011 00
000012 00
000013 00        	.DB  0x0,0x0,0x0,0x0
000014 43
000015 4f
000016 4d
000017 4d        	.DB  0x43,0x4F,0x4D,0x4D
000018 2d
000019 45
00001a 54
00001b 48        	.DB  0x2D,0x45,0x54,0x48
00001c 2d
00001d 30
00001e 2e
00001f 30        	.DB  0x2D,0x30,0x2E,0x30
000020 31
000021 61
000022 00
000023 00        	.DB  0x31,0x61,0x0,0x0
000024 00
000025 00
000026 00
000027 00        	.DB  0x0,0x0,0x0,0x0
000028 54
000029 65
00002a 73
00002b 74        	.DB  0x54,0x65,0x73,0x74
00002c 45
00002d 6e
00002e 64
00002f 50        	.DB  0x45,0x6E,0x64,0x50
000030 6f
000031 69
000032 6e
000033 74        	.DB  0x6F,0x69,0x6E,0x74
000034 30
000035 31
000036 00
000037 00        	.DB  0x30,0x31,0x0,0x0
000038 00
000039 00
00003a 00
00003b 00        	.DB  0x0,0x0,0x0,0x0
00003c 00
00003d 00
00003e 00
00003f 00        	.DB  0x0,0x0,0x0,0x0
000040 00
000041 00
000042 00
000043 00        	.DB  0x0,0x0,0x0,0x0
000044 00
000045 00
000046 00
000047 00        	.DB  0x0,0x0,0x0,0x0
000048 00
000049 00
00004a 00
00004b 00        	.DB  0x0,0x0,0x0,0x0
00004c 00
00004d 00
00004e 00
00004f 00        	.DB  0x0,0x0,0x0,0x0
000050 30
000051 30
000052 30
000053 30        	.DB  0x30,0x30,0x30,0x30
000054 30
000055 30
000056 30
000057 30        	.DB  0x30,0x30,0x30,0x30
000058 30
000059 30
00005a 31
00005b 00        	.DB  0x30,0x30,0x31,0x0
00005c 00
00005d 00
00005e 00
00005f 00        	.DB  0x0,0x0,0x0,0x0
000060 00
000061 00
000062 00
000063 00        	.DB  0x0,0x0,0x0,0x0
000064 69
000065 4e
000066 54
000067 45        	.DB  0x69,0x4E,0x54,0x45
000068 4c
000069 45
00006a 4e
00006b 49        	.DB  0x4C,0x45,0x4E,0x49
00006c 43
00006d 73
00006e 20
00006f 43        	.DB  0x43,0x73,0x20,0x43
000070 6f
000071 6d
000072 70
000073 61        	.DB  0x6F,0x6D,0x70,0x61
000074 6e
000075 79
000076 00
000077 00        	.DB  0x6E,0x79,0x0,0x0
000078 00
000079 00
00007a 00
00007b 00        	.DB  0x0,0x0,0x0,0x0
00007c 00
00007d 00
00007e 00
00007f 00        	.DB  0x0,0x0,0x0,0x0
000080 00
000081 00
000082 00
000083 00        	.DB  0x0,0x0,0x0,0x0
000084 00
000085 00
000086 00
000087 00        	.DB  0x0,0x0,0x0,0x0
000088 00
000089 00
00008a 00
00008b 00        	.DB  0x0,0x0,0x0,0x0
00008c 53
00008d 54
00008e 52
00008f 49        	.DB  0x53,0x54,0x52,0x49
000090 2d
000091 37
000092 30
000093 33        	.DB  0x2D,0x37,0x30,0x33
000094 00
000095 00
000096 00
000097 00        	.DB  0x0,0x0,0x0,0x0
000098 00
000099 00
00009a 00
00009b 00        	.DB  0x0,0x0,0x0,0x0
00009c 00
00009d 00
00009e 00
00009f 00        	.DB  0x0,0x0,0x0,0x0
0000a0 07        	.DB  0x7
                 _config_oper:
0000a1 20
0000a2 00
0000a3 00
0000a4 00        	.DB  0x20,0x0,0x0,0x0
0000a5 00
0000a6 00
0000a7 00
0000a8 00        	.DB  0x0,0x0,0x0,0x0
                 _config_sens:
0000a9 2c
0000aa 01
0000ab 00
0000ac 80        	.DB  0x2C,0x1,0x0,0x80
0000ad 00
0000ae 00
0000af 00
0000b0 00        	.DB  0x0,0x0,0x0,0x0
0000b1 00
0000b2 00
0000b3 00
0000b4 00        	.DB  0x0,0x0,0x0,0x0
0000b5 00
0000b6 0a
0000b7 00
0000b8 00        	.DB  0x0,0xA,0x0,0x0
0000b9 00
0000ba 00
0000bb 00
0000bc 00        	.DB  0x0,0x0,0x0,0x0
0000bd 00
0000be 00
0000bf 00
0000c0 0a        	.DB  0x0,0x0,0x0,0xA
0000c1 00
0000c2 00
0000c3 00
0000c4 00        	.DB  0x0,0x0,0x0,0x0
0000c5 00
0000c6 2c
0000c7 01
0000c8 00        	.DB  0x0,0x2C,0x1,0x0
0000c9 80
0000ca 00
0000cb 00
0000cc 00        	.DB  0x80,0x0,0x0,0x0
0000cd 00
0000ce 00
0000cf 00
0000d0 00        	.DB  0x0,0x0,0x0,0x0
0000d1 00
0000d2 00
0000d3 0a
0000d4 00        	.DB  0x0,0x0,0xA,0x0
0000d5 00
0000d6 00
0000d7 00
0000d8 00        	.DB  0x0,0x0,0x0,0x0
0000d9 00
0000da 00
0000db 00
0000dc 00        	.DB  0x0,0x0,0x0,0x0
0000dd 0a
0000de 00
0000df 00
0000e0 00        	.DB  0xA,0x0,0x0,0x0
0000e1 00
0000e2 00
0000e3 2c
0000e4 01        	.DB  0x0,0x0,0x2C,0x1
0000e5 00
0000e6 80
0000e7 00
0000e8 00        	.DB  0x0,0x80,0x0,0x0
0000e9 00
0000ea 00
0000eb 00
0000ec 00        	.DB  0x0,0x0,0x0,0x0
0000ed 00
0000ee 00
0000ef 00
0000f0 0a        	.DB  0x0,0x0,0x0,0xA
0000f1 00
0000f2 00
0000f3 00
0000f4 00        	.DB  0x0,0x0,0x0,0x0
0000f5 00
0000f6 00
0000f7 00
0000f8 00        	.DB  0x0,0x0,0x0,0x0
0000f9 00
0000fa 0a
0000fb 00
0000fc 00        	.DB  0x0,0xA,0x0,0x0
0000fd 00
0000fe 00
0000ff 00
000100 2c        	.DB  0x0,0x0,0x0,0x2C
000101 01
000102 00
000103 80
000104 00        	.DB  0x1,0x0,0x80,0x0
000105 00
000106 00
000107 00
000108 00        	.DB  0x0,0x0,0x0,0x0
000109 00
00010a 00
00010b 00
00010c 00        	.DB  0x0,0x0,0x0,0x0
00010d 0a
00010e 00
00010f 00
000110 00        	.DB  0xA,0x0,0x0,0x0
000111 00
000112 00
000113 00
000114 00        	.DB  0x0,0x0,0x0,0x0
000115 00
000116 00
000117 0a
000118 00        	.DB  0x0,0x0,0xA,0x0
000119 00
00011a 00
00011b 00
00011c 00        	.DB  0x0,0x0,0x0,0x0
00011d 2c
00011e 01
00011f 00
000120 80        	.DB  0x2C,0x1,0x0,0x80
000121 00
000122 00
000123 00
000124 00        	.DB  0x0,0x0,0x0,0x0
000125 00
000126 00
000127 00
000128 00        	.DB  0x0,0x0,0x0,0x0
000129 00
00012a 0a
00012b 00
00012c 00        	.DB  0x0,0xA,0x0,0x0
00012d 00
00012e 00
00012f 00
000130 00        	.DB  0x0,0x0,0x0,0x0
000131 00
000132 00
000133 00
000134 0a        	.DB  0x0,0x0,0x0,0xA
000135 00
000136 00
000137 00
000138 00        	.DB  0x0,0x0,0x0,0x0
000139 00        	.DB  0x0
                 _config_din:
00013a 00
00013b 0f
00013c 00
00013d 00        	.DB  0x0,0xF,0x0,0x0
00013e 0f
00013f 00
000140 00
000141 0f        	.DB  0xF,0x0,0x0,0xF
000142 00
000143 00
000144 0f
000145 00        	.DB  0x0,0x0,0xF,0x0
000146 00
000147 0f
000148 00
000149 00        	.DB  0x0,0xF,0x0,0x0
00014a 0f
00014b 00
00014c 00
00014d 0f        	.DB  0xF,0x0,0x0,0xF
00014e 00
00014f 00
000150 0f
000151 00        	.DB  0x0,0x0,0xF,0x0
000152 00
000153 0f
000154 00
000155 00        	.DB  0x0,0xF,0x0,0x0
000156 0f
000157 00
000158 00
000159 0f        	.DB  0xF,0x0,0x0,0xF
00015a 00
00015b 00
00015c 0f
00015d 00        	.DB  0x0,0x0,0xF,0x0
00015e 00
00015f 0f
000160 00
000161 00        	.DB  0x0,0xF,0x0,0x0
000162 0f
000163 00
000164 00
000165 0f        	.DB  0xF,0x0,0x0,0xF
000166 00
000167 00
000168 0f
000169 00        	.DB  0x0,0x0,0xF,0x0
                 _config_dout:
00016a 00
00016b 01
00016c 00
00016d 00        	.DB  0x0,0x1,0x0,0x0
00016e 00
00016f 00
000170 00
000171 00        	.DB  0x0,0x0,0x0,0x0
000172 00
000173 00
000174 00
000175 00        	.DB  0x0,0x0,0x0,0x0
000176 00
000177 00
000178 00
000179 00        	.DB  0x0,0x0,0x0,0x0
00017a 00
00017b 00
00017c 00
00017d 00        	.DB  0x0,0x0,0x0,0x0
00017e 00
00017f 00
000180 00
000181 00        	.DB  0x0,0x0,0x0,0x0
000182 00
000183 00
000184 00
000185 00        	.DB  0x0,0x0,0x0,0x0
000186 00
000187 00
000188 00
000189 00        	.DB  0x0,0x0,0x0,0x0
00018a 00
00018b 00
00018c 00
00018d 00        	.DB  0x0,0x0,0x0,0x0
00018e 00
00018f 00
000190 00
000191 01        	.DB  0x0,0x0,0x0,0x1
000192 00
000193 00
000194 00
000195 00        	.DB  0x0,0x0,0x0,0x0
000196 00
000197 00
000198 00
000199 00        	.DB  0x0,0x0,0x0,0x0
00019a 00
00019b 00
00019c 00
00019d 00        	.DB  0x0,0x0,0x0,0x0
00019e 00
00019f 00
0001a0 00
0001a1 00        	.DB  0x0,0x0,0x0,0x0
0001a2 00
0001a3 00
0001a4 00
0001a5 00        	.DB  0x0,0x0,0x0,0x0
0001a6 00
0001a7 00
0001a8 00
0001a9 00        	.DB  0x0,0x0,0x0,0x0
0001aa 00
0001ab 00
0001ac 00
0001ad 00        	.DB  0x0,0x0,0x0,0x0
0001ae 00
0001af 00
0001b0 00
0001b1 00        	.DB  0x0,0x0,0x0,0x0
0001b2 00
0001b3 00
0001b4 00
0001b5 00        	.DB  0x0,0x0,0x0,0x0
0001b6 00
0001b7 01
0001b8 00
0001b9 00        	.DB  0x0,0x1,0x0,0x0
0001ba 00
0001bb 00
0001bc 00
0001bd 00        	.DB  0x0,0x0,0x0,0x0
0001be 00
0001bf 00
0001c0 00
0001c1 00        	.DB  0x0,0x0,0x0,0x0
0001c2 00
0001c3 00
0001c4 00
0001c5 00        	.DB  0x0,0x0,0x0,0x0
0001c6 00
0001c7 00
0001c8 00
0001c9 00        	.DB  0x0,0x0,0x0,0x0
0001ca 00
0001cb 00
0001cc 00
0001cd 00        	.DB  0x0,0x0,0x0,0x0
0001ce 00
0001cf 00
0001d0 00
0001d1 00        	.DB  0x0,0x0,0x0,0x0
0001d2 00
0001d3 00
0001d4 00
0001d5 00        	.DB  0x0,0x0,0x0,0x0
0001d6 00
0001d7 00
0001d8 00
0001d9 00        	.DB  0x0,0x0,0x0,0x0
0001da 00
0001db 00
0001dc 00
0001dd 01        	.DB  0x0,0x0,0x0,0x1
0001de 00
0001df 00
0001e0 00
0001e1 00        	.DB  0x0,0x0,0x0,0x0
0001e2 00
0001e3 00
0001e4 00
0001e5 00        	.DB  0x0,0x0,0x0,0x0
0001e6 00
0001e7 00
0001e8 00
0001e9 00        	.DB  0x0,0x0,0x0,0x0
0001ea 00
0001eb 00
0001ec 00
0001ed 00        	.DB  0x0,0x0,0x0,0x0
0001ee 00
0001ef 00
0001f0 00
0001f1 00        	.DB  0x0,0x0,0x0,0x0
0001f2 00
0001f3 00
0001f4 00
0001f5 00        	.DB  0x0,0x0,0x0,0x0
0001f6 00
0001f7 00
0001f8 00
0001f9 00        	.DB  0x0,0x0,0x0,0x0
0001fa 00
0001fb 00
0001fc 00
0001fd 00        	.DB  0x0,0x0,0x0,0x0
0001fe 00
0001ff 00
000200 00
000201 00        	.DB  0x0,0x0,0x0,0x0
000202 00
000203 01
000204 00
000205 00        	.DB  0x0,0x1,0x0,0x0
000206 00
000207 00
000208 00
000209 00        	.DB  0x0,0x0,0x0,0x0
00020a 00
00020b 00
00020c 00
00020d 00        	.DB  0x0,0x0,0x0,0x0
00020e 00
00020f 00
000210 00
000211 00        	.DB  0x0,0x0,0x0,0x0
000212 00
000213 00
000214 00
000215 00        	.DB  0x0,0x0,0x0,0x0
000216 00
000217 00
000218 00
000219 00        	.DB  0x0,0x0,0x0,0x0
00021a 00
00021b 00
00021c 00
00021d 00        	.DB  0x0,0x0,0x0,0x0
00021e 00
00021f 00
000220 00
000221 00        	.DB  0x0,0x0,0x0,0x0
000222 00
000223 00
000224 00
000225 00        	.DB  0x0,0x0,0x0,0x0
000226 00
000227 00        	.DB  0x0,0x0
                 _config_ain:
000228 00
000229 00
00022a 00
00022b c0        	.DB  0x0,0x0,0x0,0xC0
00022c 3f
00022d 00
00022e 00
00022f 00        	.DB  0x3F,0x0,0x0,0x0
000230 c0
000231 3f
000232 00
000233 00        	.DB  0xC0,0x3F,0x0,0x0
000234 00
000235 c0
000236 3f
000237 00        	.DB  0x0,0xC0,0x3F,0x0
000238 00
000239 00
00023a c0
00023b 3f        	.DB  0x0,0x0,0xC0,0x3F
00023c 00
00023d 00
00023e 00
00023f c0        	.DB  0x0,0x0,0x0,0xC0
000240 3f
000241 00
000242 00
000243 00        	.DB  0x3F,0x0,0x0,0x0
000244 c0
000245 3f
000246 00
000247 00        	.DB  0xC0,0x3F,0x0,0x0
000248 00
000249 c0
00024a 3f
00024b 00        	.DB  0x0,0xC0,0x3F,0x0
00024c 00
00024d 00
00024e c0
00024f 3f        	.DB  0x0,0x0,0xC0,0x3F
000250 00
000251 00
000252 00
000253 c0        	.DB  0x0,0x0,0x0,0xC0
000254 3f
000255 00
000256 00
000257 00        	.DB  0x3F,0x0,0x0,0x0
000258 c0
000259 3f
00025a 00
00025b 00        	.DB  0xC0,0x3F,0x0,0x0
00025c 00
00025d c0
00025e 3f
00025f 00        	.DB  0x0,0xC0,0x3F,0x0
000260 00
000261 00
000262 c0
000263 3f        	.DB  0x0,0x0,0xC0,0x3F
000264 00
000265 00
000266 00
000267 c0        	.DB  0x0,0x0,0x0,0xC0
000268 3f
000269 00
00026a 00
00026b 00        	.DB  0x3F,0x0,0x0,0x0
00026c c0
00026d 3f
00026e 00
00026f 00        	.DB  0xC0,0x3F,0x0,0x0
000270 00
000271 c0
000272 3f
000273 00        	.DB  0x0,0xC0,0x3F,0x0
000274 00
000275 00
000276 c0
000277 3f        	.DB  0x0,0x0,0xC0,0x3F
                 _config_aout:
000278 00
000279 00
00027a 00
00027b 00        	.DB  0x0,0x0,0x0,0x0
00027c 00
00027d 00
00027e 00
00027f 00        	.DB  0x0,0x0,0x0,0x0
000280 00
000281 00
000282 00
000283 00        	.DB  0x0,0x0,0x0,0x0
000284 00
000285 00
000286 00
000287 00        	.DB  0x0,0x0,0x0,0x0
000288 00
000289 00
00028a 00
00028b 00        	.DB  0x0,0x0,0x0,0x0
00028c 00
00028d 00
00028e 00
00028f 00        	.DB  0x0,0x0,0x0,0x0
000290 00
000291 00
000292 00
000293 00        	.DB  0x0,0x0,0x0,0x0
000294 00
000295 00
000296 00
000297 00        	.DB  0x0,0x0,0x0,0x0
000298 00
000299 00
00029a 00
00029b 00        	.DB  0x0,0x0,0x0,0x0
00029c 00
00029d 00
00029e 00
00029f 00        	.DB  0x0,0x0,0x0,0x0
0002a0 00
0002a1 00
0002a2 00
0002a3 00        	.DB  0x0,0x0,0x0,0x0
0002a4 00
0002a5 00
0002a6 00
0002a7 00        	.DB  0x0,0x0,0x0,0x0
0002a8 00
0002a9 00
0002aa 00
0002ab 00        	.DB  0x0,0x0,0x0,0x0
0002ac 00
0002ad 00
0002ae 00
0002af 00        	.DB  0x0,0x0,0x0,0x0
0002b0 00
0002b1 00
0002b2 00
0002b3 00        	.DB  0x0,0x0,0x0,0x0
0002b4 00
0002b5 00
0002b6 00
0002b7 00        	.DB  0x0,0x0,0x0,0x0
0002b8 00
0002b9 00
0002ba 00
0002bb 00        	.DB  0x0,0x0,0x0,0x0
0002bc 00
0002bd 00
0002be 00
0002bf 00        	.DB  0x0,0x0,0x0,0x0
0002c0 00
0002c1 00
0002c2 00
0002c3 00        	.DB  0x0,0x0,0x0,0x0
0002c4 00
0002c5 00
0002c6 00
0002c7 00        	.DB  0x0,0x0,0x0,0x0
0002c8 00
0002c9 00
0002ca 00
0002cb 00        	.DB  0x0,0x0,0x0,0x0
0002cc 00
0002cd 00
0002ce 00
0002cf 00        	.DB  0x0,0x0,0x0,0x0
0002d0 00
0002d1 00
0002d2 00
0002d3 00        	.DB  0x0,0x0,0x0,0x0
0002d4 00
0002d5 00
0002d6 00
0002d7 00        	.DB  0x0,0x0,0x0,0x0
0002d8 00
0002d9 00
0002da 00
0002db 00        	.DB  0x0,0x0,0x0,0x0
0002dc 00
0002dd 00
0002de 00
0002df 00        	.DB  0x0,0x0,0x0,0x0
0002e0 00
0002e1 00
0002e2 00
0002e3 00        	.DB  0x0,0x0,0x0,0x0
0002e4 00
0002e5 00
0002e6 00
0002e7 00        	.DB  0x0,0x0,0x0,0x0
0002e8 00
0002e9 00
0002ea 00
0002eb 00        	.DB  0x0,0x0,0x0,0x0
0002ec 00
0002ed 00
0002ee 00
0002ef 00        	.DB  0x0,0x0,0x0,0x0
0002f0 00
0002f1 00
0002f2 00
0002f3 00        	.DB  0x0,0x0,0x0,0x0
0002f4 00
0002f5 00
0002f6 00
0002f7 00        	.DB  0x0,0x0,0x0,0x0
0002f8 00
0002f9 00
0002fa 00
0002fb 00        	.DB  0x0,0x0,0x0,0x0
0002fc 00
0002fd 00
0002fe 00
0002ff 00        	.DB  0x0,0x0,0x0,0x0
000300 00
000301 00
000302 00
000303 00        	.DB  0x0,0x0,0x0,0x0
000304 00
000305 00
000306 00
000307 00        	.DB  0x0,0x0,0x0,0x0
000308 00
000309 00
00030a 00
00030b 00        	.DB  0x0,0x0,0x0,0x0
00030c 00
00030d 00
00030e 00
00030f 00        	.DB  0x0,0x0,0x0,0x0
000310 00
000311 00
000312 00
000313 00        	.DB  0x0,0x0,0x0,0x0
000314 00
000315 00
000316 00
000317 00        	.DB  0x0,0x0,0x0,0x0
000318 00
000319 00
00031a 00
00031b 00        	.DB  0x0,0x0,0x0,0x0
00031c 00
00031d 00
00031e 00
00031f 00        	.DB  0x0,0x0,0x0,0x0
000320 00
000321 00
000322 00
000323 00        	.DB  0x0,0x0,0x0,0x0
000324 00
000325 00
000326 00
000327 00        	.DB  0x0,0x0,0x0,0x0
000328 00
000329 00
00032a 00
00032b 00        	.DB  0x0,0x0,0x0,0x0
00032c 00
00032d 00
00032e 00
00032f 00        	.DB  0x0,0x0,0x0,0x0
000330 00
000331 00
000332 00
000333 00        	.DB  0x0,0x0,0x0,0x0
000334 00
000335 00
000336 00
000337 00        	.DB  0x0,0x0,0x0,0x0
000338 00
000339 00
00033a 00
00033b 00        	.DB  0x0,0x0,0x0,0x0
00033c 00
00033d 00
00033e 00
00033f 00        	.DB  0x0,0x0,0x0,0x0
000340 00
000341 00
000342 00
000343 00        	.DB  0x0,0x0,0x0,0x0
000344 00
000345 00
000346 00
000347 00        	.DB  0x0,0x0,0x0,0x0
000348 00
000349 00
00034a 00
00034b 00        	.DB  0x0,0x0,0x0,0x0
00034c 00
00034d 00
00034e 00
00034f 00        	.DB  0x0,0x0,0x0,0x0
000350 00
000351 00
000352 00
000353 00        	.DB  0x0,0x0,0x0,0x0
000354 00
000355 00
000356 00
000357 00        	.DB  0x0,0x0,0x0,0x0
000358 00
000359 00
00035a 00
00035b 00        	.DB  0x0,0x0,0x0,0x0
00035c 00
00035d 00
00035e 00
00035f 00        	.DB  0x0,0x0,0x0,0x0
000360 00
000361 00
000362 00
000363 00        	.DB  0x0,0x0,0x0,0x0
000364 00
000365 00
000366 00
000367 00        	.DB  0x0,0x0,0x0,0x0
000368 00
000369 00
00036a 00
00036b 00        	.DB  0x0,0x0,0x0,0x0
00036c 00
00036d 00
00036e 00
00036f 00        	.DB  0x0,0x0,0x0,0x0
000370 00
000371 00
000372 00
000373 00        	.DB  0x0,0x0,0x0,0x0
000374 00
000375 00
000376 00
000377 00        	.DB  0x0,0x0,0x0,0x0
000378 00
000379 00
00037a 00
00037b 00        	.DB  0x0,0x0,0x0,0x0
00037c 00
00037d 00
00037e 00
00037f 00        	.DB  0x0,0x0,0x0,0x0
000380 00
000381 00
000382 00
000383 00        	.DB  0x0,0x0,0x0,0x0
000384 00
000385 00
000386 00
000387 00        	.DB  0x0,0x0,0x0,0x0
000388 00
000389 00
00038a 00
00038b 00        	.DB  0x0,0x0,0x0,0x0
00038c 00
00038d 00
00038e 00
00038f 00        	.DB  0x0,0x0,0x0,0x0
000390 00
000391 00
000392 00
000393 00        	.DB  0x0,0x0,0x0,0x0
000394 00
000395 00
000396 00
000397 00        	.DB  0x0,0x0,0x0,0x0
000398 00
000399 00
00039a 00
00039b 00        	.DB  0x0,0x0,0x0,0x0
00039c 00
00039d 00
00039e 00
00039f 00        	.DB  0x0,0x0,0x0,0x0
0003a0 00
0003a1 00
0003a2 00
0003a3 00        	.DB  0x0,0x0,0x0,0x0
0003a4 00
0003a5 00
0003a6 00
0003a7 00        	.DB  0x0,0x0,0x0,0x0
0003a8 00
0003a9 00
0003aa 00
0003ab 00        	.DB  0x0,0x0,0x0,0x0
0003ac 00
0003ad 00
0003ae 00
0003af 00        	.DB  0x0,0x0,0x0,0x0
0003b0 00
0003b1 00
0003b2 00
0003b3 00        	.DB  0x0,0x0,0x0,0x0
0003b4 00
0003b5 00
0003b6 00
0003b7 00        	.DB  0x0,0x0,0x0,0x0
0003b8 00
0003b9 00
0003ba 00
0003bb 00        	.DB  0x0,0x0,0x0,0x0
0003bc 00
0003bd 00
0003be 00
0003bf 00        	.DB  0x0,0x0,0x0,0x0
0003c0 00
0003c1 00
0003c2 00
0003c3 00        	.DB  0x0,0x0,0x0,0x0
0003c4 00
0003c5 00
0003c6 00
0003c7 00        	.DB  0x0,0x0,0x0,0x0
0003c8 00
0003c9 00
0003ca 00
0003cb 00        	.DB  0x0,0x0,0x0,0x0
0003cc 00
0003cd 00
0003ce 00
0003cf 00        	.DB  0x0,0x0,0x0,0x0
0003d0 00
0003d1 00
0003d2 00
0003d3 00        	.DB  0x0,0x0,0x0,0x0
0003d4 00
0003d5 00
0003d6 00
0003d7 00        	.DB  0x0,0x0,0x0,0x0
0003d8 00
0003d9 00
0003da 00
0003db 00        	.DB  0x0,0x0,0x0,0x0
0003dc 00
0003dd 00
0003de 00
0003df 00        	.DB  0x0,0x0,0x0,0x0
0003e0 00
0003e1 00
0003e2 00
0003e3 00        	.DB  0x0,0x0,0x0,0x0
0003e4 00
0003e5 00
0003e6 00
0003e7 00        	.DB  0x0,0x0,0x0,0x0
0003e8 00
0003e9 00
0003ea 00
0003eb 00        	.DB  0x0,0x0,0x0,0x0
0003ec 00
0003ed 00
0003ee 00
0003ef 00        	.DB  0x0,0x0,0x0,0x0
0003f0 00
0003f1 00
0003f2 00
0003f3 00        	.DB  0x0,0x0,0x0,0x0
0003f4 00
0003f5 00
0003f6 00
0003f7 00        	.DB  0x0,0x0,0x0,0x0
0003f8 00
0003f9 00
0003fa 00
0003fb 00        	.DB  0x0,0x0,0x0,0x0
0003fc 00
0003fd 00
0003fe 00
0003ff 00        	.DB  0x0,0x0,0x0,0x0
000400 00
000401 00
000402 00
000403 00        	.DB  0x0,0x0,0x0,0x0
000404 00
000405 00
000406 00
000407 00        	.DB  0x0,0x0,0x0,0x0
000408 00
000409 00
00040a 00
00040b 00        	.DB  0x0,0x0,0x0,0x0
00040c 00
00040d 00
00040e 00
00040f 00        	.DB  0x0,0x0,0x0,0x0
000410 00
000411 00
000412 00
000413 00        	.DB  0x0,0x0,0x0,0x0
000414 00
000415 00
000416 00
000417 00        	.DB  0x0,0x0,0x0,0x0
000418 00
000419 00
00041a 00
00041b 00        	.DB  0x0,0x0,0x0,0x0
00041c 00
00041d 00
00041e 00
00041f 00        	.DB  0x0,0x0,0x0,0x0
000420 00
000421 00
000422 00
000423 00        	.DB  0x0,0x0,0x0,0x0
000424 00
000425 00
000426 00
000427 00        	.DB  0x0,0x0,0x0,0x0
000428 00
000429 00
00042a 00
00042b 00        	.DB  0x0,0x0,0x0,0x0
00042c 00
00042d 00
00042e 00
00042f 00        	.DB  0x0,0x0,0x0,0x0
000430 00
000431 00
000432 00
000433 00        	.DB  0x0,0x0,0x0,0x0
000434 00
000435 00
000436 00
000437 00        	.DB  0x0,0x0,0x0,0x0
000438 00
000439 00
00043a 00
00043b 00        	.DB  0x0,0x0,0x0,0x0
00043c 00
00043d 00
00043e 00
00043f 00        	.DB  0x0,0x0,0x0,0x0
000440 00
000441 00
000442 00
000443 00        	.DB  0x0,0x0,0x0,0x0
000444 00
000445 00
000446 00
000447 00        	.DB  0x0,0x0,0x0,0x0
000448 00
000449 00
00044a 00
00044b 00        	.DB  0x0,0x0,0x0,0x0
00044c 00
00044d 00
00044e 00
00044f 00        	.DB  0x0,0x0,0x0,0x0
000450 00
000451 00
000452 00
000453 00        	.DB  0x0,0x0,0x0,0x0
000454 00
000455 00
000456 00
000457 00        	.DB  0x0,0x0,0x0,0x0
000458 00
000459 00
00045a 00
00045b 00        	.DB  0x0,0x0,0x0,0x0
00045c 00
00045d 00
00045e 00
00045f 00        	.DB  0x0,0x0,0x0,0x0
000460 00
000461 00
000462 00
000463 00        	.DB  0x0,0x0,0x0,0x0
000464 00
000465 00
000466 00
000467 00        	.DB  0x0,0x0,0x0,0x0
000468 00
000469 00
00046a 00
00046b 00        	.DB  0x0,0x0,0x0,0x0
00046c 00
00046d 00
00046e 00
00046f 00        	.DB  0x0,0x0,0x0,0x0
000470 00
000471 00
000472 00
000473 00        	.DB  0x0,0x0,0x0,0x0
000474 00
000475 00
000476 00
000477 00        	.DB  0x0,0x0,0x0,0x0
000478 00
000479 00
00047a 00
00047b 00        	.DB  0x0,0x0,0x0,0x0
00047c 00
00047d 00
00047e 00
00047f 00        	.DB  0x0,0x0,0x0,0x0
000480 00
000481 00
000482 00
000483 00        	.DB  0x0,0x0,0x0,0x0
000484 00
000485 00
000486 00
000487 00        	.DB  0x0,0x0,0x0,0x0
000488 00
000489 00
00048a 00
00048b 00        	.DB  0x0,0x0,0x0,0x0
00048c 00
00048d 00
00048e 00
00048f 00        	.DB  0x0,0x0,0x0,0x0
000490 00
000491 00
000492 00
000493 00        	.DB  0x0,0x0,0x0,0x0
000494 00
000495 00
000496 00
000497 00        	.DB  0x0,0x0,0x0,0x0
000498 00
000499 00
00049a 00
00049b 00        	.DB  0x0,0x0,0x0,0x0
00049c 00
00049d 00
00049e 00
00049f 00        	.DB  0x0,0x0,0x0,0x0
0004a0 00
0004a1 00
0004a2 00
0004a3 00        	.DB  0x0,0x0,0x0,0x0
0004a4 00
0004a5 00
0004a6 00
0004a7 00        	.DB  0x0,0x0,0x0,0x0
0004a8 00
0004a9 00
0004aa 00
0004ab 00        	.DB  0x0,0x0,0x0,0x0
0004ac 00
0004ad 00
0004ae 00
0004af 00        	.DB  0x0,0x0,0x0,0x0
0004b0 00
0004b1 00
0004b2 00
0004b3 00        	.DB  0x0,0x0,0x0,0x0
0004b4 00
0004b5 00
0004b6 00
0004b7 00        	.DB  0x0,0x0,0x0,0x0
0004b8 00
0004b9 00
0004ba 00
0004bb 00        	.DB  0x0,0x0,0x0,0x0
0004bc 00
0004bd 00
0004be 00
0004bf 00        	.DB  0x0,0x0,0x0,0x0
0004c0 00
0004c1 00
0004c2 00
0004c3 00        	.DB  0x0,0x0,0x0,0x0
0004c4 00
0004c5 00
0004c6 00
0004c7 00        	.DB  0x0,0x0,0x0,0x0
0004c8 00
0004c9 00
0004ca 00
0004cb 00        	.DB  0x0,0x0,0x0,0x0
0004cc 00
0004cd 00
0004ce 00
0004cf 00        	.DB  0x0,0x0,0x0,0x0
0004d0 00
0004d1 00
0004d2 00
0004d3 00        	.DB  0x0,0x0,0x0,0x0
0004d4 00
0004d5 00
0004d6 00
0004d7 00        	.DB  0x0,0x0,0x0,0x0
0004d8 00
0004d9 00
0004da 00
0004db 00        	.DB  0x0,0x0,0x0,0x0
0004dc 00
0004dd 00
0004de 00
0004df 00        	.DB  0x0,0x0,0x0,0x0
0004e0 00
0004e1 00
0004e2 00
0004e3 00        	.DB  0x0,0x0,0x0,0x0
0004e4 00
0004e5 00
0004e6 00
0004e7 00        	.DB  0x0,0x0,0x0,0x0
0004e8 00
0004e9 00
0004ea 00
0004eb 00        	.DB  0x0,0x0,0x0,0x0
0004ec 00
0004ed 00
0004ee 00
0004ef 00        	.DB  0x0,0x0,0x0,0x0
0004f0 00
0004f1 00
0004f2 00
0004f3 00        	.DB  0x0,0x0,0x0,0x0
0004f4 00
0004f5 00
0004f6 00
0004f7 00        	.DB  0x0,0x0,0x0,0x0
0004f8 00
0004f9 00
0004fa 00
0004fb 00        	.DB  0x0,0x0,0x0,0x0
0004fc 00
0004fd 00
0004fe 00
0004ff 00        	.DB  0x0,0x0,0x0,0x0
000500 00
000501 00
000502 00
000503 00        	.DB  0x0,0x0,0x0,0x0
000504 00
000505 00
000506 00
000507 00        	.DB  0x0,0x0,0x0,0x0
                 _config_buzz:
000508 00
000509 00
00050a 00
00050b 00        	.DB  0x0,0x0,0x0,0x0
00050c 00
00050d 00
00050e 00
00050f 00        	.DB  0x0,0x0,0x0,0x0
000510 00
000511 00
000512 00
000513 00        	.DB  0x0,0x0,0x0,0x0
000514 00
000515 00
000516 00
000517 00        	.DB  0x0,0x0,0x0,0x0
000518 00
000519 00
00051a 00
00051b 00        	.DB  0x0,0x0,0x0,0x0
00051c 00
00051d 00
00051e 00
00051f 00        	.DB  0x0,0x0,0x0,0x0
000520 00
000521 00
000522 00
000523 00        	.DB  0x0,0x0,0x0,0x0
000524 00
000525 00
000526 00
000527 00        	.DB  0x0,0x0,0x0,0x0
000528 00
000529 00
00052a 00
00052b 00        	.DB  0x0,0x0,0x0,0x0
00052c 00        	.DB  0x0
                 _config_alm:
00052d 00
00052e 00
00052f 00
000530 00        	.DB  0x0,0x0,0x0,0x0
000531 00
000532 00
000533 00
000534 00        	.DB  0x0,0x0,0x0,0x0
000535 00
000536 00
000537 00
000538 00        	.DB  0x0,0x0,0x0,0x0
000539 00
00053a 00
00053b 00
00053c 00        	.DB  0x0,0x0,0x0,0x0
00053d 00
00053e 00        	.DB  0x0,0x0
                 _config_stat:
00053f 30
000540 3c        	.DB  0x30,0x3C
000541 00        	.DB  0x0
                 _config_prop_flag:
000542 00        	.DB  0x0
                 _config_oper_flag:
000543 00        	.DB  0x0
                 _config_sens_flag:
000544 00
000545 00
000546 00
000547 00        	.DB  0x0,0x0,0x0,0x0
000548 00        	.DB  0x0
                 _config_din_flag:
000549 00
00054a 00
00054b 00
00054c 00        	.DB  0x0,0x0,0x0,0x0
00054d 00
00054e 00
00054f 00
000550 00        	.DB  0x0,0x0,0x0,0x0
000551 00
000552 00
000553 00
000554 00        	.DB  0x0,0x0,0x0,0x0
000555 00
000556 00
000557 00
000558 00        	.DB  0x0,0x0,0x0,0x0
                 _config_dout_flag:
000559 00
00055a 00
00055b 00
00055c 00        	.DB  0x0,0x0,0x0,0x0
00055d 00        	.DB  0x0
                 _config_ain_flag:
00055e 00
00055f 00
000560 00
000561 00        	.DB  0x0,0x0,0x0,0x0
000562 00
000563 00
000564 00
000565 00        	.DB  0x0,0x0,0x0,0x0
000566 00
000567 00
000568 00
000569 00        	.DB  0x0,0x0,0x0,0x0
00056a 00
00056b 00
00056c 00
00056d 00        	.DB  0x0,0x0,0x0,0x0
                 _config_aout_flag:
00056e 00
00056f 00
000570 00
000571 00        	.DB  0x0,0x0,0x0,0x0
000572 00
000573 00
000574 00
000575 00        	.DB  0x0,0x0,0x0,0x0
000576 00
000577 00
000578 00
000579 00        	.DB  0x0,0x0,0x0,0x0
00057a 00
00057b 00
00057c 00
00057d 00        	.DB  0x0,0x0,0x0,0x0
                 _config_buzz_flag:
00057e 00        	.DB  0x0
                 _config_alm_flag:
00057f 00        	.DB  0x0
                 _config_stat_flag:
000580 00        	.DB  0x0
                 
                 	.DSEG
                 _is_properties_config_update:
0010f6           	.BYTE 0x1
                 _is_operating_config_update:
0010f7           	.BYTE 0x1
                 _is_sensor_config_update:
0010f8           	.BYTE 0x5
                 _is_din_config_update:
0010fd           	.BYTE 0x10
                 _is_dout_config_update:
00110d           	.BYTE 0x5
                 _is_buzzer_config_update:
001112           	.BYTE 0x1
                 _is_status_config_update:
001113           	.BYTE 0x1
                 _is_env_config_update:
001114           	.BYTE 0x1
                 _properties_config:
001115           	.BYTE 0xA1
                 _operating_config:
0011b6           	.BYTE 0x8
                 _sensor_config:
0011be           	.BYTE 0x91
                 _din_config:
00124f           	.BYTE 0x30
                 _dout_config:
00127f           	.BYTE 0xBE
                 _buzz_config:
00133d           	.BYTE 0x25
                 _status_config:
001362           	.BYTE 0x3
                 _env_config:
001365           	.BYTE 0x12
                 _baseCounter:
001377           	.BYTE 0x4
                 _eth_waitQueue:
00137b           	.BYTE 0xA5
                 
                 	.ESEG
                 _DEVICE_SERIAL:
000581 00
000582 00
000583 00
000584 00        	.DB  0x0,0x0,0x0,0x0
000585 00
000586 00
000587 02
000588 22        	.DB  0x0,0x0,0x2,0x22
                 
                 	.DSEG
                 _ETH_current_mode:
001420           	.BYTE 0x1
                 _commLostTimer:
001421           	.BYTE 0x4
                 _duplicateListClear:
001425           	.BYTE 0x1
                 _logDataWait:
001426           	.BYTE 0x5
                 _logEventWait:
00142b           	.BYTE 0x5
                 _raw_rtc:
001430           	.BYTE 0x4
                 _prtc_get_time:
001434           	.BYTE 0x4
                 _prtc_get_date:
001438           	.BYTE 0x4
                 _d_out:
00143c           	.BYTE 0x2
                 _adcData:
00143e           	.BYTE 0x14
                 
                 	.ESEG
                 _eep_vref_val:
000589 0a
00058a d7
00058b 23
00058c 40        	.DB  0xA,0xD7,0x23,0x40
                 
                 	.DSEG
                 _sensor:
001452           	.BYTE 0x19
                 _sdFreeSpace:
00146b           	.BYTE 0x4
                 _sensorStatus:
00146f           	.BYTE 0x5
                 _dataStatus:
001474           	.BYTE 0x5
                 _mtncStatus:
001479           	.BYTE 0x1
                 _powerSrcStatus:
00147a           	.BYTE 0x1
                 _batteryStatus:
00147b           	.BYTE 0x1
                 _dinStatus:
00147c           	.BYTE 0x2
                 _doutStatus:
00147e           	.BYTE 0x2
                 _serverCommStatus:
001480           	.BYTE 0x1
                 _lanStatus:
001481           	.BYTE 0x1
                 _memoryStatus:
001482           	.BYTE 0x1
                 _batteryVolt:
001483           	.BYTE 0x4
                 _muteAlarmExpired:
001487           	.BYTE 0x4
                 _muteMode:
00148b           	.BYTE 0x1
                 _sensorAlarm:
00148c           	.BYTE 0x5
                 _dataAlarm:
001491           	.BYTE 0x5
                 _dinAlarm:
001496           	.BYTE 0x10
                 _batteryAlarm:
0014a6           	.BYTE 0x1
                 _memoryAlarm:
0014a7           	.BYTE 0x1
                 _LOGFILE_DATA:
0014a8           	.BYTE 0x9
                 _LOGFILE_EVENT:
0014b1           	.BYTE 0xA
                 _LOGFILE_ERROR:
0014bb           	.BYTE 0xA
                 _LOG_INIT_STR:
0014c5           	.BYTE 0x10
                 _LOG_openFile:
0014d5           	.BYTE 0x4
                 _LOG_closeFile:
0014d9           	.BYTE 0x4
                 _isDataLogEmpty:
0014dd           	.BYTE 0x1
                 _isEventLogEmpty:
0014de           	.BYTE 0x1
                 _ETH_rst_timer_S0000001000:
0014df           	.BYTE 0x4
                 _adcBatt:
0014e3           	.BYTE 0x4
                 _sess_list:
0014e7           	.BYTE 0x64
                 _sensorCalConfig:
00154b           	.BYTE 0xC
                 
                 	.ESEG
                 _sensorCalulate:
00058d 00
00058e 00
00058f 00
000590 00        	.DB  0x0,0x0,0x0,0x0
000591 00
000592 00
000593 00
000594 00        	.DB  0x0,0x0,0x0,0x0
000595 00
000596 00
000597 00
000598 00        	.DB  0x0,0x0,0x0,0x0
000599 00
00059a 00
00059b 00
00059c 00        	.DB  0x0,0x0,0x0,0x0
00059d 00
00059e 00
00059f 00
0005a0 00        	.DB  0x0,0x0,0x0,0x0
0005a1 00
0005a2 00
0005a3 00
0005a4 00        	.DB  0x0,0x0,0x0,0x0
0005a5 00
0005a6 00
0005a7 00
0005a8 00        	.DB  0x0,0x0,0x0,0x0
0005a9 00
0005aa 00
0005ab 00
0005ac 00        	.DB  0x0,0x0,0x0,0x0
0005ad 00
0005ae 00
0005af 00
0005b0 00        	.DB  0x0,0x0,0x0,0x0
0005b1 00
0005b2 00
0005b3 00
0005b4 00        	.DB  0x0,0x0,0x0,0x0
0005b5 00
0005b6 00
0005b7 00
0005b8 00        	.DB  0x0,0x0,0x0,0x0
0005b9 00
0005ba 00
0005bb 00
0005bc 00        	.DB  0x0,0x0,0x0,0x0
0005bd 00
0005be 00
0005bf 00
0005c0 00        	.DB  0x0,0x0,0x0,0x0
0005c1 00
0005c2 00
0005c3 00
0005c4 00        	.DB  0x0,0x0,0x0,0x0
0005c5 00
0005c6 00
0005c7 00
0005c8 00        	.DB  0x0,0x0,0x0,0x0
0005c9 00
0005ca 00
0005cb 00
0005cc 00        	.DB  0x0,0x0,0x0,0x0
0005cd 00
0005ce 00
0005cf 00
0005d0 00        	.DB  0x0,0x0,0x0,0x0
0005d1 00
0005d2 00
0005d3 00
0005d4 00        	.DB  0x0,0x0,0x0,0x0
0005d5 00
0005d6 00
0005d7 00
0005d8 00        	.DB  0x0,0x0,0x0,0x0
0005d9 00
0005da 00
0005db 00
0005dc 00        	.DB  0x0,0x0,0x0,0x0
0005dd 00
0005de 00
0005df 00
0005e0 00        	.DB  0x0,0x0,0x0,0x0
0005e1 00
0005e2 00
0005e3 00
0005e4 00        	.DB  0x0,0x0,0x0,0x0
0005e5 00
0005e6 00
0005e7 00
0005e8 00        	.DB  0x0,0x0,0x0,0x0
0005e9 00
0005ea 00
0005eb 00
0005ec 00        	.DB  0x0,0x0,0x0,0x0
0005ed 00
0005ee 00
0005ef 00
0005f0 00        	.DB  0x0,0x0,0x0,0x0
0005f1 00
0005f2 00
0005f3 00
0005f4 00        	.DB  0x0,0x0,0x0,0x0
0005f5 00
0005f6 00
0005f7 00
0005f8 00        	.DB  0x0,0x0,0x0,0x0
0005f9 00
0005fa 00
0005fb 00
0005fc 00        	.DB  0x0,0x0,0x0,0x0
0005fd 00
0005fe 00
0005ff 00
000600 00        	.DB  0x0,0x0,0x0,0x0
000601 00
000602 00
000603 00
000604 00        	.DB  0x0,0x0,0x0,0x0
000605 00
000606 00
000607 00
000608 00        	.DB  0x0,0x0,0x0,0x0
000609 00
00060a 00
00060b 00
00060c 00        	.DB  0x0,0x0,0x0,0x0
00060d 00
00060e 00        	.DB  0x0,0x0
                 
                 	.DSEG
                 _pfCalibrate:
001557           	.BYTE 0x4
                 _dhtDevice:
00155b           	.BYTE 0xA
                 _dataQ:
001565           	.BYTE 0x64
                 _dataQ_len:
0015c9           	.BYTE 0x2
                 _t_S00F0001000:
0015cb           	.BYTE 0x4
                 _t_flag_S00F0001000:
0015cf           	.BYTE 0x1
                 _lastCheck_S00F0001000:
0015d0           	.BYTE 0x1
                 _t_S00F0005000:
0015d1           	.BYTE 0x14
                 _flag_lower_S00F0005000:
0015e5           	.BYTE 0x5
                 _flag_upper_S00F0005000:
0015ea           	.BYTE 0x5
                 _t_S00F0006000:
0015ef           	.BYTE 0x8
                 _lastDinCheck_S00F0006000:
0015f7           	.BYTE 0x2
                 _steadyState_S00F0006000:
0015f9           	.BYTE 0x2
                 _eventQ:
0015fb           	.BYTE 0x78
                 _last_wr_eventQ:
001673           	.BYTE 0x2
                 _last_rd_eventQ:
001675           	.BYTE 0x2
                 _eventQ_len:
001677           	.BYTE 0x2
                 _ainAlarm:
001679           	.BYTE 0x10
                 _mtncAlarm:
001689           	.BYTE 0x1
                 _powerSrcAlarm:
00168a           	.BYTE 0x1
                 _communicationAlarm:
00168b           	.BYTE 0x1
                 _gsmAlarm:
00168c           	.BYTE 0x1
                 _gsmBalanceAlarm:
00168d           	.BYTE 0x1
                 _t_S0110003000:
00168e           	.BYTE 0x4
                 _t_flag_S0110003000:
001692           	.BYTE 0x1
                 _lastCheck_S0110003000:
001693           	.BYTE 0x1
                 _t_S0110004000:
001694           	.BYTE 0x4
                 _t_flag_S0110004000:
001698           	.BYTE 0x1
                 _lastCheck_S0110004000:
001699           	.BYTE 0x1
                 _t_S0110005000:
00169a           	.BYTE 0x4
                 _t_flag_S0110005000:
00169e           	.BYTE 0x1
                 _t_S0110006000:
00169f           	.BYTE 0x8
                 _t_flag_S0110006000:
0016a7           	.BYTE 0x2
                 _lastCheck_S0110006000:
0016a9           	.BYTE 0x2
                 _t_S0110007000:
0016ab           	.BYTE 0x14
                 _t_flag_S0110007000:
0016bf           	.BYTE 0x5
                 _lastCheck_S0110007000:
0016c4           	.BYTE 0x5
                 _t_S0110008000:
0016c9           	.BYTE 0x14
                 _t_flag_S0110008000:
0016dd           	.BYTE 0x5
                 _fat:
0016e2           	.BYTE 0x232
                 _pfat:
001914           	.BYTE 0x2
                 _root_path:
001916           	.BYTE 0x4
                 _eventLogQueue:
00191a           	.BYTE 0x8C
                 _eventLogQCount:
0019a6           	.BYTE 0x1
                 _dataLogQueue:
0019a7           	.BYTE 0x6E
                 _dataLogQCount:
001a15           	.BYTE 0x1
                 
                 	.ESEG
                 _userPwd:
00060f 00
000610 00
000611 00
000612 00        	.DB  0x0,0x0,0x0,0x0
                 _servicePwd:
000613 02
000614 04
000615 07
000616 05        	.DB  0x2,0x4,0x7,0x5
                 
                 	.DSEG
                 _currentPage:
001a16           	.BYTE 0x1
                 _n:
001a17           	.BYTE 0x2
                 _a:
001a19           	.BYTE 0x30
                 __seed_G100:
001a49           	.BYTE 0x4
                 _status_G102:
001a4d           	.BYTE 0x1
                 _timer1_G102:
001a4e           	.BYTE 0x1
                 _timer2_G102:
001a4f           	.BYTE 0x1
                 _card_type_G102:
001a50           	.BYTE 0x1
                 _pv_S102000B000:
001a51           	.BYTE 0x1
                 _FatFs_G103:
001a52           	.BYTE 0x2
                 _Fsid_G103:
001a54           	.BYTE 0x2
                 _Drive_G103:
001a56           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x0:
                +
009f57 e020     +LDI R18 , LOW ( 0 )
009f58 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
009f59 e040     +LDI R20 , LOW ( 0 )
009f5a e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
009f5b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x1:
009f5c 935a      	ST   -Y,R21
009f5d 934a      	ST   -Y,R20
                +
009f5e e2a6     +LDI R26 , 38
009f5f 9fa4     +MUL R26 , R20
009f60 01f0     +MOVW R30 , R0
009f61 9fa5     +MUL R26 , R21
009f62 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,38
                +
009f63 58e0     +SUBI R30 , LOW ( - _dout_config - ( 1 ) )
009f64 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 1 ) )
                 	__ADDW1MN _dout_config,1
009f65 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 258 TIMES, CODE SIZE REDUCTION:1025 WORDS
                 SUBOPT_0x2:
009f66 940e b62a 	CALL __PUTPARD1
009f68 e080      	LDI  R24,0
009f69 940e 7ca0 	CALL _printDebug
009f6b 9624      	ADIW R28,4
009f6c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
                +
009f6d ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
009f6e e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
009f6f 0fe2      	ADD  R30,R18
009f70 1ff3      	ADC  R31,R19
009f71 81e0      	LD   R30,Z
009f72 30e0      	CPI  R30,0
009f73 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x4:
009f74 01f9      	MOVW R30,R18
009f75 01de      	MOVW R26,R28
009f76 5baf      	SUBI R26,LOW(-(65))
009f77 4fbf      	SBCI R27,HIGH(-(65))
009f78 940e b4ec 	CALL __LSLW2
009f7a 0fea      	ADD  R30,R26
009f7b 1ffb      	ADC  R31,R27
009f7c 93fa      	ST   -Y,R31
009f7d 93ea      	ST   -Y,R30
                +
009f7e e0a5     +LDI R26 , LOW ( 0x5 )
009f7f e0b0     +LDI R27 , HIGH ( 0x5 )
009f80 e080     +LDI R24 , BYTE3 ( 0x5 )
009f81 e090     +LDI R25 , BYTE4 ( 0x5 )
                 	__GETD2N 0x5
009f82 940c 3e15 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5:
009f84 01fe      	MOVW R30,R28
009f85 96fd      	ADIW R30,61
009f86 93fa      	ST   -Y,R31
009f87 93ea      	ST   -Y,R30
                +
009f88 e0a7     +LDI R26 , LOW ( 0x7 )
009f89 e0b0     +LDI R27 , HIGH ( 0x7 )
009f8a e080     +LDI R24 , BYTE3 ( 0x7 )
009f8b e090     +LDI R25 , BYTE4 ( 0x7 )
                 	__GETD2N 0x7
009f8c 940c 3e15 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
009f8e 01fe      	MOVW R30,R28
009f8f 96f9      	ADIW R30,57
009f90 93fa      	ST   -Y,R31
009f91 93ea      	ST   -Y,R30
                +
009f92 e3ac     +LDI R26 , LOW ( 0x3C )
009f93 e0b0     +LDI R27 , HIGH ( 0x3C )
009f94 e080     +LDI R24 , BYTE3 ( 0x3C )
009f95 e090     +LDI R25 , BYTE4 ( 0x3C )
                 	__GETD2N 0x3C
009f96 940c 3e15 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
009f98 01fe      	MOVW R30,R28
009f99 96f5      	ADIW R30,53
009f9a 93fa      	ST   -Y,R31
009f9b 93ea      	ST   -Y,R30
                +
009f9c e2ac     +LDI R26 , LOW ( 0x12C )
009f9d e0b1     +LDI R27 , HIGH ( 0x12C )
009f9e e080     +LDI R24 , BYTE3 ( 0x12C )
009f9f e090     +LDI R25 , BYTE4 ( 0x12C )
                 	__GETD2N 0x12C
009fa0 940c 3e15 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
009fa2 e0a7      	LDI  R26,LOW(7)
009fa3 e0b0      	LDI  R27,0
009fa4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 35 TIMES, CODE SIZE REDUCTION:65 WORDS
                 SUBOPT_0x9:
                +
009fa5 85ac     +LDD R26 , Y + 12
009fa6 85bd     +LDD R27 , Y + 12 + 1
009fa7 858e     +LDD R24 , Y + 12 + 2
009fa8 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
009fa9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xA:
                +
009faa 89e8     +LDD R30 , Y + 16
009fab 89f9     +LDD R31 , Y + 16 + 1
009fac 896a     +LDD R22 , Y + 16 + 2
009fad 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
009fae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xB:
009faf e1a5      	LDI  R26,LOW(_properties_config)
009fb0 e1b1      	LDI  R27,HIGH(_properties_config)
009fb1 940e 44ce 	CALL _getPropertiesConfig
009fb3 e0e0      	LDI  R30,LOW(0)
009fb4 93e0 10f6 	STS  _is_properties_config_update,R30
009fb6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC:
009fb7 eba6      	LDI  R26,LOW(_operating_config)
009fb8 e1b1      	LDI  R27,HIGH(_operating_config)
009fb9 940e 4563 	CALL _getOperatingConfig
009fbb e0e0      	LDI  R30,LOW(0)
009fbc 93e0 10f7 	STS  _is_operating_config_update,R30
009fbe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD:
009fbf 0fa2      	ADD  R26,R18
009fc0 1fb3      	ADC  R27,R19
009fc1 91ec      	LD   R30,X
009fc2 30e0      	CPI  R30,0
009fc3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE:
                +
009fc4 e1ad     +LDI R26 , 29
009fc5 9fa2     +MUL R26 , R18
009fc6 01f0     +MOVW R30 , R0
009fc7 9fa3     +MUL R26 , R19
009fc8 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,29
009fc9 54e2      	SUBI R30,LOW(-_sensor_config)
009fca 4efe      	SBCI R31,HIGH(-_sensor_config)
009fcb 01df      	MOVW R26,R30
009fcc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0xF:
009fcd 940e b62a 	CALL __PUTPARD1
009fcf 01f9      	MOVW R30,R18
009fd0 940e b522 	CALL __CWD1
009fd2 940e b62a 	CALL __PUTPARD1
009fd4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 281 TIMES, CODE SIZE REDUCTION:557 WORDS
                 SUBOPT_0x10:
009fd5 e084      	LDI  R24,4
009fd6 940e 7ca0 	CALL _printDebug
009fd8 9628      	ADIW R28,8
009fd9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x11:
009fda 0fa2      	ADD  R26,R18
009fdb 1fb3      	ADC  R27,R19
009fdc e0e0      	LDI  R30,LOW(0)
009fdd 93ec      	ST   X,R30
009fde 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x12:
009fdf e3ad      	LDI  R26,LOW(_buzz_config)
009fe0 e1b3      	LDI  R27,HIGH(_buzz_config)
009fe1 940e 4849 	CALL _getBuzzerConfig
009fe3 e0e0      	LDI  R30,LOW(0)
009fe4 93e0 1112 	STS  _is_buzzer_config_update,R30
009fe6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x13:
                +
009fe7 e0a3     +LDI R26 , 3
009fe8 9fa2     +MUL R26 , R18
009fe9 01f0     +MOVW R30 , R0
009fea 9fa3     +MUL R26 , R19
009feb 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,3
009fec 5be1      	SUBI R30,LOW(-_din_config)
009fed 4efd      	SBCI R31,HIGH(-_din_config)
009fee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14:
009fef 58e1      	SUBI R30,LOW(-_dout_config)
009ff0 4efd      	SBCI R31,HIGH(-_dout_config)
009ff1 01df      	MOVW R26,R30
009ff2 940e 46ef 	CALL _getAuxDoutConfig
009ff4 e0ad      	LDI  R26,LOW(_is_dout_config_update)
009ff5 e1b1      	LDI  R27,HIGH(_is_dout_config_update)
009ff6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x15:
009ff7 e6a2      	LDI  R26,LOW(_status_config)
009ff8 e1b3      	LDI  R27,HIGH(_status_config)
009ff9 940e 4975 	CALL _getStatusReportConfig
009ffb e0e0      	LDI  R30,LOW(0)
009ffc 93e0 1113 	STS  _is_status_config_update,R30
009ffe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x16:
009fff e6a5      	LDI  R26,LOW(_env_config)
00a000 e1b3      	LDI  R27,HIGH(_env_config)
00a001 940e 48e2 	CALL _getEnvAlarmConfig
00a003 e0e0      	LDI  R30,LOW(0)
00a004 93e0 1114 	STS  _is_env_config_update,R30
00a006 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x17:
00a007 933a      	ST   -Y,R19
00a008 932a      	ST   -Y,R18
                +
00a009 e0a5     +LDI R26 , 5
00a00a 9fa2     +MUL R26 , R18
00a00b 01f0     +MOVW R30 , R0
00a00c 9fa3     +MUL R26 , R19
00a00d 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,5
00a00e 5aee      	SUBI R30,LOW(-_sensor)
00a00f 4efb      	SBCI R31,HIGH(-_sensor)
00a010 01df      	MOVW R26,R30
00a011 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
00a012 01f9      	MOVW R30,R18
00a013 01de      	MOVW R26,R28
00a014 5baf      	SUBI R26,LOW(-(65))
00a015 4fbf      	SBCI R27,HIGH(-(65))
00a016 940e b4ec 	CALL __LSLW2
00a018 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 30 TIMES, CODE SIZE REDUCTION:55 WORDS
                 SUBOPT_0x19:
00a019 0fae      	ADD  R26,R30
00a01a 1fbf      	ADC  R27,R31
00a01b 940e b5fa 	CALL __GETD1P
00a01d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x1A:
00a01e 01df      	MOVW R26,R30
00a01f 01cb      	MOVW R24,R22
00a020 940e 3dff 	CALL _TIMER_checkTimerExceed
00a022 9730      	SBIW R30,0
00a023 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x1B:
00a024 0fea      	ADD  R30,R26
00a025 1ffb      	ADC  R31,R27
00a026 93fa      	ST   -Y,R31
00a027 93ea      	ST   -Y,R30
00a028 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x1C:
00a029 940e b5f6 	CALL __GETW1P
00a02b 2766      	CLR  R22
00a02c 2777      	CLR  R23
00a02d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1D:
00a02e 01df      	MOVW R26,R30
00a02f 01cb      	MOVW R24,R22
00a030 940c 3e15 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1E:
00a032 5aee      	SUBI R30,LOW(-_sensor)
00a033 4efb      	SBCI R31,HIGH(-_sensor)
00a034 01df      	MOVW R26,R30
00a035 940e b5fa 	CALL __GETD1P
00a037 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 32 TIMES, CODE SIZE REDUCTION:121 WORDS
                 SUBOPT_0x1F:
00a038 940e b62a 	CALL __PUTPARD1
00a03a e088      	LDI  R24,8
00a03b 940e 7ca0 	CALL _printDebug
00a03d 962c      	ADIW R28,12
00a03e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x20:
00a03f 940e 6a5a 	CALL _checkAlarm
                +
00a041 01de     +MOVW R26 , R28
00a042 5aa9     +SUBI R26 , LOW ( - 87 )
00a043 4fbf     +SBCI R27 , HIGH ( - 87 )
00a044 93ed     +ST X + , R30
00a045 93fc     +ST X , R31
                 	__PUTW1SX 87
00a046 9730      	SBIW R30,0
00a047 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x21:
                +
00a048 e2a6     +LDI R26 , 38
00a049 9fa4     +MUL R26 , R20
00a04a 01f0     +MOVW R30 , R0
00a04b 9fa5     +MUL R26 , R21
00a04c 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,38
00a04d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
                +
00a04e 01de     +MOVW R26 , R28
00a04f 5aa9     +SUBI R26 , LOW ( - 87 )
00a050 4fbf     +SBCI R27 , HIGH ( - 87 )
00a051 93ed     +ST X + , R30
00a052 93fc     +ST X , R31
                 	__PUTW1SX 87
00a053 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x23:
                +
00a054 efef     +LDI R30 , LOW ( 0xFFFFFFFF )
00a055 efff     +LDI R31 , HIGH ( 0xFFFFFFFF )
00a056 ef6f     +LDI R22 , BYTE3 ( 0xFFFFFFFF )
00a057 ef7f     +LDI R23 , BYTE4 ( 0xFFFFFFFF )
                 	__GETD1N 0xFFFFFFFF
00a058 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24:
00a059 93e0 1487 	STS  _muteAlarmExpired,R30
00a05b 93f0 1488 	STS  _muteAlarmExpired+1,R31
00a05d 9360 1489 	STS  _muteAlarmExpired+2,R22
00a05f 9370 148a 	STS  _muteAlarmExpired+3,R23
00a061 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x25:
00a062 93fa      	ST   -Y,R31
00a063 93ea      	ST   -Y,R30
                +
00a064 e0aa     +LDI R26 , LOW ( 0xA )
00a065 e0b0     +LDI R27 , HIGH ( 0xA )
00a066 e080     +LDI R24 , BYTE3 ( 0xA )
00a067 e090     +LDI R25 , BYTE4 ( 0xA )
                 	__GETD2N 0xA
00a068 940c 3e15 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
00a06a 91a0 146b 	LDS  R26,_sdFreeSpace
00a06c 91b0 146c 	LDS  R27,_sdFreeSpace+1
00a06e 9180 146d 	LDS  R24,_sdFreeSpace+2
00a070 9190 146e 	LDS  R25,_sdFreeSpace+3
00a072 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 110 TIMES, CODE SIZE REDUCTION:542 WORDS
                 SUBOPT_0x27:
00a073 27ff      	CLR  R31
00a074 2766      	CLR  R22
00a075 2777      	CLR  R23
00a076 940e b62a 	CALL __PUTPARD1
00a078 cf5c      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x28:
00a079 940e b69a 	CALL __SAVELOCR6
                +
00a07b e000     +LDI R16 , LOW ( 0 )
00a07c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00a07d ced9      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x29:
                +
00a07e e1ad     +LDI R26 , 29
00a07f 9fa2     +MUL R26 , R18
00a080 01f0     +MOVW R30 , R0
00a081 9fa3     +MUL R26 , R19
00a082 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,29
                +
00a083 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
00a084 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
00a085 81e0      	LD   R30,Z
00a086 30e0      	CPI  R30,0
00a087 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2A:
00a088 91a0 14df 	LDS  R26,_ETH_rst_timer_S0000001000
00a08a 91b0 14e0 	LDS  R27,_ETH_rst_timer_S0000001000+1
00a08c 9180 14e1 	LDS  R24,_ETH_rst_timer_S0000001000+2
00a08e 9190 14e2 	LDS  R25,_ETH_rst_timer_S0000001000+3
00a090 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:112 WORDS
                 SUBOPT_0x2B:
                +
00a091 3faf     +CPI R26 , LOW ( 0xFFFFFFFF )
00a092 efef     +LDI R30 , HIGH ( 0xFFFFFFFF )
00a093 07be     +CPC R27 , R30
00a094 efef     +LDI R30 , BYTE3 ( 0xFFFFFFFF )
00a095 078e     +CPC R24 , R30
00a096 efef     +LDI R30 , BYTE4 ( 0xFFFFFFFF )
00a097 079e     +CPC R25 , R30
                 	__CPD2N 0xFFFFFFFF
00a098 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2C:
00a099 93fa      	ST   -Y,R31
00a09a 93ea      	ST   -Y,R30
                +
00a09b e0af     +LDI R26 , LOW ( 0xF )
00a09c e0b0     +LDI R27 , HIGH ( 0xF )
00a09d e080     +LDI R24 , BYTE3 ( 0xF )
00a09e e090     +LDI R25 , BYTE4 ( 0xF )
                 	__GETD2N 0xF
00a09f 940c 3e15 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2D:
00a0a1 940e b62a 	CALL __PUTPARD1
00a0a3 91a0 1377 	LDS  R26,_baseCounter
00a0a5 91b0 1378 	LDS  R27,_baseCounter+1
00a0a7 9180 1379 	LDS  R24,_baseCounter+2
00a0a9 9190 137a 	LDS  R25,_baseCounter+3
00a0ab 91e0 14df 	LDS  R30,_ETH_rst_timer_S0000001000
00a0ad 91f0 14e0 	LDS  R31,_ETH_rst_timer_S0000001000+1
00a0af 9160 14e1 	LDS  R22,_ETH_rst_timer_S0000001000+2
00a0b1 9170 14e2 	LDS  R23,_ETH_rst_timer_S0000001000+3
00a0b3 940e b4a7 	CALL __SUBD12
00a0b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2E:
00a0b6 01af      	MOVW R20,R30
                +
00a0b7 2b04     +OR R16 , R20
00a0b8 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
00a0b9 2e04      	MOV  R0,R20
00a0ba 2a05      	OR   R0,R21
00a0bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x2F:
00a0bc 940e 40e0 	CALL _DS1672_read
                +
00a0be 83ef     +STD Y + 7 , R30
00a0bf 87f8     +STD Y + 7 + 1 , R31
00a0c0 8769     +STD Y + 7 + 2 , R22
00a0c1 877a     +STD Y + 7 + 3 , R23
                 	__PUTD1S 7
00a0c2 81ee      	LDD  R30,Y+6
00a0c3 30e0      	CPI  R30,0
00a0c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x30:
00a0c5 e080      	LDI  R24,0
00a0c6 940e 7ca0 	CALL _printDebug
00a0c8 9624      	ADIW R28,4
00a0c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x31:
                +
00a0ca 81ef     +LDD R30 , Y + 7
00a0cb 85f8     +LDD R31 , Y + 7 + 1
00a0cc 8569     +LDD R22 , Y + 7 + 2
00a0cd 857a     +LDD R23 , Y + 7 + 3
                 	__GETD1S 7
00a0ce 940e b62a 	CALL __PUTPARD1
00a0d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x32:
00a0d1 93ea      	ST   -Y,R30
00a0d2 85ab      	LDD  R26,Y+11
00a0d3 940e 69f2 	CALL _addEventQueue
00a0d5 01af      	MOVW R20,R30
00a0d6 2355      	TST  R21
00a0d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x33:
                +
00a0d8 e7e5     +LDI R30 , LOW ( 2 * _0x0 + ( 423 ) )
00a0d9 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 423 ) )
00a0da e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 423 ) )
00a0db e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 423 ) )
                 	__POINTD1FN _0x0,423
00a0dc ce89      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34:
00a0dd 933a      	ST   -Y,R19
00a0de 932a      	ST   -Y,R18
00a0df 01de      	MOVW R26,R28
00a0e0 9618      	ADIW R26,8
00a0e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x35:
00a0e2 01f9      	MOVW R30,R18
00a0e3 9631      	ADIW R30,1
00a0e4 940e b522 	CALL __CWD1
00a0e6 940e b62a 	CALL __PUTPARD1
00a0e8 ceec      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x36:
00a0e9 940e b69a 	CALL __SAVELOCR6
                +
00a0eb e000     +LDI R16 , LOW ( 0 )
00a0ec e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00a0ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x37:
00a0ee e0f0      	LDI  R31,0
00a0ef 31e0      	CPI  R30,LOW(0x10)
00a0f0 e0a0      	LDI  R26,HIGH(0x10)
00a0f1 07fa      	CPC  R31,R26
00a0f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x38:
00a0f3 e0ab      	LDI  R26,LOW(11)
00a0f4 e0b0      	LDI  R27,0
00a0f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:74 WORDS
                 SUBOPT_0x39:
00a0f6 940e b62a 	CALL __PUTPARD1
00a0f8 01fa      	MOVW R30,R20
00a0f9 940e b522 	CALL __CWD1
00a0fb 940e b62a 	CALL __PUTPARD1
00a0fd ced7      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A:
00a0fe 01fa      	MOVW R30,R20
                +
00a0ff 5f4f     +SUBI R20 , LOW ( - 1 )
00a100 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00a101 0fe2      	ADD  R30,R18
00a102 1ff3      	ADC  R31,R19
00a103 01df      	MOVW R26,R30
00a104 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3B:
00a105 01fa      	MOVW R30,R20
                +
00a106 5f4f     +SUBI R20 , LOW ( - 1 )
00a107 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00a108 0fe2      	ADD  R30,R18
00a109 1ff3      	ADC  R31,R19
00a10a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x3C:
00a10b 93fa      	ST   -Y,R31
00a10c 93ea      	ST   -Y,R30
00a10d e0a4      	LDI  R26,LOW(4)
00a10e e0b0      	LDI  R27,0
00a10f 940c 848f 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3D:
00a111 940e 40e0 	CALL _DS1672_read
                +
00a113 87e8     +STD Y + 8 , R30
00a114 87f9     +STD Y + 8 + 1 , R31
00a115 876a     +STD Y + 8 + 2 , R22
00a116 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00a117 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0x3E:
                +
00a118 85e8     +LDD R30 , Y + 8
00a119 85f9     +LDD R31 , Y + 8 + 1
00a11a 856a     +LDD R22 , Y + 8 + 2
00a11b 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
00a11c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3F:
00a11d 01fe      	MOVW R30,R28
00a11e 963a      	ADIW R30,10
00a11f 93fa      	ST   -Y,R31
00a120 93ea      	ST   -Y,R30
00a121 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x40:
00a122 940e b62a 	CALL __PUTPARD1
                +
00a124 85ee     +LDD R30 , Y + 14
00a125 85ff     +LDD R31 , Y + 14 + 1
00a126 8968     +LDD R22 , Y + 14 + 2
00a127 8979     +LDD R23 , Y + 14 + 3
                 	__GETD1S 14
00a128 940e b62a 	CALL __PUTPARD1
00a12a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x41:
00a12b 2766      	CLR  R22
00a12c 2777      	CLR  R23
00a12d 940e b62a 	CALL __PUTPARD1
                +
00a12f 89ea     +LDD R30 , Y + 18
00a130 89fb     +LDD R31 , Y + 18 + 1
00a131 896c     +LDD R22 , Y + 18 + 2
00a132 897d     +LDD R23 , Y + 18 + 3
                 	__GETD1S 18
00a133 940e b62a 	CALL __PUTPARD1
00a135 e08c      	LDI  R24,12
00a136 940e 7ca0 	CALL _printDebug
00a138 9660      	ADIW R28,16
00a139 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x42:
                +
00a13a 85aa     +LDD R26 , Y + 10
00a13b 85bb     +LDD R27 , Y + 10 + 1
00a13c 858c     +LDD R24 , Y + 10 + 2
00a13d 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00a13e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x43:
00a13f dffa      	RCALL SUBOPT_0x42
00a140 cf50      	RJMP SUBOPT_0x2B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x44:
00a141 93ea      	ST   -Y,R30
                +
00a142 85eb     +LDD R30 , Y + 11
00a143 85fc     +LDD R31 , Y + 11 + 1
00a144 856d     +LDD R22 , Y + 11 + 2
00a145 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
00a146 940e b62a 	CALL __PUTPARD1
00a148 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x45:
                +
00a149 85ad     +LDD R26 , Y + 13
00a14a 85be     +LDD R27 , Y + 13 + 1
00a14b 858f     +LDD R24 , Y + 13 + 2
00a14c 8998     +LDD R25 , Y + 13 + 3
                 	__GETD2S 13
00a14d 940c 5128 	JMP  _ETH_sendDataReportCmd
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x46:
00a14f 01fe      	MOVW R30,R28
00a150 9636      	ADIW R30,6
00a151 93fa      	ST   -Y,R31
00a152 93ea      	ST   -Y,R30
00a153 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x47:
00a154 940e b62a 	CALL __PUTPARD1
                +
00a156 85ea     +LDD R30 , Y + 10
00a157 85fb     +LDD R31 , Y + 10 + 1
00a158 856c     +LDD R22 , Y + 10 + 2
00a159 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00a15a 940e b62a 	CALL __PUTPARD1
00a15c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x48:
00a15d 2fe5      	MOV  R30,R21
00a15e 27ff      	CLR  R31
00a15f 2766      	CLR  R22
00a160 2777      	CLR  R23
00a161 940e b62a 	CALL __PUTPARD1
00a163 2fe4      	MOV  R30,R20
00a164 27ff      	CLR  R31
00a165 2766      	CLR  R22
00a166 2777      	CLR  R23
00a167 940e b62a 	CALL __PUTPARD1
00a169 e08c      	LDI  R24,12
00a16a 940e 7ca0 	CALL _printDebug
00a16c 9660      	ADIW R28,16
00a16d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x49:
                +
00a16e 81ae     +LDD R26 , Y + 6
00a16f 81bf     +LDD R27 , Y + 6 + 1
00a170 8588     +LDD R24 , Y + 6 + 2
00a171 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
00a172 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x4A:
00a173 01fe      	MOVW R30,R28
00a174 963c      	ADIW R30,12
00a175 93fa      	ST   -Y,R31
00a176 93ea      	ST   -Y,R30
00a177 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x4B:
00a178 940e b62a 	CALL __PUTPARD1
00a17a de2f      	RCALL SUBOPT_0xA
00a17b 940e b62a 	CALL __PUTPARD1
00a17d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4C:
00a17e de26      	RCALL SUBOPT_0x9
00a17f cf11      	RJMP SUBOPT_0x2B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4D:
00a180 01fe      	MOVW R30,R28
00a181 9670      	ADIW R30,16
00a182 93fa      	ST   -Y,R31
00a183 93ea      	ST   -Y,R30
00a184 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x4E:
00a185 eaa8      	LDI  R26,LOW(_LOGFILE_DATA)
00a186 e1b4      	LDI  R27,HIGH(_LOGFILE_DATA)
                +
00a187 91e0 14d5+LDS R30 , _LOG_openFile + ( 0 )
00a189 91f0 14d6+LDS R31 , _LOG_openFile + ( 0 ) + 1
00a18b 9160 14d7+LDS R22 , _LOG_openFile + ( 0 ) + 2
00a18d bf6c     +OUT EIND , R22
00a18e 9519     +EICALL
                 	__CALL1MN _LOG_openFile,0
00a18f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x4F:
00a190 940e b62a 	CALL __PUTPARD1
00a192 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
00a193 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
00a194 2766      	CLR  R22
00a195 2777      	CLR  R23
00a196 940e b62a 	CALL __PUTPARD1
00a198 ce3c      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x50:
                +
00a199 85ee     +LDD R30 , Y + 14
00a19a 85ff     +LDD R31 , Y + 14 + 1
00a19b 8968     +LDD R22 , Y + 14 + 2
00a19c 8979     +LDD R23 , Y + 14 + 3
                 	__GETD1S 14
00a19d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x51:
                +
00a19e 85ae     +LDD R26 , Y + 14
00a19f 85bf     +LDD R27 , Y + 14 + 1
00a1a0 8988     +LDD R24 , Y + 14 + 2
00a1a1 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
00a1a2 940c 7246 	JMP  _LOG_insertData
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x52:
                +
00a1a4 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00a1a6 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00a1a8 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00a1aa bf6c     +OUT EIND , R22
00a1ab 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00a1ac 01af      	MOVW R20,R30
00a1ad 2355      	TST  R21
00a1ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x53:
00a1af 01fe      	MOVW R30,R28
00a1b0 9637      	ADIW R30,7
00a1b1 93fa      	ST   -Y,R31
00a1b2 93ea      	ST   -Y,R30
00a1b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x54:
                +
00a1b4 85eb     +LDD R30 , Y + 11
00a1b5 85fc     +LDD R31 , Y + 11 + 1
00a1b6 856d     +LDD R22 , Y + 11 + 2
00a1b7 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
00a1b8 940e b62a 	CALL __PUTPARD1
00a1ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:60 WORDS
                 SUBOPT_0x55:
00a1bb 27ff      	CLR  R31
00a1bc 2766      	CLR  R22
00a1bd 2777      	CLR  R23
00a1be 940e b62a 	CALL __PUTPARD1
00a1c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x56:
00a1c1 e08c      	LDI  R24,12
00a1c2 940e 7ca0 	CALL _printDebug
00a1c4 9660      	ADIW R28,16
00a1c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x57:
                +
00a1c6 81af     +LDD R26 , Y + 7
00a1c7 85b8     +LDD R27 , Y + 7 + 1
00a1c8 8589     +LDD R24 , Y + 7 + 2
00a1c9 859a     +LDD R25 , Y + 7 + 3
                 	__GETD2S 7
00a1ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x58:
00a1cb 01fe      	MOVW R30,R28
00a1cc 963b      	ADIW R30,11
00a1cd 93fa      	ST   -Y,R31
00a1ce 93ea      	ST   -Y,R30
00a1cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x59:
00a1d0 eba1      	LDI  R26,LOW(_LOGFILE_EVENT)
00a1d1 e1b4      	LDI  R27,HIGH(_LOGFILE_EVENT)
                +
00a1d2 91e0 14d5+LDS R30 , _LOG_openFile + ( 0 )
00a1d4 91f0 14d6+LDS R31 , _LOG_openFile + ( 0 ) + 1
00a1d6 9160 14d7+LDS R22 , _LOG_openFile + ( 0 ) + 2
00a1d8 bf6c     +OUT EIND , R22
00a1d9 9519     +EICALL
                 	__CALL1MN _LOG_openFile,0
00a1da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x5A:
00a1db 940e b62a 	CALL __PUTPARD1
00a1dd ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
00a1de e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
00a1df 2766      	CLR  R22
00a1e0 2777      	CLR  R23
00a1e1 940e b62a 	CALL __PUTPARD1
00a1e3 cdf1      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x5B:
                +
00a1e4 85e9     +LDD R30 , Y + 9
00a1e5 85fa     +LDD R31 , Y + 9 + 1
00a1e6 856b     +LDD R22 , Y + 9 + 2
00a1e7 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00a1e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5C:
00a1e9 01fe      	MOVW R30,R28
00a1ea 9672      	ADIW R30,18
00a1eb 93fa      	ST   -Y,R31
00a1ec 93ea      	ST   -Y,R30
00a1ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5D:
00a1ee df4b      	RCALL SUBOPT_0x42
00a1ef 940e b68a 	CALL __CPD02
00a1f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x5E:
00a1f2 e0e0      	LDI  R30,LOW(0)
00a1f3 93e0 1426 	STS  _logDataWait,R30
                +
00a1f5 e0e0     +LDI R30 , LOW ( 0x0 )
00a1f6 e0f0     +LDI R31 , HIGH ( 0x0 )
00a1f7 e060     +LDI R22 , BYTE3 ( 0x0 )
00a1f8 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
                +
00a1f9 93e0 1427+STS _logDataWait + ( 1 ) , R30
00a1fb 93f0 1428+STS _logDataWait + ( 1 ) + 1 , R31
00a1fd 9360 1429+STS _logDataWait + ( 1 ) + 2 , R22
00a1ff 9370 142a+STS _logDataWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logDataWait,1
00a201 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5F:
                +
00a202 91e0 1427+LDS R30 , _logDataWait + ( 1 )
00a204 91f0 1428+LDS R31 , _logDataWait + ( 1 ) + 1
00a206 9160 1429+LDS R22 , _logDataWait + ( 1 ) + 2
00a208 9170 142a+LDS R23 , _logDataWait + ( 1 ) + 3
                 	__GETD1MN _logDataWait,1
00a20a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x60:
00a20b 01de      	MOVW R26,R28
00a20c 9652      	ADIW R26,18
                +
00a20d 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00a20f 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00a211 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00a213 bf6c     +OUT EIND , R22
00a214 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00a215 018f      	MOVW R16,R30
00a216 2311      	TST  R17
00a217 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x61:
00a218 e0e0      	LDI  R30,LOW(0)
00a219 93e0 142b 	STS  _logEventWait,R30
                +
00a21b e0e0     +LDI R30 , LOW ( 0x0 )
00a21c e0f0     +LDI R31 , HIGH ( 0x0 )
00a21d e060     +LDI R22 , BYTE3 ( 0x0 )
00a21e e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
                +
00a21f 93e0 142c+STS _logEventWait + ( 1 ) , R30
00a221 93f0 142d+STS _logEventWait + ( 1 ) + 1 , R31
00a223 9360 142e+STS _logEventWait + ( 1 ) + 2 , R22
00a225 9370 142f+STS _logEventWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logEventWait,1
00a227 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x62:
                +
00a228 91e0 142c+LDS R30 , _logEventWait + ( 1 )
00a22a 91f0 142d+LDS R31 , _logEventWait + ( 1 ) + 1
00a22c 9160 142e+LDS R22 , _logEventWait + ( 1 ) + 2
00a22e 9170 142f+LDS R23 , _logEventWait + ( 1 ) + 3
                 	__GETD1MN _logEventWait,1
00a230 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x63:
00a231 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
00a232 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
00a233 2766      	CLR  R22
00a234 2777      	CLR  R23
00a235 940e b62a 	CALL __PUTPARD1
00a237 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x64:
00a238 e0e0      	LDI  R30,LOW(0)
00a239 e0f0      	LDI  R31,HIGH(0)
00a23a 940e b6a1 	CALL __LOADLOCR6
00a23c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x65:
00a23d e0a2      	LDI  R26,LOW(2)
00a23e e0b0      	LDI  R27,0
00a23f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x66:
00a240 e6a4      	LDI  R26,LOW(100)
00a241 e0b0      	LDI  R27,0
00a242 940c b2e6 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x67:
00a244 e0a1      	LDI  R26,LOW(1)
00a245 e0b0      	LDI  R27,0
00a246 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x68:
00a247 e0a3      	LDI  R26,LOW(3)
00a248 e0b0      	LDI  R27,0
00a249 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x69:
00a24a e0a4      	LDI  R26,LOW(4)
00a24b e0b0      	LDI  R27,0
00a24c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6A:
00a24d 01df      	MOVW R26,R30
00a24e 940e b5fa 	CALL __GETD1P
00a250 940e b62a 	CALL __PUTPARD1
00a252 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x6B:
00a253 93e0 0102 	STS  258,R30
00a255 eca8      	LDI  R26,LOW(200)
00a256 e0b0      	LDI  R27,0
00a257 940e b2e6 	CALL _delay_ms
00a259 91e0 0102 	LDS  R30,258
00a25b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6C:
00a25c e3a2      	LDI  R26,LOW(50)
00a25d e0b0      	LDI  R27,0
00a25e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x6D:
00a25f 920a      	ST   -Y,R0
00a260 921a      	ST   -Y,R1
00a261 92fa      	ST   -Y,R15
00a262 936a      	ST   -Y,R22
00a263 937a      	ST   -Y,R23
00a264 938a      	ST   -Y,R24
00a265 939a      	ST   -Y,R25
00a266 93aa      	ST   -Y,R26
00a267 93ba      	ST   -Y,R27
00a268 93ea      	ST   -Y,R30
00a269 93fa      	ST   -Y,R31
00a26a b7eb      	IN   R30,RAMPZ
00a26b 93ea      	ST   -Y,R30
00a26c b7ec      	IN   R30,EIND
00a26d 93ea      	ST   -Y,R30
00a26e b7ef      	IN   R30,SREG
00a26f 93ea      	ST   -Y,R30
00a270 931a      	ST   -Y,R17
00a271 930a      	ST   -Y,R16
00a272 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x6E:
00a273 91ed      	LD   R30,X+
00a274 91fd      	LD   R31,X+
00a275 9631      	ADIW R30,1
00a276 93fe      	ST   -X,R31
00a277 93ee      	ST   -X,R30
00a278 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x6F:
00a279 93ba      	ST   -Y,R27
00a27a 93aa      	ST   -Y,R26
00a27b 940e b69c 	CALL __SAVELOCR4
00a27d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x70:
00a27e 85e8      	LDD  R30,Y+8
00a27f 85f9      	LDD  R31,Y+8+1
00a280 9631      	ADIW R30,1
00a281 87e8      	STD  Y+8,R30
00a282 87f9      	STD  Y+8+1,R31
00a283 9731      	SBIW R30,1
00a284 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 23 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x71:
00a285 93ba      	ST   -Y,R27
00a286 93aa      	ST   -Y,R26
00a287 931a      	ST   -Y,R17
00a288 930a      	ST   -Y,R16
00a289 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x72:
00a28a 81a9      	LDD  R26,Y+1
00a28b 81ba      	LDD  R27,Y+1+1
00a28c 27ee      	CLR  R30
00a28d 0fa1      	ADD  R26,R17
00a28e 1fbe      	ADC  R27,R30
00a28f 91ec      	LD   R30,X
00a290 30e0      	CPI  R30,0
00a291 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x73:
00a292 81a9      	LDD  R26,Y+1
00a293 81ba      	LDD  R27,Y+1+1
00a294 27ee      	CLR  R30
00a295 0fa1      	ADD  R26,R17
00a296 1fbe      	ADC  R27,R30
00a297 91ac      	LD   R26,X
00a298 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x74:
00a299 940e b62f 	CALL __PUTPARD2
00a29b 940e b616 	CALL __GETD1S0
00a29d 940e b67e 	CALL __CPD10
00a29f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x75:
00a2a0 940e b616 	CALL __GETD1S0
00a2a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x76:
00a2a3 91a0 1377 	LDS  R26,_baseCounter
00a2a5 91b0 1378 	LDS  R27,_baseCounter+1
00a2a7 9180 1379 	LDS  R24,_baseCounter+2
00a2a9 9190 137a 	LDS  R25,_baseCounter+3
00a2ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x77:
                +
00a2ac 81ec     +LDD R30 , Y + 4
00a2ad 81fd     +LDD R31 , Y + 4 + 1
00a2ae 816e     +LDD R22 , Y + 4 + 2
00a2af 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
00a2b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x78:
00a2b1 940e b49d 	CALL __ADDD12
00a2b3 940e b620 	CALL __PUTD1S0
00a2b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x79:
00a2b6 91e0 1377 	LDS  R30,_baseCounter
00a2b8 91f0 1378 	LDS  R31,_baseCounter+1
00a2ba 9160 1379 	LDS  R22,_baseCounter+2
00a2bc 9170 137a 	LDS  R23,_baseCounter+3
00a2be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x7A:
00a2bf 940e b61b 	CALL __GETD2S0
00a2c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x7B:
00a2c2 940e b62a 	CALL __PUTPARD1
                +
00a2c4 85ec     +LDD R30 , Y + 12
00a2c5 85fd     +LDD R31 , Y + 12 + 1
00a2c6 856e     +LDD R22 , Y + 12 + 2
00a2c7 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00a2c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x7C:
                +
00a2c9 e0e0     +LDI R30 , LOW ( 0x0 )
00a2ca e0f0     +LDI R31 , HIGH ( 0x0 )
00a2cb e060     +LDI R22 , BYTE3 ( 0x0 )
00a2cc e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00a2cd 940e b605 	CALL __PUTDP1
00a2cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x7D:
00a2d0 920a      	ST   -Y,R0
00a2d1 921a      	ST   -Y,R1
00a2d2 92fa      	ST   -Y,R15
00a2d3 936a      	ST   -Y,R22
00a2d4 937a      	ST   -Y,R23
00a2d5 938a      	ST   -Y,R24
00a2d6 939a      	ST   -Y,R25
00a2d7 93aa      	ST   -Y,R26
00a2d8 93ba      	ST   -Y,R27
00a2d9 93ea      	ST   -Y,R30
00a2da 93fa      	ST   -Y,R31
00a2db b7eb      	IN   R30,RAMPZ
00a2dc 93ea      	ST   -Y,R30
00a2dd b7ec      	IN   R30,EIND
00a2de 93ea      	ST   -Y,R30
00a2df b7ef      	IN   R30,SREG
00a2e0 93ea      	ST   -Y,R30
00a2e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7E:
00a2e2 efee      	LDI  R30,LOW(254)
00a2e3 93e0 0085 	STS  133,R30
00a2e5 e7e9      	LDI  R30,LOW(121)
00a2e6 93e0 0084 	STS  132,R30
00a2e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7F:
00a2e9 e8e5      	LDI  R30,LOW(133)
00a2ea 93e0 0095 	STS  149,R30
00a2ec eeed      	LDI  R30,LOW(237)
00a2ed 93e0 0094 	STS  148,R30
00a2ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x80:
00a2f0 940e b600 	CALL __GETD1P_INC
                +
00a2f2 5fef     +SUBI R30 , LOW ( - 1 )
00a2f3 4fff     +SBCI R31 , HIGH ( - 1 )
00a2f4 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00a2f5 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00a2f6 940e b60a 	CALL __PUTDP1_DEC
00a2f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x81:
00a2f9 e8e5      	LDI  R30,LOW(133)
00a2fa 93e0 00a5 	STS  165,R30
00a2fc eeed      	LDI  R30,LOW(237)
00a2fd 93e0 00a4 	STS  164,R30
00a2ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x82:
00a300 93e0 0121 	STS  289,R30
00a302 e0e0      	LDI  R30,LOW(0)
00a303 93e0 0125 	STS  293,R30
00a305 93e0 0124 	STS  292,R30
00a307 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x83:
00a308 93ba      	ST   -Y,R27
00a309 93aa      	ST   -Y,R26
00a30a 81e8      	LD   R30,Y
00a30b 81f9      	LDD  R31,Y+1
00a30c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x84:
00a30d b1e6      	IN   R30,0x6
00a30e 7ce0      	ANDI R30,LOW(0xC0)
00a30f e0f0      	LDI  R31,0
00a310 940e b4f5 	CALL __ASRW2
00a312 940e b4f1 	CALL __ASRW4
00a314 95e0      	COM  R30
00a315 95f0      	COM  R31
00a316 70e3      	ANDI R30,LOW(0x3)
00a317 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x85:
00a318 b1e6      	IN   R30,0x6
00a319 7ce0      	ANDI R30,LOW(0xC0)
00a31a e0f0      	LDI  R31,0
00a31b 940e b4f5 	CALL __ASRW2
00a31d 940e b4f1 	CALL __ASRW4
00a31f 95e0      	COM  R30
00a320 95f0      	COM  R31
00a321 70e3      	ANDI R30,LOW(0x3)
00a322 70f0      	ANDI R31,HIGH(0x3)
00a323 9731      	SBIW R30,1
00a324 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x86:
00a325 931a      	ST   -Y,R17
00a326 930a      	ST   -Y,R16
                +
00a327 e000     +LDI R16 , LOW ( 0 )
00a328 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00a329 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x87:
00a32a e0f0      	LDI  R31,0
00a32b 70f0      	ANDI R31,HIGH(0xFF)
00a32c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x88:
00a32d 91a0 14e3 	LDS  R26,_adcBatt
00a32f 91b0 14e4 	LDS  R27,_adcBatt+1
00a331 9180 14e5 	LDS  R24,_adcBatt+2
00a333 9190 14e6 	LDS  R25,_adcBatt+3
00a335 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x89:
00a336 2766      	CLR  R22
00a337 2777      	CLR  R23
00a338 940e b35c 	CALL __CDF1
00a33a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x8A:
00a33b 940e b396 	CALL __ADDF12
00a33d 01df      	MOVW R26,R30
00a33e 01cb      	MOVW R24,R22
00a33f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x8B:
                +
00a340 e0e0     +LDI R30 , LOW ( 0x41200000 )
00a341 e0f0     +LDI R31 , HIGH ( 0x41200000 )
00a342 e260     +LDI R22 , BYTE3 ( 0x41200000 )
00a343 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00a344 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x8C:
                +
00a345 e0e0     +LDI R30 , LOW ( 0x447FC000 )
00a346 ecf0     +LDI R31 , HIGH ( 0x447FC000 )
00a347 e76f     +LDI R22 , BYTE3 ( 0x447FC000 )
00a348 e474     +LDI R23 , BYTE4 ( 0x447FC000 )
                 	__GETD1N 0x447FC000
00a349 940e b434 	CALL __DIVF21
00a34b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x8D:
00a34c 940e b620 	CALL __PUTD1S0
00a34e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x8E:
00a34f 91e0 0108 	LDS  R30,264
00a351 7fe1      	ANDI R30,LOW(0xF1)
00a352 93e0 0108 	STS  264,R30
00a354 e0a8      	LDI  R26,LOW(264)
00a355 e0b1      	LDI  R27,HIGH(264)
00a356 2e0a      	MOV  R0,R26
00a357 91ac      	LD   R26,X
00a358 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8F:
00a359 e1a4      	LDI  R26,LOW(20)
00a35a e0b0      	LDI  R27,0
00a35b 940c b2e6 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x90:
00a35d e3ae      	LDI  R26,LOW(_adcData)
00a35e e1b4      	LDI  R27,HIGH(_adcData)
00a35f 940e b4ec 	CALL __LSLW2
00a361 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x91:
00a362 dfd3      	RCALL SUBOPT_0x89
00a363 940e b605 	CALL __PUTDP1
00a365 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x92:
00a366 940e b29a 	CALL _i2c_start
00a368 eda0      	LDI  R26,LOW(208)
00a369 940c b2ce 	JMP  _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x93:
00a36b 940e b2ce 	CALL _i2c_write
00a36d 940c b2a9 	JMP  _i2c_stop
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x94:
00a36f e0aa      	LDI  R26,LOW(10)
00a370 e0b0      	LDI  R27,0
00a371 940e b2e6 	CALL _delay_ms
00a373 e0e0      	LDI  R30,LOW(0)
00a374 e0f0      	LDI  R31,HIGH(0)
00a375 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 30 TIMES, CODE SIZE REDUCTION:55 WORDS
                 SUBOPT_0x95:
                +
00a376 83ec     +STD Y + 4 , R30
00a377 83fd     +STD Y + 4 + 1 , R31
00a378 836e     +STD Y + 4 + 2 , R22
00a379 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00a37a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x96:
                +
00a37b 81ac     +LDD R26 , Y + 4
00a37c 81bd     +LDD R27 , Y + 4 + 1
00a37d 818e     +LDD R24 , Y + 4 + 2
00a37e 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00a37f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x97:
00a380 e0e8      	LDI  R30,LOW(8)
00a381 940e b4d0 	CALL __LSLD12
00a383 cff2      	RJMP SUBOPT_0x95
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x98:
00a384 e0f0      	LDI  R31,0
00a385 dff5      	RCALL SUBOPT_0x96
00a386 940e b522 	CALL __CWD1
00a388 940e b49d 	CALL __ADDD12
00a38a dfeb      	RCALL SUBOPT_0x95
00a38b dfef      	RCALL SUBOPT_0x96
00a38c cff3      	RJMP SUBOPT_0x97
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 34 TIMES, CODE SIZE REDUCTION:63 WORDS
                 SUBOPT_0x99:
00a38d 2fe1      	MOV  R30,R17
00a38e e0f0      	LDI  R31,0
00a38f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9A:
00a390 940e b522 	CALL __CWD1
00a392 940e b49d 	CALL __ADDD12
00a394 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9B:
00a395 dfe0      	RCALL SUBOPT_0x95
00a396 cf15      	RJMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9C:
                +
00a397 e3ec     +LDI R30 , LOW ( 0x3C )
00a398 e0f0     +LDI R31 , HIGH ( 0x3C )
00a399 e060     +LDI R22 , BYTE3 ( 0x3C )
00a39a e070     +LDI R23 , BYTE4 ( 0x3C )
                 	__GETD1N 0x3C
00a39b 940e b599 	CALL __DIVD21U
00a39d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x9D:
                +
00a39e 83ee     +STD Y + 6 , R30
00a39f 83ff     +STD Y + 6 + 1 , R31
00a3a0 8768     +STD Y + 6 + 2 , R22
00a3a1 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
00a3a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9E:
                +
00a3a3 e3ac     +LDI R26 , LOW ( 0x3C )
00a3a4 e0b0     +LDI R27 , HIGH ( 0x3C )
00a3a5 e080     +LDI R24 , BYTE3 ( 0x3C )
00a3a6 e090     +LDI R25 , BYTE4 ( 0x3C )
                 	__GETD2N 0x3C
00a3a7 940e b543 	CALL __MULD12U
00a3a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x9F:
                +
00a3aa 83ea     +STD Y + 2 , R30
00a3ab 83fb     +STD Y + 2 + 1 , R31
00a3ac 836c     +STD Y + 2 + 2 , R22
00a3ad 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00a3ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0xA0:
                +
00a3af 81ea     +LDD R30 , Y + 2
00a3b0 81fb     +LDD R31 , Y + 2 + 1
00a3b1 816c     +LDD R22 , Y + 2 + 2
00a3b2 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
00a3b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0xA1:
                +
00a3b4 81aa     +LDD R26 , Y + 2
00a3b5 81bb     +LDD R27 , Y + 2 + 1
00a3b6 818c     +LDD R24 , Y + 2 + 2
00a3b7 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00a3b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0xA2:
                +
00a3b9 81ee     +LDD R30 , Y + 6
00a3ba 81ff     +LDD R31 , Y + 6 + 1
00a3bb 8568     +LDD R22 , Y + 6 + 2
00a3bc 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
00a3bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA3:
                +
00a3be 83ee     +STD Y + 6 , R30
00a3bf 83ff     +STD Y + 6 + 1 , R31
00a3c0 8768     +STD Y + 6 + 2 , R22
00a3c1 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
00a3c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA4:
00a3c3 ddaa      	RCALL SUBOPT_0x49
                +
00a3c4 ebe5     +LDI R30 , LOW ( 0x5B5 )
00a3c5 e0f5     +LDI R31 , HIGH ( 0x5B5 )
00a3c6 e060     +LDI R22 , BYTE3 ( 0x5B5 )
00a3c7 e070     +LDI R23 , BYTE4 ( 0x5B5 )
                 	__GETD1N 0x5B5
00a3c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA5:
                +
00a3c9 8fee     +STD Y + 30 , R30
00a3ca 8fff     +STD Y + 30 + 1 , R31
00a3cb a368     +STD Y + 30 + 2 , R22
00a3cc a379     +STD Y + 30 + 3 , R23
                 	__PUTD1S 30
00a3cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA6:
                +
00a3ce 8daa     +LDD R26 , Y + 26
00a3cf 8dbb     +LDD R27 , Y + 26 + 1
00a3d0 8d8c     +LDD R24 , Y + 26 + 2
00a3d1 8d9d     +LDD R25 , Y + 26 + 3
                 	__GETD2S 26
00a3d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xA7:
                +
00a3d3 33ac     +CPI R26 , LOW ( 0x3C )
00a3d4 e0e0     +LDI R30 , HIGH ( 0x3C )
00a3d5 07be     +CPC R27 , R30
00a3d6 e0e0     +LDI R30 , BYTE3 ( 0x3C )
00a3d7 078e     +CPC R24 , R30
00a3d8 e0e0     +LDI R30 , BYTE4 ( 0x3C )
00a3d9 079e     +CPC R25 , R30
                 	__CPD2N 0x3C
00a3da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA8:
                +
00a3db 8dee     +LDD R30 , Y + 30
00a3dc 8dff     +LDD R31 , Y + 30 + 1
00a3dd a168     +LDD R22 , Y + 30 + 2
00a3de a179     +LDD R23 , Y + 30 + 3
                 	__GETD1S 30
00a3df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xA9:
                +
00a3e0 5fef     +SUBI R30 , LOW ( - 1 )
00a3e1 4fff     +SBCI R31 , HIGH ( - 1 )
00a3e2 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00a3e3 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00a3e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xAA:
                +
00a3e5 8dae     +LDD R26 , Y + 30
00a3e6 8dbf     +LDD R27 , Y + 30 + 1
00a3e7 a188     +LDD R24 , Y + 30 + 2
00a3e8 a199     +LDD R25 , Y + 30 + 3
                 	__GETD2S 30
00a3e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xAB:
                +
00a3ea a1ee     +LDD R30 , Y + 38
00a3eb a1ff     +LDD R31 , Y + 38 + 1
00a3ec a568     +LDD R22 , Y + 38 + 2
00a3ed a579     +LDD R23 , Y + 38 + 3
                 	__GETD1S 38
00a3ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xAC:
                +
00a3ef e6ad     +LDI R26 , LOW ( 0x16D )
00a3f0 e0b1     +LDI R27 , HIGH ( 0x16D )
00a3f1 e080     +LDI R24 , BYTE3 ( 0x16D )
00a3f2 e090     +LDI R25 , BYTE4 ( 0x16D )
                 	__GETD2N 0x16D
00a3f3 940e b543 	CALL __MULD12U
00a3f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xAD:
00a3f6 940e b63c 	CALL __SWAPD12
00a3f8 940e b4a7 	CALL __SUBD12
00a3fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xAE:
                +
00a3fb 8bee     +STD Y + 22 , R30
00a3fc 8bff     +STD Y + 22 + 1 , R31
00a3fd 8f68     +STD Y + 22 + 2 , R22
00a3fe 8f79     +STD Y + 22 + 3 , R23
                 	__PUTD1S 22
00a3ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xAF:
                +
00a400 89ee     +LDD R30 , Y + 22
00a401 89ff     +LDD R31 , Y + 22 + 1
00a402 8d68     +LDD R22 , Y + 22 + 2
00a403 8d79     +LDD R23 , Y + 22 + 3
                 	__GETD1S 22
00a404 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB0:
                +
00a405 a1ea     +LDD R30 , Y + 34
00a406 a1fb     +LDD R31 , Y + 34 + 1
00a407 a16c     +LDD R22 , Y + 34 + 2
00a408 a17d     +LDD R23 , Y + 34 + 3
                 	__GETD1S 34
00a409 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xB1:
                +
00a40a 30e1     +CPI R30 , LOW ( 0x1 )
00a40b e0a0     +LDI R26 , HIGH ( 0x1 )
00a40c 07fa     +CPC R31 , R26
00a40d e0a0     +LDI R26 , BYTE3 ( 0x1 )
00a40e 076a     +CPC R22 , R26
00a40f e0a0     +LDI R26 , BYTE4 ( 0x1 )
00a410 077a     +CPC R23 , R26
                 	__CPD1N 0x1
00a411 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xB2:
                +
00a412 30e2     +CPI R30 , LOW ( 0x2 )
00a413 e0a0     +LDI R26 , HIGH ( 0x2 )
00a414 07fa     +CPC R31 , R26
00a415 e0a0     +LDI R26 , BYTE3 ( 0x2 )
00a416 076a     +CPC R22 , R26
00a417 e0a0     +LDI R26 , BYTE4 ( 0x2 )
00a418 077a     +CPC R23 , R26
                 	__CPD1N 0x2
00a419 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xB3:
                +
00a41a 30e3     +CPI R30 , LOW ( 0x3 )
00a41b e0a0     +LDI R26 , HIGH ( 0x3 )
00a41c 07fa     +CPC R31 , R26
00a41d e0a0     +LDI R26 , BYTE3 ( 0x3 )
00a41e 076a     +CPC R22 , R26
00a41f e0a0     +LDI R26 , BYTE4 ( 0x3 )
00a420 077a     +CPC R23 , R26
                 	__CPD1N 0x3
00a421 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xB4:
                +
00a422 30e4     +CPI R30 , LOW ( 0x4 )
00a423 e0a0     +LDI R26 , HIGH ( 0x4 )
00a424 07fa     +CPC R31 , R26
00a425 e0a0     +LDI R26 , BYTE3 ( 0x4 )
00a426 076a     +CPC R22 , R26
00a427 e0a0     +LDI R26 , BYTE4 ( 0x4 )
00a428 077a     +CPC R23 , R26
                 	__CPD1N 0x4
00a429 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xB5:
                +
00a42a 30e5     +CPI R30 , LOW ( 0x5 )
00a42b e0a0     +LDI R26 , HIGH ( 0x5 )
00a42c 07fa     +CPC R31 , R26
00a42d e0a0     +LDI R26 , BYTE3 ( 0x5 )
00a42e 076a     +CPC R22 , R26
00a42f e0a0     +LDI R26 , BYTE4 ( 0x5 )
00a430 077a     +CPC R23 , R26
                 	__CPD1N 0x5
00a431 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xB6:
                +
00a432 30e6     +CPI R30 , LOW ( 0x6 )
00a433 e0a0     +LDI R26 , HIGH ( 0x6 )
00a434 07fa     +CPC R31 , R26
00a435 e0a0     +LDI R26 , BYTE3 ( 0x6 )
00a436 076a     +CPC R22 , R26
00a437 e0a0     +LDI R26 , BYTE4 ( 0x6 )
00a438 077a     +CPC R23 , R26
                 	__CPD1N 0x6
00a439 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xB7:
                +
00a43a 30e7     +CPI R30 , LOW ( 0x7 )
00a43b e0a0     +LDI R26 , HIGH ( 0x7 )
00a43c 07fa     +CPC R31 , R26
00a43d e0a0     +LDI R26 , BYTE3 ( 0x7 )
00a43e 076a     +CPC R22 , R26
00a43f e0a0     +LDI R26 , BYTE4 ( 0x7 )
00a440 077a     +CPC R23 , R26
                 	__CPD1N 0x7
00a441 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xB8:
                +
00a442 30e8     +CPI R30 , LOW ( 0x8 )
00a443 e0a0     +LDI R26 , HIGH ( 0x8 )
00a444 07fa     +CPC R31 , R26
00a445 e0a0     +LDI R26 , BYTE3 ( 0x8 )
00a446 076a     +CPC R22 , R26
00a447 e0a0     +LDI R26 , BYTE4 ( 0x8 )
00a448 077a     +CPC R23 , R26
                 	__CPD1N 0x8
00a449 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xB9:
                +
00a44a 30e9     +CPI R30 , LOW ( 0x9 )
00a44b e0a0     +LDI R26 , HIGH ( 0x9 )
00a44c 07fa     +CPC R31 , R26
00a44d e0a0     +LDI R26 , BYTE3 ( 0x9 )
00a44e 076a     +CPC R22 , R26
00a44f e0a0     +LDI R26 , BYTE4 ( 0x9 )
00a450 077a     +CPC R23 , R26
                 	__CPD1N 0x9
00a451 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xBA:
                +
00a452 30ea     +CPI R30 , LOW ( 0xA )
00a453 e0a0     +LDI R26 , HIGH ( 0xA )
00a454 07fa     +CPC R31 , R26
00a455 e0a0     +LDI R26 , BYTE3 ( 0xA )
00a456 076a     +CPC R22 , R26
00a457 e0a0     +LDI R26 , BYTE4 ( 0xA )
00a458 077a     +CPC R23 , R26
                 	__CPD1N 0xA
00a459 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xBB:
                +
00a45a 30eb     +CPI R30 , LOW ( 0xB )
00a45b e0a0     +LDI R26 , HIGH ( 0xB )
00a45c 07fa     +CPC R31 , R26
00a45d e0a0     +LDI R26 , BYTE3 ( 0xB )
00a45e 076a     +CPC R22 , R26
00a45f e0a0     +LDI R26 , BYTE4 ( 0xB )
00a460 077a     +CPC R23 , R26
                 	__CPD1N 0xB
00a461 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xBC:
                +
00a462 30ec     +CPI R30 , LOW ( 0xC )
00a463 e0a0     +LDI R26 , HIGH ( 0xC )
00a464 07fa     +CPC R31 , R26
00a465 e0a0     +LDI R26 , BYTE3 ( 0xC )
00a466 076a     +CPC R22 , R26
00a467 e0a0     +LDI R26 , BYTE4 ( 0xC )
00a468 077a     +CPC R23 , R26
                 	__CPD1N 0xC
00a469 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xBD:
                +
00a46a 30a3     +CPI R26 , LOW ( 0x3 )
00a46b e0e0     +LDI R30 , HIGH ( 0x3 )
00a46c 07be     +CPC R27 , R30
00a46d e0e0     +LDI R30 , BYTE3 ( 0x3 )
00a46e 078e     +CPC R24 , R30
00a46f e0e0     +LDI R30 , BYTE4 ( 0x3 )
00a470 079e     +CPC R25 , R30
                 	__CPD2N 0x3
00a471 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xBE:
                +
00a472 8dea     +LDD R30 , Y + 26
00a473 8dfb     +LDD R31 , Y + 26 + 1
00a474 8d6c     +LDD R22 , Y + 26 + 2
00a475 8d7d     +LDD R23 , Y + 26 + 3
                 	__GETD1S 26
00a476 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xBF:
                +
00a477 89ae     +LDD R26 , Y + 22
00a478 89bf     +LDD R27 , Y + 22 + 1
00a479 8d88     +LDD R24 , Y + 22 + 2
00a47a 8d99     +LDD R25 , Y + 22 + 3
                 	__GETD2S 22
00a47b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xC0:
                +
00a47c 5fef     +SUBI R30 , LOW ( - 1 )
00a47d 4fff     +SBCI R31 , HIGH ( - 1 )
00a47e 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00a47f 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00a480 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0xC1:
                +
00a481 89ea     +LDD R30 , Y + 18
00a482 89fb     +LDD R31 , Y + 18 + 1
00a483 896c     +LDD R22 , Y + 18 + 2
00a484 897d     +LDD R23 , Y + 18 + 3
                 	__GETD1S 18
00a485 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xC2:
                +
00a486 85ea     +LDD R30 , Y + 10
00a487 85fb     +LDD R31 , Y + 10 + 1
00a488 856c     +LDD R22 , Y + 10 + 2
00a489 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00a48a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0xC3:
00a48b e0e0      	LDI  R30,LOW(0)
00a48c e0f0      	LDI  R31,HIGH(0)
00a48d 8119      	LDD  R17,Y+1
00a48e 8108      	LDD  R16,Y+0
00a48f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xC4:
00a490 de2e      	RCALL SUBOPT_0x7A
00a491 ce1f      	RJMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 23 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0xC5:
                +
00a492 85a8     +LDD R26 , Y + 8
00a493 85b9     +LDD R27 , Y + 8 + 1
00a494 858a     +LDD R24 , Y + 8 + 2
00a495 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
00a496 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 33 TIMES, CODE SIZE REDUCTION:61 WORDS
                 SUBOPT_0xC6:
                +
00a497 85ec     +LDD R30 , Y + 12
00a498 85fd     +LDD R31 , Y + 12 + 1
00a499 856e     +LDD R22 , Y + 12 + 2
00a49a 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00a49b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xC7:
                +
00a49c 50e1     +SUBI R30 , LOW ( 1 )
00a49d 40f0     +SBCI R31 , HIGH ( 1 )
00a49e 4060     +SBCI R22 , BYTE3 ( 1 )
00a49f 4070     +SBCI R23 , BYTE4 ( 1 )
                 	__SUBD1N 1
00a4a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC8:
00a4a1 db08      	RCALL SUBOPT_0xA
                +
00a4a2 e0a8     +LDI R26 , LOW ( 0x708 )
00a4a3 e0b7     +LDI R27 , HIGH ( 0x708 )
00a4a4 e080     +LDI R24 , BYTE3 ( 0x708 )
00a4a5 e090     +LDI R25 , BYTE4 ( 0x708 )
                 	__GETD2N 0x708
00a4a6 940e b543 	CALL __MULD12U
00a4a8 cfe7      	RJMP SUBOPT_0xC4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xC9:
                +
00a4a9 89ec     +LDD R30 , Y + 20
00a4aa 89fd     +LDD R31 , Y + 20 + 1
00a4ab 896e     +LDD R22 , Y + 20 + 2
00a4ac 897f     +LDD R23 , Y + 20 + 3
                 	__GETD1S 20
00a4ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xCA:
                +
00a4ae 8de8     +LDD R30 , Y + 24
00a4af 8df9     +LDD R31 , Y + 24 + 1
00a4b0 8d6a     +LDD R22 , Y + 24 + 2
00a4b1 8d7b     +LDD R23 , Y + 24 + 3
                 	__GETD1S 24
00a4b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xCB:
00a4b3 dfe3      	RCALL SUBOPT_0xC6
00a4b4 dfdd      	RCALL SUBOPT_0xC5
00a4b5 940e b690 	CALL __CPD12
00a4b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xCC:
00a4b8 daec      	RCALL SUBOPT_0x9
00a4b9 dc5e      	RCALL SUBOPT_0x3E
00a4ba 940e b4a7 	CALL __SUBD12
00a4bc ceb9      	RJMP SUBOPT_0x95
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xCD:
00a4bd dc5a      	RCALL SUBOPT_0x3E
00a4be dae6      	RCALL SUBOPT_0x9
00a4bf 940e b690 	CALL __CPD12
00a4c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xCE:
00a4c2 dfcf      	RCALL SUBOPT_0xC5
00a4c3 dfd3      	RCALL SUBOPT_0xC6
00a4c4 940e b4a7 	CALL __SUBD12
00a4c6 ceaf      	RJMP SUBOPT_0x95
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xCF:
00a4c7 deb3      	RCALL SUBOPT_0x96
                +
00a4c8 30aa     +CPI R26 , LOW ( 0xA )
00a4c9 e0e0     +LDI R30 , HIGH ( 0xA )
00a4ca 07be     +CPC R27 , R30
00a4cb e0e0     +LDI R30 , BYTE3 ( 0xA )
00a4cc 078e     +CPC R24 , R30
00a4cd e0e0     +LDI R30 , BYTE4 ( 0xA )
00a4ce 079e     +CPC R25 , R30
                 	__CPD2N 0xA
00a4cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD0:
                +
00a4d0 edea     +LDI R30 , LOW ( 2 * _0xC0000 + ( 0 ) )
00a4d1 e0ff     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 0 ) )
00a4d2 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 0 ) )
00a4d3 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 0 ) )
                 	__POINTD1FN _0xC0000,0
00a4d4 cded      	RJMP SUBOPT_0x7B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD1:
00a4d5 940e b62a 	CALL __PUTPARD1
00a4d7 dfd1      	RCALL SUBOPT_0xC9
00a4d8 cc9f      	RJMP SUBOPT_0x4B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0xD2:
00a4d9 85ec      	LDD  R30,Y+12
00a4da 2f1e      	MOV  R17,R30
00a4db dac9      	RCALL SUBOPT_0x9
00a4dc e0e8      	LDI  R30,LOW(8)
00a4dd 940e b4dc 	CALL __LSRD12
00a4df 2f0e      	MOV  R16,R30
00a4e0 dfb6      	RCALL SUBOPT_0xC6
00a4e1 940e b512 	CALL __LSRD16
00a4e3 2f3e      	MOV  R19,R30
00a4e4 dac0      	RCALL SUBOPT_0x9
00a4e5 e1e8      	LDI  R30,LOW(24)
00a4e6 940e b4dc 	CALL __LSRD12
00a4e8 2f2e      	MOV  R18,R30
00a4e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xD3:
00a4ea e0a0      	LDI  R26,LOW(0)
00a4eb 940e b2ce 	CALL _i2c_write
00a4ed 2fa1      	MOV  R26,R17
00a4ee 940e b2ce 	CALL _i2c_write
00a4f0 2fa0      	MOV  R26,R16
00a4f1 940e b2ce 	CALL _i2c_write
00a4f3 2fa3      	MOV  R26,R19
00a4f4 940e b2ce 	CALL _i2c_write
00a4f6 2fa2      	MOV  R26,R18
00a4f7 ce73      	RJMP SUBOPT_0x93
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD4:
00a4f8 93ba      	ST   -Y,R27
00a4f9 93aa      	ST   -Y,R26
00a4fa 972c      	SBIW R28,12
00a4fb 940e b69c 	CALL __SAVELOCR4
00a4fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 37 TIMES, CODE SIZE REDUCTION:141 WORDS
                 SUBOPT_0xD5:
00a4fe 940e b522 	CALL __CWD1
00a500 940e b62a 	CALL __PUTPARD1
00a502 cad2      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0xD6:
                +
00a503 87ec     +STD Y + 12 , R30
00a504 87fd     +STD Y + 12 + 1 , R31
00a505 876e     +STD Y + 12 + 2 , R22
00a506 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00a507 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD7:
00a508 e3ac      	LDI  R26,LOW(60)
00a509 e0b0      	LDI  R27,HIGH(60)
00a50a 940e b569 	CALL __MULW12
00a50c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD8:
00a50d dff5      	RCALL SUBOPT_0xD6
00a50e cf88      	RJMP SUBOPT_0xC6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD9:
00a50f 93e0 1430 	STS  _raw_rtc,R30
00a511 93f0 1431 	STS  _raw_rtc+1,R31
00a513 9360 1432 	STS  _raw_rtc+2,R22
00a515 9370 1433 	STS  _raw_rtc+3,R23
00a517 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xDA:
00a518 93ba      	ST   -Y,R27
00a519 93aa      	ST   -Y,R26
00a51a 9724      	SBIW R28,4
00a51b 931a      	ST   -Y,R17
00a51c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xDB:
00a51d de8c      	RCALL SUBOPT_0x9F
00a51e ce95      	RJMP SUBOPT_0xA1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xDC:
00a51f 940e b62a 	CALL __PUTPARD1
00a521 8dec      	LDD  R30,Y+28
00a522 8dfd      	LDD  R31,Y+28+1
00a523 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 43 TIMES, CODE SIZE REDUCTION:81 WORDS
                 SUBOPT_0xDD:
00a524 2766      	CLR  R22
00a525 2777      	CLR  R23
00a526 940e b62a 	CALL __PUTPARD1
00a528 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xDE:
00a529 940e b62a 	CALL __PUTPARD1
                +
00a52b a5e8     +LDD R30 , Y + 40
00a52c a5f9     +LDD R31 , Y + 40 + 1
00a52d a56a     +LDD R22 , Y + 40 + 2
00a52e a57b     +LDD R23 , Y + 40 + 3
                 	__GETD1S 40
00a52f 940e b62a 	CALL __PUTPARD1
00a531 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0xDF:
00a532 93fa      	ST   -Y,R31
00a533 93ea      	ST   -Y,R30
00a534 e0a0      	LDI  R26,LOW(0)
00a535 e0b0      	LDI  R27,0
00a536 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xE0:
00a537 93fa      	ST   -Y,R31
00a538 93ea      	ST   -Y,R30
00a539 e0e0      	LDI  R30,LOW(0)
00a53a 93ea      	ST   -Y,R30
00a53b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE1:
00a53c eaa1      	LDI  R26,LOW(161)
00a53d e0b0      	LDI  R27,0
00a53e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE2:
00a53f 0fa0      	ADD  R26,R16
00a540 1fb1      	ADC  R27,R17
00a541 940e b651 	CALL __EEPROMRDB
00a543 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0xE3:
00a544 0fe0      	ADD  R30,R16
00a545 1ff1      	ADC  R31,R17
00a546 01df      	MOVW R26,R30
00a547 940e b651 	CALL __EEPROMRDB
00a549 01d0      	MOVW R26,R0
00a54a 93ec      	ST   X,R30
00a54b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE4:
00a54c 81ea      	LDD  R30,Y+2
00a54d 81fb      	LDD  R31,Y+2+1
00a54e 5be0      	SUBI R30,LOW(-80)
00a54f 4fff      	SBCI R31,HIGH(-80)
00a550 0fe0      	ADD  R30,R16
00a551 1ff1      	ADC  R31,R17
00a552 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE5:
00a553 81ea      	LDD  R30,Y+2
00a554 81fb      	LDD  R31,Y+2+1
00a555 59ec      	SUBI R30,LOW(-100)
00a556 4fff      	SBCI R31,HIGH(-100)
00a557 0fe0      	ADD  R30,R16
00a558 1ff1      	ADC  R31,R17
00a559 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE6:
00a55a 81ea      	LDD  R30,Y+2
00a55b 81fb      	LDD  R31,Y+2+1
00a55c 57e4      	SUBI R30,LOW(-140)
00a55d 4fff      	SBCI R31,HIGH(-140)
00a55e 0fe0      	ADD  R30,R16
00a55f 1ff1      	ADC  R31,R17
00a560 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE7:
00a561 93ec      	ST   X,R30
00a562 81aa      	LDD  R26,Y+2
00a563 81bb      	LDD  R27,Y+2+1
00a564 9611      	ADIW R26,1
00a565 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE8:
00a566 93ec      	ST   X,R30
00a567 81aa      	LDD  R26,Y+2
00a568 81bb      	LDD  R27,Y+2+1
00a569 9612      	ADIW R26,2
00a56a e0e0      	LDI  R30,LOW(0)
00a56b 93ec      	ST   X,R30
                +
00a56c e000     +LDI R16 , LOW ( 0 )
00a56d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00a56e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xE9:
00a56f 81ea      	LDD  R30,Y+2
00a570 81fb      	LDD  R31,Y+2+1
00a571 9633      	ADIW R30,3
00a572 0fe0      	ADD  R30,R16
00a573 1ff1      	ADC  R31,R17
00a574 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xEA:
00a575 940e b651 	CALL __EEPROMRDB
00a577 81aa      	LDD  R26,Y+2
00a578 81bb      	LDD  R27,Y+2+1
00a579 93ec      	ST   X,R30
00a57a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xEB:
00a57b 940e b651 	CALL __EEPROMRDB
                +
00a57d 81aa     +LDD R26 , Y + 2
00a57e 81bb     +LDD R27 , Y + 2 + 1
00a57f 9611     +ADIW R26 , 1
00a580 93ec     +ST X , R30
                 	__PUTB1SNS 2,1
00a581 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xEC:
00a582 940e b651 	CALL __EEPROMRDB
                +
00a584 81aa     +LDD R26 , Y + 2
00a585 81bb     +LDD R27 , Y + 2 + 1
00a586 9612     +ADIW R26 , 2
00a587 93ec     +ST X , R30
                 	__PUTB1SNS 2,2
00a588 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xED:
00a589 940e b62a 	CALL __PUTPARD1
00a58b 81ae      	LDD  R26,Y+6
00a58c 81bf      	LDD  R27,Y+6+1
00a58d 91ec      	LD   R30,X
00a58e cae4      	RJMP SUBOPT_0x27
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0xEE:
00a58f 940e b62a 	CALL __PUTPARD1
00a591 81ee      	LDD  R30,Y+6
00a592 81ff      	LDD  R31,Y+6+1
00a593 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xEF:
                +
00a594 e0e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 295 ) )
00a595 e1f2     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 295 ) )
00a596 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 295 ) )
00a597 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 295 ) )
                 	__POINTD1FN _0xE0000,295
00a598 cff6      	RJMP SUBOPT_0xEE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xF0:
00a599 9633      	ADIW R30,3
00a59a 0fe0      	ADD  R30,R16
00a59b 1ff1      	ADC  R31,R17
00a59c 81e0      	LD   R30,Z
00a59d cad5      	RJMP SUBOPT_0x27
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0xF1:
                +
00a59e e1e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 51 ) )
00a59f e1f1     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 51 ) )
00a5a0 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 51 ) )
00a5a1 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 51 ) )
                 	__POINTD1FN _0xE0000,51
00a5a2 c9c3      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xF2:
00a5a3 93ba      	ST   -Y,R27
00a5a4 93aa      	ST   -Y,R26
00a5a5 81ab      	LDD  R26,Y+3
00a5a6 23aa      	TST  R26
00a5a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xF3:
00a5a8 93ed      	ST   X+,R30
00a5a9 93fc      	ST   X,R31
00a5aa 81a8      	LD   R26,Y
00a5ab 81b9      	LDD  R27,Y+1
00a5ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xF4:
00a5ad e0e0      	LDI  R30,LOW(0)
00a5ae 93ec      	ST   X,R30
00a5af 81a8      	LD   R26,Y
00a5b0 81b9      	LDD  R27,Y+1
00a5b1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 30 TIMES, CODE SIZE REDUCTION:84 WORDS
                 SUBOPT_0xF5:
00a5b2 81aa      	LDD  R26,Y+2
00a5b3 81bb      	LDD  R27,Y+2+1
00a5b4 e1ed      	LDI  R30,LOW(29)
00a5b5 940e b563 	CALL __MULB1W2U
00a5b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF6:
                +
00a5b8 54ee     +SUBI R30 , LOW ( - _config_sens - ( 9 ) )
00a5b9 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 9 ) )
                 	__ADDW1MN _config_sens,9
00a5ba 01df      	MOVW R26,R30
00a5bb 940e b649 	CALL __EEPROMRDD
00a5bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF7:
                +
00a5be 54ea     +SUBI R30 , LOW ( - _config_sens - ( 13 ) )
00a5bf 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 13 ) )
                 	__ADDW1MN _config_sens,13
00a5c0 01df      	MOVW R26,R30
00a5c1 940e b64d 	CALL __EEPROMRDW
00a5c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF8:
                +
00a5c4 54e8     +SUBI R30 , LOW ( - _config_sens - ( 15 ) )
00a5c5 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 15 ) )
                 	__ADDW1MN _config_sens,15
00a5c6 01df      	MOVW R26,R30
00a5c7 940e b649 	CALL __EEPROMRDD
00a5c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF9:
                +
00a5ca 54e4     +SUBI R30 , LOW ( - _config_sens - ( 19 ) )
00a5cb 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 19 ) )
                 	__ADDW1MN _config_sens,19
00a5cc 01df      	MOVW R26,R30
00a5cd 940e b649 	CALL __EEPROMRDD
00a5cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xFA:
                +
00a5d0 54e0     +SUBI R30 , LOW ( - _config_sens - ( 23 ) )
00a5d1 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 23 ) )
                 	__ADDW1MN _config_sens,23
00a5d2 01df      	MOVW R26,R30
00a5d3 940e b64d 	CALL __EEPROMRDW
00a5d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xFB:
                +
00a5d6 53ee     +SUBI R30 , LOW ( - _config_sens - ( 25 ) )
00a5d7 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 25 ) )
                 	__ADDW1MN _config_sens,25
00a5d8 01df      	MOVW R26,R30
00a5d9 940e b649 	CALL __EEPROMRDD
00a5db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xFC:
00a5dc e0e0      	LDI  R30,LOW(0)
00a5dd e0f0      	LDI  R31,HIGH(0)
00a5de 93ed      	ST   X+,R30
00a5df 93fc      	ST   X,R31
00a5e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xFD:
00a5e1 81aa      	LDD  R26,Y+2
00a5e2 81bb      	LDD  R27,Y+2+1
00a5e3 e0e3      	LDI  R30,LOW(3)
00a5e4 940e b563 	CALL __MULB1W2U
00a5e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFE:
00a5e7 01df      	MOVW R26,R30
00a5e8 940e b651 	CALL __EEPROMRDB
00a5ea 81a8      	LD   R26,Y
00a5eb 81b9      	LDD  R27,Y+1
00a5ec 93ec      	ST   X,R30
00a5ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xFF:
00a5ee 940e b64d 	CALL __EEPROMRDW
                +
00a5f0 81a8     +LDD R26 , Y + 0
00a5f1 81b9     +LDD R27 , Y + 0 + 1
00a5f2 9611     +ADIW R26 , 1
00a5f3 93ed     +ST X + , R30
00a5f4 93fc     +ST X , R31
                 	__PUTW1SNS 0,1
00a5f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x100:
00a5f6 940e b62a 	CALL __PUTPARD1
00a5f8 85e8      	LDD  R30,Y+8
00a5f9 85f9      	LDD  R31,Y+8+1
00a5fa cf03      	RJMP SUBOPT_0xD5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x101:
00a5fb 81ac      	LDD  R26,Y+4
00a5fc 81bd      	LDD  R27,Y+4+1
00a5fd e2e6      	LDI  R30,LOW(38)
00a5fe 940e b563 	CALL __MULB1W2U
00a600 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x102:
00a601 940e b62a 	CALL __PUTPARD1
00a603 85a8      	LDD  R26,Y+8
00a604 85b9      	LDD  R27,Y+8+1
00a605 e2e6      	LDI  R30,LOW(38)
00a606 940e b563 	CALL __MULB1W2U
00a608 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x103:
00a609 59e6      	SUBI R30,LOW(-_config_dout)
00a60a 4ffe      	SBCI R31,HIGH(-_config_dout)
00a60b 01df      	MOVW R26,R30
00a60c 940e b651 	CALL __EEPROMRDB
00a60e ca64      	RJMP SUBOPT_0x27
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x104:
                +
00a60f 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
00a610 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
00a611 01df      	MOVW R26,R30
00a612 940e b651 	CALL __EEPROMRDB
00a614 ca5e      	RJMP SUBOPT_0x27
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x105:
                +
00a615 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
00a616 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
00a617 01df      	MOVW R26,R30
00a618 940e b651 	CALL __EEPROMRDB
00a61a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x106:
00a61b 01d8      	MOVW R26,R16
00a61c e0f0      	LDI  R31,0
00a61d 17ae      	CP   R26,R30
00a61e 07bf      	CPC  R27,R31
00a61f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x107:
                +
00a620 59e3     +SUBI R30 , LOW ( - _config_dout - ( 3 ) )
00a621 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 3 ) )
                 	__ADDW1MN _config_dout,3
00a622 0fe0      	ADD  R30,R16
00a623 1ff1      	ADC  R31,R17
00a624 01df      	MOVW R26,R30
00a625 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x108:
00a626 81aa      	LDD  R26,Y+2
00a627 81bb      	LDD  R27,Y+2+1
00a628 e0e5      	LDI  R30,LOW(5)
00a629 940e b563 	CALL __MULB1W2U
00a62b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x109:
00a62c 81ea      	LDD  R30,Y+2
00a62d 81fb      	LDD  R31,Y+2+1
00a62e 9636      	ADIW R30,6
00a62f 0fe0      	ADD  R30,R16
00a630 1ff1      	ADC  R31,R17
00a631 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x10A:
00a632 81ac      	LDD  R26,Y+4
00a633 81bd      	LDD  R27,Y+4+1
00a634 e2e9      	LDI  R30,LOW(41)
00a635 940e b563 	CALL __MULB1W2U
00a637 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10B:
                +
00a638 58e3     +SUBI R30 , LOW ( - _config_aout - ( 5 ) )
00a639 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 5 ) )
                 	__ADDW1MN _config_aout,5
00a63a 01df      	MOVW R26,R30
00a63b 940e b651 	CALL __EEPROMRDB
00a63d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x10C:
                +
00a63e 58e2     +SUBI R30 , LOW ( - _config_aout - ( 6 ) )
00a63f 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 6 ) )
                 	__ADDW1MN _config_aout,6
00a640 0fe0      	ADD  R30,R16
00a641 1ff1      	ADC  R31,R17
00a642 01df      	MOVW R26,R30
00a643 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x10D:
00a644 81ee      	LDD  R30,Y+6
00a645 81ff      	LDD  R31,Y+6+1
00a646 9632      	ADIW R30,2
00a647 0fe0      	ADD  R30,R16
00a648 1ff1      	ADC  R31,R17
00a649 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10E:
                +
00a64a e0a9     +LDI R26 , LOW ( _config_buzz + ( 1 ) )
00a64b e0b5     +LDI R27 , HIGH ( _config_buzz + ( 1 ) )
                 	__POINTW2MN _config_buzz,1
00a64c 940e b651 	CALL __EEPROMRDB
00a64e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 23 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x10F:
00a64f 940e b62a 	CALL __PUTPARD1
00a651 85aa      	LDD  R26,Y+10
00a652 85bb      	LDD  R27,Y+10+1
00a653 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 34 TIMES, CODE SIZE REDUCTION:63 WORDS
                 SUBOPT_0x110:
00a654 940e b62a 	CALL __PUTPARD1
00a656 85ea      	LDD  R30,Y+10
00a657 85fb      	LDD  R31,Y+10+1
00a658 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x111:
                +
00a659 e0e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 295 ) )
00a65a e1f2     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 295 ) )
00a65b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 295 ) )
00a65c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 295 ) )
                 	__POINTD1FN _0xE0000,295
00a65d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x112:
00a65e 9632      	ADIW R30,2
00a65f 0fe0      	ADD  R30,R16
00a660 1ff1      	ADC  R31,R17
00a661 81e0      	LD   R30,Z
00a662 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x113:
00a663 940e b62a 	CALL __PUTPARD1
00a665 81ac      	LDD  R26,Y+4
00a666 81bd      	LDD  R27,Y+4+1
00a667 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x114:
00a668 940e b5fa 	CALL __GETD1P
00a66a 940e b62a 	CALL __PUTPARD1
00a66c c968      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x115:
00a66d 940e b5f6 	CALL __GETW1P
00a66f ce8e      	RJMP SUBOPT_0xD5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x116:
00a670 940e b62a 	CALL __PUTPARD1
00a672 81ec      	LDD  R30,Y+4
00a673 81fd      	LDD  R31,Y+4+1
00a674 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x117:
                +
00a675 81a6     +LDD R26 , Z + 6
00a676 81b7     +LDD R27 , Z + 6 + 1
00a677 8580     +LDD R24 , Z + 6 + 2
00a678 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00a679 940e b62f 	CALL __PUTPARD2
00a67b c959      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x118:
                +
00a67c 85a2     +LDD R26 , Z + 10
00a67d 85b3     +LDD R27 , Z + 10 + 1
00a67e 8584     +LDD R24 , Z + 10 + 2
00a67f 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00a680 940e b62f 	CALL __PUTPARD2
00a682 c952      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x119:
00a683 0fae      	ADD  R26,R30
00a684 1fbf      	ADC  R27,R31
00a685 91ec      	LD   R30,X
00a686 01d0      	MOVW R26,R0
00a687 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x11A:
00a688 91ec      	LD   R30,X
00a689 01d0      	MOVW R26,R0
00a68a 940e b66d 	CALL __EEPROMWRB
00a68c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x11B:
00a68d e0e1      	LDI  R30,LOW(1)
00a68e 940e b66d 	CALL __EEPROMWRB
00a690 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x11C:
00a691 efef      	LDI  R30,LOW(65535)
00a692 efff      	LDI  R31,HIGH(65535)
00a693 8119      	LDD  R17,Y+1
00a694 8108      	LDD  R16,Y+0
00a695 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x11D:
00a696 940e b651 	CALL __EEPROMRDB
00a698 c9da      	RJMP SUBOPT_0x27
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11E:
                +
00a699 eeef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1805 ) )
00a69a e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1805 ) )
00a69b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1805 ) )
00a69c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1805 ) )
                 	__POINTD1FN _0xE0000,1805
00a69d 940e b62a 	CALL __PUTPARD1
00a69f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11F:
00a6a0 81a8      	LD   R26,Y
00a6a1 81b9      	LDD  R27,Y+1
00a6a2 940e b5f6 	CALL __GETW1P
00a6a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x120:
00a6a5 01d0      	MOVW R26,R0
00a6a6 940e b665 	CALL __EEPROMWRW
00a6a8 cf09      	RJMP SUBOPT_0xF5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x121:
00a6a9 940e b5f6 	CALL __GETW1P
00a6ab cff9      	RJMP SUBOPT_0x120
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x122:
00a6ac 940e b66d 	CALL __EEPROMWRB
00a6ae cf03      	RJMP SUBOPT_0xF5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x123:
00a6af 940e b5fa 	CALL __GETD1P
00a6b1 01d0      	MOVW R26,R0
00a6b2 940e b65d 	CALL __EEPROMWRD
00a6b4 cefd      	RJMP SUBOPT_0xF5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x124:
00a6b5 940e b5fa 	CALL __GETD1P
00a6b7 01d0      	MOVW R26,R0
00a6b8 940e b65d 	CALL __EEPROMWRD
00a6ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:52 WORDS
                 SUBOPT_0x125:
00a6bb 940e b62a 	CALL __PUTPARD1
00a6bd 81ae      	LDD  R26,Y+6
00a6be 81bf      	LDD  R27,Y+6+1
00a6bf e1ed      	LDI  R30,LOW(29)
00a6c0 940e b563 	CALL __MULB1W2U
00a6c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x126:
00a6c3 01df      	MOVW R26,R30
00a6c4 940e b64d 	CALL __EEPROMRDW
00a6c6 ce5d      	RJMP SUBOPT_0xDD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x127:
00a6c7 2766      	CLR  R22
00a6c8 2777      	CLR  R23
00a6c9 c96e      	RJMP SUBOPT_0x1F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x128:
00a6ca 010f      	MOVW R0,R30
00a6cb 81a8      	LD   R26,Y
00a6cc 81b9      	LDD  R27,Y+1
00a6cd 9611      	ADIW R26,1
00a6ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x129:
00a6cf 940e b5f6 	CALL __GETW1P
00a6d1 01d0      	MOVW R26,R0
00a6d2 940e b665 	CALL __EEPROMWRW
00a6d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12A:
                +
00a6d5 efee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2332 ) )
00a6d6 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2332 ) )
00a6d7 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2332 ) )
00a6d8 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2332 ) )
                 	__POINTD1FN _0xE0000,2332
00a6d9 ceb5      	RJMP SUBOPT_0xEE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12B:
                +
00a6da e1e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2359 ) )
00a6db e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2359 ) )
00a6dc e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2359 ) )
00a6dd e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2359 ) )
                 	__POINTD1FN _0xE0000,2359
00a6de 940e b62a 	CALL __PUTPARD1
00a6e0 81ae      	LDD  R26,Y+6
00a6e1 81bf      	LDD  R27,Y+6+1
00a6e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12C:
00a6e3 940e b62a 	CALL __PUTPARD1
00a6e5 81ae      	LDD  R26,Y+6
00a6e6 81bf      	LDD  R27,Y+6+1
00a6e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12D:
00a6e8 940e b66d 	CALL __EEPROMWRB
00a6ea cf10      	RJMP SUBOPT_0x101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12E:
00a6eb 940e b66d 	CALL __EEPROMWRB
                +
00a6ed ebe2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2512 ) )
00a6ee e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2512 ) )
00a6ef e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2512 ) )
00a6f0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2512 ) )
                 	__POINTD1FN _0xE0000,2512
00a6f1 cf04      	RJMP SUBOPT_0x100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12F:
                +
00a6f2 e0ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2603 ) )
00a6f3 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2603 ) )
00a6f4 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2603 ) )
00a6f5 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2603 ) )
                 	__POINTD1FN _0xE0000,2603
00a6f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x130:
                +
00a6f7 e2e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2630 ) )
00a6f8 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2630 ) )
00a6f9 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2630 ) )
00a6fa e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2630 ) )
                 	__POINTD1FN _0xE0000,2630
00a6fb c86a      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x131:
00a6fc 01df      	MOVW R26,R30
00a6fd 940e b649 	CALL __EEPROMRDD
00a6ff 940e b62a 	CALL __PUTPARD1
00a701 c8d3      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x132:
00a702 940e b62a 	CALL __PUTPARD1
00a704 85a8      	LDD  R26,Y+8
00a705 85b9      	LDD  R27,Y+8+1
00a706 e2e9      	LDI  R30,LOW(41)
00a707 940e b563 	CALL __MULB1W2U
00a709 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x133:
                +
00a70a e0ea     +LDI R30 , LOW ( _config_buzz + ( 2 ) )
00a70b e0f5     +LDI R31 , HIGH ( _config_buzz + ( 2 ) )
                 	__POINTW1MN _config_buzz,2
00a70c 0fe0      	ADD  R30,R16
00a70d 1ff1      	ADC  R31,R17
00a70e 01df      	MOVW R26,R30
00a70f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x134:
00a710 940e b649 	CALL __EEPROMRDD
00a712 940e b62a 	CALL __PUTPARD1
00a714 c8c0      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x135:
00a715 0fa0      	ADD  R26,R16
00a716 1fb1      	ADC  R27,R17
00a717 e0e0      	LDI  R30,LOW(0)
00a718 93ec      	ST   X,R30
00a719 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x136:
00a71a e0e0      	LDI  R30,LOW(0)
00a71b e0f0      	LDI  R31,HIGH(0)
00a71c 940e b6a3 	CALL __LOADLOCR4
00a71e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x137:
00a71f 972a      	SBIW R28,10
00a720 940e b69c 	CALL __SAVELOCR4
                +
00a722 e000     +LDI R16 , LOW ( 0 )
00a723 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00a724 e020     +LDI R18 , LOW ( 0 )
00a725 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00a726 01f8      	MOVW R30,R16
                +
00a727 5f0f     +SUBI R16 , LOW ( - 1 )
00a728 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00a729 01de      	MOVW R26,R28
00a72a 9614      	ADIW R26,4
00a72b 0fae      	ADD  R26,R30
00a72c 1fbf      	ADC  R27,R31
00a72d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x138:
00a72e 01f8      	MOVW R30,R16
                +
00a72f 5f0f     +SUBI R16 , LOW ( - 1 )
00a730 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00a731 01de      	MOVW R26,R28
00a732 9614      	ADIW R26,4
00a733 0fea      	ADD  R30,R26
00a734 1ffb      	ADC  R31,R27
00a735 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:67 WORDS
                 SUBOPT_0x139:
00a736 010f      	MOVW R0,R30
00a737 e8a1      	LDI  R26,LOW(_DEVICE_SERIAL)
00a738 e0b5      	LDI  R27,HIGH(_DEVICE_SERIAL)
00a739 0fa2      	ADD  R26,R18
00a73a 1fb3      	ADC  R27,R19
00a73b 940e b651 	CALL __EEPROMRDB
00a73d 01d0      	MOVW R26,R0
00a73e 93ec      	ST   X,R30
00a73f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x13A:
00a740 01fe      	MOVW R30,R28
00a741 9634      	ADIW R30,4
00a742 93fa      	ST   -Y,R31
00a743 93ea      	ST   -Y,R30
00a744 931a      	ST   -Y,R17
00a745 930a      	ST   -Y,R16
00a746 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13B:
00a747 89eb      	LDD  R30,Y+19
00a748 93ea      	ST   -Y,R30
00a749 e0a0      	LDI  R26,LOW(0)
00a74a e0b0      	LDI  R27,0
00a74b 940c 5956 	JMP  _ETH_send
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x13C:
00a74d 940e b69c 	CALL __SAVELOCR4
                +
00a74f e000     +LDI R16 , LOW ( 0 )
00a750 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00a751 e020     +LDI R18 , LOW ( 0 )
00a752 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00a753 01f8      	MOVW R30,R16
                +
00a754 5f0f     +SUBI R16 , LOW ( - 1 )
00a755 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00a756 01de      	MOVW R26,R28
00a757 9614      	ADIW R26,4
00a758 0fae      	ADD  R26,R30
00a759 1fbf      	ADC  R27,R31
00a75a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x13D:
00a75b 93ea      	ST   -Y,R30
00a75c e0a0      	LDI  R26,LOW(0)
00a75d e0b0      	LDI  R27,0
00a75e 940e 5956 	CALL _ETH_send
00a760 cfb9      	RJMP SUBOPT_0x136
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x13E:
00a761 85e8      	LDD  R30,Y+8
00a762 85f9      	LDD  R31,Y+8+1
00a763 963f      	ADIW R30,15
00a764 01af      	MOVW R20,R30
                +
00a765 3f4b     +CPI R20 , LOW ( 251 )
00a766 e0e0     +LDI R30 , HIGH ( 251 )
00a767 075e     +CPC R21 , R30
                 	__CPWRN 20,21,251
00a768 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13F:
00a769 01da      	MOVW R26,R20
00a76a 940e 846d 	CALL _malloc
00a76c 83ee      	STD  Y+6,R30
00a76d 83ff      	STD  Y+6+1,R31
00a76e 9730      	SBIW R30,0
00a76f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x140:
00a770 01f8      	MOVW R30,R16
                +
00a771 5f0f     +SUBI R16 , LOW ( - 1 )
00a772 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00a773 81ae      	LDD  R26,Y+6
00a774 81bf      	LDD  R27,Y+6+1
00a775 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x141:
00a776 0fea      	ADD  R30,R26
00a777 1ffb      	ADC  R31,R27
00a778 cfbd      	RJMP SUBOPT_0x139
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x142:
00a779 01f8      	MOVW R30,R16
00a77a 81ae      	LDD  R26,Y+6
00a77b 81bf      	LDD  R27,Y+6+1
00a77c c8a7      	RJMP SUBOPT_0x1B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x143:
00a77d 85ec      	LDD  R30,Y+12
00a77e 85fd      	LDD  R31,Y+12+1
00a77f 93fa      	ST   -Y,R31
00a780 93ea      	ST   -Y,R30
00a781 85ac      	LDD  R26,Y+12
00a782 85bd      	LDD  R27,Y+12+1
00a783 940e 848f 	CALL _memcpy
00a785 85e8      	LDD  R30,Y+8
00a786 85f9      	LDD  R31,Y+8+1
                +
00a787 0f0e     +ADD R16 , R30
00a788 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00a789 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x144:
00a78a 81ee      	LDD  R30,Y+6
00a78b 81ff      	LDD  R31,Y+6+1
00a78c 93fa      	ST   -Y,R31
00a78d 93ea      	ST   -Y,R30
00a78e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x145:
00a78f 93ea      	ST   -Y,R30
00a790 e0ac      	LDI  R26,LOW(12)
00a791 e0b0      	LDI  R27,0
00a792 940c 5956 	JMP  _ETH_send
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x146:
00a794 81ae      	LDD  R26,Y+6
00a795 81bf      	LDD  R27,Y+6+1
00a796 940c 8488 	JMP  _free
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x147:
00a798 01f8      	MOVW R30,R16
                +
00a799 5f0f     +SUBI R16 , LOW ( - 1 )
00a79a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00a79b 01de      	MOVW R26,R28
00a79c 9616      	ADIW R26,6
00a79d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x148:
                +
00a79e a1e9     +LDD R30 , Y + 33
00a79f a1fa     +LDD R31 , Y + 33 + 1
00a7a0 a16b     +LDD R22 , Y + 33 + 2
00a7a1 a17c     +LDD R23 , Y + 33 + 3
                 	__GETD1S 33
00a7a2 940e b62a 	CALL __PUTPARD1
00a7a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x149:
00a7a5 e180      	LDI  R24,16
00a7a6 940e 7ca0 	CALL _printDebug
00a7a8 9664      	ADIW R28,20
00a7a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x14A:
00a7aa 85ef      	LDD  R30,Y+15
00a7ab 93ea      	ST   -Y,R30
00a7ac 85ef      	LDD  R30,Y+15
00a7ad 93ea      	ST   -Y,R30
00a7ae 85ef      	LDD  R30,Y+15
00a7af 93ea      	ST   -Y,R30
00a7b0 e0a1      	LDI  R26,LOW(1)
00a7b1 940e 509a 	CALL _ETH_sendConfigManageNack
00a7b3 efef      	LDI  R30,LOW(65535)
00a7b4 efff      	LDI  R31,HIGH(65535)
00a7b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14B:
00a7b6 940e 7d2a 	CALL _print_payload
00a7b8 cfd1      	RJMP SUBOPT_0x144
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14C:
00a7b9 01f8      	MOVW R30,R16
                +
00a7ba 5f0f     +SUBI R16 , LOW ( - 1 )
00a7bb 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00a7bc 01de      	MOVW R26,R28
00a7bd 9617      	ADIW R26,7
00a7be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14D:
                +
00a7bf a5e8     +LDD R30 , Y + 40
00a7c0 a5f9     +LDD R31 , Y + 40 + 1
00a7c1 a56a     +LDD R22 , Y + 40 + 2
00a7c2 a57b     +LDD R23 , Y + 40 + 3
                 	__GETD1S 40
00a7c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14E:
00a7c4 93aa      	ST   -Y,R26
00a7c5 972b      	SBIW R28,11
00a7c6 cf86      	RJMP SUBOPT_0x13C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14F:
00a7c7 89a8      	LDD  R26,Y+16
00a7c8 83a0      	STD  Z+0,R26
00a7c9 cf64      	RJMP SUBOPT_0x138
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x150:
00a7ca 01de      	MOVW R26,R28
00a7cb 9614      	ADIW R26,4
00a7cc 0fae      	ADD  R26,R30
00a7cd 1fbf      	ADC  R27,R31
00a7ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x151:
                +
00a7cf 01fe     +MOVW R30 , R28
00a7d0 5de2     +SUBI R30 , LOW ( - 558 )
00a7d1 4ffd     +SBCI R31 , HIGH ( - 558 )
00a7d2 81e0     +LD R30 , Z
                 	__GETB1SX 558
00a7d3 93ea      	ST   -Y,R30
00a7d4 c9f6      	RJMP SUBOPT_0x58
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x152:
00a7d5 01fe      	MOVW R30,R28
00a7d6 963e      	ADIW R30,14
00a7d7 93fa      	ST   -Y,R31
00a7d8 93ea      	ST   -Y,R30
00a7d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x153:
00a7da dcbc      	RCALL SUBOPT_0xC6
00a7db 940e b62a 	CALL __PUTPARD1
00a7dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x154:
                +
00a7de e5e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 1035 ) )
00a7df e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1035 ) )
00a7e0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1035 ) )
00a7e1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1035 ) )
                 	__POINTD1FN _0x120000,1035
00a7e2 940c 9f66 	JMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x155:
00a7e4 01de      	MOVW R26,R28
00a7e5 961e      	ADIW R26,14
                +
00a7e6 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00a7e8 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00a7ea 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00a7ec bf6c     +OUT EIND , R22
00a7ed 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00a7ee 018f      	MOVW R16,R30
00a7ef 2311      	TST  R17
00a7f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x156:
                +
00a7f1 e8e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 1080 ) )
00a7f2 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1080 ) )
00a7f3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1080 ) )
00a7f4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1080 ) )
                 	__POINTD1FN _0x120000,1080
00a7f5 940c 9f66 	JMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x157:
                +
00a7f7 e0ab     +LDI R26 , 11
00a7f8 9fa0     +MUL R26 , R16
00a7f9 01f0     +MOVW R30 , R0
00a7fa 9fa1     +MUL R26 , R17
00a7fb 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,11
00a7fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x158:
00a7fd 940e b62a 	CALL __PUTPARD1
00a7ff 91e0 1421 	LDS  R30,_commLostTimer
00a801 91f0 1422 	LDS  R31,_commLostTimer+1
00a803 9160 1423 	LDS  R22,_commLostTimer+2
00a805 9170 1424 	LDS  R23,_commLostTimer+3
00a807 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x159:
00a808 91a0 1421 	LDS  R26,_commLostTimer
00a80a 91b0 1422 	LDS  R27,_commLostTimer+1
00a80c 9180 1423 	LDS  R24,_commLostTimer+2
00a80e 9190 1424 	LDS  R25,_commLostTimer+3
00a810 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15A:
00a811 93fa      	ST   -Y,R31
00a812 93ea      	ST   -Y,R30
                +
00a813 e1ae     +LDI R26 , LOW ( 0x1E )
00a814 e0b0     +LDI R27 , HIGH ( 0x1E )
00a815 e080     +LDI R24 , BYTE3 ( 0x1E )
00a816 e090     +LDI R25 , BYTE4 ( 0x1E )
                 	__GETD2N 0x1E
00a817 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x15B:
00a818 940e b62a 	CALL __PUTPARD1
00a81a da88      	RCALL SUBOPT_0x76
00a81b 91e0 1421 	LDS  R30,_commLostTimer
00a81d 91f0 1422 	LDS  R31,_commLostTimer+1
00a81f 9160 1423 	LDS  R22,_commLostTimer+2
00a821 9170 1424 	LDS  R23,_commLostTimer+3
00a823 940e b4a7 	CALL __SUBD12
00a825 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15C:
                +
00a826 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
00a827 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
00a828 93fa      	ST   -Y,R31
00a829 93ea      	ST   -Y,R30
00a82a cfcc      	RJMP SUBOPT_0x157
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x15D:
                +
00a82b 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
00a82c 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
00a82d 01df      	MOVW R26,R30
00a82e 940e b5f6 	CALL __GETW1P
00a830 940e b522 	CALL __CWD1
00a832 940c a02e 	JMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x15E:
                +
00a834 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
00a835 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
00a836 01df      	MOVW R26,R30
00a837 940e b5f6 	CALL __GETW1P
00a839 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x15F:
                +
00a83a 01de     +MOVW R26 , R28
00a83b 5da2     +SUBI R26 , LOW ( - 558 )
00a83c 4fbd     +SBCI R27 , HIGH ( - 558 )
00a83d 900d     +LD R0 , X +
00a83e 91bc     +LD R27 , X
00a83f 2da0     +MOV R26 , R0
                 	__GETW2SX 558
00a840 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x160:
                +
00a841 01de     +MOVW R26 , R28
00a842 5da4     +SUBI R26 , LOW ( - 556 )
00a843 4fbd     +SBCI R27 , HIGH ( - 556 )
00a844 900d     +LD R0 , X +
00a845 91bc     +LD R27 , X
00a846 2da0     +MOV R26 , R0
                 	__GETW2SX 556
00a847 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x161:
00a848 940e b62a 	CALL __PUTPARD1
                +
00a84a 01fe     +MOVW R30 , R28
00a84b 5de0     +SUBI R30 , LOW ( - 560 )
00a84c 4ffd     +SBCI R31 , HIGH ( - 560 )
00a84d 9001     +LD R0 , Z +
00a84e 81f0     +LD R31 , Z
00a84f 2de0     +MOV R30 , R0
                 	__GETW1SX 560
00a850 ccad      	RJMP SUBOPT_0xD5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x162:
00a851 930a      	ST   -Y,R16
00a852 e1a0      	LDI  R26,LOW(16)
00a853 940c 4f6c 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x163:
00a855 940e 846d 	CALL _malloc
00a857 01af      	MOVW R20,R30
00a858 2e04      	MOV  R0,R20
00a859 2a05      	OR   R0,R21
00a85a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x164:
00a85b 930a      	ST   -Y,R16
00a85c e5a0      	LDI  R26,LOW(80)
00a85d 940c 4f6c 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x165:
                +
00a85f 01fe     +MOVW R30 , R28
00a860 5de2     +SUBI R30 , LOW ( - 558 )
00a861 4ffd     +SBCI R31 , HIGH ( - 558 )
00a862 9001     +LD R0 , Z +
00a863 81f0     +LD R31 , Z
00a864 2de0     +MOV R30 , R0
                 	__GETW1SX 558
00a865 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x166:
00a866 9632      	ADIW R30,2
00a867 93fa      	ST   -Y,R31
00a868 93ea      	ST   -Y,R30
00a869 dff5      	RCALL SUBOPT_0x165
00a86a 9732      	SBIW R30,2
00a86b 93fa      	ST   -Y,R31
00a86c 93ea      	ST   -Y,R30
00a86d 01da      	MOVW R26,R20
00a86e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x167:
00a86f 01da      	MOVW R26,R20
00a870 940e 8488 	CALL _free
00a872 930a      	ST   -Y,R16
00a873 e3a0      	LDI  R26,LOW(48)
00a874 940c 4f6c 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x168:
00a876 940e b62a 	CALL __PUTPARD1
00a878 2fe0      	MOV  R30,R16
00a879 940c a073 	JMP SUBOPT_0x27
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x169:
00a87b 940e b62a 	CALL __PUTPARD1
00a87d 01fa      	MOVW R30,R20
00a87e 85e0      	LDD  R30,Z+8
00a87f 940c a073 	JMP SUBOPT_0x27
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x16A:
00a881 940e b62a 	CALL __PUTPARD1
00a883 01da      	MOVW R26,R20
00a884 9619      	ADIW R26,9
00a885 940c a029 	JMP SUBOPT_0x1C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16B:
00a887 940e b5f6 	CALL __GETW1P
00a889 81ae      	LDD  R26,Y+6
00a88a 81bf      	LDD  R27,Y+6+1
00a88b 17ae      	CP   R26,R30
00a88c 07bf      	CPC  R27,R31
00a88d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16C:
00a88e 0fae      	ADD  R26,R30
00a88f 1fbf      	ADC  R27,R31
00a890 91ec      	LD   R30,X
00a891 940c a073 	JMP SUBOPT_0x27
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x16D:
00a893 930a      	ST   -Y,R16
00a894 01fa      	MOVW R30,R20
00a895 85a0      	LDD  R26,Z+8
00a896 93aa      	ST   -Y,R26
00a897 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16E:
00a898 dbe3      	RCALL SUBOPT_0xC0
00a899 01df      	MOVW R26,R30
00a89a 01cb      	MOVW R24,R22
00a89b 940e 7507 	CALL _LOG_setLastSend
00a89d 019f      	MOVW R18,R30
00a89e 2333      	TST  R19
00a89f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16F:
                +
00a8a0 efeb     +LDI R30 , LOW ( 2 * _0x120000 + ( 2221 ) )
00a8a1 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2221 ) )
00a8a2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2221 ) )
00a8a3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2221 ) )
                 	__POINTD1FN _0x120000,2221
00a8a4 940c 9f66 	JMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x170:
                +
00a8a6 e2e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 2263 ) )
00a8a7 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2263 ) )
00a8a8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2263 ) )
00a8a9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2263 ) )
                 	__POINTD1FN _0x120000,2263
00a8aa 940e b62a 	CALL __PUTPARD1
00a8ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x171:
00a8ad 01de      	MOVW R26,R28
00a8ae 961c      	ADIW R26,12
                +
00a8af 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00a8b1 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00a8b3 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00a8b5 bf6c     +OUT EIND , R22
00a8b6 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00a8b7 019f      	MOVW R18,R30
00a8b8 2333      	TST  R19
00a8b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x172:
00a8ba e0b0      	LDI  R27,0
00a8bb cf99      	RJMP SUBOPT_0x163
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x173:
                +
00a8bc edec     +LDI R30 , LOW ( 2 * _0x120000 + ( 2446 ) )
00a8bd e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2446 ) )
00a8be e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2446 ) )
00a8bf e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2446 ) )
                 	__POINTD1FN _0x120000,2446
00a8c0 940e b62a 	CALL __PUTPARD1
00a8c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 44 TIMES, CODE SIZE REDUCTION:83 WORDS
                 SUBOPT_0x174:
00a8c3 940e b62a 	CALL __PUTPARD1
00a8c5 940c 9fd5 	JMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x175:
00a8c7 df97      	RCALL SUBOPT_0x165
00a8c8 cf9d      	RJMP SUBOPT_0x166
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x176:
                +
00a8c9 e6e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2584 ) )
00a8ca e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2584 ) )
00a8cb e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2584 ) )
00a8cc e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2584 ) )
                 	__POINTD1FN _0x120000,2584
00a8cd cfad      	RJMP SUBOPT_0x169
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x177:
00a8ce 940e b62a 	CALL __PUTPARD1
00a8d0 01fa      	MOVW R30,R20
00a8d1 85e1      	LDD  R30,Z+9
00a8d2 940c a073 	JMP SUBOPT_0x27
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x178:
00a8d4 01fa      	MOVW R30,R20
00a8d5 85e0      	LDD  R30,Z+8
00a8d6 940c a0ee 	JMP SUBOPT_0x37
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x179:
00a8d8 01fa      	MOVW R30,R20
00a8d9 85a1      	LDD  R26,Z+9
00a8da 93aa      	ST   -Y,R26
00a8db e0a1      	LDI  R26,LOW(1)
00a8dc 940c 509a 	JMP  _ETH_sendConfigManageNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17A:
00a8de 01fa      	MOVW R30,R20
00a8df 85a1      	LDD  R26,Z+9
00a8e0 93aa      	ST   -Y,R26
00a8e1 e0e0      	LDI  R30,LOW(0)
00a8e2 93ea      	ST   -Y,R30
00a8e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17B:
00a8e4 940e 50c6 	CALL _ETH_sendConfigManageAck
00a8e6 019f      	MOVW R18,R30
00a8e7 2333      	TST  R19
00a8e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17C:
00a8e9 87e8      	STD  Y+8,R30
00a8ea 87f9      	STD  Y+8+1,R31
00a8eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 28 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x17D:
00a8ec 85e8      	LDD  R30,Y+8
00a8ed 85f9      	LDD  R31,Y+8+1
00a8ee 93fa      	ST   -Y,R31
00a8ef 93ea      	ST   -Y,R30
00a8f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17E:
00a8f1 85e9      	LDD  R30,Y+9
00a8f2 85fa      	LDD  R31,Y+9+1
00a8f3 93fa      	ST   -Y,R31
00a8f4 93ea      	ST   -Y,R30
00a8f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17F:
00a8f6 e0e0      	LDI  R30,LOW(0)
00a8f7 e0f0      	LDI  R31,HIGH(0)
00a8f8 cc39      	RJMP SUBOPT_0xDF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x180:
                +
00a8f9 ebe7     +LDI R30 , LOW ( 2 * _0x120000 + ( 2921 ) )
00a8fa e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2921 ) )
00a8fb e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2921 ) )
00a8fc e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2921 ) )
                 	__POINTD1FN _0x120000,2921
00a8fd 940c 9f66 	JMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x181:
                +
00a8ff e2eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 3037 ) )
00a900 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3037 ) )
00a901 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3037 ) )
00a902 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3037 ) )
                 	__POINTD1FN _0x120000,3037
00a903 cf77      	RJMP SUBOPT_0x169
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x182:
                +
00a904 e2ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 3294 ) )
00a905 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3294 ) )
00a906 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3294 ) )
00a907 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3294 ) )
                 	__POINTD1FN _0x120000,3294
00a908 940c 9f66 	JMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x183:
00a90a 940e b62a 	CALL __PUTPARD1
00a90c 01fa      	MOVW R30,R20
                +
00a90d 85a1     +LDD R26 , Z + 9
00a90e 85b2     +LDD R27 , Z + 9 + 1
00a90f 8583     +LDD R24 , Z + 9 + 2
00a910 8594     +LDD R25 , Z + 9 + 3
                 	__GETD2Z 9
00a911 940e b62f 	CALL __PUTPARD2
00a913 940c 9fd5 	JMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x184:
00a915 940e b62f 	CALL __PUTPARD2
00a917 940c 9fd5 	JMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x185:
                +
00a919 85a1     +LDD R26 , Z + 9
00a91a 85b2     +LDD R27 , Z + 9 + 1
00a91b 8583     +LDD R24 , Z + 9 + 2
00a91c 8594     +LDD R25 , Z + 9 + 3
                 	__GETD2Z 9
00a91d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x186:
                +
00a91e e0ea     +LDI R30 , LOW ( 0xA )
00a91f e0f0     +LDI R31 , HIGH ( 0xA )
00a920 e060     +LDI R22 , BYTE3 ( 0xA )
00a921 e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
00a922 cfa0      	RJMP SUBOPT_0x174
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x187:
00a923 df3b      	RCALL SUBOPT_0x165
00a924 9632      	ADIW R30,2
00a925 93fa      	ST   -Y,R31
00a926 93ea      	ST   -Y,R30
00a927 01da      	MOVW R26,R20
00a928 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x188:
                +
00a929 e0ed     +LDI R30 , LOW ( 0xD )
00a92a e0f0     +LDI R31 , HIGH ( 0xD )
00a92b e060     +LDI R22 , BYTE3 ( 0xD )
00a92c e070     +LDI R23 , BYTE4 ( 0xD )
                 	__GETD1N 0xD
00a92d cf95      	RJMP SUBOPT_0x174
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x189:
                +
00a92e e2e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 3797 ) )
00a92f e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3797 ) )
00a930 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3797 ) )
00a931 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3797 ) )
                 	__POINTD1FN _0x120000,3797
00a932 cf48      	RJMP SUBOPT_0x169
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18A:
00a933 85a1      	LDD  R26,Z+9
00a934 85b2      	LDD  R27,Z+10
00a935 940e b682 	CALL __CPW02
00a937 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x18B:
00a938 930a      	ST   -Y,R16
00a939 e3a0      	LDI  R26,LOW(48)
00a93a 940c 4f6c 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x18C:
00a93c e0f0      	LDI  R31,0
00a93d 30e1      	CPI  R30,LOW(0x1)
00a93e e0a0      	LDI  R26,HIGH(0x1)
00a93f 07fa      	CPC  R31,R26
00a940 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x18D:
00a941 9724      	SBIW R28,4
00a942 e0e0      	LDI  R30,LOW(0)
00a943 83e8      	ST   Y,R30
00a944 83e9      	STD  Y+1,R30
00a945 83ea      	STD  Y+2,R30
00a946 83eb      	STD  Y+3,R30
00a947 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18E:
00a948 93fa      	ST   -Y,R31
00a949 93ea      	ST   -Y,R30
00a94a e0aa      	LDI  R26,LOW(10)
00a94b e0b0      	LDI  R27,0
00a94c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18F:
00a94d 0fe0      	ADD  R30,R16
00a94e 1ff1      	ADC  R31,R17
00a94f 93fa      	ST   -Y,R31
00a950 93ea      	ST   -Y,R30
00a951 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x190:
00a952 e0f0      	LDI  R31,0
00a953 2bea      	OR   R30,R26
00a954 2bfb      	OR   R31,R27
00a955 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x191:
00a956 81ae      	LDD  R26,Y+6
00a957 81bf      	LDD  R27,Y+6+1
00a958 0fea      	ADD  R30,R26
00a959 1ffb      	ADC  R31,R27
00a95a 83ee      	STD  Y+6,R30
00a95b 83ff      	STD  Y+6+1,R31
00a95c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x192:
00a95d 01d0      	MOVW R26,R0
00a95e e0f0      	LDI  R31,0
00a95f 17ea      	CP   R30,R26
00a960 07fb      	CPC  R31,R27
00a961 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x193:
00a962 93ba      	ST   -Y,R27
00a963 93aa      	ST   -Y,R26
00a964 940e b69a 	CALL __SAVELOCR6
00a966 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x194:
00a967 81ae      	LDD  R26,Y+6
00a968 81bf      	LDD  R27,Y+6+1
00a969 0fae      	ADD  R26,R30
00a96a 1fbf      	ADC  R27,R31
00a96b 91ec      	LD   R30,X
00a96c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x195:
00a96d e0a5      	LDI  R26,LOW(5)
00a96e e0b0      	LDI  R27,0
00a96f 940c b2e6 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x196:
                +
00a971 e020     +LDI R18 , LOW ( 0 )
00a972 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00a973 e000     +LDI R16 , LOW ( 0 )
00a974 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00a975 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:105 WORDS
                 SUBOPT_0x197:
00a976 01f9      	MOVW R30,R18
                +
00a977 5f2f     +SUBI R18 , LOW ( - 1 )
00a978 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a979 85a8      	LDD  R26,Y+8
00a97a 85b9      	LDD  R27,Y+8+1
00a97b 0fae      	ADD  R26,R30
00a97c 1fbf      	ADC  R27,R31
00a97d 91ec      	LD   R30,X
00a97e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x198:
                +
00a97f 81ac     +LDD R26 , Y + 4
00a980 81bd     +LDD R27 , Y + 4 + 1
00a981 9618     +ADIW R26 , 8
00a982 93ec     +ST X , R30
                 	__PUTB1SNS 4,8
00a983 cff2      	RJMP SUBOPT_0x197
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x199:
                +
00a984 81ac     +LDD R26 , Y + 4
00a985 81bd     +LDD R27 , Y + 4 + 1
00a986 9619     +ADIW R26 , 9
00a987 93ed     +ST X + , R30
00a988 93fc     +ST X , R31
                 	__PUTW1SNS 4,9
00a989 81ec      	LDD  R30,Y+4
00a98a 81fd      	LDD  R31,Y+4+1
00a98b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x19A:
00a98c e0e1      	LDI  R30,LOW(1)
00a98d e0f0      	LDI  R31,HIGH(1)
00a98e 940e b53b 	CALL __MULW12U
00a990 01df      	MOVW R26,R30
00a991 940c 846d 	JMP  _malloc
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x19B:
00a993 940e b5f6 	CALL __GETW1P
00a995 170e      	CP   R16,R30
00a996 071f      	CPC  R17,R31
00a997 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x19C:
00a998 01f8      	MOVW R30,R16
00a999 0fea      	ADD  R30,R26
00a99a 1ffb      	ADC  R31,R27
00a99b 010f      	MOVW R0,R30
00a99c 01f9      	MOVW R30,R18
00a99d 0fe0      	ADD  R30,R16
00a99e 1ff1      	ADC  R31,R17
00a99f 85a8      	LDD  R26,Y+8
00a9a0 85b9      	LDD  R27,Y+8+1
00a9a1 cce1      	RJMP SUBOPT_0x119
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19D:
00a9a2 940e b62a 	CALL __PUTPARD1
00a9a4 85a8      	LDD  R26,Y+8
00a9a5 85b9      	LDD  R27,Y+8+1
00a9a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x19E:
                +
00a9a7 81ac     +LDD R26 , Y + 4
00a9a8 81bd     +LDD R27 , Y + 4 + 1
00a9a9 9618     +ADIW R26 , 8
00a9aa 93ec     +ST X , R30
                 	__PUTB1SNS 4,8
00a9ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:74 WORDS
                 SUBOPT_0x19F:
00a9ac e0f0      	LDI  R31,0
00a9ad 940e b522 	CALL __CWD1
                +
00a9af 7fef     +ANDI R30 , LOW ( 0xFF )
00a9b0 70f0     +ANDI R31 , HIGH ( 0xFF )
00a9b1 7060     +ANDI R22 , BYTE3 ( 0xFF )
00a9b2 7070     +ANDI R23 , BYTE4 ( 0xFF )
                 	__ANDD1N 0xFF
00a9b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A0:
00a9b4 01df      	MOVW R26,R30
00a9b5 01cb      	MOVW R24,R22
00a9b6 e1e8      	LDI  R30,LOW(24)
00a9b7 940e b4d0 	CALL __LSLD12
00a9b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A1:
00a9ba 01df      	MOVW R26,R30
00a9bb 01cb      	MOVW R24,R22
00a9bc e0e8      	LDI  R30,LOW(8)
00a9bd 940e b4d0 	CALL __LSLD12
00a9bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A2:
00a9c0 940e b4b6 	CALL __ORD12
                +
00a9c2 81ac     +LDD R26 , Y + 4
00a9c3 81bd     +LDD R27 , Y + 4 + 1
00a9c4 9619     +ADIW R26 , 9
00a9c5 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 4,9
00a9c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1A3:
00a9c8 01f9      	MOVW R30,R18
                +
00a9c9 5f2f     +SUBI R18 , LOW ( - 1 )
00a9ca 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a9cb cf9b      	RJMP SUBOPT_0x194
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A4:
00a9cc 93ba      	ST   -Y,R27
00a9cd 93aa      	ST   -Y,R26
00a9ce cf72      	RJMP SUBOPT_0x18D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x1A5:
00a9cf 940e 846d 	CALL _malloc
00a9d1 83ee      	STD  Y+6,R30
00a9d2 83ff      	STD  Y+6+1,R31
00a9d3 9730      	SBIW R30,0
00a9d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1A6:
                +
00a9d5 ebe5     +LDI R30 , LOW ( 2 * _0x160000 + ( 187 ) )
00a9d6 e3f4     +LDI R31 , HIGH ( 2 * _0x160000 + ( 187 ) )
00a9d7 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 187 ) )
00a9d8 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 187 ) )
                 	__POINTD1FN _0x160000,187
00a9d9 cc7a      	RJMP SUBOPT_0x110
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1A7:
00a9da 85ea      	LDD  R30,Y+10
00a9db 85fb      	LDD  R31,Y+10+1
00a9dc 93fa      	ST   -Y,R31
00a9dd 93ea      	ST   -Y,R30
00a9de cf0d      	RJMP SUBOPT_0x17D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1A8:
00a9df 940e 848f 	CALL _memcpy
00a9e1 cdb2      	RJMP SUBOPT_0x146
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1A9:
00a9e2 e0b0      	LDI  R27,0
00a9e3 cfeb      	RJMP SUBOPT_0x1A5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AA:
                +
00a9e4 e7e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 378 ) )
00a9e5 e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 378 ) )
00a9e6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 378 ) )
00a9e7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 378 ) )
                 	__POINTD1FN _0x160000,378
00a9e8 cc6b      	RJMP SUBOPT_0x110
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1AB:
                +
00a9e9 eae0     +LDI R30 , LOW ( 2 * _0x160000 + ( 422 ) )
00a9ea e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 422 ) )
00a9eb e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 422 ) )
00a9ec e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 422 ) )
                 	__POINTD1FN _0x160000,422
00a9ed cc66      	RJMP SUBOPT_0x110
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1AC:
                +
00a9ee e2ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 50 ) )
00a9ef e3f4     +LDI R31 , HIGH ( 2 * _0x160000 + ( 50 ) )
00a9f0 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 50 ) )
00a9f1 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 50 ) )
                 	__POINTD1FN _0x160000,50
00a9f2 940c 9f66 	JMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1AD:
00a9f4 e0b0      	LDI  R27,0
00a9f5 cfe9      	RJMP SUBOPT_0x1A8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1AE:
00a9f6 85ec      	LDD  R30,Y+12
00a9f7 e0f0      	LDI  R31,0
00a9f8 70ef      	ANDI R30,LOW(0xF)
00a9f9 70f0      	ANDI R31,HIGH(0xF)
00a9fa 87e8      	STD  Y+8,R30
00a9fb 87f9      	STD  Y+8+1,R31
00a9fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1AF:
00a9fd 940e b62a 	CALL __PUTPARD1
00a9ff 85ec      	LDD  R30,Y+12
00aa00 85fd      	LDD  R31,Y+12+1
00aa01 cafc      	RJMP SUBOPT_0xD5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B0:
00aa02 940e b62a 	CALL __PUTPARD1
                +
00aa04 e0e3     +LDI R30 , LOW ( 0x3 )
00aa05 e0f0     +LDI R31 , HIGH ( 0x3 )
00aa06 e060     +LDI R22 , BYTE3 ( 0x3 )
00aa07 e070     +LDI R23 , BYTE4 ( 0x3 )
                 	__GETD1N 0x3
00aa08 ceba      	RJMP SUBOPT_0x174
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B1:
                +
00aa09 ebeb     +LDI R30 , LOW ( 2 * _0x160000 + ( 961 ) )
00aa0a e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 961 ) )
00aa0b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 961 ) )
00aa0c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 961 ) )
                 	__POINTD1FN _0x160000,961
00aa0d cc41      	RJMP SUBOPT_0x10F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B2:
                +
00aa0e e6ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1138 ) )
00aa0f e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1138 ) )
00aa10 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1138 ) )
00aa11 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1138 ) )
                 	__POINTD1FN _0x160000,1138
00aa12 cc3c      	RJMP SUBOPT_0x10F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B3:
                +
00aa13 eae2     +LDI R30 , LOW ( 2 * _0x160000 + ( 1192 ) )
00aa14 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1192 ) )
00aa15 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1192 ) )
00aa16 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1192 ) )
                 	__POINTD1FN _0x160000,1192
00aa17 cc3c      	RJMP SUBOPT_0x110
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B4:
                +
00aa18 ebeb     +LDI R30 , LOW ( 2 * _0x160000 + ( 1217 ) )
00aa19 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1217 ) )
00aa1a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1217 ) )
00aa1b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1217 ) )
                 	__POINTD1FN _0x160000,1217
00aa1c 940c 9f66 	JMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B5:
00aa1e e2e2      	LDI  R30,LOW(34)
00aa1f e0f0      	LDI  R31,HIGH(34)
00aa20 17e0      	CP   R30,R16
00aa21 07f1      	CPC  R31,R17
00aa22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B6:
                +
00aa23 81a1     +LDD R26 , Z + 1
00aa24 81b2     +LDD R27 , Z + 1 + 1
00aa25 8183     +LDD R24 , Z + 1 + 2
00aa26 8194     +LDD R25 , Z + 1 + 3
                 	__GETD2Z 1
00aa27 ceed      	RJMP SUBOPT_0x184
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B7:
                +
00aa28 e5e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 2137 ) )
00aa29 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2137 ) )
00aa2a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2137 ) )
00aa2b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2137 ) )
                 	__POINTD1FN _0x160000,2137
00aa2c 940e b62a 	CALL __PUTPARD1
00aa2e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1B8:
00aa2f 85ea      	LDD  R30,Y+10
00aa30 e0f0      	LDI  R31,0
00aa31 70ef      	ANDI R30,LOW(0xF)
00aa32 70f0      	ANDI R31,HIGH(0xF)
00aa33 01af      	MOVW R20,R30
00aa34 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B9:
00aa35 935a      	ST   -Y,R21
00aa36 934a      	ST   -Y,R20
00aa37 85aa      	LDD  R26,Y+10
00aa38 85bb      	LDD  R27,Y+10+1
00aa39 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1BA:
00aa3a 940e b62a 	CALL __PUTPARD1
00aa3c 940c a118 	JMP SUBOPT_0x3E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1BB:
00aa3e 01fe      	MOVW R30,R28
00aa3f 9632      	ADIW R30,2
00aa40 93fa      	ST   -Y,R31
00aa41 93ea      	ST   -Y,R30
00aa42 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1BC:
00aa43 d96b      	RCALL SUBOPT_0xA0
00aa44 940e b67e 	CALL __CPD10
00aa46 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1BD:
00aa47 940e b62a 	CALL __PUTPARD1
00aa49 d96f      	RCALL SUBOPT_0xA2
00aa4a ce78      	RJMP SUBOPT_0x174
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1BE:
00aa4b 940e b62f 	CALL __PUTPARD2
00aa4d 931a      	ST   -Y,R17
00aa4e 930a      	ST   -Y,R16
00aa4f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1BF:
00aa50 93fa      	ST   -Y,R31
00aa51 93ea      	ST   -Y,R30
00aa52 ce99      	RJMP SUBOPT_0x17D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C0:
00aa53 58e5      	SUBI R30,LOW(-_eth_waitQueue)
00aa54 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
00aa55 e0a0      	LDI  R26,LOW(0)
00aa56 83a0      	STD  Z+0,R26
00aa57 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1C1:
00aa58 e0ab      	LDI  R26,LOW(11)
00aa59 9f1a      	MUL  R17,R26
00aa5a 01f0      	MOVW R30,R0
                +
00aa5b 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00aa5c 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00aa5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x1C2:
00aa5e 01df      	MOVW R26,R30
00aa5f 940e 8488 	CALL _free
00aa61 e0ab      	LDI  R26,LOW(11)
00aa62 9f1a      	MUL  R17,R26
00aa63 01f0      	MOVW R30,R0
                +
00aa64 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
00aa65 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
00aa66 e0a0      	LDI  R26,LOW(0)
00aa67 e0b0      	LDI  R27,HIGH(0)
00aa68 83a0      	STD  Z+0,R26
00aa69 83b1      	STD  Z+1,R27
00aa6a e0ab      	LDI  R26,LOW(11)
00aa6b 9f1a      	MUL  R17,R26
00aa6c 01f0      	MOVW R30,R0
                +
00aa6d 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
00aa6e 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
00aa6f e0a0      	LDI  R26,LOW(0)
00aa70 83a0      	STD  Z+0,R26
00aa71 cfe6      	RJMP SUBOPT_0x1C1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1C3:
00aa72 e0a0      	LDI  R26,LOW(0)
00aa73 83a0      	STD  Z+0,R26
00aa74 e0ab      	LDI  R26,LOW(11)
00aa75 9f1a      	MUL  R17,R26
00aa76 01f0      	MOVW R30,R0
00aa77 cfdb      	RJMP SUBOPT_0x1C0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1C4:
00aa78 e0ab      	LDI  R26,LOW(11)
00aa79 9f1a      	MUL  R17,R26
00aa7a 01f0      	MOVW R30,R0
                +
00aa7b 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
00aa7c 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
00aa7d e0a0      	LDI  R26,LOW(0)
00aa7e e0b0      	LDI  R27,HIGH(0)
00aa7f 83a0      	STD  Z+0,R26
00aa80 83b1      	STD  Z+1,R27
00aa81 e0ab      	LDI  R26,LOW(11)
00aa82 9f1a      	MUL  R17,R26
00aa83 01f0      	MOVW R30,R0
                +
00aa84 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
00aa85 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
                +
00aa86 e0a0     +LDI R26 , LOW ( 0x0 )
00aa87 e0b0     +LDI R27 , HIGH ( 0x0 )
00aa88 e080     +LDI R24 , BYTE3 ( 0x0 )
00aa89 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00aa8a 940e b625 	CALL __PUTDZ20
00aa8c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1C5:
00aa8d 940e b62a 	CALL __PUTPARD1
00aa8f 81ed      	LDD  R30,Y+5
00aa90 940c a1bb 	JMP SUBOPT_0x55
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C6:
00aa92 2fe1      	MOV  R30,R17
00aa93 27ff      	CLR  R31
00aa94 2766      	CLR  R22
00aa95 2777      	CLR  R23
00aa96 940c a038 	JMP SUBOPT_0x1F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C7:
00aa98 e0f0      	LDI  R31,0
00aa99 8118      	LDD  R17,Y+0
00aa9a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1C8:
00aa9b 940e b62a 	CALL __PUTPARD1
00aa9d 81ed      	LDD  R30,Y+5
00aa9e 940c a073 	JMP SUBOPT_0x27
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1C9:
00aaa0 81ec      	LDD  R30,Y+4
00aaa1 81fd      	LDD  R31,Y+4+1
00aaa2 c8ba      	RJMP SUBOPT_0x90
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1CA:
00aaa3 9611      	ADIW R26,1
00aaa4 940e 80b2 	CALL _calProcessValue
00aaa6 81aa      	LDD  R26,Y+2
00aaa7 81bb      	LDD  R27,Y+2+1
00aaa8 940e b605 	CALL __PUTDP1
00aaaa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1CB:
                +
00aaab 01de     +MOVW R26 , R28
00aaac 5fa2     +SUBI R26 , LOW ( - 526 )
00aaad 4fbd     +SBCI R27 , HIGH ( - 526 )
00aaae 91ac     +LD R26 , X
                 	__GETB2SX 526
00aaaf 5fa8      	SUBI R26,-LOW(8)
00aab0 940c 3fc3 	JMP  _read_adc
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x1CC:
                +
00aab2 01fe     +MOVW R30 , R28
00aab3 5fe2     +SUBI R30 , LOW ( - 526 )
00aab4 4ffd     +SBCI R31 , HIGH ( - 526 )
00aab5 9001     +LD R0 , Z +
00aab6 81f0     +LD R31 , Z
00aab7 2de0     +MOV R30 , R0
                 	__GETW1SX 526
00aab8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1CD:
00aab9 940e b4ec 	CALL __LSLW2
00aabb 0fea      	ADD  R30,R26
00aabc 1ffb      	ADC  R31,R27
00aabd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1CE:
00aabe 940e 6646 	CALL _average
                +
00aac0 e0a0     +LDI R26 , LOW ( 0x40A00000 )
00aac1 e0b0     +LDI R27 , HIGH ( 0x40A00000 )
00aac2 ea80     +LDI R24 , BYTE3 ( 0x40A00000 )
00aac3 e490     +LDI R25 , BYTE4 ( 0x40A00000 )
                 	__GETD2N 0x40A00000
00aac4 c876      	RJMP SUBOPT_0x8A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1CF:
00aac5 dfec      	RCALL SUBOPT_0x1CC
00aac6 c896      	RJMP SUBOPT_0x90
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1D0:
00aac7 940e a16e 	CALL SUBOPT_0x49
00aac9 940e b625 	CALL __PUTDZ20
00aacb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x1D1:
                +
00aacc 01de     +MOVW R26 , R28
00aacd 5fa2     +SUBI R26 , LOW ( - 526 )
00aace 4fbd     +SBCI R27 , HIGH ( - 526 )
00aacf 900d     +LD R0 , X +
00aad0 91bc     +LD R27 , X
00aad1 2da0     +MOV R26 , R0
                 	__GETW2SX 526
00aad2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1D2:
                +
00aad3 87ea     +STD Y + 10 , R30
00aad4 87fb     +STD Y + 10 + 1 , R31
00aad5 876c     +STD Y + 10 + 2 , R22
00aad6 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00aad7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D3:
00aad8 0fea      	ADD  R30,R26
00aad9 1ffb      	ADC  R31,R27
00aada 940e a13a 	CALL SUBOPT_0x42
00aadc 940e b625 	CALL __PUTDZ20
00aade 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1D4:
00aadf e0b0      	LDI  R27,0
00aae0 940c 84d4 	JMP  _memset
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1D5:
00aae2 940e b63c 	CALL __SWAPD12
00aae4 940e b38f 	CALL __SUBF12
00aae6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1D6:
                +
00aae7 87ee     +STD Y + 14 , R30
00aae8 87ff     +STD Y + 14 + 1 , R31
00aae9 8b68     +STD Y + 14 + 2 , R22
00aaea 8b79     +STD Y + 14 + 3 , R23
                 	__PUTD1S 14
00aaeb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1D7:
                +
00aaec 85ae     +LDD R26 , Y + 14
00aaed 85bf     +LDD R27 , Y + 14 + 1
00aaee 8988     +LDD R24 , Y + 14 + 2
00aaef 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
00aaf0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1D8:
00aaf1 940e b625 	CALL __PUTDZ20
00aaf3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1D9:
00aaf4 940e b4ec 	CALL __LSLW2
00aaf6 0fae      	ADD  R26,R30
00aaf7 1fbf      	ADC  R27,R31
00aaf8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1DA:
00aaf9 01fe      	MOVW R30,R28
00aafa 967e      	ADIW R30,30
00aafb 93fa      	ST   -Y,R31
00aafc 93ea      	ST   -Y,R30
00aafd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1DB:
00aafe 01fe      	MOVW R30,R28
00aaff 9676      	ADIW R30,22
00ab00 93fa      	ST   -Y,R31
00ab01 93ea      	ST   -Y,R30
00ab02 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1DC:
00ab03 01f8      	MOVW R30,R16
00ab04 81ae      	LDD  R26,Y+6
00ab05 81bf      	LDD  R27,Y+6+1
00ab06 940e b4ec 	CALL __LSLW2
00ab08 940c a019 	JMP SUBOPT_0x19
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1DD:
00ab0a e0e0      	LDI  R30,LOW(0)
00ab0b 83e8      	ST   Y,R30
00ab0c 83e9      	STD  Y+1,R30
00ab0d 83ea      	STD  Y+2,R30
00ab0e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x1DE:
00ab0f 940e b4ec 	CALL __LSLW2
00ab11 940c a019 	JMP SUBOPT_0x19
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1DF:
00ab13 d8a0      	RCALL SUBOPT_0xA1
00ab14 940e b522 	CALL __CWD1
00ab16 940e b35c 	CALL __CDF1
00ab18 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E0:
00ab19 01f5      	MOVW R30,R10
00ab1a e0aa      	LDI  R26,LOW(10)
00ab1b e0b0      	LDI  R27,HIGH(10)
00ab1c 940e b53b 	CALL __MULW12U
00ab1e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E1:
00ab1f 01f6      	MOVW R30,R12
00ab20 e0aa      	LDI  R26,LOW(10)
00ab21 e0b0      	LDI  R27,HIGH(10)
00ab22 940e b53b 	CALL __MULW12U
00ab24 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1E2:
00ab25 01df      	MOVW R26,R30
00ab26 940e b5fa 	CALL __GETD1P
00ab28 81ac      	LDD  R26,Y+4
00ab29 81bd      	LDD  R27,Y+4+1
00ab2a 940e b605 	CALL __PUTDP1
00ab2c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E3:
00ab2d 93e0 1483 	STS  _batteryVolt,R30
00ab2f 93f0 1484 	STS  _batteryVolt+1,R31
00ab31 9360 1485 	STS  _batteryVolt+2,R22
00ab33 9370 1486 	STS  _batteryVolt+3,R23
00ab35 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E4:
                +
00ab36 91e0 136b+LDS R30 , _env_config + ( 6 )
00ab38 91f0 136c+LDS R31 , _env_config + ( 6 ) + 1
00ab3a 9160 136d+LDS R22 , _env_config + ( 6 ) + 2
00ab3c 9170 136e+LDS R23 , _env_config + ( 6 ) + 3
                 	__GETD1MN _env_config,6
00ab3e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E5:
00ab3f 70e4      	ANDI R30,LOW(0x4)
00ab40 e0f0      	LDI  R31,0
00ab41 940e b4f5 	CALL __ASRW2
00ab43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x1E6:
00ab44 91e0 146b 	LDS  R30,_sdFreeSpace
00ab46 91f0 146c 	LDS  R31,_sdFreeSpace+1
00ab48 9160 146d 	LDS  R22,_sdFreeSpace+2
00ab4a 9170 146e 	LDS  R23,_sdFreeSpace+3
00ab4c 940e b67e 	CALL __CPD10
00ab4e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E7:
00ab4f 81e8      	LD   R30,Y
00ab50 81f9      	LDD  R31,Y+1
00ab51 59e1      	SUBI R30,LOW(-_sensorStatus)
00ab52 4efb      	SBCI R31,HIGH(-_sensorStatus)
00ab53 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E8:
00ab54 81ea      	LDD  R30,Y+2
00ab55 81fb      	LDD  R31,Y+2+1
00ab56 51eb      	SUBI R30,LOW(-_flag_lower_S00F0005000)
00ab57 4efa      	SBCI R31,HIGH(-_flag_lower_S00F0005000)
00ab58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E9:
00ab59 81ea      	LDD  R30,Y+2
00ab5a 81fb      	LDD  R31,Y+2+1
00ab5b eda1      	LDI  R26,LOW(_t_S00F0005000)
00ab5c e1b5      	LDI  R27,HIGH(_t_S00F0005000)
00ab5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1EA:
00ab5e 940e b4ec 	CALL __LSLW2
00ab60 940c a024 	JMP SUBOPT_0x1B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x1EB:
00ab62 81aa      	LDD  R26,Y+2
00ab63 81bb      	LDD  R27,Y+2+1
00ab64 58ac      	SUBI R26,LOW(-_dataStatus)
00ab65 4ebb      	SBCI R27,HIGH(-_dataStatus)
00ab66 91ec      	LD   R30,X
00ab67 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1EC:
00ab68 81ea      	LDD  R30,Y+2
00ab69 81fb      	LDD  R31,Y+2+1
00ab6a 51e6      	SUBI R30,LOW(-_flag_upper_S00F0005000)
00ab6b 4efa      	SBCI R31,HIGH(-_flag_upper_S00F0005000)
00ab6c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x1ED:
00ab6d 81aa      	LDD  R26,Y+2
00ab6e 81bb      	LDD  R27,Y+2+1
00ab6f 01cd      	MOVW R24,R26
00ab70 916d      	LD   R22,X+
00ab71 917c      	LD   R23,X
00ab72 e0e4      	LDI  R30,LOW(4)
00ab73 e0f0      	LDI  R31,HIGH(4)
00ab74 1be0      	SUB  R30,R16
00ab75 0bf1      	SBC  R31,R17
00ab76 e0a1      	LDI  R26,LOW(1)
00ab77 e0b0      	LDI  R27,HIGH(1)
00ab78 940e b4c7 	CALL __LSLW12
00ab7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1EE:
00ab7b 91a0 1673 	LDS  R26,_last_wr_eventQ
00ab7d 91b0 1674 	LDS  R27,_last_wr_eventQ+1
00ab7f e0e6      	LDI  R30,LOW(6)
00ab80 940e b563 	CALL __MULB1W2U
00ab82 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1EF:
00ab83 91a0 1675 	LDS  R26,_last_rd_eventQ
00ab85 91b0 1676 	LDS  R27,_last_rd_eventQ+1
00ab87 e0e6      	LDI  R30,LOW(6)
00ab88 940e b563 	CALL __MULB1W2U
00ab8a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F0:
00ab8b 81e0      	LD   R30,Z
00ab8c 81a8      	LD   R26,Y
00ab8d 81b9      	LDD  R27,Y+1
00ab8e 93ec      	ST   X,R30
00ab8f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F1:
                +
00ab90 e0a3     +LDI R26 , LOW ( 0x3 )
00ab91 e0b0     +LDI R27 , HIGH ( 0x3 )
00ab92 e080     +LDI R24 , BYTE3 ( 0x3 )
00ab93 e090     +LDI R25 , BYTE4 ( 0x3 )
                 	__GETD2N 0x3
00ab94 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F2:
00ab95 81a8      	LD   R26,Y
00ab96 81b9      	LDD  R27,Y+1
00ab97 93ec      	ST   X,R30
00ab98 e0e0      	LDI  R30,LOW(0)
00ab99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F3:
00ab9a 81a8      	LD   R26,Y
00ab9b 81b9      	LDD  R27,Y+1
00ab9c e0e0      	LDI  R30,LOW(0)
00ab9d 93ec      	ST   X,R30
00ab9e e0e1      	LDI  R30,LOW(1)
00ab9f e0f0      	LDI  R31,HIGH(1)
00aba0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1F4:
00aba1 81ea      	LDD  R30,Y+2
00aba2 81fb      	LDD  R31,Y+2+1
00aba3 58e4      	SUBI R30,LOW(-_dinStatus)
00aba4 4efb      	SBCI R31,HIGH(-_dinStatus)
00aba5 81a0      	LD   R26,Z
00aba6 81ea      	LDD  R30,Y+2
00aba7 81fb      	LDD  R31,Y+2+1
00aba8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F5:
00aba9 81ea      	LDD  R30,Y+2
00abaa 81fb      	LDD  R31,Y+2+1
00abab 55e9      	SUBI R30,LOW(-_t_flag_S0110006000)
00abac 4ef9      	SBCI R31,HIGH(-_t_flag_S0110006000)
00abad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F6:
00abae 81ea      	LDD  R30,Y+2
00abaf 81fb      	LDD  R31,Y+2+1
00abb0 58e4      	SUBI R30,LOW(-_dinStatus)
00abb1 4efb      	SBCI R31,HIGH(-_dinStatus)
00abb2 81e0      	LD   R30,Z
00abb3 93ec      	ST   X,R30
00abb4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F7:
00abb5 93ba      	ST   -Y,R27
00abb6 93aa      	ST   -Y,R26
00abb7 81ea      	LDD  R30,Y+2
00abb8 81fb      	LDD  R31,Y+2+1
00abb9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F8:
00abba 81ea      	LDD  R30,Y+2
00abbb 81fb      	LDD  R31,Y+2+1
00abbc 59e1      	SUBI R30,LOW(-_sensorStatus)
00abbd 4efb      	SBCI R31,HIGH(-_sensorStatus)
00abbe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F9:
00abbf 81ea      	LDD  R30,Y+2
00abc0 81fb      	LDD  R31,Y+2+1
00abc1 54e1      	SUBI R30,LOW(-_t_flag_S0110007000)
00abc2 4ef9      	SBCI R31,HIGH(-_t_flag_S0110007000)
00abc3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1FA:
00abc4 81ea      	LDD  R30,Y+2
00abc5 81fb      	LDD  R31,Y+2+1
00abc6 eaab      	LDI  R26,LOW(_t_S0110007000)
00abc7 e1b6      	LDI  R27,HIGH(_t_S0110007000)
00abc8 cf95      	RJMP SUBOPT_0x1EA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1FB:
00abc9 81ea      	LDD  R30,Y+2
00abca 81fb      	LDD  R31,Y+2+1
00abcb 52e3      	SUBI R30,LOW(-_t_flag_S0110008000)
00abcc 4ef9      	SBCI R31,HIGH(-_t_flag_S0110008000)
00abcd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1FC:
00abce 81e0      	LD   R30,Z
00abcf 27ff      	CLR  R31
00abd0 2766      	CLR  R22
00abd1 2777      	CLR  R23
00abd2 940c a038 	JMP SUBOPT_0x1F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1FD:
00abd4 85ec      	LDD  R30,Y+12
00abd5 85fd      	LDD  R31,Y+12+1
00abd6 93fa      	ST   -Y,R31
00abd7 93ea      	ST   -Y,R30
00abd8 940e a13a 	CALL SUBOPT_0x42
00abda 940e 98a2 	CALL _f_lseek
00abdc 2f1e      	MOV  R17,R30
00abdd 3010      	CPI  R17,0
00abde 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1FE:
00abdf 2fa1      	MOV  R26,R17
00abe0 940e 7020 	CALL _error
00abe2 efef      	LDI  R30,LOW(65535)
00abe3 efff      	LDI  R31,HIGH(65535)
00abe4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1FF:
00abe5 940e b62a 	CALL __PUTPARD1
00abe7 01f9      	MOVW R30,R18
00abe8 c93b      	RJMP SUBOPT_0xDD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x200:
00abe9 93fa      	ST   -Y,R31
00abea 93ea      	ST   -Y,R30
00abeb 01fe      	MOVW R30,R28
00abec 9633      	ADIW R30,3
00abed 93fa      	ST   -Y,R31
00abee 93ea      	ST   -Y,R30
00abef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x201:
00abf0 940e b62a 	CALL __PUTPARD1
00abf2 e1e6      	LDI  R30,LOW(_root_path)
00abf3 e1f9      	LDI  R31,HIGH(_root_path)
00abf4 c92f      	RJMP SUBOPT_0xDD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x202:
00abf5 940e 7020 	CALL _error
00abf7 e0e0      	LDI  R30,LOW(0)
00abf8 93e0 146b 	STS  _sdFreeSpace,R30
00abfa 93e0 146c 	STS  _sdFreeSpace+1,R30
00abfc 93e0 146d 	STS  _sdFreeSpace+2,R30
00abfe 93e0 146e 	STS  _sdFreeSpace+3,R30
00ac00 efef      	LDI  R30,LOW(65535)
00ac01 efff      	LDI  R31,HIGH(65535)
00ac02 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x203:
00ac03 81e2      	LDD  R30,Z+2
00ac04 e0f0      	LDI  R31,0
00ac05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x204:
                +
00ac06 81a9     +LDD R26 , Y + 1
00ac07 81ba     +LDD R27 , Y + 1 + 1
00ac08 818b     +LDD R24 , Y + 1 + 2
00ac09 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
00ac0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x205:
00ac0b 940e b522 	CALL __CWD1
00ac0d 940e b543 	CALL __MULD12U
00ac0f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x206:
                +
00ac10 ebec     +LDI R30 , LOW ( 2 * _0x260000 + ( 798 ) )
00ac11 e4fb     +LDI R31 , HIGH ( 2 * _0x260000 + ( 798 ) )
00ac12 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 798 ) )
00ac13 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 798 ) )
                 	__POINTD1FN _0x260000,798
00ac14 cfdb      	RJMP SUBOPT_0x201
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x207:
00ac15 93fa      	ST   -Y,R31
00ac16 93ea      	ST   -Y,R30
00ac17 01fe      	MOVW R30,R28
00ac18 9634      	ADIW R30,4
00ac19 93fa      	ST   -Y,R31
00ac1a 93ea      	ST   -Y,R30
00ac1b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x208:
00ac1c 89ee      	LDD  R30,Y+22
00ac1d 89ff      	LDD  R31,Y+22+1
00ac1e 93fa      	ST   -Y,R31
00ac1f 93ea      	ST   -Y,R30
00ac20 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x209:
00ac21 01de      	MOVW R26,R28
00ac22 961a      	ADIW R26,10
00ac23 940e 749c 	CALL _LOG_getLastInsert
00ac25 018f      	MOVW R16,R30
00ac26 2311      	TST  R17
00ac27 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20A:
00ac28 940e a118 	CALL SUBOPT_0x3E
00ac2a 940e b62a 	CALL __PUTPARD1
00ac2c 940c a0f3 	JMP SUBOPT_0x38
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20B:
00ac2e 940e 752c 	CALL _index2Addr
00ac30 940c a376 	JMP SUBOPT_0x95
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20C:
00ac32 940e a3b9 	CALL SUBOPT_0xA2
00ac34 940e b62a 	CALL __PUTPARD1
00ac36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20D:
00ac37 940e a3b9 	CALL SUBOPT_0xA2
00ac39 940c a47c 	JMP SUBOPT_0xC0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x20E:
00ac3b 93fa      	ST   -Y,R31
00ac3c 93ea      	ST   -Y,R30
00ac3d 940c a24a 	JMP SUBOPT_0x69
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x20F:
00ac3f 940e 7040 	CALL _SD_writeData
00ac41 018f      	MOVW R16,R30
00ac42 2311      	TST  R17
00ac43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x210:
00ac44 940e a3b9 	CALL SUBOPT_0xA2
                +
00ac46 5feb     +SUBI R30 , LOW ( - 5 )
00ac47 4fff     +SBCI R31 , HIGH ( - 5 )
00ac48 4f6f     +SBCI R22 , BYTE3 ( - 5 )
00ac49 4f7f     +SBCI R23 , BYTE4 ( - 5 )
                 	__ADDD1N 5
00ac4a 940e b62a 	CALL __PUTPARD1
00ac4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x211:
00ac4d 940e a3b9 	CALL SUBOPT_0xA2
                +
00ac4f 5fe9     +SUBI R30 , LOW ( - 7 )
00ac50 4fff     +SBCI R31 , HIGH ( - 7 )
00ac51 4f6f     +SBCI R22 , BYTE3 ( - 7 )
00ac52 4f7f     +SBCI R23 , BYTE4 ( - 7 )
                 	__ADDD1N 7
00ac53 940e b62a 	CALL __PUTPARD1
00ac55 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x212:
00ac56 940e a486 	CALL SUBOPT_0xC2
00ac58 940e a3e0 	CALL SUBOPT_0xA9
00ac5a de78      	RCALL SUBOPT_0x1D2
00ac5b 01df      	MOVW R26,R30
00ac5c 01cb      	MOVW R24,R22
00ac5d 940e 74bf 	CALL _LOG_setLastInsert
00ac5f 018f      	MOVW R16,R30
00ac60 2311      	TST  R17
00ac61 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x213:
00ac62 8de8      	LDD  R30,Y+24
00ac63 8df9      	LDD  R31,Y+24+1
00ac64 93fa      	ST   -Y,R31
00ac65 93ea      	ST   -Y,R30
00ac66 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x214:
00ac67 01de      	MOVW R26,R28
00ac68 961e      	ADIW R26,14
00ac69 940e 749c 	CALL _LOG_getLastInsert
00ac6b 018f      	MOVW R16,R30
00ac6c 2311      	TST  R17
00ac6d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x215:
00ac6e 01de      	MOVW R26,R28
00ac6f 961a      	ADIW R26,10
00ac70 940e 74e4 	CALL _LOG_getLastSend
00ac72 018f      	MOVW R16,R30
00ac73 2311      	TST  R17
00ac74 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x216:
                +
00ac75 e1ea     +LDI R30 , LOW ( 2 * _0x280000 + ( 370 ) )
00ac76 e4ff     +LDI R31 , HIGH ( 2 * _0x280000 + ( 370 ) )
00ac77 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 370 ) )
00ac78 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 370 ) )
                 	__POINTD1FN _0x280000,370
00ac79 940c a2c2 	JMP SUBOPT_0x7B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x217:
00ac7b 940e b62a 	CALL __PUTPARD1
00ac7d 940e a4a9 	CALL SUBOPT_0xC9
00ac7f 940c a038 	JMP SUBOPT_0x1F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x218:
00ac81 940e a497 	CALL SUBOPT_0xC6
00ac83 940e a492 	CALL SUBOPT_0xC5
00ac85 940e b695 	CALL __CPD21
00ac87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x219:
00ac88 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
00ac89 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
00ac8a 93fa      	ST   -Y,R31
00ac8b 93ea      	ST   -Y,R30
00ac8c e0e1      	LDI  R30,LOW(1)
00ac8d 93ea      	ST   -Y,R30
00ac8e ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00ac8f e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00ac90 93fa      	ST   -Y,R31
00ac91 93ea      	ST   -Y,R30
00ac92 e1a0      	LDI  R26,LOW(16)
00ac93 e0b0      	LDI  R27,0
00ac94 940e 753e 	CALL _LOG_createFile
00ac96 018f      	MOVW R16,R30
00ac97 2311      	TST  R17
00ac98 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x21A:
00ac99 940e 7092 	CALL _SD_readData
00ac9b 018f      	MOVW R16,R30
00ac9c 2311      	TST  R17
00ac9d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x21B:
00ac9e 89ea      	LDD  R30,Y+18
00ac9f 89fb      	LDD  R31,Y+18+1
00aca0 93fa      	ST   -Y,R31
00aca1 93ea      	ST   -Y,R30
00aca2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21C:
00aca3 940e a118 	CALL SUBOPT_0x3E
00aca5 940e b62a 	CALL __PUTPARD1
00aca7 940c 9fa2 	JMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x21D:
00aca9 940e a3b9 	CALL SUBOPT_0xA2
                +
00acab 5fe6     +SUBI R30 , LOW ( - 10 )
00acac 4fff     +SBCI R31 , HIGH ( - 10 )
00acad 4f6f     +SBCI R22 , BYTE3 ( - 10 )
00acae 4f7f     +SBCI R23 , BYTE4 ( - 10 )
                 	__ADDD1N 10
00acaf 940e b62a 	CALL __PUTPARD1
00acb1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x21E:
00acb2 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
00acb3 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
00acb4 93fa      	ST   -Y,R31
00acb5 93ea      	ST   -Y,R30
00acb6 e0e1      	LDI  R30,LOW(1)
00acb7 93ea      	ST   -Y,R30
00acb8 ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00acb9 e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00acba 93fa      	ST   -Y,R31
00acbb 93ea      	ST   -Y,R30
00acbc e1a0      	LDI  R26,LOW(16)
00acbd e0b0      	LDI  R27,0
00acbe 940e 753e 	CALL _LOG_createFile
00acc0 018f      	MOVW R16,R30
00acc1 2311      	TST  R17
00acc2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x21F:
00acc3 81ec      	LDD  R30,Y+4
00acc4 81fd      	LDD  R31,Y+4+1
00acc5 93fa      	ST   -Y,R31
00acc6 93ea      	ST   -Y,R30
00acc7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x220:
                +
00acc8 e0e0     +LDI R30 , LOW ( 0x0 )
00acc9 e0f0     +LDI R31 , HIGH ( 0x0 )
00acca e060     +LDI R22 , BYTE3 ( 0x0 )
00accb e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00accc 940e b62a 	CALL __PUTPARD1
00acce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x221:
                +
00accf e0e4     +LDI R30 , LOW ( 0x4 )
00acd0 e0f0     +LDI R31 , HIGH ( 0x4 )
00acd1 e060     +LDI R22 , BYTE3 ( 0x4 )
00acd2 e070     +LDI R23 , BYTE4 ( 0x4 )
                 	__GETD1N 0x4
00acd3 940e b62a 	CALL __PUTPARD1
00acd5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x222:
00acd6 940e b62a 	CALL __PUTPARD1
                +
00acd8 01fe     +MOVW R30 , R28
00acd9 5de5     +SUBI R30 , LOW ( - 555 )
00acda 4ffd     +SBCI R31 , HIGH ( - 555 )
00acdb 9001     +LD R0 , Z +
00acdc 81f0     +LD R31 , Z
00acdd 2de0     +MOV R30 , R0
                 	__GETW1SX 555
00acde 940c a524 	JMP SUBOPT_0xDD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x223:
                +
00ace0 01fe     +MOVW R30 , R28
00ace1 5dec     +SUBI R30 , LOW ( - 548 )
00ace2 4ffd     +SBCI R31 , HIGH ( - 548 )
00ace3 9001     +LD R0 , Z +
00ace4 81f0     +LD R31 , Z
00ace5 2de0     +MOV R30 , R0
                 	__GETW1SX 548
00ace6 93fa      	ST   -Y,R31
00ace7 93ea      	ST   -Y,R30
                +
00ace8 01de     +MOVW R26 , R28
00ace9 5dac     +SUBI R26 , LOW ( - 548 )
00acea 4fbd     +SBCI R27 , HIGH ( - 548 )
00aceb 900d     +LD R0 , X +
00acec 91bc     +LD R27 , X
00aced 2da0     +MOV R26 , R0
                 	__GETW2SX 548
00acee 940c 7d2a 	JMP  _print_payload
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x224:
00acf0 ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00acf1 e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00acf2 93fa      	ST   -Y,R31
00acf3 93ea      	ST   -Y,R30
00acf4 e1a0      	LDI  R26,LOW(16)
00acf5 e0b0      	LDI  R27,0
00acf6 940e 753e 	CALL _LOG_createFile
00acf8 018f      	MOVW R16,R30
00acf9 2311      	TST  R17
00acfa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x225:
                +
00acfb e2e4     +LDI R30 , LOW ( 2 * _0x280000 + ( 1916 ) )
00acfc e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1916 ) )
00acfd e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1916 ) )
00acfe e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1916 ) )
                 	__POINTD1FN _0x280000,1916
00acff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x226:
00ad00 940e b62a 	CALL __PUTPARD1
00ad02 ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
00ad03 e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
00ad04 940c a524 	JMP SUBOPT_0xDD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x227:
00ad06 940e b522 	CALL __CWD1
00ad08 940e b62a 	CALL __PUTPARD1
00ad0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x228:
00ad0b 01df      	MOVW R26,R30
00ad0c 940e b5fa 	CALL __GETD1P
00ad0e 81ae      	LDD  R26,Y+6
00ad0f 81bf      	LDD  R27,Y+6+1
00ad10 940e b605 	CALL __PUTDP1
00ad12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x229:
00ad13 e0ab      	LDI  R26,LOW(11)
00ad14 9f1a      	MUL  R17,R26
00ad15 01f0      	MOVW R30,R0
00ad16 55e9      	SUBI R30,LOW(-_dataLogQueue)
00ad17 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
00ad18 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:28 WORDS
                 SUBOPT_0x22A:
00ad19 e0a0      	LDI  R26,LOW(0)
00ad1a 83a0      	STD  Z+0,R26
00ad1b e0ab      	LDI  R26,LOW(11)
00ad1c 9f1a      	MUL  R17,R26
00ad1d 01f0      	MOVW R30,R0
                +
00ad1e 55e8     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
00ad1f 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
                +
00ad20 e0a0     +LDI R26 , LOW ( 0x0 )
00ad21 e0b0     +LDI R27 , HIGH ( 0x0 )
00ad22 e080     +LDI R24 , BYTE3 ( 0x0 )
00ad23 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00ad24 ddcc      	RCALL SUBOPT_0x1D8
00ad25 e0ab      	LDI  R26,LOW(11)
00ad26 9f1a      	MUL  R17,R26
00ad27 01f0      	MOVW R30,R0
                +
00ad28 55e4     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
00ad29 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
00ad2a e0a0      	LDI  R26,LOW(0)
00ad2b e0b0      	LDI  R27,HIGH(0)
00ad2c 83a0      	STD  Z+0,R26
00ad2d 83b1      	STD  Z+1,R27
00ad2e e0ab      	LDI  R26,LOW(11)
00ad2f 9f1a      	MUL  R17,R26
00ad30 01f0      	MOVW R30,R0
                +
00ad31 55e2     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
00ad32 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
                +
00ad33 e0a0     +LDI R26 , LOW ( 0x0 )
00ad34 e0b0     +LDI R27 , HIGH ( 0x0 )
00ad35 e080     +LDI R24 , BYTE3 ( 0x0 )
00ad36 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00ad37 cdb9      	RJMP SUBOPT_0x1D8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x22B:
                +
00ad38 e0a7     +LDI R26 , 7
00ad39 9fa0     +MUL R26 , R16
00ad3a 01f0     +MOVW R30 , R0
00ad3b 9fa1     +MUL R26 , R17
00ad3c 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,7
00ad3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x22C:
00ad3e e0a7      	LDI  R26,LOW(7)
00ad3f 9f1a      	MUL  R17,R26
00ad40 01f0      	MOVW R30,R0
00ad41 5ee6      	SUBI R30,LOW(-_eventLogQueue)
00ad42 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
00ad43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x22D:
00ad44 e0a0      	LDI  R26,LOW(0)
00ad45 83a0      	STD  Z+0,R26
00ad46 e0a7      	LDI  R26,LOW(7)
00ad47 9f1a      	MUL  R17,R26
00ad48 01f0      	MOVW R30,R0
00ad49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x22E:
                +
00ad4a 5ee5     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
00ad4b 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
                +
00ad4c e0a0     +LDI R26 , LOW ( 0x0 )
00ad4d e0b0     +LDI R27 , HIGH ( 0x0 )
00ad4e e080     +LDI R24 , BYTE3 ( 0x0 )
00ad4f e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00ad50 dda0      	RCALL SUBOPT_0x1D8
00ad51 e0a7      	LDI  R26,LOW(7)
00ad52 9f1a      	MUL  R17,R26
00ad53 01f0      	MOVW R30,R0
                +
00ad54 5ee1     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
00ad55 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
00ad56 cfed      	RJMP SUBOPT_0x22D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x22F:
                +
00ad57 58e9     +SUBI R30 , LOW ( - _rxPackage3 - ( 8 ) )
00ad58 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 8 ) )
                 	__ADDW1MN _rxPackage3,8
00ad59 81e0      	LD   R30,Z
00ad5a 93ec      	ST   X,R30
00ad5b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x230:
00ad5c 01de      	MOVW R26,R28
00ad5d 9614      	ADIW R26,4
00ad5e 940e 818a 	CALL _atoi
00ad60 019f      	MOVW R18,R30
                +
00ad61 e7e4     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 26 ) )
00ad62 e5ff     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 26 ) )
00ad63 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 26 ) )
00ad64 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 26 ) )
                 	__POINTD1FN _0x2E0000,26
00ad65 ce7f      	RJMP SUBOPT_0x1FF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x231:
                +
00ad66 e7e1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 23 ) )
00ad67 e5ff     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 23 ) )
00ad68 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 23 ) )
00ad69 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 23 ) )
                 	__POINTD1FN _0x2E0000,23
00ad6a 940c 9f66 	JMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x232:
00ad6c 940e b62a 	CALL __PUTPARD1
00ad6e 940c a38d 	JMP SUBOPT_0x99
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x233:
00ad70 01f9      	MOVW R30,R18
00ad71 9731      	SBIW R30,1
00ad72 e1aa      	LDI  R26,LOW(26)
00ad73 e0b0      	LDI  R27,HIGH(26)
00ad74 940e b53b 	CALL __MULW12U
00ad76 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x234:
00ad77 e0e0      	LDI  R30,LOW(0)
00ad78 93ea      	ST   -Y,R30
00ad79 e0a6      	LDI  R26,LOW(6)
00ad7a cd64      	RJMP SUBOPT_0x1D4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x235:
00ad7b 01de      	MOVW R26,R28
00ad7c 961a      	ADIW R26,10
00ad7d 0fae      	ADD  R26,R30
00ad7e 1fbf      	ADC  R27,R31
00ad7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x236:
00ad80 940e 818a 	CALL _atoi
00ad82 019f      	MOVW R18,R30
                +
00ad83 9320 154d+STS _sensorCalConfig + ( 2 ) , R18
00ad85 9330 154e+STS _sensorCalConfig + ( 2 ) + 1 , R19
                 	__PUTWMRN _sensorCalConfig,2,18,19
                +
00ad87 e7e4     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 26 ) )
00ad88 e5ff     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 26 ) )
00ad89 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 26 ) )
00ad8a e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 26 ) )
                 	__POINTD1FN _0x2E0000,26
00ad8b ce59      	RJMP SUBOPT_0x1FF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x237:
00ad8c e4eb      	LDI  R30,LOW(_sensorCalConfig)
00ad8d e1f5      	LDI  R31,HIGH(_sensorCalConfig)
00ad8e e0ac      	LDI  R26,12
00ad8f 940e b634 	CALL __PUTPARL
                +
00ad91 91e0 1557+LDS R30 , _pfCalibrate + ( 0 )
00ad93 91f0 1558+LDS R31 , _pfCalibrate + ( 0 ) + 1
00ad95 9160 1559+LDS R22 , _pfCalibrate + ( 0 ) + 2
00ad97 bf6c     +OUT EIND , R22
00ad98 9519     +EICALL
                 	__CALL1MN _pfCalibrate,0
00ad99 940c a238 	JMP SUBOPT_0x64
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x238:
00ad9b 0fae      	ADD  R26,R30
00ad9c 1fbf      	ADC  R27,R31
00ad9d cfb9      	RJMP SUBOPT_0x22F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x239:
00ad9e e0e0      	LDI  R30,LOW(0)
00ad9f a3ea      	STD  Y+34,R30
00ada0 01de      	MOVW R26,R28
00ada1 965e      	ADIW R26,30
00ada2 940c 81c1 	JMP  _atol
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x23A:
00ada4 01de      	MOVW R26,R28
00ada5 965e      	ADIW R26,30
00ada6 0fae      	ADD  R26,R30
00ada7 1fbf      	ADC  R27,R31
00ada8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x23B:
00ada9 e0e0      	LDI  R30,LOW(0)
00adaa a3e8      	STD  Y+32,R30
00adab 01de      	MOVW R26,R28
00adac 965e      	ADIW R26,30
00adad 940c 81c1 	JMP  _atol
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x23C:
                +
00adaf 87e8     +STD Y + 8 , R30
00adb0 87f9     +STD Y + 8 + 1 , R31
00adb1 876a     +STD Y + 8 + 2 , R22
00adb2 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00adb3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23D:
                +
00adb4 8be8     +STD Y + 16 , R30
00adb5 8bf9     +STD Y + 16 + 1 , R31
00adb6 8b6a     +STD Y + 16 + 2 , R22
00adb7 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00adb8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x23E:
                +
00adb9 8bec     +STD Y + 20 , R30
00adba 8bfd     +STD Y + 20 + 1 , R31
00adbb 8b6e     +STD Y + 20 + 2 , R22
00adbc 8b7f     +STD Y + 20 + 3 , R23
                 	__PUTD1S 20
00adbd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23F:
                +
00adbe 8fe8     +STD Y + 24 , R30
00adbf 8ff9     +STD Y + 24 + 1 , R31
00adc0 8f6a     +STD Y + 24 + 2 , R22
00adc1 8f7b     +STD Y + 24 + 3 , R23
                 	__PUTD1S 24
00adc2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x240:
                +
00adc3 e8e6     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 556 ) )
00adc4 e6f1     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 556 ) )
00adc5 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 556 ) )
00adc6 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 556 ) )
                 	__POINTD1FN _0x2E0000,556
00adc7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x241:
00adc8 e0e9      	LDI  R30,LOW(9)
00adc9 e0f0      	LDI  R31,HIGH(9)
00adca 93e0 10f4 	STS  _hwCalId,R30
00adcc 93f0 10f5 	STS  _hwCalId+1,R31
00adce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x242:
00adcf 2fa1      	MOV  R26,R17
00add0 27bb      	CLR  R27
00add1 e0e3      	LDI  R30,LOW(3)
00add2 e0f0      	LDI  R31,HIGH(3)
00add3 940e b5ca 	CALL __MODW21
00add5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x243:
00add6 2fa1      	MOV  R26,R17
00add7 e0b0      	LDI  R27,0
00add8 e0e3      	LDI  R30,LOW(3)
00add9 e0f0      	LDI  R31,HIGH(3)
00adda 940e b594 	CALL __DIVW21
00addc 57ef      	SUBI R30,LOW(-_DEVICE_SERIAL)
00addd 4ffa      	SBCI R31,HIGH(-_DEVICE_SERIAL)
00adde 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x244:
00addf 01de      	MOVW R26,R28
00ade0 9611      	ADIW R26,1
00ade1 0fae      	ADD  R26,R30
00ade2 1fbf      	ADC  R27,R31
00ade3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x245:
00ade4 91ac      	LD   R26,X
00ade5 940e 9edb 	CALL _isdigit
00ade7 30e0      	CPI  R30,0
00ade8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x246:
00ade9 01bf      	MOVW R22,R30
00adea 01df      	MOVW R26,R30
00adeb 940e b651 	CALL __EEPROMRDB
00aded 2e0e      	MOV  R0,R30
00adee 940c a38d 	JMP SUBOPT_0x99
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x247:
                +
00adf0 eae8     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 1102 ) )
00adf1 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 1102 ) )
00adf2 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 1102 ) )
00adf3 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 1102 ) )
                 	__POINTD1FN _0x2E0000,1102
00adf4 940e b62a 	CALL __PUTPARD1
00adf6 2fa1      	MOV  R26,R17
00adf7 e0b0      	LDI  R27,0
00adf8 57af      	SUBI R26,LOW(-_DEVICE_SERIAL)
00adf9 4fba      	SBCI R27,HIGH(-_DEVICE_SERIAL)
00adfa c89b      	RJMP SUBOPT_0x11D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x248:
00adfb e6ef      	LDI  R30,LOW(_rxPackage3)
00adfc e0fd      	LDI  R31,HIGH(_rxPackage3)
00adfd 93fa      	ST   -Y,R31
00adfe 93ea      	ST   -Y,R30
00adff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x249:
00ae00 940e b62a 	CALL __PUTPARD1
00ae02 e0a7      	LDI  R26,LOW(7)
00ae03 940e 8526 	CALL _strncmpf
00ae05 30e0      	CPI  R30,0
00ae06 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24A:
00ae07 940e b499 	CALL __ADDW2R15
00ae09 940e b5fa 	CALL __GETD1P
00ae0b 940e b62a 	CALL __PUTPARD1
00ae0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24B:
00ae0e 940e b62a 	CALL __PUTPARD1
00ae10 01da      	MOVW R26,R20
00ae11 91ec      	LD   R30,X
00ae12 940c a073 	JMP SUBOPT_0x27
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24C:
                +
00ae14 eeed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 147 ) )
00ae15 e5ff     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 147 ) )
00ae16 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 147 ) )
00ae17 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 147 ) )
                 	__POINTD1FN _0x2E0000,147
00ae18 940c 9f66 	JMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24D:
                +
00ae1a eeec     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 1170 ) )
00ae1b e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 1170 ) )
00ae1c e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 1170 ) )
00ae1d e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 1170 ) )
                 	__POINTD1FN _0x2E0000,1170
00ae1e 940c 9f66 	JMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24E:
00ae20 85ec      	LDD  R30,Y+12
00ae21 85fd      	LDD  R31,Y+12+1
00ae22 93fa      	ST   -Y,R31
00ae23 93ea      	ST   -Y,R30
00ae24 85ac      	LDD  R26,Y+12
00ae25 85bd      	LDD  R27,Y+12+1
00ae26 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x24F:
00ae27 91e0 1a17 	LDS  R30,_n
00ae29 91f0 1a18 	LDS  R31,_n+1
00ae2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x250:
00ae2c 01f9      	MOVW R30,R18
00ae2d 940e b4e8 	CALL __LSLW4
00ae2f 5ee7      	SUBI R30,LOW(-_a)
00ae30 4ef5      	SBCI R31,HIGH(-_a)
00ae31 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x251:
00ae32 01df      	MOVW R26,R30
00ae33 01f8      	MOVW R30,R16
00ae34 ccda      	RJMP SUBOPT_0x1DE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x252:
00ae35 85ea      	LDD  R30,Y+10
00ae36 85fb      	LDD  R31,Y+10+1
00ae37 940e b4e8 	CALL __LSLW4
00ae39 5ee7      	SUBI R30,LOW(-_a)
00ae3a 4ef5      	SBCI R31,HIGH(-_a)
00ae3b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x253:
00ae3c 01df      	MOVW R26,R30
00ae3d 01f9      	MOVW R30,R18
00ae3e ccd0      	RJMP SUBOPT_0x1DE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x254:
00ae3f 01df      	MOVW R26,R30
00ae40 01f9      	MOVW R30,R18
00ae41 cc77      	RJMP SUBOPT_0x1CD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x255:
00ae42 01f8      	MOVW R30,R16
00ae43 940e b4e8 	CALL __LSLW4
00ae45 5ee7      	SUBI R30,LOW(-_a)
00ae46 4ef5      	SBCI R31,HIGH(-_a)
00ae47 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x256:
                +
00ae48 e0e0     +LDI R30 , LOW ( 0x3F800000 )
00ae49 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00ae4a e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00ae4b e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00ae4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x257:
                +
00ae4d e0a0     +LDI R26 , LOW ( 0x3F800000 )
00ae4e e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00ae4f e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00ae50 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00ae51 cc9f      	RJMP SUBOPT_0x1D8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x258:
00ae52 89ac      	LDD  R26,Y+20
00ae53 89bd      	LDD  R27,Y+20+1
00ae54 9618      	ADIW R26,8
00ae55 e0e3      	LDI  R30,LOW(3)
00ae56 e0f0      	LDI  R31,HIGH(3)
00ae57 93ed      	ST   X+,R30
00ae58 93fc      	ST   X,R31
00ae59 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x259:
00ae5a 91e0 0125 	LDS  R30,293
00ae5c 2ffe      	MOV  R31,R30
00ae5d e0e0      	LDI  R30,0
00ae5e 01df      	MOVW R26,R30
00ae5f 91e0 0124 	LDS  R30,292
00ae61 caf0      	RJMP SUBOPT_0x190
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x25A:
00ae62 e0e0      	LDI  R30,LOW(0)
00ae63 93e0 0125 	STS  293,R30
00ae65 93e0 0124 	STS  292,R30
00ae67 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25B:
00ae68 8be8      	STD  Y+16,R30
00ae69 8bf9      	STD  Y+16+1,R31
00ae6a 89a8      	LDD  R26,Y+16
00ae6b 89b9      	LDD  R27,Y+16+1
00ae6c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x25C:
00ae6d 01f9      	MOVW R30,R18
00ae6e 01de      	MOVW R26,R28
00ae6f 9616      	ADIW R26,6
00ae70 0fee      	LSL  R30
00ae71 1fff      	ROL  R31
00ae72 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25D:
00ae73 0fae      	ADD  R26,R30
00ae74 1fbf      	ADC  R27,R31
00ae75 940e b5f6 	CALL __GETW1P
00ae77 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25E:
00ae78 81ae      	LDD  R26,Y+6
00ae79 81bf      	LDD  R27,Y+6+1
00ae7a 0fea      	ADD  R30,R26
00ae7b 1ffb      	ADC  R31,R27
00ae7c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x25F:
00ae7d 940e b522 	CALL __CWD1
00ae7f 940e b35c 	CALL __CDF1
00ae81 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x260:
00ae82 81ea      	LDD  R30,Y+2
00ae83 81fb      	LDD  R31,Y+2+1
00ae84 9731      	SBIW R30,1
00ae85 e1aa      	LDI  R26,LOW(26)
00ae86 e0b0      	LDI  R27,HIGH(26)
00ae87 940e b53b 	CALL __MULW12U
00ae89 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x261:
00ae8a e1aa      	LDI  R26,LOW(26)
00ae8b e0b0      	LDI  R27,HIGH(26)
00ae8c 940e b53b 	CALL __MULW12U
00ae8e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x262:
                +
00ae8f ebe1     +LDI R30 , LOW ( 2 * _0x340000 + ( 121 ) )
00ae90 e6f4     +LDI R31 , HIGH ( 2 * _0x340000 + ( 121 ) )
00ae91 e060     +LDI R22 , BYTE3 ( 2 * _0x340000 + ( 121 ) )
00ae92 e070     +LDI R23 , BYTE4 ( 2 * _0x340000 + ( 121 ) )
                 	__POINTD1FN _0x340000,121
00ae93 940c 9f66 	JMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x263:
00ae95 a9e8      	LDD  R30,Y+48
00ae96 a9f9      	LDD  R31,Y+48+1
00ae97 9731      	SBIW R30,1
00ae98 cff1      	RJMP SUBOPT_0x261
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x264:
00ae99 57e3      	SUBI R30,LOW(-_sensorCalulate)
00ae9a 4ffa      	SBCI R31,HIGH(-_sensorCalulate)
00ae9b 01df      	MOVW R26,R30
00ae9c 940e b649 	CALL __EEPROMRDD
00ae9e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x265:
                +
00ae9f 56e7     +SUBI R30 , LOW ( - _sensorCalulate - ( 12 ) )
00aea0 4ffa     +SBCI R31 , HIGH ( - _sensorCalulate - ( 12 ) )
                 	__ADDW1MN _sensorCalulate,12
00aea1 01df      	MOVW R26,R30
00aea2 940e b649 	CALL __EEPROMRDD
00aea4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x266:
00aea5 940e b396 	CALL __ADDF12
                +
00aea7 abea     +STD Y + 50 , R30
00aea8 abfb     +STD Y + 50 + 1 , R31
00aea9 ab6c     +STD Y + 50 + 2 , R22
00aeaa ab7d     +STD Y + 50 + 3 , R23
                 	__PUTD1S 50
00aeab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x267:
                +
00aeac a7e8     +STD Y + 40 , R30
00aead a7f9     +STD Y + 40 + 1 , R31
00aeae a76a     +STD Y + 40 + 2 , R22
00aeaf a77b     +STD Y + 40 + 3 , R23
                 	__PUTD1S 40
00aeb0 cfe4      	RJMP SUBOPT_0x263
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x268:
                +
00aeb1 56e3     +SUBI R30 , LOW ( - _sensorCalulate - ( 16 ) )
00aeb2 4ffa     +SBCI R31 , HIGH ( - _sensorCalulate - ( 16 ) )
                 	__ADDW1MN _sensorCalulate,16
00aeb3 01df      	MOVW R26,R30
00aeb4 940e b649 	CALL __EEPROMRDD
                +
00aeb6 a3ec     +STD Y + 36 , R30
00aeb7 a3fd     +STD Y + 36 + 1 , R31
00aeb8 a36e     +STD Y + 36 + 2 , R22
00aeb9 a37f     +STD Y + 36 + 3 , R23
                 	__PUTD1S 36
00aeba cfda      	RJMP SUBOPT_0x263
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x269:
                +
00aebb 8fec     +STD Y + 28 , R30
00aebc 8ffd     +STD Y + 28 + 1 , R31
00aebd 8f6e     +STD Y + 28 + 2 , R22
00aebe 8f7f     +STD Y + 28 + 3 , R23
                 	__PUTD1S 28
00aebf cfd5      	RJMP SUBOPT_0x263
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x26A:
                +
00aec0 56ef     +SUBI R30 , LOW ( - _sensorCalulate - ( 4 ) )
00aec1 4ffa     +SBCI R31 , HIGH ( - _sensorCalulate - ( 4 ) )
                 	__ADDW1MN _sensorCalulate,4
00aec2 01df      	MOVW R26,R30
00aec3 940e b649 	CALL __EEPROMRDD
00aec5 cef8      	RJMP SUBOPT_0x23F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26B:
                +
00aec6 a9ea     +LDD R30 , Y + 50
00aec7 a9fb     +LDD R31 , Y + 50 + 1
00aec8 a96c     +LDD R22 , Y + 50 + 2
00aec9 a97d     +LDD R23 , Y + 50 + 3
                 	__GETD1S 50
00aeca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26C:
00aecb d8f3      	RCALL SUBOPT_0x14D
00aecc 940c a529 	JMP SUBOPT_0xDE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x26D:
                +
00aece 87e9     +STD Y + 9 , R30
00aecf 87fa     +STD Y + 9 + 1 , R31
00aed0 876b     +STD Y + 9 + 2 , R22
00aed1 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00aed2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x26E:
00aed3 81ae      	LDD  R26,Y+6
00aed4 81bf      	LDD  R27,Y+6+1
00aed5 9611      	ADIW R26,1
00aed6 83ae      	STD  Y+6,R26
00aed7 83bf      	STD  Y+6+1,R27
00aed8 9711      	SBIW R26,1
00aed9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26F:
00aeda 940e a3b4 	CALL SUBOPT_0xA1
                +
00aedc eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00aedd ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00aede ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00aedf e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00aee0 940e b3e6 	CALL __MULF12
00aee2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x270:
00aee3 940e a3af 	CALL SUBOPT_0xA0
                +
00aee5 85a9     +LDD R26 , Y + 9
00aee6 85ba     +LDD R27 , Y + 9 + 1
00aee7 858b     +LDD R24 , Y + 9 + 2
00aee8 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00aee9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x271:
00aeea 940e a340 	CALL SUBOPT_0x8B
00aeec 940e b3e6 	CALL __MULF12
00aeee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x272:
                +
00aeef e0a0     +LDI R26 , LOW ( 0x3F000000 )
00aef0 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00aef1 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00aef2 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00aef3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x273:
00aef4 2fe0      	MOV  R30,R16
00aef5 5de0      	SUBI R30,-LOW(48)
00aef6 93ec      	ST   X,R30
00aef7 2fe0      	MOV  R30,R16
00aef8 e0f0      	LDI  R31,0
00aef9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x274:
                +
00aefa 85a9     +LDD R26 , Y + 9
00aefb 85ba     +LDD R27 , Y + 9 + 1
00aefc 858b     +LDD R24 , Y + 9 + 2
00aefd 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00aefe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x275:
00aeff 89e8      	LDD  R30,Y+16
00af00 89f9      	LDD  R31,Y+16+1
00af01 9631      	ADIW R30,1
00af02 8be8      	STD  Y+16,R30
00af03 8bf9      	STD  Y+16+1,R31
00af04 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x276:
00af05 89a8      	LDD  R26,Y+16
00af06 89b9      	LDD  R27,Y+16+1
00af07 91ec      	LD   R30,X
00af08 e0f0      	LDI  R31,0
00af09 97f0      	SBIW R30,48
00af0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x277:
00af0b 940e 9fa5 	CALL SUBOPT_0x9
00af0d cfdc      	RJMP SUBOPT_0x271
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x278:
00af0e 940e b3e6 	CALL __MULF12
00af10 940c a503 	JMP SUBOPT_0xD6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x279:
00af12 93e0 1a49 	STS  __seed_G100,R30
00af14 93f0 1a4a 	STS  __seed_G100+1,R31
00af16 9360 1a4b 	STS  __seed_G100+2,R22
00af18 9370 1a4c 	STS  __seed_G100+3,R23
00af1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27A:
00af1b 940e b5f6 	CALL __GETW1P
00af1d 83ee      	STD  Y+6,R30
00af1e 83ff      	STD  Y+6+1,R31
00af1f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x27B:
00af20 e0f0      	LDI  R31,0
00af21 940e b522 	CALL __CWD1
00af23 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x27C:
00af24 940e b600 	CALL __GETD1P_INC
00af26 940e a47c 	CALL SUBOPT_0xC0
00af28 940e b60a 	CALL __PUTDP1_DEC
00af2a 940c a49c 	JMP SUBOPT_0xC7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27D:
00af2c 940e b5fa 	CALL __GETD1P
                +
00af2e 83e9     +STD Y + 1 , R30
00af2f 83fa     +STD Y + 1 + 1 , R31
00af30 836b     +STD Y + 1 + 2 , R22
00af31 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00af32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x27E:
                +
00af33 81ed     +LDD R30 , Y + 5
00af34 81fe     +LDD R31 , Y + 5 + 1
00af35 816f     +LDD R22 , Y + 5 + 2
00af36 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
00af37 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x27F:
00af38 85e9      	LDD  R30,Y+9
00af39 85fa      	LDD  R31,Y+9+1
00af3a 81a1      	LDD  R26,Z+1
00af3b 93aa      	ST   -Y,R26
00af3c 85ea      	LDD  R30,Y+10
00af3d 85fb      	LDD  R31,Y+10+1
00af3e 96f2      	ADIW R30,50
00af3f 93fa      	ST   -Y,R31
00af40 93ea      	ST   -Y,R30
00af41 940e a2ac 	CALL SUBOPT_0x77
00af43 940e b62a 	CALL __PUTPARD1
00af45 e0a1      	LDI  R26,LOW(1)
00af46 940c 87c3 	JMP  _disk_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x280:
                +
00af48 a1a2     +LDD R26 , Z + 34
00af49 a1b3     +LDD R27 , Z + 34 + 1
00af4a a184     +LDD R24 , Z + 34 + 2
00af4b a195     +LDD R25 , Z + 34 + 3
                 	__GETD2Z 34
00af4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x281:
00af4d 93fa      	ST   -Y,R31
00af4e 93ea      	ST   -Y,R30
00af4f 940e a118 	CALL SUBOPT_0x3E
00af51 940e b62a 	CALL __PUTPARD1
00af53 e0a1      	LDI  R26,LOW(1)
00af54 940e 875e 	CALL _disk_read
00af56 30e0      	CPI  R30,0
00af57 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x282:
00af58 93fa      	ST   -Y,R31
00af59 93ea      	ST   -Y,R30
                +
00af5a e0a0     +LDI R26 , LOW ( 0x0 )
00af5b e0b0     +LDI R27 , HIGH ( 0x0 )
00af5c e080     +LDI R24 , BYTE3 ( 0x0 )
00af5d e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00af5e 940c 8b00 	JMP  _move_window_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x283:
00af60 96f2      	ADIW R30,50
00af61 93fa      	ST   -Y,R31
00af62 93ea      	ST   -Y,R30
00af63 e0e0      	LDI  R30,LOW(0)
00af64 e0f0      	LDI  R31,HIGH(0)
00af65 93fa      	ST   -Y,R31
00af66 93ea      	ST   -Y,R30
00af67 e0a0      	LDI  R26,LOW(512)
00af68 e0b2      	LDI  R27,HIGH(512)
00af69 940c 8aa3 	JMP  _mem_set_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x284:
00af6b 940e b5fa 	CALL __GETD1P
00af6d 01d0      	MOVW R26,R0
00af6e 940e b605 	CALL __PUTDP1
00af70 81e9      	LDD  R30,Y+1
00af71 81fa      	LDD  R31,Y+1+1
00af72 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x285:
                +
00af73 89a2     +LDD R26 , Z + 18
00af74 89b3     +LDD R27 , Z + 18 + 1
00af75 8984     +LDD R24 , Z + 18 + 2
00af76 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00af77 940e b62f 	CALL __PUTPARD2
00af79 e0a1      	LDI  R26,LOW(1)
00af7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x286:
                +
00af7b 30a2     +CPI R26 , LOW ( 0x2 )
00af7c e0e0     +LDI R30 , HIGH ( 0x2 )
00af7d 07be     +CPC R27 , R30
00af7e e0e0     +LDI R30 , BYTE3 ( 0x2 )
00af7f 078e     +CPC R24 , R30
00af80 e0e0     +LDI R30 , BYTE4 ( 0x2 )
00af81 079e     +CPC R25 , R30
                 	__CPD2N 0x2
00af82 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x287:
                +
00af83 e0e1     +LDI R30 , LOW ( 0x1 )
00af84 e0f0     +LDI R31 , HIGH ( 0x1 )
00af85 e060     +LDI R22 , BYTE3 ( 0x1 )
00af86 e070     +LDI R23 , BYTE4 ( 0x1 )
                 	__GETD1N 0x1
00af87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x288:
00af88 940e b5fa 	CALL __GETD1P
00af8a 940c a376 	JMP SUBOPT_0x95
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x289:
00af8c 85ec      	LDD  R30,Y+12
00af8d 85fd      	LDD  R31,Y+12+1
00af8e 93fa      	ST   -Y,R31
00af8f 93ea      	ST   -Y,R30
00af90 01d9      	MOVW R26,R18
00af91 e0e0      	LDI  R30,LOW(512)
00af92 e0f2      	LDI  R31,HIGH(512)
00af93 940e b581 	CALL __DIVW21U
00af95 940e a16e 	CALL SUBOPT_0x49
00af97 2766      	CLR  R22
00af98 2777      	CLR  R23
00af99 940e b4a2 	CALL __ADDD21
00af9b 940e 8b00 	CALL _move_window_G103
00af9d 30e0      	CPI  R30,0
00af9e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x28A:
00af9f 85ac      	LDD  R26,Y+12
00afa0 85bd      	LDD  R27,Y+12+1
00afa1 96d2      	ADIW R26,50
00afa2 01f9      	MOVW R30,R18
00afa3 70f1      	ANDI R31,HIGH(0x1FF)
00afa4 0fae      	ADD  R26,R30
00afa5 1fbf      	ADC  R27,R31
00afa6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28B:
00afa7 85ec      	LDD  R30,Y+12
00afa8 85fd      	LDD  R31,Y+12+1
00afa9 93fa      	ST   -Y,R31
00afaa 93ea      	ST   -Y,R30
00afab 940c a13a 	JMP SUBOPT_0x42
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28C:
                +
00afad e0e0     +LDI R30 , LOW ( 0x100 )
00afae e0f1     +LDI R31 , HIGH ( 0x100 )
00afaf e060     +LDI R22 , BYTE3 ( 0x100 )
00afb0 e070     +LDI R23 , BYTE4 ( 0x100 )
                 	__GETD1N 0x100
00afb1 940e b599 	CALL __DIVD21U
00afb3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x28D:
00afb4 940e a16e 	CALL SUBOPT_0x49
00afb6 940e b4a2 	CALL __ADDD21
00afb8 940e 8b00 	CALL _move_window_G103
00afba 30e0      	CPI  R30,0
00afbb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28E:
00afbc 940e b563 	CALL __MULB1W2U
00afbe 70f1      	ANDI R31,HIGH(0x1FF)
00afbf 85ac      	LDD  R26,Y+12
00afc0 85bd      	LDD  R27,Y+12+1
00afc1 96d2      	ADIW R26,50
00afc2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28F:
                +
00afc3 e8e0     +LDI R30 , LOW ( 0x80 )
00afc4 e0f0     +LDI R31 , HIGH ( 0x80 )
00afc5 e060     +LDI R22 , BYTE3 ( 0x80 )
00afc6 e070     +LDI R23 , BYTE4 ( 0x80 )
                 	__GETD1N 0x80
00afc7 940e b599 	CALL __DIVD21U
00afc9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x290:
00afca 01d8      	MOVW R26,R16
00afcb e0e0      	LDI  R30,LOW(512)
00afcc e0f2      	LDI  R31,HIGH(512)
00afcd 940e b581 	CALL __DIVW21U
00afcf 940e a492 	CALL SUBOPT_0xC5
00afd1 2766      	CLR  R22
00afd2 2777      	CLR  R23
00afd3 940e b4a2 	CALL __ADDD21
00afd5 940e 8b00 	CALL _move_window_G103
00afd7 2f5e      	MOV  R21,R30
00afd8 3050      	CPI  R21,0
00afd9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x291:
00afda 89aa      	LDD  R26,Y+18
00afdb 89bb      	LDD  R27,Y+18+1
00afdc 96d2      	ADIW R26,50
00afdd 01f8      	MOVW R30,R16
00afde 70f1      	ANDI R31,HIGH(0x1FF)
00afdf 0fea      	ADD  R30,R26
00afe0 1ffb      	ADC  R31,R27
00afe1 019f      	MOVW R18,R30
00afe2 85ee      	LDD  R30,Y+14
00afe3 70e1      	ANDI R30,LOW(0x1)
00afe4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x292:
                +
00afe5 89a8     +LDD R26 , Y + 16
00afe6 89b9     +LDD R27 , Y + 16 + 1
00afe7 898a     +LDD R24 , Y + 16 + 2
00afe8 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00afe9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x293:
00afea 940e a492 	CALL SUBOPT_0xC5
00afec 940e b4a2 	CALL __ADDD21
00afee 940e 8b00 	CALL _move_window_G103
00aff0 2f5e      	MOV  R21,R30
00aff1 3050      	CPI  R21,0
00aff2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x294:
00aff3 940e b563 	CALL __MULB1W2U
00aff5 70f1      	ANDI R31,HIGH(0x1FF)
00aff6 89aa      	LDD  R26,Y+18
00aff7 89bb      	LDD  R27,Y+18+1
00aff8 96d2      	ADIW R26,50
00aff9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x295:
                +
00affa 81ad     +LDD R26 , Y + 5
00affb 81be     +LDD R27 , Y + 5 + 1
00affc 818f     +LDD R24 , Y + 5 + 2
00affd 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
00affe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x296:
00afff 85a9      	LDD  R26,Y+9
00b000 85ba      	LDD  R27,Y+9+1
00b001 965e      	ADIW R26,30
00b002 940e b5fa 	CALL __GETD1P
00b004 dff5      	RCALL SUBOPT_0x295
00b005 940e b695 	CALL __CPD21
00b007 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x297:
                +
00b008 81e9     +LDD R30 , Y + 1
00b009 81fa     +LDD R31 , Y + 1 + 1
00b00a 816b     +LDD R22 , Y + 1 + 2
00b00b 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
00b00c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x298:
                +
00b00d 30a1     +CPI R26 , LOW ( 0x1 )
00b00e e0e0     +LDI R30 , HIGH ( 0x1 )
00b00f 07be     +CPC R27 , R30
00b010 e0e0     +LDI R30 , BYTE3 ( 0x1 )
00b011 078e     +CPC R24 , R30
00b012 e0e0     +LDI R30 , BYTE4 ( 0x1 )
00b013 079e     +CPC R25 , R30
                 	__CPD2N 0x1
00b014 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x299:
                +
00b015 e0a0     +LDI R26 , LOW ( 0x0 )
00b016 e0b0     +LDI R27 , HIGH ( 0x0 )
00b017 e080     +LDI R24 , BYTE3 ( 0x0 )
00b018 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00b019 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29A:
                +
00b01a 85a6     +LDD R26 , Z + 14
00b01b 85b7     +LDD R27 , Z + 14 + 1
00b01c 8980     +LDD R24 , Z + 14 + 2
00b01d 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00b01e 940c a091 	JMP SUBOPT_0x2B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x29B:
                +
00b020 83ed     +STD Y + 5 , R30
00b021 83fe     +STD Y + 5 + 1 , R31
00b022 836f     +STD Y + 5 + 2 , R22
00b023 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
00b024 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x29C:
00b025 89ec      	LDD  R30,Y+20
00b026 89fd      	LDD  R31,Y+20+1
00b027 93fa      	ST   -Y,R31
00b028 93ea      	ST   -Y,R30
00b029 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x29D:
                +
00b02a 89aa     +LDD R26 , Y + 18
00b02b 89bb     +LDD R27 , Y + 18 + 1
00b02c 898c     +LDD R24 , Y + 18 + 2
00b02d 899d     +LDD R25 , Y + 18 + 3
                 	__GETD2S 18
00b02e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29E:
                +
00b02f e0e2     +LDI R30 , LOW ( 0x2 )
00b030 e0f0     +LDI R31 , HIGH ( 0x2 )
00b031 e060     +LDI R22 , BYTE3 ( 0x2 )
00b032 e070     +LDI R23 , BYTE4 ( 0x2 )
                 	__GETD1N 0x2
00b033 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29F:
00b034 940e a2ac 	CALL SUBOPT_0x77
00b036 940e a492 	CALL SUBOPT_0xC5
00b038 940e b690 	CALL __CPD12
00b03a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2A0:
                +
00b03b e0e0     +LDI R30 , LOW ( 0x0 )
00b03c e0f0     +LDI R31 , HIGH ( 0x0 )
00b03d e060     +LDI R22 , BYTE3 ( 0x0 )
00b03e e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00b03f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2A1:
00b040 85a8      	LDD  R26,Y+8
00b041 85b9      	LDD  R27,Y+8+1
00b042 940e b5f6 	CALL __GETW1P
00b044 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A2:
00b045 967e      	ADIW R30,30
00b046 01df      	MOVW R26,R30
00b047 940e b5fa 	CALL __GETD1P
00b049 940e a3b4 	CALL SUBOPT_0xA1
00b04b 940e b695 	CALL __CPD21
00b04d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2A3:
00b04e 940e a3af 	CALL SUBOPT_0xA0
                +
00b050 85a8     +LDD R26 , Y + 8
00b051 85b9     +LDD R27 , Y + 8 + 1
00b052 961a     +ADIW R26 , 10
00b053 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 8,10
00b055 cfea      	RJMP SUBOPT_0x2A1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2A4:
00b056 2766      	CLR  R22
00b057 2777      	CLR  R23
00b058 940e b49d 	CALL __ADDD12
00b05a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2A5:
00b05b 70ef      	ANDI R30,LOW(0xF)
00b05c 70f0      	ANDI R31,HIGH(0xF)
00b05d 0fee      	LSL  R30
00b05e 940e b4e8 	CALL __LSLW4
00b060 0fea      	ADD  R30,R26
00b061 1ffb      	ADC  R31,R27
00b062 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A6:
00b063 940e b5fa 	CALL __GETD1P
00b065 940e b67e 	CALL __CPD10
00b067 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2A7:
00b068 85a9      	LDD  R26,Y+9
00b069 85ba      	LDD  R27,Y+9+1
00b06a 940e b5f6 	CALL __GETW1P
00b06c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A8:
00b06d 93fa      	ST   -Y,R31
00b06e 93ea      	ST   -Y,R30
00b06f 85eb      	LDD  R30,Y+11
00b070 85fc      	LDD  R31,Y+11+1
                +
00b071 85a2     +LDD R26 , Z + 10
00b072 85b3     +LDD R27 , Z + 10 + 1
00b073 8584     +LDD R24 , Z + 10 + 2
00b074 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00b075 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A9:
00b076 967e      	ADIW R30,30
00b077 01df      	MOVW R26,R30
00b078 940e b5fa 	CALL __GETD1P
00b07a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AA:
00b07b 93fa      	ST   -Y,R31
00b07c 93ea      	ST   -Y,R30
00b07d 940e a16e 	CALL SUBOPT_0x49
00b07f 940c 8e03 	JMP  _clust2sect
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2AB:
00b081 81ac      	LDD  R26,Y+4
00b082 81bd      	LDD  R27,Y+4+1
00b083 940e b5f6 	CALL __GETW1P
00b085 93fa      	ST   -Y,R31
00b086 93ea      	ST   -Y,R30
00b087 81ee      	LDD  R30,Y+6
00b088 81ff      	LDD  R31,Y+6+1
                +
00b089 85a6     +LDD R26 , Z + 14
00b08a 85b7     +LDD R27 , Z + 14 + 1
00b08b 8980     +LDD R24 , Z + 14 + 2
00b08c 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00b08d 940e 8b00 	CALL _move_window_G103
00b08f 2f1e      	MOV  R17,R30
00b090 3010      	CPI  R17,0
00b091 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2AC:
00b092 933a      	ST   -Y,R19
00b093 932a      	ST   -Y,R18
00b094 81ee      	LDD  R30,Y+6
00b095 81ff      	LDD  R31,Y+6+1
00b096 89a4      	LDD  R26,Z+20
00b097 89b5      	LDD  R27,Z+21
00b098 93ba      	ST   -Y,R27
00b099 93aa      	ST   -Y,R26
00b09a 940c a0f3 	JMP SUBOPT_0x38
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AD:
00b09c 81ae      	LDD  R26,Y+6
00b09d 81bf      	LDD  R27,Y+6+1
00b09e 0fae      	ADD  R26,R30
00b09f 1fbf      	ADC  R27,R31
00b0a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2AE:
00b0a1 2fe2      	MOV  R30,R18
00b0a2 5f2f      	SUBI R18,-1
00b0a3 e0f0      	LDI  R31,0
00b0a4 0fe4      	ADD  R30,R20
00b0a5 1ff5      	ADC  R31,R21
00b0a6 8300      	ST   Z,R16
00b0a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2AF:
00b0a8 e0f0      	LDI  R31,0
00b0a9 0fe4      	ADD  R30,R20
00b0aa 1ff5      	ADC  R31,R21
00b0ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B0:
                +
00b0ac 81ae     +LDD R26 , Y + 6
00b0ad 81bf     +LDD R27 , Y + 6 + 1
00b0ae 9616     +ADIW R26 , 6
00b0af 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 6,6
00b0b1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B1:
00b0b2 01d9      	MOVW R26,R18
00b0b3 9654      	ADIW R26,20
00b0b4 940c a029 	JMP SUBOPT_0x1C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B2:
00b0b6 01d9      	MOVW R26,R18
00b0b7 965a      	ADIW R26,26
00b0b8 940e b5f6 	CALL __GETW1P
00b0ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B3:
00b0bb 2766      	CLR  R22
00b0bc 2777      	CLR  R23
00b0bd 940e b4b6 	CALL __ORD12
00b0bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B4:
00b0c0 940e b62a 	CALL __PUTPARD1
00b0c2 e0a1      	LDI  R26,LOW(1)
00b0c3 940e 875e 	CALL _disk_read
00b0c5 30e0      	CPI  R30,0
00b0c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2B5:
00b0c7 96f2      	ADIW R30,50
00b0c8 50e2      	SUBI R30,LOW(-510)
00b0c9 4ffe      	SBCI R31,HIGH(-510)
00b0ca 01df      	MOVW R26,R30
00b0cb 940e b5f6 	CALL __GETW1P
00b0cd 35e5      	CPI  R30,LOW(0xAA55)
00b0ce eaaa      	LDI  R26,HIGH(0xAA55)
00b0cf 07fa      	CPC  R31,R26
00b0d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2B6:
00b0d1 940e b5fa 	CALL __GETD1P
                +
00b0d3 7fef     +ANDI R30 , LOW ( 0xFFFFFF )
00b0d4 7fff     +ANDI R31 , HIGH ( 0xFFFFFF )
00b0d5 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFF )
00b0d6 7070     +ANDI R23 , BYTE4 ( 0xFFFFFF )
                 	__ANDD1N 0xFFFFFF
                +
00b0d7 34e6     +CPI R30 , LOW ( 0x544146 )
00b0d8 e4a1     +LDI R26 , HIGH ( 0x544146 )
00b0d9 07fa     +CPC R31 , R26
00b0da e5a4     +LDI R26 , BYTE3 ( 0x544146 )
00b0db 076a     +CPC R22 , R26
00b0dc e0a0     +LDI R26 , BYTE4 ( 0x544146 )
00b0dd 077a     +CPC R23 , R26
                 	__CPD1N 0x544146
00b0de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2B7:
00b0df e5a2      	LDI  R26,LOW(_FatFs_G103)
00b0e0 e1ba      	LDI  R27,HIGH(_FatFs_G103)
00b0e1 e0f0      	LDI  R31,0
00b0e2 0fee      	LSL  R30
00b0e3 1fff      	ROL  R31
00b0e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2B8:
                +
00b0e5 8bea     +STD Y + 18 , R30
00b0e6 8bfb     +STD Y + 18 + 1 , R31
00b0e7 8b6c     +STD Y + 18 + 2 , R22
00b0e8 8b7d     +STD Y + 18 + 3 , R23
                 	__PUTD1S 18
00b0e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B9:
00b0ea 81ae      	LDD  R26,Y+6
00b0eb 81bf      	LDD  R27,Y+6+1
00b0ec 5ca0      	SUBI R26,LOW(-64)
00b0ed 4fbf      	SBCI R27,HIGH(-64)
00b0ee 940e b5f6 	CALL __GETW1P
00b0f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2BA:
00b0f1 81ee      	LDD  R30,Y+6
00b0f2 81ff      	LDD  R31,Y+6+1
00b0f3 85a0      	LDD  R26,Z+8
00b0f4 85b1      	LDD  R27,Z+9
00b0f5 01fd      	MOVW R30,R26
00b0f6 940e b4fa 	CALL __LSRW4
00b0f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2BB:
00b0f9 81ee      	LDD  R30,Y+6
00b0fa 81ff      	LDD  R31,Y+6+1
00b0fb de4c      	RCALL SUBOPT_0x280
00b0fc 940e a481 	CALL SUBOPT_0xC1
00b0fe 940e b49d 	CALL __ADDD12
00b100 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2BC:
00b101 940e 8b00 	CALL _move_window_G103
00b103 2f1e      	MOV  R17,R30
00b104 3010      	CPI  R17,0
00b105 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2BD:
00b106 8daa      	LDD  R26,Y+26
00b107 8dbb      	LDD  R27,Y+26+1
00b108 940e b5f6 	CALL __GETW1P
00b10a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2BE:
00b10b 93fa      	ST   -Y,R31
00b10c 93ea      	ST   -Y,R30
00b10d 8dec      	LDD  R30,Y+28
00b10e 8dfd      	LDD  R31,Y+28+1
00b10f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2BF:
00b110 81a2      	LDD  R26,Z+2
00b111 81b3      	LDD  R27,Z+3
00b112 940e 9393 	CALL _validate_G103
00b114 2f1e      	MOV  R17,R30
00b115 3010      	CPI  R17,0
00b116 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2C0:
00b117 8dea      	LDD  R30,Y+26
00b118 8dfb      	LDD  R31,Y+26+1
                +
00b119 81a6     +LDD R26 , Z + 6
00b11a 81b7     +LDD R27 , Z + 6 + 1
00b11b 8580     +LDD R24 , Z + 6 + 2
00b11c 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00b11d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C1:
00b11e 01fd      	MOVW R30,R26
00b11f 01bc      	MOVW R22,R24
00b120 70f1      	ANDI R31,HIGH(0x1FF)
00b121 9730      	SBIW R30,0
00b122 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2C2:
                +
00b123 89a2     +LDD R26 , Z + 18
00b124 89b3     +LDD R27 , Z + 18 + 1
00b125 8984     +LDD R24 , Z + 18 + 2
00b126 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00b127 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x2C3:
00b128 8daa      	LDD  R26,Y+26
00b129 8dbb      	LDD  R27,Y+26+1
00b12a 9614      	ADIW R26,4
00b12b 91ec      	LD   R30,X
00b12c 68e0      	ORI  R30,0x80
00b12d 93ec      	ST   X,R30
00b12e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C4:
00b12f 8dea      	LDD  R30,Y+26
00b130 8dfb      	LDD  R31,Y+26+1
00b131 81e5      	LDD  R30,Z+5
00b132 e0f0      	LDI  R31,0
00b133 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2C5:
00b134 e0e0      	LDI  R30,LOW(512)
00b135 e0f2      	LDI  R31,HIGH(512)
00b136 940e b581 	CALL __DIVW21U
00b138 01af      	MOVW R20,R30
00b139 2e04      	MOV  R0,R20
00b13a 2a05      	OR   R0,R21
00b13b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C6:
00b13c 81e1      	LDD  R30,Z+1
00b13d 93ea      	ST   -Y,R30
00b13e 81ef      	LDD  R30,Y+7
00b13f 85f8      	LDD  R31,Y+7+1
00b140 93fa      	ST   -Y,R31
00b141 93ea      	ST   -Y,R30
00b142 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2C7:
00b143 8dea      	LDD  R30,Y+26
00b144 8dfb      	LDD  R31,Y+26+1
                +
00b145 89a6     +LDD R26 , Z + 22
00b146 89b7     +LDD R27 , Z + 22 + 1
00b147 8d80     +LDD R24 , Z + 22 + 2
00b148 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00b149 940c a497 	JMP SUBOPT_0xC6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2C8:
00b14b 940e b4ac 	CALL __SUBD21
00b14d 01fa      	MOVW R30,R20
00b14e 2766      	CLR  R22
00b14f 2777      	CLR  R23
00b150 940e b695 	CALL __CPD21
00b152 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2C9:
00b153 940e b4ac 	CALL __SUBD21
                +
00b155 e0e0     +LDI R30 , LOW ( 0x200 )
00b156 e0f2     +LDI R31 , HIGH ( 0x200 )
00b157 e060     +LDI R22 , BYTE3 ( 0x200 )
00b158 e070     +LDI R23 , BYTE4 ( 0x200 )
                 	__GETD1N 0x200
00b159 940e b543 	CALL __MULD12U
00b15b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2CA:
00b15c 9615      	ADIW R26,5
00b15d 91ec      	LD   R30,X
00b15e 0fe4      	ADD  R30,R20
00b15f 93ec      	ST   X,R30
00b160 01fa      	MOVW R30,R20
00b161 0fee      	LSL  R30
00b162 1fff      	ROL  R31
00b163 2ffe      	MOV  R31,R30
00b164 e0e0      	LDI  R30,0
00b165 019f      	MOVW R18,R30
00b166 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2CB:
00b167 81e1      	LDD  R30,Z+1
00b168 93ea      	ST   -Y,R30
00b169 8deb      	LDD  R30,Y+27
00b16a 8dfc      	LDD  R31,Y+27+1
00b16b 96b0      	ADIW R30,32
00b16c 93fa      	ST   -Y,R31
00b16d 93ea      	ST   -Y,R30
00b16e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2CC:
                +
00b16f 89a6     +LDD R26 , Z + 22
00b170 89b7     +LDD R27 , Z + 22 + 1
00b171 8d80     +LDD R24 , Z + 22 + 2
00b172 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00b173 940e b62f 	CALL __PUTPARD2
00b175 e0a1      	LDI  R26,LOW(1)
00b176 940e 87c3 	CALL _disk_write
00b178 30e0      	CPI  R30,0
00b179 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2CD:
00b17a 9614      	ADIW R26,4
00b17b 91ec      	LD   R30,X
00b17c 7bef      	ANDI R30,0xBF
00b17d 93ec      	ST   X,R30
00b17e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2CE:
00b17f 9615      	ADIW R26,5
00b180 91ec      	LD   R30,X
00b181 5fef      	SUBI R30,-LOW(1)
00b182 93ec      	ST   X,R30
00b183 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2CF:
00b184 9616      	ADIW R26,6
00b185 940e b5f6 	CALL __GETW1P
00b187 70f1      	ANDI R31,HIGH(0x1FF)
00b188 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2D0:
00b189 9636      	ADIW R30,6
00b18a 010f      	MOVW R0,R30
00b18b 01df      	MOVW R26,R30
00b18c 940e b5fa 	CALL __GETD1P
00b18e 01df      	MOVW R26,R30
00b18f 01cb      	MOVW R24,R22
00b190 01f9      	MOVW R30,R18
00b191 cec4      	RJMP SUBOPT_0x2A4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D1:
00b192 91ed      	LD   R30,X+
00b193 91fd      	LD   R31,X+
00b194 0fe2      	ADD  R30,R18
00b195 1ff3      	ADC  R31,R19
00b196 93fe      	ST   -X,R31
00b197 93ee      	ST   -X,R30
00b198 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2D2:
00b199 89ae      	LDD  R26,Y+22
00b19a 89bf      	LDD  R27,Y+22+1
00b19b 940e b5f6 	CALL __GETW1P
00b19d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2D3:
00b19e 93fa      	ST   -Y,R31
00b19f 93ea      	ST   -Y,R30
00b1a0 8de8      	LDD  R30,Y+24
00b1a1 8df9      	LDD  R31,Y+24+1
00b1a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D4:
00b1a3 89ae      	LDD  R26,Y+22
00b1a4 89bf      	LDD  R27,Y+22+1
00b1a5 961a      	ADIW R26,10
00b1a6 940e b5fa 	CALL __GETD1P
00b1a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2D5:
00b1a9 89ee      	LDD  R30,Y+22
00b1aa 89ff      	LDD  R31,Y+22+1
                +
00b1ab 81a6     +LDD R26 , Z + 6
00b1ac 81b7     +LDD R27 , Z + 6 + 1
00b1ad 8580     +LDD R24 , Z + 6 + 2
00b1ae 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00b1af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D6:
00b1b0 93fa      	ST   -Y,R31
00b1b1 93ea      	ST   -Y,R30
00b1b2 de62      	RCALL SUBOPT_0x299
00b1b3 940c 8d48 	JMP  _create_chain_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x2D7:
00b1b5 89ae      	LDD  R26,Y+22
00b1b6 89bf      	LDD  R27,Y+22+1
00b1b7 9614      	ADIW R26,4
00b1b8 91ec      	LD   R30,X
00b1b9 68e0      	ORI  R30,0x80
00b1ba 93ec      	ST   X,R30
00b1bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2D8:
00b1bc 81e1      	LDD  R30,Z+1
00b1bd 93ea      	ST   -Y,R30
00b1be 89ef      	LDD  R30,Y+23
00b1bf 8df8      	LDD  R31,Y+23+1
00b1c0 96b0      	ADIW R30,32
00b1c1 93fa      	ST   -Y,R31
00b1c2 93ea      	ST   -Y,R30
00b1c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D9:
00b1c4 89ee      	LDD  R30,Y+22
00b1c5 89ff      	LDD  R31,Y+22+1
00b1c6 81e5      	LDD  R30,Z+5
00b1c7 e0f0      	LDI  R31,0
00b1c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2DA:
00b1c9 89ee      	LDD  R30,Y+22
00b1ca 89ff      	LDD  R31,Y+22+1
                +
00b1cb 89a6     +LDD R26 , Z + 22
00b1cc 89b7     +LDD R27 , Z + 22 + 1
00b1cd 8d80     +LDD R24 , Z + 22 + 2
00b1ce 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00b1cf 940c a118 	JMP SUBOPT_0x3E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2DB:
00b1d1 89ad      	LDD  R26,Y+21
00b1d2 89be      	LDD  R27,Y+21+1
00b1d3 940e b5f6 	CALL __GETW1P
00b1d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2DC:
00b1d6 89ad      	LDD  R26,Y+21
00b1d7 89be      	LDD  R27,Y+21+1
00b1d8 961a      	ADIW R26,10
00b1d9 940e b5fa 	CALL __GETD1P
00b1db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2DD:
                +
00b1dc 89a9     +LDD R26 , Y + 17
00b1dd 89ba     +LDD R27 , Y + 17 + 1
00b1de 898b     +LDD R24 , Y + 17 + 2
00b1df 899c     +LDD R25 , Y + 17 + 3
                 	__GETD2S 17
00b1e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2DE:
                +
00b1e1 8be9     +STD Y + 17 , R30
00b1e2 8bfa     +STD Y + 17 + 1 , R31
00b1e3 8b6b     +STD Y + 17 + 2 , R22
00b1e4 8b7c     +STD Y + 17 + 3 , R23
                 	__PUTD1S 17
00b1e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2DF:
                +
00b1e6 89ad     +LDD R26 , Y + 21
00b1e7 89be     +LDD R27 , Y + 21 + 1
00b1e8 9616     +ADIW R26 , 6
00b1e9 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 21,6
00b1eb 89ad      	LDD  R26,Y+21
00b1ec 89be      	LDD  R27,Y+21+1
00b1ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E0:
                +
00b1ee 89e9     +LDD R30 , Y + 17
00b1ef 89fa     +LDD R31 , Y + 17 + 1
00b1f0 896b     +LDD R22 , Y + 17 + 2
00b1f1 897c     +LDD R23 , Y + 17 + 3
                 	__GETD1S 17
00b1f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2E1:
00b1f3 940e a49c 	CALL SUBOPT_0xC7
00b1f5 01df      	MOVW R26,R30
00b1f6 01cb      	MOVW R24,R22
00b1f7 940e a1e4 	CALL SUBOPT_0x5B
00b1f9 940e b599 	CALL __DIVD21U
00b1fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E2:
00b1fc 940e b5fa 	CALL __GETD1P
                +
00b1fe 87ed     +STD Y + 13 , R30
00b1ff 87fe     +STD Y + 13 + 1 , R31
00b200 876f     +STD Y + 13 + 2 , R22
00b201 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
00b202 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2E3:
                +
00b203 85ed     +LDD R30 , Y + 13
00b204 85fe     +LDD R31 , Y + 13 + 1
00b205 856f     +LDD R22 , Y + 13 + 2
00b206 8978     +LDD R23 , Y + 13 + 3
                 	__GETD1S 13
00b207 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E4:
                +
00b208 87ed     +STD Y + 13 , R30
00b209 87fe     +STD Y + 13 + 1 , R31
00b20a 876f     +STD Y + 13 + 2 , R22
00b20b 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
00b20c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2E5:
                +
00b20d 85ad     +LDD R26 , Y + 13
00b20e 85be     +LDD R27 , Y + 13 + 1
00b20f 858f     +LDD R24 , Y + 13 + 2
00b210 8998     +LDD R25 , Y + 13 + 3
                 	__GETD2S 13
00b211 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2E6:
00b212 89ad      	LDD  R26,Y+21
00b213 89be      	LDD  R27,Y+21+1
00b214 9614      	ADIW R26,4
00b215 91ec      	LD   R30,X
00b216 68e0      	ORI  R30,0x80
00b217 93ec      	ST   X,R30
00b218 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2E7:
00b219 dfe9      	RCALL SUBOPT_0x2E3
                +
00b21a 89ad     +LDD R26 , Y + 21
00b21b 89be     +LDD R27 , Y + 21 + 1
00b21c 9652     +ADIW R26 , 18
00b21d 940e b605+CALL __PUTDP1
                 	__PUTD1SNS 21,18
00b21f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2E8:
00b220 93fa      	ST   -Y,R31
00b221 93ea      	ST   -Y,R30
                +
00b222 85af     +LDD R26 , Y + 15
00b223 89b8     +LDD R27 , Y + 15 + 1
00b224 8989     +LDD R24 , Y + 15 + 2
00b225 899a     +LDD R25 , Y + 15 + 3
                 	__GETD2S 15
00b226 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2E9:
00b227 89ed      	LDD  R30,Y+21
00b228 89fe      	LDD  R31,Y+21+1
00b229 9636      	ADIW R30,6
00b22a 010f      	MOVW R0,R30
00b22b 01df      	MOVW R26,R30
00b22c 940e b5fa 	CALL __GETD1P
00b22e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2EA:
00b22f 89ed      	LDD  R30,Y+21
00b230 89fe      	LDD  R31,Y+21+1
                +
00b231 81a6     +LDD R26 , Z + 6
00b232 81b7     +LDD R27 , Z + 6 + 1
00b233 8580     +LDD R24 , Z + 6 + 2
00b234 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00b235 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2EB:
00b236 940e a481 	CALL SUBOPT_0xC1
00b238 940e a3e0 	CALL SUBOPT_0xA9
00b23a ceaa      	RJMP SUBOPT_0x2B8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2EC:
00b23b 940e a37b 	CALL SUBOPT_0x96
00b23d ccac      	RJMP SUBOPT_0x271
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2ED:
00b23e 940e a2ac 	CALL SUBOPT_0x77
00b240 940e 9fa5 	CALL SUBOPT_0x9
00b242 940e b479 	CALL __CMPF12
00b244 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2EE:
00b245 940e 9fa5 	CALL SUBOPT_0x9
                +
00b247 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00b248 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00b249 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00b24a e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00b24b ccc2      	RJMP SUBOPT_0x278
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2EF:
00b24c 85a8      	LDD  R26,Y+8
00b24d 85b9      	LDD  R27,Y+8+1
00b24e 9611      	ADIW R26,1
00b24f 87a8      	STD  Y+8,R26
00b250 87b9      	STD  Y+8+1,R27
00b251 9711      	SBIW R26,1
00b252 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x2F0:
00b253 932a      	ST   -Y,R18
00b254 81af      	LDD  R26,Y+7
00b255 85b8      	LDD  R27,Y+7+1
00b256 940e a1e4 	CALL SUBOPT_0x5B
00b258 bf6c      	OUT  EIND,R22
00b259 9519      	EICALL
00b25a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2F1:
                +
00b25b 01fe     +MOVW R30 , R28
00b25c 5ae0     +SUBI R30 , LOW ( - 96 )
00b25d 4fff     +SBCI R31 , HIGH ( - 96 )
00b25e 9001     +LD R0 , Z +
00b25f 81f0     +LD R31 , Z
00b260 2de0     +MOV R30 , R0
                 	__GETW1SX 96
00b261 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2F2:
00b262 9734      	SBIW R30,4
                +
00b263 01de     +MOVW R26 , R28
00b264 5aa0     +SUBI R26 , LOW ( - 96 )
00b265 4fbf     +SBCI R27 , HIGH ( - 96 )
00b266 93ed     +ST X + , R30
00b267 93fc     +ST X , R31
                 	__PUTW1SX 96
00b268 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2F3:
00b269 81af      	LDD  R26,Y+7
00b26a 85b8      	LDD  R27,Y+7+1
00b26b 940e a1e4 	CALL SUBOPT_0x5B
00b26d bf6c      	OUT  EIND,R22
00b26e 9519      	EICALL
00b26f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x2F4:
                +
00b270 01de     +MOVW R26 , R28
00b271 5aa0     +SUBI R26 , LOW ( - 96 )
00b272 4fbf     +SBCI R27 , HIGH ( - 96 )
00b273 900d     +LD R0 , X +
00b274 91bc     +LD R27 , X
00b275 2da0     +MOV R26 , R0
                 	__GETW2SX 96
00b276 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2F5:
00b277 dfe3      	RCALL SUBOPT_0x2F1
00b278 cfe9      	RJMP SUBOPT_0x2F2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2F6:
00b279 7f0b      	ANDI R16,LOW(251)
00b27a 8de9      	LDD  R30,Y+25
00b27b 93ea      	ST   -Y,R30
                +
00b27c 01de     +MOVW R26 , R28
00b27d 5aa5     +SUBI R26 , LOW ( - 91 )
00b27e 4fbf     +SBCI R27 , HIGH ( - 91 )
00b27f 900d     +LD R0 , X +
00b280 91bc     +LD R27 , X
00b281 2da0     +MOV R26 , R0
                 	__GETW2SX 91
                +
00b282 01fe     +MOVW R30 , R28
00b283 5ae3     +SUBI R30 , LOW ( - 93 )
00b284 4fff     +SBCI R31 , HIGH ( - 93 )
00b285 9001     +LD R0 , Z +
00b286 9011     +LD R1 , Z +
00b287 9161     +LD R22 , Z +
00b288 8170     +LD R23 , Z
00b289 01f0     +MOVW R30 , R0
                 	__GETD1SX 93
00b28a bf6c      	OUT  EIND,R22
00b28b 9519      	EICALL
00b28c 3050      	CPI  R21,0
00b28d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F7:
                +
00b28e e4e4     +LDI R30 , LOW ( _put_buff_G104 )
00b28f e9fb     +LDI R31 , HIGH ( _put_buff_G104 )
00b290 e060     +LDI R22 , BYTE3 ( _put_buff_G104 )
00b291 e070     +LDI R23 , BYTE4 ( _put_buff_G104 )
                 	__POINTD1M _put_buff_G104
00b292 940e b62a 	CALL __PUTPARD1
00b294 9508      	RET
                 
                 
                 	.CSEG
                 	.equ __i2c_dir=__i2c_port-1
                 	.equ __i2c_pin=__i2c_port-2
                 
                 _i2c_init:
00b295 9858      	cbi  __i2c_port,__scl_bit
00b296 9859      	cbi  __i2c_port,__sda_bit
00b297 9a50      	sbi  __i2c_dir,__scl_bit
00b298 9851      	cbi  __i2c_dir,__sda_bit
00b299 c015      	rjmp __i2c_delay2
                 _i2c_start:
00b29a 9851      	cbi  __i2c_dir,__sda_bit
00b29b 9850      	cbi  __i2c_dir,__scl_bit
00b29c 27ee      	clr  r30
00b29d 0000      	nop
00b29e 9b49      	sbis __i2c_pin,__sda_bit
00b29f 9508      	ret
00b2a0 9b48      	sbis __i2c_pin,__scl_bit
00b2a1 9508      	ret
00b2a2 d004      	rcall __i2c_delay1
00b2a3 9a51      	sbi  __i2c_dir,__sda_bit
00b2a4 d002      	rcall __i2c_delay1
00b2a5 9a50      	sbi  __i2c_dir,__scl_bit
00b2a6 e0e1      	ldi  r30,1
                 __i2c_delay1:
00b2a7 e06d      	ldi  r22,13
00b2a8 c007      	rjmp __i2c_delay2l
                 _i2c_stop:
00b2a9 9a51      	sbi  __i2c_dir,__sda_bit
00b2aa 9a50      	sbi  __i2c_dir,__scl_bit
00b2ab d003      	rcall __i2c_delay2
00b2ac 9850      	cbi  __i2c_dir,__scl_bit
00b2ad dff9      	rcall __i2c_delay1
00b2ae 9851      	cbi  __i2c_dir,__sda_bit
                 __i2c_delay2:
00b2af e16b      	ldi  r22,27
                 __i2c_delay2l:
00b2b0 956a      	dec  r22
00b2b1 f7f1      	brne __i2c_delay2l
00b2b2 9508      	ret
                 _i2c_read:
00b2b3 e078      	ldi  r23,8
                 __i2c_read0:
00b2b4 9850      	cbi  __i2c_dir,__scl_bit
00b2b5 dff1      	rcall __i2c_delay1
                 __i2c_read3:
00b2b6 9b48      	sbis __i2c_pin,__scl_bit
00b2b7 cffe      	rjmp __i2c_read3
00b2b8 dfee      	rcall __i2c_delay1
00b2b9 9488      	clc
00b2ba 9949      	sbic __i2c_pin,__sda_bit
00b2bb 9408      	sec
00b2bc 9a50      	sbi  __i2c_dir,__scl_bit
00b2bd dff1      	rcall __i2c_delay2
00b2be 1fee      	rol  r30
00b2bf 957a      	dec  r23
00b2c0 f799      	brne __i2c_read0
00b2c1 2f7a      	mov  r23,r26
00b2c2 2377      	tst  r23
00b2c3 f411      	brne __i2c_read1
00b2c4 9851      	cbi  __i2c_dir,__sda_bit
00b2c5 c001      	rjmp __i2c_read2
                 __i2c_read1:
00b2c6 9a51      	sbi  __i2c_dir,__sda_bit
                 __i2c_read2:
00b2c7 dfdf      	rcall __i2c_delay1
00b2c8 9850      	cbi  __i2c_dir,__scl_bit
00b2c9 dfe5      	rcall __i2c_delay2
00b2ca 9a50      	sbi  __i2c_dir,__scl_bit
00b2cb dfdb      	rcall __i2c_delay1
00b2cc 9851      	cbi  __i2c_dir,__sda_bit
00b2cd cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
00b2ce e078      	ldi  r23,8
                 __i2c_write0:
00b2cf 0faa      	lsl  r26
00b2d0 f410      	brcc __i2c_write1
00b2d1 9851      	cbi  __i2c_dir,__sda_bit
00b2d2 c001      	rjmp __i2c_write2
                 __i2c_write1:
00b2d3 9a51      	sbi  __i2c_dir,__sda_bit
                 __i2c_write2:
00b2d4 dfda      	rcall __i2c_delay2
00b2d5 9850      	cbi  __i2c_dir,__scl_bit
00b2d6 dfd0      	rcall __i2c_delay1
                 __i2c_write3:
00b2d7 9b48      	sbis __i2c_pin,__scl_bit
00b2d8 cffe      	rjmp __i2c_write3
00b2d9 dfcd      	rcall __i2c_delay1
00b2da 9a50      	sbi  __i2c_dir,__scl_bit
00b2db 957a      	dec  r23
00b2dc f791      	brne __i2c_write0
00b2dd 9851      	cbi  __i2c_dir,__sda_bit
00b2de dfc8      	rcall __i2c_delay1
00b2df 9850      	cbi  __i2c_dir,__scl_bit
00b2e0 dfce      	rcall __i2c_delay2
00b2e1 e0e1      	ldi  r30,1
00b2e2 9949      	sbic __i2c_pin,__sda_bit
00b2e3 27ee      	clr  r30
00b2e4 9a50      	sbi  __i2c_dir,__scl_bit
00b2e5 cfc1      	rjmp __i2c_delay1
                 
                 _delay_ms:
00b2e6 9610      	adiw r26,0
00b2e7 f039      	breq __delay_ms1
                 __delay_ms0:
                +
00b2e8 ed80     +LDI R24 , LOW ( 0x7D0 )
00b2e9 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00b2ea 9701     +SBIW R24 , 1
00b2eb f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00b2ec 95a8      	wdr
00b2ed 9711      	sbiw r26,1
00b2ee f7c9      	brne __delay_ms0
                 __delay_ms1:
00b2ef 9508      	ret
                 
                 __ANEGF1:
00b2f0 9730      	SBIW R30,0
00b2f1 4060      	SBCI R22,0
00b2f2 4070      	SBCI R23,0
00b2f3 f009      	BREQ __ANEGF10
00b2f4 5870      	SUBI R23,0x80
                 __ANEGF10:
00b2f5 9508      	RET
                 
                 __ROUND_REPACK:
00b2f6 2355      	TST  R21
00b2f7 f442      	BRPL __REPACK
00b2f8 3850      	CPI  R21,0x80
00b2f9 f411      	BRNE __ROUND_REPACK0
00b2fa ffe0      	SBRS R30,0
00b2fb c004      	RJMP __REPACK
                 __ROUND_REPACK0:
00b2fc 9631      	ADIW R30,1
00b2fd 1f69      	ADC  R22,R25
00b2fe 1f79      	ADC  R23,R25
00b2ff f06b      	BRVS __REPACK1
                 
                 __REPACK:
00b300 e850      	LDI  R21,0x80
00b301 2757      	EOR  R21,R23
00b302 f411      	BRNE __REPACK0
00b303 935f      	PUSH R21
00b304 c0cf      	RJMP __ZERORES
                 __REPACK0:
00b305 3f5f      	CPI  R21,0xFF
00b306 f031      	BREQ __REPACK1
00b307 0f66      	LSL  R22
00b308 0c00      	LSL  R0
00b309 9557      	ROR  R21
00b30a 9567      	ROR  R22
00b30b 2f75      	MOV  R23,R21
00b30c 9508      	RET
                 __REPACK1:
00b30d 935f      	PUSH R21
00b30e 2000      	TST  R0
00b30f f00a      	BRMI __REPACK2
00b310 c0cf      	RJMP __MAXRES
                 __REPACK2:
00b311 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00b312 e850      	LDI  R21,0x80
00b313 2e19      	MOV  R1,R25
00b314 2215      	AND  R1,R21
00b315 0f88      	LSL  R24
00b316 1f99      	ROL  R25
00b317 2795      	EOR  R25,R21
00b318 0f55      	LSL  R21
00b319 9587      	ROR  R24
                 
                 __UNPACK1:
00b31a e850      	LDI  R21,0x80
00b31b 2e07      	MOV  R0,R23
00b31c 2205      	AND  R0,R21
00b31d 0f66      	LSL  R22
00b31e 1f77      	ROL  R23
00b31f 2775      	EOR  R23,R21
00b320 0f55      	LSL  R21
00b321 9567      	ROR  R22
00b322 9508      	RET
                 
                 __CFD1U:
00b323 9468      	SET
00b324 c001      	RJMP __CFD1U0
                 __CFD1:
00b325 94e8      	CLT
                 __CFD1U0:
00b326 935f      	PUSH R21
00b327 dff2      	RCALL __UNPACK1
00b328 3870      	CPI  R23,0x80
00b329 f018      	BRLO __CFD10
00b32a 3f7f      	CPI  R23,0xFF
00b32b f408      	BRCC __CFD10
00b32c c0a7      	RJMP __ZERORES
                 __CFD10:
00b32d e156      	LDI  R21,22
00b32e 1b57      	SUB  R21,R23
00b32f f4aa      	BRPL __CFD11
00b330 9551      	NEG  R21
00b331 3058      	CPI  R21,8
00b332 f40e      	BRTC __CFD19
00b333 3059      	CPI  R21,9
                 __CFD19:
00b334 f030      	BRLO __CFD17
00b335 efef      	SER  R30
00b336 efff      	SER  R31
00b337 ef6f      	SER  R22
00b338 e77f      	LDI  R23,0x7F
00b339 f977      	BLD  R23,7
00b33a c01a      	RJMP __CFD15
                 __CFD17:
00b33b 2777      	CLR  R23
00b33c 2355      	TST  R21
00b33d f0b9      	BREQ __CFD15
                 __CFD18:
00b33e 0fee      	LSL  R30
00b33f 1fff      	ROL  R31
00b340 1f66      	ROL  R22
00b341 1f77      	ROL  R23
00b342 955a      	DEC  R21
00b343 f7d1      	BRNE __CFD18
00b344 c010      	RJMP __CFD15
                 __CFD11:
00b345 2777      	CLR  R23
                 __CFD12:
00b346 3058      	CPI  R21,8
00b347 f028      	BRLO __CFD13
00b348 2fef      	MOV  R30,R31
00b349 2ff6      	MOV  R31,R22
00b34a 2f67      	MOV  R22,R23
00b34b 5058      	SUBI R21,8
00b34c cff9      	RJMP __CFD12
                 __CFD13:
00b34d 2355      	TST  R21
00b34e f031      	BREQ __CFD15
                 __CFD14:
00b34f 9576      	LSR  R23
00b350 9567      	ROR  R22
00b351 95f7      	ROR  R31
00b352 95e7      	ROR  R30
00b353 955a      	DEC  R21
00b354 f7d1      	BRNE __CFD14
                 __CFD15:
00b355 2000      	TST  R0
00b356 f40a      	BRPL __CFD16
00b357 d167      	RCALL __ANEGD1
                 __CFD16:
00b358 915f      	POP  R21
00b359 9508      	RET
                 
                 __CDF1U:
00b35a 9468      	SET
00b35b c001      	RJMP __CDF1U0
                 __CDF1:
00b35c 94e8      	CLT
                 __CDF1U0:
00b35d 9730      	SBIW R30,0
00b35e 4060      	SBCI R22,0
00b35f 4070      	SBCI R23,0
00b360 f0b1      	BREQ __CDF10
00b361 2400      	CLR  R0
00b362 f026      	BRTS __CDF11
00b363 2377      	TST  R23
00b364 f412      	BRPL __CDF11
00b365 9400      	COM  R0
00b366 d158      	RCALL __ANEGD1
                 __CDF11:
00b367 2e17      	MOV  R1,R23
00b368 e17e      	LDI  R23,30
00b369 2011      	TST  R1
                 __CDF12:
00b36a f032      	BRMI __CDF13
00b36b 957a      	DEC  R23
00b36c 0fee      	LSL  R30
00b36d 1fff      	ROL  R31
00b36e 1f66      	ROL  R22
00b36f 1c11      	ROL  R1
00b370 cff9      	RJMP __CDF12
                 __CDF13:
00b371 2fef      	MOV  R30,R31
00b372 2ff6      	MOV  R31,R22
00b373 2d61      	MOV  R22,R1
00b374 935f      	PUSH R21
00b375 df8a      	RCALL __REPACK
00b376 915f      	POP  R21
                 __CDF10:
00b377 9508      	RET
                 
                 __SWAPACC:
00b378 934f      	PUSH R20
00b379 01af      	MOVW R20,R30
00b37a 01fd      	MOVW R30,R26
00b37b 01da      	MOVW R26,R20
00b37c 01ab      	MOVW R20,R22
00b37d 01bc      	MOVW R22,R24
00b37e 01ca      	MOVW R24,R20
00b37f 2d40      	MOV  R20,R0
00b380 2c01      	MOV  R0,R1
00b381 2e14      	MOV  R1,R20
00b382 914f      	POP  R20
00b383 9508      	RET
                 
                 __UADD12:
00b384 0fea      	ADD  R30,R26
00b385 1ffb      	ADC  R31,R27
00b386 1f68      	ADC  R22,R24
00b387 9508      	RET
                 
                 __NEGMAN1:
00b388 95e0      	COM  R30
00b389 95f0      	COM  R31
00b38a 9560      	COM  R22
00b38b 5fef      	SUBI R30,-1
00b38c 4fff      	SBCI R31,-1
00b38d 4f6f      	SBCI R22,-1
00b38e 9508      	RET
                 
                 __SUBF12:
00b38f 935f      	PUSH R21
00b390 df81      	RCALL __UNPACK
00b391 3890      	CPI  R25,0x80
00b392 f171      	BREQ __ADDF129
00b393 e850      	LDI  R21,0x80
00b394 2615      	EOR  R1,R21
                 
00b395 c004      	RJMP __ADDF120
                 
                 __ADDF12:
00b396 935f      	PUSH R21
00b397 df7a      	RCALL __UNPACK
00b398 3890      	CPI  R25,0x80
00b399 f139      	BREQ __ADDF129
                 
                 __ADDF120:
00b39a 3870      	CPI  R23,0x80
00b39b f121      	BREQ __ADDF128
                 __ADDF121:
00b39c 2f57      	MOV  R21,R23
00b39d 1b59      	SUB  R21,R25
00b39e f12b      	BRVS __ADDF1211
00b39f f412      	BRPL __ADDF122
00b3a0 dfd7      	RCALL __SWAPACC
00b3a1 cffa      	RJMP __ADDF121
                 __ADDF122:
00b3a2 3158      	CPI  R21,24
00b3a3 f018      	BRLO __ADDF123
00b3a4 27aa      	CLR  R26
00b3a5 27bb      	CLR  R27
00b3a6 2788      	CLR  R24
                 __ADDF123:
00b3a7 3058      	CPI  R21,8
00b3a8 f028      	BRLO __ADDF124
00b3a9 2fab      	MOV  R26,R27
00b3aa 2fb8      	MOV  R27,R24
00b3ab 2788      	CLR  R24
00b3ac 5058      	SUBI R21,8
00b3ad cff9      	RJMP __ADDF123
                 __ADDF124:
00b3ae 2355      	TST  R21
00b3af f029      	BREQ __ADDF126
                 __ADDF125:
00b3b0 9586      	LSR  R24
00b3b1 95b7      	ROR  R27
00b3b2 95a7      	ROR  R26
00b3b3 955a      	DEC  R21
00b3b4 f7d9      	BRNE __ADDF125
                 __ADDF126:
00b3b5 2d50      	MOV  R21,R0
00b3b6 2551      	EOR  R21,R1
00b3b7 f072      	BRMI __ADDF127
00b3b8 dfcb      	RCALL __UADD12
00b3b9 f438      	BRCC __ADDF129
00b3ba 9567      	ROR  R22
00b3bb 95f7      	ROR  R31
00b3bc 95e7      	ROR  R30
00b3bd 9573      	INC  R23
00b3be f413      	BRVC __ADDF129
00b3bf c020      	RJMP __MAXRES
                 __ADDF128:
00b3c0 dfb7      	RCALL __SWAPACC
                 __ADDF129:
00b3c1 df3e      	RCALL __REPACK
00b3c2 915f      	POP  R21
00b3c3 9508      	RET
                 __ADDF1211:
00b3c4 f7d8      	BRCC __ADDF128
00b3c5 cffb      	RJMP __ADDF129
                 __ADDF127:
00b3c6 1bea      	SUB  R30,R26
00b3c7 0bfb      	SBC  R31,R27
00b3c8 0b68      	SBC  R22,R24
00b3c9 f051      	BREQ __ZERORES
00b3ca f410      	BRCC __ADDF1210
00b3cb 9400      	COM  R0
00b3cc dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
00b3cd 2366      	TST  R22
00b3ce f392      	BRMI __ADDF129
00b3cf 0fee      	LSL  R30
00b3d0 1fff      	ROL  R31
00b3d1 1f66      	ROL  R22
00b3d2 957a      	DEC  R23
00b3d3 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00b3d4 27ee      	CLR  R30
00b3d5 27ff      	CLR  R31
00b3d6 2766      	CLR  R22
00b3d7 2777      	CLR  R23
00b3d8 915f      	POP  R21
00b3d9 9508      	RET
                 
                 __MINRES:
00b3da efef      	SER  R30
00b3db efff      	SER  R31
00b3dc e76f      	LDI  R22,0x7F
00b3dd ef7f      	SER  R23
00b3de 915f      	POP  R21
00b3df 9508      	RET
                 
                 __MAXRES:
00b3e0 efef      	SER  R30
00b3e1 efff      	SER  R31
00b3e2 e76f      	LDI  R22,0x7F
00b3e3 e77f      	LDI  R23,0x7F
00b3e4 915f      	POP  R21
00b3e5 9508      	RET
                 
                 __MULF12:
00b3e6 935f      	PUSH R21
00b3e7 df2a      	RCALL __UNPACK
00b3e8 3870      	CPI  R23,0x80
00b3e9 f351      	BREQ __ZERORES
00b3ea 3890      	CPI  R25,0x80
00b3eb f341      	BREQ __ZERORES
00b3ec 2401      	EOR  R0,R1
00b3ed 9408      	SEC
00b3ee 1f79      	ADC  R23,R25
00b3ef f423      	BRVC __MULF124
00b3f0 f31c      	BRLT __ZERORES
                 __MULF125:
00b3f1 2000      	TST  R0
00b3f2 f33a      	BRMI __MINRES
00b3f3 cfec      	RJMP __MAXRES
                 __MULF124:
00b3f4 920f      	PUSH R0
00b3f5 931f      	PUSH R17
00b3f6 932f      	PUSH R18
00b3f7 933f      	PUSH R19
00b3f8 934f      	PUSH R20
00b3f9 2711      	CLR  R17
00b3fa 2722      	CLR  R18
00b3fb 2799      	CLR  R25
00b3fc 9f68      	MUL  R22,R24
00b3fd 01a0      	MOVW R20,R0
00b3fe 9f8f      	MUL  R24,R31
00b3ff 2d30      	MOV  R19,R0
00b400 0d41      	ADD  R20,R1
00b401 1f59      	ADC  R21,R25
00b402 9f6b      	MUL  R22,R27
00b403 0d30      	ADD  R19,R0
00b404 1d41      	ADC  R20,R1
00b405 1f59      	ADC  R21,R25
00b406 9f8e      	MUL  R24,R30
00b407 d027      	RCALL __MULF126
00b408 9fbf      	MUL  R27,R31
00b409 d025      	RCALL __MULF126
00b40a 9f6a      	MUL  R22,R26
00b40b d023      	RCALL __MULF126
00b40c 9fbe      	MUL  R27,R30
00b40d d01d      	RCALL __MULF127
00b40e 9faf      	MUL  R26,R31
00b40f d01b      	RCALL __MULF127
00b410 9fae      	MUL  R26,R30
00b411 0d11      	ADD  R17,R1
00b412 1f29      	ADC  R18,R25
00b413 1f39      	ADC  R19,R25
00b414 1f49      	ADC  R20,R25
00b415 1f59      	ADC  R21,R25
00b416 2fe3      	MOV  R30,R19
00b417 2ff4      	MOV  R31,R20
00b418 2f65      	MOV  R22,R21
00b419 2f52      	MOV  R21,R18
00b41a 914f      	POP  R20
00b41b 913f      	POP  R19
00b41c 912f      	POP  R18
00b41d 911f      	POP  R17
00b41e 900f      	POP  R0
00b41f 2366      	TST  R22
00b420 f02a      	BRMI __MULF122
00b421 0f55      	LSL  R21
00b422 1fee      	ROL  R30
00b423 1fff      	ROL  R31
00b424 1f66      	ROL  R22
00b425 c002      	RJMP __MULF123
                 __MULF122:
00b426 9573      	INC  R23
00b427 f24b      	BRVS __MULF125
                 __MULF123:
00b428 decd      	RCALL __ROUND_REPACK
00b429 915f      	POP  R21
00b42a 9508      	RET
                 
                 __MULF127:
00b42b 0d10      	ADD  R17,R0
00b42c 1d21      	ADC  R18,R1
00b42d 1f39      	ADC  R19,R25
00b42e c002      	RJMP __MULF128
                 __MULF126:
00b42f 0d20      	ADD  R18,R0
00b430 1d31      	ADC  R19,R1
                 __MULF128:
00b431 1f49      	ADC  R20,R25
00b432 1f59      	ADC  R21,R25
00b433 9508      	RET
                 
                 __DIVF21:
00b434 935f      	PUSH R21
00b435 dedc      	RCALL __UNPACK
00b436 3870      	CPI  R23,0x80
00b437 f421      	BRNE __DIVF210
00b438 2011      	TST  R1
                 __DIVF211:
00b439 f40a      	BRPL __DIVF219
00b43a cf9f      	RJMP __MINRES
                 __DIVF219:
00b43b cfa4      	RJMP __MAXRES
                 __DIVF210:
00b43c 3890      	CPI  R25,0x80
00b43d f409      	BRNE __DIVF218
                 __DIVF217:
00b43e cf95      	RJMP __ZERORES
                 __DIVF218:
00b43f 2401      	EOR  R0,R1
00b440 9408      	SEC
00b441 0b97      	SBC  R25,R23
00b442 f41b      	BRVC __DIVF216
00b443 f3d4      	BRLT __DIVF217
00b444 2000      	TST  R0
00b445 cff3      	RJMP __DIVF211
                 __DIVF216:
00b446 2f79      	MOV  R23,R25
00b447 931f      	PUSH R17
00b448 932f      	PUSH R18
00b449 933f      	PUSH R19
00b44a 934f      	PUSH R20
00b44b 2411      	CLR  R1
00b44c 2711      	CLR  R17
00b44d 2722      	CLR  R18
00b44e 2733      	CLR  R19
00b44f 2744      	CLR  R20
00b450 2755      	CLR  R21
00b451 e290      	LDI  R25,32
                 __DIVF212:
00b452 17ae      	CP   R26,R30
00b453 07bf      	CPC  R27,R31
00b454 0786      	CPC  R24,R22
00b455 0741      	CPC  R20,R17
00b456 f030      	BRLO __DIVF213
00b457 1bae      	SUB  R26,R30
00b458 0bbf      	SBC  R27,R31
00b459 0b86      	SBC  R24,R22
00b45a 0b41      	SBC  R20,R17
00b45b 9408      	SEC
00b45c c001      	RJMP __DIVF214
                 __DIVF213:
00b45d 9488      	CLC
                 __DIVF214:
00b45e 1f55      	ROL  R21
00b45f 1f22      	ROL  R18
00b460 1f33      	ROL  R19
00b461 1c11      	ROL  R1
00b462 1faa      	ROL  R26
00b463 1fbb      	ROL  R27
00b464 1f88      	ROL  R24
00b465 1f44      	ROL  R20
00b466 959a      	DEC  R25
00b467 f751      	BRNE __DIVF212
00b468 01f9      	MOVW R30,R18
00b469 2d61      	MOV  R22,R1
00b46a 914f      	POP  R20
00b46b 913f      	POP  R19
00b46c 912f      	POP  R18
00b46d 911f      	POP  R17
00b46e 2366      	TST  R22
00b46f f032      	BRMI __DIVF215
00b470 0f55      	LSL  R21
00b471 1fee      	ROL  R30
00b472 1fff      	ROL  R31
00b473 1f66      	ROL  R22
00b474 957a      	DEC  R23
00b475 f243      	BRVS __DIVF217
                 __DIVF215:
00b476 de7f      	RCALL __ROUND_REPACK
00b477 915f      	POP  R21
00b478 9508      	RET
                 
                 __CMPF12:
00b479 2399      	TST  R25
00b47a f09a      	BRMI __CMPF120
00b47b 2377      	TST  R23
00b47c f042      	BRMI __CMPF121
00b47d 1797      	CP   R25,R23
00b47e f048      	BRLO __CMPF122
00b47f f429      	BRNE __CMPF121
00b480 17ae      	CP   R26,R30
00b481 07bf      	CPC  R27,R31
00b482 0786      	CPC  R24,R22
00b483 f020      	BRLO __CMPF122
00b484 f031      	BREQ __CMPF123
                 __CMPF121:
00b485 9498      	CLZ
00b486 9488      	CLC
00b487 9508      	RET
                 __CMPF122:
00b488 9498      	CLZ
00b489 9408      	SEC
00b48a 9508      	RET
                 __CMPF123:
00b48b 9418      	SEZ
00b48c 9488      	CLC
00b48d 9508      	RET
                 __CMPF120:
00b48e 2377      	TST  R23
00b48f f7c2      	BRPL __CMPF122
00b490 1797      	CP   R25,R23
00b491 f398      	BRLO __CMPF121
00b492 f7a9      	BRNE __CMPF122
00b493 17ea      	CP   R30,R26
00b494 07fb      	CPC  R31,R27
00b495 0768      	CPC  R22,R24
00b496 f388      	BRLO __CMPF122
00b497 f399      	BREQ __CMPF123
00b498 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
00b499 2400      	CLR  R0
00b49a 0daf      	ADD  R26,R15
00b49b 1db0      	ADC  R27,R0
00b49c 9508      	RET
                 
                 __ADDD12:
00b49d 0fea      	ADD  R30,R26
00b49e 1ffb      	ADC  R31,R27
00b49f 1f68      	ADC  R22,R24
00b4a0 1f79      	ADC  R23,R25
00b4a1 9508      	RET
                 
                 __ADDD21:
00b4a2 0fae      	ADD  R26,R30
00b4a3 1fbf      	ADC  R27,R31
00b4a4 1f86      	ADC  R24,R22
00b4a5 1f97      	ADC  R25,R23
00b4a6 9508      	RET
                 
                 __SUBD12:
00b4a7 1bea      	SUB  R30,R26
00b4a8 0bfb      	SBC  R31,R27
00b4a9 0b68      	SBC  R22,R24
00b4aa 0b79      	SBC  R23,R25
00b4ab 9508      	RET
                 
                 __SUBD21:
00b4ac 1bae      	SUB  R26,R30
00b4ad 0bbf      	SBC  R27,R31
00b4ae 0b86      	SBC  R24,R22
00b4af 0b97      	SBC  R25,R23
00b4b0 9508      	RET
                 
                 __ANDD12:
00b4b1 23ea      	AND  R30,R26
00b4b2 23fb      	AND  R31,R27
00b4b3 2368      	AND  R22,R24
00b4b4 2379      	AND  R23,R25
00b4b5 9508      	RET
                 
                 __ORD12:
00b4b6 2bea      	OR   R30,R26
00b4b7 2bfb      	OR   R31,R27
00b4b8 2b68      	OR   R22,R24
00b4b9 2b79      	OR   R23,R25
00b4ba 9508      	RET
                 
                 __ANEGW1:
00b4bb 95f1      	NEG  R31
00b4bc 95e1      	NEG  R30
00b4bd 40f0      	SBCI R31,0
00b4be 9508      	RET
                 
                 __ANEGD1:
00b4bf 95f0      	COM  R31
00b4c0 9560      	COM  R22
00b4c1 9570      	COM  R23
00b4c2 95e1      	NEG  R30
00b4c3 4fff      	SBCI R31,-1
00b4c4 4f6f      	SBCI R22,-1
00b4c5 4f7f      	SBCI R23,-1
00b4c6 9508      	RET
                 
                 __LSLW12:
00b4c7 23ee      	TST  R30
00b4c8 2e0e      	MOV  R0,R30
00b4c9 01fd      	MOVW R30,R26
00b4ca f021      	BREQ __LSLW12R
                 __LSLW12L:
00b4cb 0fee      	LSL  R30
00b4cc 1fff      	ROL  R31
00b4cd 940a      	DEC  R0
00b4ce f7e1      	BRNE __LSLW12L
                 __LSLW12R:
00b4cf 9508      	RET
                 
                 __LSLD12:
00b4d0 23ee      	TST  R30
00b4d1 2e0e      	MOV  R0,R30
00b4d2 01fd      	MOVW R30,R26
00b4d3 01bc      	MOVW R22,R24
00b4d4 f031      	BREQ __LSLD12R
                 __LSLD12L:
00b4d5 0fee      	LSL  R30
00b4d6 1fff      	ROL  R31
00b4d7 1f66      	ROL  R22
00b4d8 1f77      	ROL  R23
00b4d9 940a      	DEC  R0
00b4da f7d1      	BRNE __LSLD12L
                 __LSLD12R:
00b4db 9508      	RET
                 
                 __LSRD12:
00b4dc 23ee      	TST  R30
00b4dd 2e0e      	MOV  R0,R30
00b4de 01fd      	MOVW R30,R26
00b4df 01bc      	MOVW R22,R24
00b4e0 f031      	BREQ __LSRD12R
                 __LSRD12L:
00b4e1 9576      	LSR  R23
00b4e2 9567      	ROR  R22
00b4e3 95f7      	ROR  R31
00b4e4 95e7      	ROR  R30
00b4e5 940a      	DEC  R0
00b4e6 f7d1      	BRNE __LSRD12L
                 __LSRD12R:
00b4e7 9508      	RET
                 
                 __LSLW4:
00b4e8 0fee      	LSL  R30
00b4e9 1fff      	ROL  R31
                 __LSLW3:
00b4ea 0fee      	LSL  R30
00b4eb 1fff      	ROL  R31
                 __LSLW2:
00b4ec 0fee      	LSL  R30
00b4ed 1fff      	ROL  R31
00b4ee 0fee      	LSL  R30
00b4ef 1fff      	ROL  R31
00b4f0 9508      	RET
                 
                 __ASRW4:
00b4f1 95f5      	ASR  R31
00b4f2 95e7      	ROR  R30
                 __ASRW3:
00b4f3 95f5      	ASR  R31
00b4f4 95e7      	ROR  R30
                 __ASRW2:
00b4f5 95f5      	ASR  R31
00b4f6 95e7      	ROR  R30
00b4f7 95f5      	ASR  R31
00b4f8 95e7      	ROR  R30
00b4f9 9508      	RET
                 
                 __LSRW4:
00b4fa 95f6      	LSR  R31
00b4fb 95e7      	ROR  R30
                 __LSRW3:
00b4fc 95f6      	LSR  R31
00b4fd 95e7      	ROR  R30
                 __LSRW2:
00b4fe 95f6      	LSR  R31
00b4ff 95e7      	ROR  R30
00b500 95f6      	LSR  R31
00b501 95e7      	ROR  R30
00b502 9508      	RET
                 
                 __LSRD1:
00b503 9576      	LSR  R23
00b504 9567      	ROR  R22
00b505 95f7      	ROR  R31
00b506 95e7      	ROR  R30
00b507 9508      	RET
                 
                 __LSLD1:
00b508 0fee      	LSL  R30
00b509 1fff      	ROL  R31
00b50a 1f66      	ROL  R22
00b50b 1f77      	ROL  R23
00b50c 9508      	RET
                 
                 __ASRW8:
00b50d 2fef      	MOV  R30,R31
00b50e 27ff      	CLR  R31
00b50f fde7      	SBRC R30,7
00b510 efff      	SER  R31
00b511 9508      	RET
                 
                 __LSRD16:
00b512 2fe6      	MOV  R30,R22
00b513 2ff7      	MOV  R31,R23
00b514 e060      	LDI  R22,0
00b515 e070      	LDI  R23,0
00b516 9508      	RET
                 
                 __LSLD16:
00b517 2f6e      	MOV  R22,R30
00b518 2f7f      	MOV  R23,R31
00b519 e0e0      	LDI  R30,0
00b51a e0f0      	LDI  R31,0
00b51b 9508      	RET
                 
                 __CBD1:
00b51c 2ffe      	MOV  R31,R30
00b51d 0fff      	ADD  R31,R31
00b51e 0bff      	SBC  R31,R31
00b51f 2f6f      	MOV  R22,R31
00b520 2f7f      	MOV  R23,R31
00b521 9508      	RET
                 
                 __CWD1:
00b522 2f6f      	MOV  R22,R31
00b523 0f66      	ADD  R22,R22
00b524 0b66      	SBC  R22,R22
00b525 2f76      	MOV  R23,R22
00b526 9508      	RET
                 
                 __COMD1:
00b527 95e0      	COM  R30
00b528 95f0      	COM  R31
00b529 9560      	COM  R22
00b52a 9570      	COM  R23
00b52b 9508      	RET
                 
                 __EQB12:
00b52c 17ea      	CP   R30,R26
00b52d e0e1      	LDI  R30,1
00b52e f009      	BREQ __EQB12T
00b52f 27ee      	CLR  R30
                 __EQB12T:
00b530 9508      	RET
                 
                 __LNEGB1:
00b531 23ee      	TST  R30
00b532 e0e1      	LDI  R30,1
00b533 f009      	BREQ __LNEGB1F
00b534 27ee      	CLR  R30
                 __LNEGB1F:
00b535 9508      	RET
                 
                 __LNEGW1:
00b536 2bef      	OR   R30,R31
00b537 e0e1      	LDI  R30,1
00b538 f009      	BREQ __LNEGW1F
00b539 e0e0      	LDI  R30,0
                 __LNEGW1F:
00b53a 9508      	RET
                 
                 __MULW12U:
00b53b 9ffa      	MUL  R31,R26
00b53c 2df0      	MOV  R31,R0
00b53d 9feb      	MUL  R30,R27
00b53e 0df0      	ADD  R31,R0
00b53f 9fea      	MUL  R30,R26
00b540 2de0      	MOV  R30,R0
00b541 0df1      	ADD  R31,R1
00b542 9508      	RET
                 
                 __MULD12U:
00b543 9f7a      	MUL  R23,R26
00b544 2d70      	MOV  R23,R0
00b545 9f6b      	MUL  R22,R27
00b546 0d70      	ADD  R23,R0
00b547 9ff8      	MUL  R31,R24
00b548 0d70      	ADD  R23,R0
00b549 9fe9      	MUL  R30,R25
00b54a 0d70      	ADD  R23,R0
00b54b 9f6a      	MUL  R22,R26
00b54c 2d60      	MOV  R22,R0
00b54d 0d71      	ADD  R23,R1
00b54e 9ffb      	MUL  R31,R27
00b54f 0d60      	ADD  R22,R0
00b550 1d71      	ADC  R23,R1
00b551 9fe8      	MUL  R30,R24
00b552 0d60      	ADD  R22,R0
00b553 1d71      	ADC  R23,R1
00b554 2788      	CLR  R24
00b555 9ffa      	MUL  R31,R26
00b556 2df0      	MOV  R31,R0
00b557 0d61      	ADD  R22,R1
00b558 1f78      	ADC  R23,R24
00b559 9feb      	MUL  R30,R27
00b55a 0df0      	ADD  R31,R0
00b55b 1d61      	ADC  R22,R1
00b55c 1f78      	ADC  R23,R24
00b55d 9fea      	MUL  R30,R26
00b55e 2de0      	MOV  R30,R0
00b55f 0df1      	ADD  R31,R1
00b560 1f68      	ADC  R22,R24
00b561 1f78      	ADC  R23,R24
00b562 9508      	RET
                 
                 __MULB1W2U:
00b563 2f6e      	MOV  R22,R30
00b564 9f6a      	MUL  R22,R26
00b565 01f0      	MOVW R30,R0
00b566 9f6b      	MUL  R22,R27
00b567 0df0      	ADD  R31,R0
00b568 9508      	RET
                 
                 __MULW12:
00b569 d07e      	RCALL __CHKSIGNW
00b56a dfd0      	RCALL __MULW12U
00b56b f40e      	BRTC __MULW121
00b56c df4e      	RCALL __ANEGW1
                 __MULW121:
00b56d 9508      	RET
                 
                 __DIVB21U:
00b56e 2400      	CLR  R0
00b56f e098      	LDI  R25,8
                 __DIVB21U1:
00b570 0faa      	LSL  R26
00b571 1c00      	ROL  R0
00b572 1a0e      	SUB  R0,R30
00b573 f410      	BRCC __DIVB21U2
00b574 0e0e      	ADD  R0,R30
00b575 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
00b576 60a1      	SBR  R26,1
                 __DIVB21U3:
00b577 959a      	DEC  R25
00b578 f7b9      	BRNE __DIVB21U1
00b579 2fea      	MOV  R30,R26
00b57a 2da0      	MOV  R26,R0
00b57b 9508      	RET
                 
                 __DIVB21:
00b57c d05f      	RCALL __CHKSIGNB
00b57d dff0      	RCALL __DIVB21U
00b57e f40e      	BRTC __DIVB211
00b57f 95e1      	NEG  R30
                 __DIVB211:
00b580 9508      	RET
                 
                 __DIVW21U:
00b581 2400      	CLR  R0
00b582 2411      	CLR  R1
00b583 e190      	LDI  R25,16
                 __DIVW21U1:
00b584 0faa      	LSL  R26
00b585 1fbb      	ROL  R27
00b586 1c00      	ROL  R0
00b587 1c11      	ROL  R1
00b588 1a0e      	SUB  R0,R30
00b589 0a1f      	SBC  R1,R31
00b58a f418      	BRCC __DIVW21U2
00b58b 0e0e      	ADD  R0,R30
00b58c 1e1f      	ADC  R1,R31
00b58d c001      	RJMP __DIVW21U3
                 __DIVW21U2:
00b58e 60a1      	SBR  R26,1
                 __DIVW21U3:
00b58f 959a      	DEC  R25
00b590 f799      	BRNE __DIVW21U1
00b591 01fd      	MOVW R30,R26
00b592 01d0      	MOVW R26,R0
00b593 9508      	RET
                 
                 __DIVW21:
00b594 d053      	RCALL __CHKSIGNW
00b595 dfeb      	RCALL __DIVW21U
00b596 f40e      	BRTC __DIVW211
00b597 df23      	RCALL __ANEGW1
                 __DIVW211:
00b598 9508      	RET
                 
                 __DIVD21U:
00b599 933f      	PUSH R19
00b59a 934f      	PUSH R20
00b59b 935f      	PUSH R21
00b59c 2400      	CLR  R0
00b59d 2411      	CLR  R1
00b59e 2744      	CLR  R20
00b59f 2755      	CLR  R21
00b5a0 e230      	LDI  R19,32
                 __DIVD21U1:
00b5a1 0faa      	LSL  R26
00b5a2 1fbb      	ROL  R27
00b5a3 1f88      	ROL  R24
00b5a4 1f99      	ROL  R25
00b5a5 1c00      	ROL  R0
00b5a6 1c11      	ROL  R1
00b5a7 1f44      	ROL  R20
00b5a8 1f55      	ROL  R21
00b5a9 1a0e      	SUB  R0,R30
00b5aa 0a1f      	SBC  R1,R31
00b5ab 0b46      	SBC  R20,R22
00b5ac 0b57      	SBC  R21,R23
00b5ad f428      	BRCC __DIVD21U2
00b5ae 0e0e      	ADD  R0,R30
00b5af 1e1f      	ADC  R1,R31
00b5b0 1f46      	ADC  R20,R22
00b5b1 1f57      	ADC  R21,R23
00b5b2 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00b5b3 60a1      	SBR  R26,1
                 __DIVD21U3:
00b5b4 953a      	DEC  R19
00b5b5 f759      	BRNE __DIVD21U1
00b5b6 01fd      	MOVW R30,R26
00b5b7 01bc      	MOVW R22,R24
00b5b8 01d0      	MOVW R26,R0
00b5b9 01ca      	MOVW R24,R20
00b5ba 915f      	POP  R21
00b5bb 914f      	POP  R20
00b5bc 913f      	POP  R19
00b5bd 9508      	RET
                 
                 __MODB21:
00b5be 94e8      	CLT
00b5bf ffa7      	SBRS R26,7
00b5c0 c002      	RJMP __MODB211
00b5c1 95a1      	NEG  R26
00b5c2 9468      	SET
                 __MODB211:
00b5c3 fde7      	SBRC R30,7
00b5c4 95e1      	NEG  R30
00b5c5 dfa8      	RCALL __DIVB21U
00b5c6 2fea      	MOV  R30,R26
00b5c7 f40e      	BRTC __MODB212
00b5c8 95e1      	NEG  R30
                 __MODB212:
00b5c9 9508      	RET
                 
                 __MODW21:
00b5ca 94e8      	CLT
00b5cb ffb7      	SBRS R27,7
00b5cc c004      	RJMP __MODW211
00b5cd 95a0      	COM  R26
00b5ce 95b0      	COM  R27
00b5cf 9611      	ADIW R26,1
00b5d0 9468      	SET
                 __MODW211:
00b5d1 fdf7      	SBRC R31,7
00b5d2 dee8      	RCALL __ANEGW1
00b5d3 dfad      	RCALL __DIVW21U
00b5d4 01fd      	MOVW R30,R26
00b5d5 f40e      	BRTC __MODW212
00b5d6 dee4      	RCALL __ANEGW1
                 __MODW212:
00b5d7 9508      	RET
                 
                 __MODD21U:
00b5d8 dfc0      	RCALL __DIVD21U
00b5d9 01fd      	MOVW R30,R26
00b5da 01bc      	MOVW R22,R24
00b5db 9508      	RET
                 
                 __CHKSIGNB:
00b5dc 94e8      	CLT
00b5dd ffe7      	SBRS R30,7
00b5de c002      	RJMP __CHKSB1
00b5df 95e1      	NEG  R30
00b5e0 9468      	SET
                 __CHKSB1:
00b5e1 ffa7      	SBRS R26,7
00b5e2 c004      	RJMP __CHKSB2
00b5e3 95a1      	NEG  R26
00b5e4 f800      	BLD  R0,0
00b5e5 9403      	INC  R0
00b5e6 fa00      	BST  R0,0
                 __CHKSB2:
00b5e7 9508      	RET
                 
                 __CHKSIGNW:
00b5e8 94e8      	CLT
00b5e9 fff7      	SBRS R31,7
00b5ea c002      	RJMP __CHKSW1
00b5eb decf      	RCALL __ANEGW1
00b5ec 9468      	SET
                 __CHKSW1:
00b5ed ffb7      	SBRS R27,7
00b5ee c006      	RJMP __CHKSW2
00b5ef 95a0      	COM  R26
00b5f0 95b0      	COM  R27
00b5f1 9611      	ADIW R26,1
00b5f2 f800      	BLD  R0,0
00b5f3 9403      	INC  R0
00b5f4 fa00      	BST  R0,0
                 __CHKSW2:
00b5f5 9508      	RET
                 
                 __GETW1P:
00b5f6 91ed      	LD   R30,X+
00b5f7 91fc      	LD   R31,X
00b5f8 9711      	SBIW R26,1
00b5f9 9508      	RET
                 
                 __GETD1P:
00b5fa 91ed      	LD   R30,X+
00b5fb 91fd      	LD   R31,X+
00b5fc 916d      	LD   R22,X+
00b5fd 917c      	LD   R23,X
00b5fe 9713      	SBIW R26,3
00b5ff 9508      	RET
                 
                 __GETD1P_INC:
00b600 91ed      	LD   R30,X+
00b601 91fd      	LD   R31,X+
00b602 916d      	LD   R22,X+
00b603 917d      	LD   R23,X+
00b604 9508      	RET
                 
                 __PUTDP1:
00b605 93ed      	ST   X+,R30
00b606 93fd      	ST   X+,R31
00b607 936d      	ST   X+,R22
00b608 937c      	ST   X,R23
00b609 9508      	RET
                 
                 __PUTDP1_DEC:
00b60a 937e      	ST   -X,R23
00b60b 936e      	ST   -X,R22
00b60c 93fe      	ST   -X,R31
00b60d 93ee      	ST   -X,R30
00b60e 9508      	RET
                 
                 __GETD1PF:
00b60f bf6b      	OUT  RAMPZ,R22
00b610 9007      	ELPM R0,Z+
00b611 9017      	ELPM R1,Z+
00b612 9167      	ELPM R22,Z+
00b613 9176      	ELPM R23,Z
00b614 01f0      	MOVW R30,R0
00b615 9508      	RET
                 
                 __GETD1S0:
00b616 81e8      	LD   R30,Y
00b617 81f9      	LDD  R31,Y+1
00b618 816a      	LDD  R22,Y+2
00b619 817b      	LDD  R23,Y+3
00b61a 9508      	RET
                 
                 __GETD2S0:
00b61b 81a8      	LD   R26,Y
00b61c 81b9      	LDD  R27,Y+1
00b61d 818a      	LDD  R24,Y+2
00b61e 819b      	LDD  R25,Y+3
00b61f 9508      	RET
                 
                 __PUTD1S0:
00b620 83e8      	ST   Y,R30
00b621 83f9      	STD  Y+1,R31
00b622 836a      	STD  Y+2,R22
00b623 837b      	STD  Y+3,R23
00b624 9508      	RET
                 
                 __PUTDZ20:
00b625 83a0      	ST   Z,R26
00b626 83b1      	STD  Z+1,R27
00b627 8382      	STD  Z+2,R24
00b628 8393      	STD  Z+3,R25
00b629 9508      	RET
                 
                 __PUTPARD1:
00b62a 937a      	ST   -Y,R23
00b62b 936a      	ST   -Y,R22
00b62c 93fa      	ST   -Y,R31
00b62d 93ea      	ST   -Y,R30
00b62e 9508      	RET
                 
                 __PUTPARD2:
00b62f 939a      	ST   -Y,R25
00b630 938a      	ST   -Y,R24
00b631 93ba      	ST   -Y,R27
00b632 93aa      	ST   -Y,R26
00b633 9508      	RET
                 
                 __PUTPARL:
00b634 27bb      	CLR  R27
                 __PUTPAR:
00b635 0fea      	ADD  R30,R26
00b636 1ffb      	ADC  R31,R27
                 __PUTPAR0:
00b637 9002      	LD   R0,-Z
00b638 920a      	ST   -Y,R0
00b639 9711      	SBIW R26,1
00b63a f7e1      	BRNE __PUTPAR0
00b63b 9508      	RET
                 
                 __SWAPD12:
00b63c 2e18      	MOV  R1,R24
00b63d 2f86      	MOV  R24,R22
00b63e 2d61      	MOV  R22,R1
00b63f 2e19      	MOV  R1,R25
00b640 2f97      	MOV  R25,R23
00b641 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00b642 2e1b      	MOV  R1,R27
00b643 2fbf      	MOV  R27,R31
00b644 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00b645 2e1a      	MOV  R1,R26
00b646 2fae      	MOV  R26,R30
00b647 2de1      	MOV  R30,R1
00b648 9508      	RET
                 
                 __EEPROMRDD:
00b649 9612      	ADIW R26,2
00b64a d002      	RCALL __EEPROMRDW
00b64b 01bf      	MOVW R22,R30
00b64c 9712      	SBIW R26,2
                 
                 __EEPROMRDW:
00b64d 9611      	ADIW R26,1
00b64e d002      	RCALL __EEPROMRDB
00b64f 2ffe      	MOV  R31,R30
00b650 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
00b651 99f9      	SBIC EECR,EEWE
00b652 cffe      	RJMP __EEPROMRDB
00b653 93ff      	PUSH R31
00b654 b7ff      	IN   R31,SREG
00b655 94f8      	CLI
00b656 bda1      	OUT  EEARL,R26
00b657 bdb2      	OUT  EEARH,R27
00b658 9af8      	SBI  EECR,EERE
00b659 b5e0      	IN   R30,EEDR
00b65a bfff      	OUT  SREG,R31
00b65b 91ff      	POP  R31
00b65c 9508      	RET
                 
                 __EEPROMWRD:
00b65d d007      	RCALL __EEPROMWRW
00b65e 9612      	ADIW R26,2
00b65f 010f      	MOVW R0,R30
00b660 01fb      	MOVW R30,R22
00b661 d003      	RCALL __EEPROMWRW
00b662 01f0      	MOVW R30,R0
00b663 9712      	SBIW R26,2
00b664 9508      	RET
                 
                 __EEPROMWRW:
00b665 d007      	RCALL __EEPROMWRB
00b666 9611      	ADIW R26,1
00b667 93ef      	PUSH R30
00b668 2fef      	MOV  R30,R31
00b669 d003      	RCALL __EEPROMWRB
00b66a 91ef      	POP  R30
00b66b 9711      	SBIW R26,1
00b66c 9508      	RET
                 
                 __EEPROMWRB:
00b66d 9bf9      	SBIS EECR,EEWE
00b66e c002      	RJMP __EEPROMWRB1
00b66f 95a8      	WDR
00b670 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
00b671 b79f      	IN   R25,SREG
00b672 94f8      	CLI
00b673 bda1      	OUT  EEARL,R26
00b674 bdb2      	OUT  EEARH,R27
00b675 9af8      	SBI  EECR,EERE
00b676 b580      	IN   R24,EEDR
00b677 17e8      	CP   R30,R24
00b678 f019      	BREQ __EEPROMWRB0
00b679 bde0      	OUT  EEDR,R30
00b67a 9afa      	SBI  EECR,EEMWE
00b67b 9af9      	SBI  EECR,EEWE
                 __EEPROMWRB0:
00b67c bf9f      	OUT  SREG,R25
00b67d 9508      	RET
                 
                 __CPD10:
00b67e 9730      	SBIW R30,0
00b67f 4060      	SBCI R22,0
00b680 4070      	SBCI R23,0
00b681 9508      	RET
                 
                 __CPW02:
00b682 2400      	CLR  R0
00b683 160a      	CP   R0,R26
00b684 060b      	CPC  R0,R27
00b685 9508      	RET
                 
                 __CPD20:
00b686 9710      	SBIW R26,0
00b687 4080      	SBCI R24,0
00b688 4090      	SBCI R25,0
00b689 9508      	RET
                 
                 __CPD02:
00b68a 2400      	CLR  R0
00b68b 160a      	CP   R0,R26
00b68c 060b      	CPC  R0,R27
00b68d 0608      	CPC  R0,R24
00b68e 0609      	CPC  R0,R25
00b68f 9508      	RET
                 
                 __CPD12:
00b690 17ea      	CP   R30,R26
00b691 07fb      	CPC  R31,R27
00b692 0768      	CPC  R22,R24
00b693 0779      	CPC  R23,R25
00b694 9508      	RET
                 
                 __CPD21:
00b695 17ae      	CP   R26,R30
00b696 07bf      	CPC  R27,R31
00b697 0786      	CPC  R24,R22
00b698 0797      	CPC  R25,R23
00b699 9508      	RET
                 
                 __SAVELOCR6:
00b69a 935a      	ST   -Y,R21
                 __SAVELOCR5:
00b69b 934a      	ST   -Y,R20
                 __SAVELOCR4:
00b69c 933a      	ST   -Y,R19
                 __SAVELOCR3:
00b69d 932a      	ST   -Y,R18
                 __SAVELOCR2:
00b69e 931a      	ST   -Y,R17
00b69f 930a      	ST   -Y,R16
00b6a0 9508      	RET
                 
                 __LOADLOCR6:
00b6a1 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00b6a2 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00b6a3 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00b6a4 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00b6a5 8119      	LDD  R17,Y+1
00b6a6 8108      	LD   R16,Y
00b6a7 9508      	RET
                 
                 __INITLOCB:
00b6a8 2799      	CLR  R25
                 __INITLOCW:
00b6a9 0fac      	ADD  R26,R28
00b6aa 1fbd      	ADC  R27,R29
00b6ab bf6b      	OUT  RAMPZ,R22
                 __INITLOC0:
00b6ac 9007      	ELPM R0,Z+
00b6ad 920d      	ST   X+,R0
00b6ae 9701      	SBIW R24,1
00b6af f7e1      	BRNE __INITLOC0
00b6b0 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega2560 register use summary:
r0 : 383 r1 :  68 r2 :   0 r3 :   0 r4 :   1 r5 :   7 r6 :   1 r7 :   4 
r8 :   3 r9 :   0 r10:   3 r11:   0 r12:   3 r13:   0 r14:   0 r15:  11 
r16: 699 r17: 878 r18: 473 r19: 369 r20: 300 r21: 241 r22:1125 r23:1031 
r24: 385 r25: 289 r26:3385 r27:1331 r28: 421 r29:  25 r30:6273 r31:2683 
x  : 496 y  :3595 z  : 535 
Registers used: 29 out of 35 (82.9%)

ATmega2560 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   : 169 add   : 174 
adiw  : 683 and   :  14 andi  : 197 asr   :   5 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :  16 brcs  :   5 break :   0 breq  : 501 
brge  : 118 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  : 102 
brlt  :  42 brmi  :  29 brne  : 619 brpl  : 146 brsh  :  92 brtc  :   9 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   4 call  :5066 
cbi   :  39 cbr   :   3 clc   :   4 clh   :   0 cli   :   8 cln   :   0 
clr   : 200 cls   :   0 clt   :   9 clv   :   0 clz   :   2 com   :  28 
cp    : 106 cpc   : 409 cpi   : 792 cpse  :   0 dec   :  25 des   :   0 
eicall:  12 eijmp :   0 elpm  :  23 eor   :   7 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   0 ijmp  :   0 in    : 105 inc   :   6 jmp   : 285 
ld    : 506 ldd   :2539 ldi   :5490 lds   : 433 lpm   :   0 lsl   :  39 
lsr   :  21 mov   : 352 movw  :1000 mul   :  69 muls  :   1 mulsu :   0 
neg   :  11 nop   :   1 or    :  65 ori   :  53 out   : 114 pop   : 253 
push  : 253 rcall : 299 ret   : 826 reti  :   5 rjmp  :1342 rol   :  59 
ror   :  32 sbc   :  33 sbci  : 589 sbi   :  31 sbic  :   3 sbis  :   9 
sbiw  : 273 sbr   :   5 sbrc  :  10 sbrs  :  59 sec   :   6 seh   :   0 
sei   :   6 sen   :   0 ser   :  10 ses   :   0 set   :   8 sev   :   0 
sez   :   1 sleep :   0 spm   :   0 st    :1079 std   : 479 sts   : 369 
sub   :  25 subi  : 635 swap  :   7 tst   : 151 wdr   :   9 
Instructions used: 86 out of 119 (72.3%)

ATmega2560 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x016d62  67560  25978  93538  262144  35.7%
[.dseg] 0x000200 0x001a57      0   3431   3431    8703  39.4%
[.eseg] 0x000000 0x000617      0   1559   1559    4096  38.1%

Assembly complete, 0 errors, 42 warnings
